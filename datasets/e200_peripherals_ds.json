{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule e203_soc_top(\n\n    // This clock should comes from the crystal pad generated high speed clock (16MHz)\n  input  hfextclk,\n  output hfxoscen,// The signal to enable the crystal pad generated clock\n\n  // This clock should comes from the crystal pad generated low speed clock (32.768KHz)\n  input  lfextclk,\n  output lfxoscen,// The signal to enable the crystal pad generated clock\n\n\n  // The JTAG TCK is input, need to be pull-up\n  input   io_pads_jtag_TCK_i_ival,\n\n  // The JTAG TMS is input, need to be pull-up\n  input   io_pads_jtag_TMS_i_ival,\n\n  // The JTAG TDI is input, need to be pull-up\n  input   io_pads_jtag_TDI_i_ival,\n\n  // The JTAG TDO is output have enable\n  output  io_pads_jtag_TDO_o_oval,\n  output  io_pads_jtag_TDO_o_oe,\n\n  // The GPIO are all bidir pad have enables\n  input   io_pads_gpio_0_i_ival,\n  output  io_pads_gpio_0_o_oval,\n  output  io_pads_gpio_0_o_oe,\n  output  io_pads_gpio_0_o_ie,\n  output  io_pads_gpio_0_o_pue,\n  output  io_pads_gpio_0_o_ds,\n  input   io_pads_gpio_1_i_ival,\n  output  io_pads_gpio_1_o_oval,\n  output  io_pads_gpio_1_o_oe,\n  output  io_pads_gpio_1_o_ie,\n  output  io_pads_gpio_1_o_pue,\n  output  io_pads_gpio_1_o_ds,\n  input   io_pads_gpio_2_i_ival,\n  output  io_pads_gpio_2_o_oval,\n  output  io_pads_gpio_2_o_oe,\n  output  io_pads_gpio_2_o_ie,\n  output  io_pads_gpio_2_o_pue,\n  output  io_pads_gpio_2_o_ds,\n  input   io_pads_gpio_3_i_ival,\n  output  io_pads_gpio_3_o_oval,\n  output  io_pads_gpio_3_o_oe,\n  output  io_pads_gpio_3_o_ie,\n  output  io_pads_gpio_3_o_pue,\n  output  io_pads_gpio_3_o_ds,\n  input   io_pads_gpio_4_i_ival,\n  output  io_pads_gpio_4_o_oval,\n  output  io_pads_gpio_4_o_oe,\n  output  io_pads_gpio_4_o_ie,\n  output  io_pads_gpio_4_o_pue,\n  output  io_pads_gpio_4_o_ds,\n  input   io_pads_gpio_5_i_ival,\n  output  io_pads_gpio_5_o_oval,\n  output  io_pads_gpio_5_o_oe,\n  output  io_pads_gpio_5_o_ie,\n  output  io_pads_gpio_5_o_pue,\n  output  io_pads_gpio_5_o_ds,\n  input   io_pads_gpio_6_i_ival,\n  output  io_pads_gpio_6_o_oval,\n  output  io_pads_gpio_6_o_oe,\n  output  io_pads_gpio_6_o_ie,\n  output  io_pads_gpio_6_o_pue,\n  output  io_pads_gpio_6_o_ds,\n  input   io_pads_gpio_7_i_ival,\n  output  io_pads_gpio_7_o_oval,\n  output  io_pads_gpio_7_o_oe,\n  output  io_pads_gpio_7_o_ie,\n  output  io_pads_gpio_7_o_pue,\n  output  io_pads_gpio_7_o_ds,\n  input   io_pads_gpio_8_i_ival,\n  output  io_pads_gpio_8_o_oval,\n  output  io_pads_gpio_8_o_oe,\n  output  io_pads_gpio_8_o_ie,\n  output  io_pads_gpio_8_o_pue,\n  output  io_pads_gpio_8_o_ds,\n  input   io_pads_gpio_9_i_ival,\n  output  io_pads_gpio_9_o_oval,\n  output  io_pads_gpio_9_o_oe,\n  output  io_pads_gpio_9_o_ie,\n  output  io_pads_gpio_9_o_pue,\n  output  io_pads_gpio_9_o_ds,\n  input   io_pads_gpio_10_i_ival,\n  output  io_pads_gpio_10_o_oval,\n  output  io_pads_gpio_10_o_oe,\n  output  io_pads_gpio_10_o_ie,\n  output  io_pads_gpio_10_o_pue,\n  output  io_pads_gpio_10_o_ds,\n  input   io_pads_gpio_11_i_ival,\n  output  io_pads_gpio_11_o_oval,\n  output  io_pads_gpio_11_o_oe,\n  output  io_pads_gpio_11_o_ie,\n  output  io_pads_gpio_11_o_pue,\n  output  io_pads_gpio_11_o_ds,\n  input   io_pads_gpio_12_i_ival,\n  output  io_pads_gpio_12_o_oval,\n  output  io_pads_gpio_12_o_oe,\n  output  io_pads_gpio_12_o_ie,\n  output  io_pads_gpio_12_o_pue,\n  output  io_pads_gpio_12_o_ds,\n  input   io_pads_gpio_13_i_ival,\n  output  io_pads_gpio_13_o_oval,\n  output  io_pads_gpio_13_o_oe,\n  output  io_pads_gpio_13_o_ie,\n  output  io_pads_gpio_13_o_pue,\n  output  io_pads_gpio_13_o_ds,\n  input   io_pads_gpio_14_i_ival,\n  output  io_pads_gpio_14_o_oval,\n  output  io_pads_gpio_14_o_oe,\n  output  io_pads_gpio_14_o_ie,\n  output  io_pads_gpio_14_o_pue,\n  output  io_pads_gpio_14_o_ds,\n  input   io_pads_gpio_15_i_ival,\n  output  io_pads_gpio_15_o_oval,\n  output  io_pads_gpio_15_o_oe,\n  output  io_pads_gpio_15_o_ie,\n  output  io_pads_gpio_15_o_pue,\n  output  io_pads_gpio_15_o_ds,\n  input   io_pads_gpio_16_i_ival,\n  output  io_pads_gpio_16_o_oval,\n  output  io_pads_gpio_16_o_oe,\n  output  io_pads_gpio_16_o_ie,\n  output  io_pads_gpio_16_o_pue,\n  output  io_pads_gpio_16_o_ds,\n  input   io_pads_gpio_17_i_ival,\n  output  io_pads_gpio_17_o_oval,\n  output  io_pads_gpio_17_o_oe,\n  output  io_pads_gpio_17_o_ie,\n  output  io_pads_gpio_17_o_pue,\n  output  io_pads_gpio_17_o_ds,\n  input   io_pads_gpio_18_i_ival,\n  output  io_pads_gpio_18_o_oval,\n  output  io_pads_gpio_18_o_oe,\n  output  io_pads_gpio_18_o_ie,\n  output  io_pads_gpio_18_o_pue,\n  output  io_pads_gpio_18_o_ds,\n  input   io_pads_gpio_19_i_ival,\n  output  io_pads_gpio_19_o_oval,\n  output  io_pads_gpio_19_o_oe,\n  output  io_pads_gpio_19_o_ie,\n  output  io_pads_gpio_19_o_pue,\n  output  io_pads_gpio_19_o_ds,\n  input   io_pads_gpio_20_i_ival,\n  output  io_pads_gpio_20_o_oval,\n  output  io_pads_gpio_20_o_oe,\n  output  io_pads_gpio_20_o_ie,\n  output  io_pads_gpio_20_o_pue,\n  output  io_pads_gpio_20_o_ds,\n  input   io_pads_gpio_21_i_ival,\n  output  io_pads_gpio_21_o_oval,\n  output  io_pads_gpio_21_o_oe,\n  output  io_pads_gpio_21_o_ie,\n  output  io_pads_gpio_21_o_pue,\n  output  io_pads_gpio_21_o_ds,\n  input   io_pads_gpio_22_i_ival,\n  output  io_pads_gpio_22_o_oval,\n  output  io_pads_gpio_22_o_oe,\n  output  io_pads_gpio_22_o_ie,\n  output  io_pads_gpio_22_o_pue,\n  output  io_pads_gpio_22_o_ds,\n  input   io_pads_gpio_23_i_ival,\n  output  io_pads_gpio_23_o_oval,\n  output  io_pads_gpio_23_o_oe,\n  output  io_pads_gpio_23_o_ie,\n  output  io_pads_gpio_23_o_pue,\n  output  io_pads_gpio_23_o_ds,\n  input   io_pads_gpio_24_i_ival,\n  output  io_pads_gpio_24_o_oval,\n  output  io_pads_gpio_24_o_oe,\n  output  io_pads_gpio_24_o_ie,\n  output  io_pads_gpio_24_o_pue,\n  output  io_pads_gpio_24_o_ds,\n  input   io_pads_gpio_25_i_ival,\n  output  io_pads_gpio_25_o_oval,\n  output  io_pads_gpio_25_o_oe,\n  output  io_pads_gpio_25_o_ie,\n  output  io_pads_gpio_25_o_pue,\n  output  io_pads_gpio_25_o_ds,\n  input   io_pads_gpio_26_i_ival,\n  output  io_pads_gpio_26_o_oval,\n  output  io_pads_gpio_26_o_oe,\n  output  io_pads_gpio_26_o_ie,\n  output  io_pads_gpio_26_o_pue,\n  output  io_pads_gpio_26_o_ds,\n  input   io_pads_gpio_27_i_ival,\n  output  io_pads_gpio_27_o_oval,\n  output  io_pads_gpio_27_o_oe,\n  output  io_pads_gpio_27_o_ie,\n  output  io_pads_gpio_27_o_pue,\n  output  io_pads_gpio_27_o_ds,\n  input   io_pads_gpio_28_i_ival,\n  output  io_pads_gpio_28_o_oval,\n  output  io_pads_gpio_28_o_oe,\n  output  io_pads_gpio_28_o_ie,\n  output  io_pads_gpio_28_o_pue,\n  output  io_pads_gpio_28_o_ds,\n  input   io_pads_gpio_29_i_ival,\n  output  io_pads_gpio_29_o_oval,\n  output  io_pads_gpio_29_o_oe,\n  output  io_pads_gpio_29_o_ie,\n  output  io_pads_gpio_29_o_pue,\n  output  io_pads_gpio_29_o_ds,\n  input   io_pads_gpio_30_i_ival,\n  output  io_pads_gpio_30_o_oval,\n  output  io_pads_gpio_30_o_oe,\n  output  io_pads_gpio_30_o_ie,\n  output  io_pads_gpio_30_o_pue,\n  output  io_pads_gpio_30_o_ds,\n  input   io_pads_gpio_31_i_ival,\n  output  io_pads_gpio_31_o_oval,\n  output  io_pads_gpio_31_o_oe,\n  output  io_pads_gpio_31_o_ie,\n  output  io_pads_gpio_31_o_pue,\n  output  io_pads_gpio_31_o_ds,\n\n\n  //QSPI SCK and CS is output without enable\n  output  io_pads_qspi_sck_o_oval,\n  output  io_pads_qspi_cs_0_o_oval,\n\n  //QSPI DQ is bidir I/O with enable, and need pull-up enable\n  input   io_pads_qspi_dq_0_i_ival,\n  output  io_pads_qspi_dq_0_o_oval,\n  output  io_pads_qspi_dq_0_o_oe,\n  output  io_pads_qspi_dq_0_o_ie,\n  output  io_pads_qspi_dq_0_o_pue,\n  output  io_pads_qspi_dq_0_o_ds,\n  input   io_pads_qspi_dq_1_i_ival,\n  output  io_pads_qspi_dq_1_o_oval,\n  output  io_pads_qspi_dq_1_o_oe,\n  output  io_pads_qspi_dq_1_o_ie,\n  output  io_pads_qspi_dq_1_o_pue,\n  output  io_pads_qspi_dq_1_o_ds,\n  input   io_pads_qspi_dq_2_i_ival,\n  output  io_pads_qspi_dq_2_o_oval,\n  output  io_pads_qspi_dq_2_o_oe,\n  output  io_pads_qspi_dq_2_o_ie,\n  output  io_pads_qspi_dq_2_o_pue,\n  output  io_pads_qspi_dq_2_o_ds,\n  input   io_pads_qspi_dq_3_i_ival,\n  output  io_pads_qspi_dq_3_o_oval,\n  output  io_pads_qspi_dq_3_o_oe,\n  output  io_pads_qspi_dq_3_o_ie,\n  output  io_pads_qspi_dq_3_o_pue,\n  output  io_pads_qspi_dq_3_o_ds,\n\n  // Erst is input need to be pull-up by default\n  input   io_pads_aon_erst_n_i_ival,\n\n  // dbgmode are inputs need to be pull-up by default\n  input  io_pads_dbgmode0_n_i_ival,\n  input  io_pads_dbgmode1_n_i_ival,\n  input  io_pads_dbgmode2_n_i_ival,\n\n  // BootRom is input need to be pull-up by default\n  input  io_pads_bootrom_n_i_ival,\n\n\n  // dwakeup is input need to be pull-up by default\n  input  io_pads_aon_pmu_dwakeup_n_i_ival,\n\n      // PMU output is just output without enable\n  output io_pads_aon_pmu_padrst_o_oval,\n  output io_pads_aon_pmu_vddpaden_o_oval \n);\n\n\n \n wire sysper_icb_cmd_valid;\n wire sysper_icb_cmd_ready;\n\n wire sysfio_icb_cmd_valid;\n wire sysfio_icb_cmd_ready;\n\n wire sysmem_icb_cmd_valid;\n wire sysmem_icb_cmd_ready;\n\n e203_subsys_top u_e203_subsys_top(\n    .core_mhartid      (1'b0),\n  \n\n\n\n  `ifdef E203_HAS_ITCM_EXTITF //{\n    .ext2itcm_icb_cmd_valid  (1'b0),\n    .ext2itcm_icb_cmd_ready  (),\n    .ext2itcm_icb_cmd_addr   (`E203_ITCM_ADDR_WIDTH'b0 ),\n    .ext2itcm_icb_cmd_read   (1'b0 ),\n    .ext2itcm_icb_cmd_wdata  (32'b0),\n    .ext2itcm_icb_cmd_wmask  (4'b0),\n    \n    .ext2itcm_icb_rsp_valid  (),\n    .ext2itcm_icb_rsp_ready  (1'b0),\n    .ext2itcm_icb_rsp_err    (),\n    .ext2itcm_icb_rsp_rdata  (),\n  `endif//}\n\n  `ifdef E203_HAS_DTCM_EXTITF //{\n    .ext2dtcm_icb_cmd_valid  (1'b0),\n    .ext2dtcm_icb_cmd_ready  (),\n    .ext2dtcm_icb_cmd_addr   (`E203_DTCM_ADDR_WIDTH'b0 ),\n    .ext2dtcm_icb_cmd_read   (1'b0 ),\n    .ext2dtcm_icb_cmd_wdata  (32'b0),\n    .ext2dtcm_icb_cmd_wmask  (4'b0),\n    \n    .ext2dtcm_icb_rsp_valid  (),\n    .ext2dtcm_icb_rsp_ready  (1'b0),\n    .ext2dtcm_icb_rsp_err    (),\n    .ext2dtcm_icb_rsp_rdata  (),\n  `endif//}\n\n  .sysper_icb_cmd_valid (sysper_icb_cmd_valid),\n  .sysper_icb_cmd_ready (sysper_icb_cmd_ready),\n  .sysper_icb_cmd_read  (), \n  .sysper_icb_cmd_addr  (), \n  .sysper_icb_cmd_wdata (), \n  .sysper_icb_cmd_wmask (), \n  \n  .sysper_icb_rsp_valid (sysper_icb_cmd_valid),\n  .sysper_icb_rsp_ready (sysper_icb_cmd_ready),\n  .sysper_icb_rsp_err   (1'b0  ),\n  .sysper_icb_rsp_rdata (32'b0),\n\n\n  .sysfio_icb_cmd_valid(sysfio_icb_cmd_valid),\n  .sysfio_icb_cmd_ready(sysfio_icb_cmd_ready),\n  .sysfio_icb_cmd_read (), \n  .sysfio_icb_cmd_addr (), \n  .sysfio_icb_cmd_wdata(), \n  .sysfio_icb_cmd_wmask(), \n   \n  .sysfio_icb_rsp_valid(sysfio_icb_cmd_valid),\n  .sysfio_icb_rsp_ready(sysfio_icb_cmd_ready),\n  .sysfio_icb_rsp_err  (1'b0  ),\n  .sysfio_icb_rsp_rdata(32'b0),\n\n  .sysmem_icb_cmd_valid(sysmem_icb_cmd_valid),\n  .sysmem_icb_cmd_ready(sysmem_icb_cmd_ready),\n  .sysmem_icb_cmd_read (), \n  .sysmem_icb_cmd_addr (), \n  .sysmem_icb_cmd_wdata(), \n  .sysmem_icb_cmd_wmask(), \n\n  .sysmem_icb_rsp_valid(sysmem_icb_cmd_valid),\n  .sysmem_icb_rsp_ready(sysmem_icb_cmd_ready),\n  .sysmem_icb_rsp_err  (1'b0  ),\n  .sysmem_icb_rsp_rdata(32'b0),\n\n  .io_pads_jtag_TCK_i_ival    (io_pads_jtag_TCK_i_ival    ),\n  .io_pads_jtag_TCK_o_oval    (),\n  .io_pads_jtag_TCK_o_oe      (),\n  .io_pads_jtag_TCK_o_ie      (),\n  .io_pads_jtag_TCK_o_pue     (),\n  .io_pads_jtag_TCK_o_ds      (),\n\n  .io_pads_jtag_TMS_i_ival    (io_pads_jtag_TMS_i_ival    ),\n  .io_pads_jtag_TMS_o_oval    (),\n  .io_pads_jtag_TMS_o_oe      (),\n  .io_pads_jtag_TMS_o_ie      (),\n  .io_pads_jtag_TMS_o_pue     (),\n  .io_pads_jtag_TMS_o_ds      (),\n\n  .io_pads_jtag_TDI_i_ival    (io_pads_jtag_TDI_i_ival    ),\n  .io_pads_jtag_TDI_o_oval    (),\n  .io_pads_jtag_TDI_o_oe      (),\n  .io_pads_jtag_TDI_o_ie      (),\n  .io_pads_jtag_TDI_o_pue     (),\n  .io_pads_jtag_TDI_o_ds      (),\n\n  .io_pads_jtag_TDO_i_ival    (1'b1    ),\n  .io_pads_jtag_TDO_o_oval    (io_pads_jtag_TDO_o_oval    ),\n  .io_pads_jtag_TDO_o_oe      (io_pads_jtag_TDO_o_oe      ),\n  .io_pads_jtag_TDO_o_ie      (),\n  .io_pads_jtag_TDO_o_pue     (),\n  .io_pads_jtag_TDO_o_ds      (),\n\n  .io_pads_jtag_TRST_n_i_ival (1'b1 ),\n  .io_pads_jtag_TRST_n_o_oval (),\n  .io_pads_jtag_TRST_n_o_oe   (),\n  .io_pads_jtag_TRST_n_o_ie   (),\n  .io_pads_jtag_TRST_n_o_pue  (),\n  .io_pads_jtag_TRST_n_o_ds   (),\n\n  .test_mode(1'b0),\n  .test_iso_override(1'b0),\n\n  .io_pads_gpio_0_i_ival           (io_pads_gpio_0_i_ival & io_pads_gpio_0_o_ie),\n  .io_pads_gpio_0_o_oval           (io_pads_gpio_0_o_oval),\n  .io_pads_gpio_0_o_oe             (io_pads_gpio_0_o_oe),\n  .io_pads_gpio_0_o_ie             (io_pads_gpio_0_o_ie),\n  .io_pads_gpio_0_o_pue            (io_pads_gpio_0_o_pue),\n  .io_pads_gpio_0_o_ds             (io_pads_gpio_0_o_ds),\n\n  .io_pads_gpio_1_i_ival           (io_pads_gpio_1_i_ival & io_pads_gpio_1_o_ie),\n  .io_pads_gpio_1_o_oval           (io_pads_gpio_1_o_oval),\n  .io_pads_gpio_1_o_oe             (io_pads_gpio_1_o_oe),\n  .io_pads_gpio_1_o_ie             (io_pads_gpio_1_o_ie),\n  .io_pads_gpio_1_o_pue            (io_pads_gpio_1_o_pue),\n  .io_pads_gpio_1_o_ds             (io_pads_gpio_1_o_ds),\n\n  .io_pads_gpio_2_i_ival           (io_pads_gpio_2_i_ival & io_pads_gpio_2_o_ie),\n  .io_pads_gpio_2_o_oval           (io_pads_gpio_2_o_oval),\n  .io_pads_gpio_2_o_oe             (io_pads_gpio_2_o_oe),\n  .io_pads_gpio_2_o_ie             (io_pads_gpio_2_o_ie),\n  .io_pads_gpio_2_o_pue            (io_pads_gpio_2_o_pue),\n  .io_pads_gpio_2_o_ds             (io_pads_gpio_2_o_ds),\n\n  .io_pads_gpio_3_i_ival           (io_pads_gpio_3_i_ival & io_pads_gpio_3_o_ie),\n  .io_pads_gpio_3_o_oval           (io_pads_gpio_3_o_oval),\n  .io_pads_gpio_3_o_oe             (io_pads_gpio_3_o_oe),\n  .io_pads_gpio_3_o_ie             (io_pads_gpio_3_o_ie),\n  .io_pads_gpio_3_o_pue            (io_pads_gpio_3_o_pue),\n  .io_pads_gpio_3_o_ds             (io_pads_gpio_3_o_ds),\n\n  .io_pads_gpio_4_i_ival           (io_pads_gpio_4_i_ival & io_pads_gpio_4_o_ie),\n  .io_pads_gpio_4_o_oval           (io_pads_gpio_4_o_oval),\n  .io_pads_gpio_4_o_oe             (io_pads_gpio_4_o_oe),\n  .io_pads_gpio_4_o_ie             (io_pads_gpio_4_o_ie),\n  .io_pads_gpio_4_o_pue            (io_pads_gpio_4_o_pue),\n  .io_pads_gpio_4_o_ds             (io_pads_gpio_4_o_ds),\n\n  .io_pads_gpio_5_i_ival           (io_pads_gpio_5_i_ival & io_pads_gpio_5_o_ie),\n  .io_pads_gpio_5_o_oval           (io_pads_gpio_5_o_oval),\n  .io_pads_gpio_5_o_oe             (io_pads_gpio_5_o_oe),\n  .io_pads_gpio_5_o_ie             (io_pads_gpio_5_o_ie),\n  .io_pads_gpio_5_o_pue            (io_pads_gpio_5_o_pue),\n  .io_pads_gpio_5_o_ds             (io_pads_gpio_5_o_ds),\n\n  .io_pads_gpio_6_i_ival           (io_pads_gpio_6_i_ival & io_pads_gpio_6_o_ie),\n  .io_pads_gpio_6_o_oval           (io_pads_gpio_6_o_oval),\n  .io_pads_gpio_6_o_oe             (io_pads_gpio_6_o_oe),\n  .io_pads_gpio_6_o_ie             (io_pads_gpio_6_o_ie),\n  .io_pads_gpio_6_o_pue            (io_pads_gpio_6_o_pue),\n  .io_pads_gpio_6_o_ds             (io_pads_gpio_6_o_ds),\n\n  .io_pads_gpio_7_i_ival           (io_pads_gpio_7_i_ival & io_pads_gpio_7_o_ie),\n  .io_pads_gpio_7_o_oval           (io_pads_gpio_7_o_oval),\n  .io_pads_gpio_7_o_oe             (io_pads_gpio_7_o_oe),\n  .io_pads_gpio_7_o_ie             (io_pads_gpio_7_o_ie),\n  .io_pads_gpio_7_o_pue            (io_pads_gpio_7_o_pue),\n  .io_pads_gpio_7_o_ds             (io_pads_gpio_7_o_ds),\n\n  .io_pads_gpio_8_i_ival           (io_pads_gpio_8_i_ival & io_pads_gpio_8_o_ie),\n  .io_pads_gpio_8_o_oval           (io_pads_gpio_8_o_oval),\n  .io_pads_gpio_8_o_oe             (io_pads_gpio_8_o_oe),\n  .io_pads_gpio_8_o_ie             (io_pads_gpio_8_o_ie),\n  .io_pads_gpio_8_o_pue            (io_pads_gpio_8_o_pue),\n  .io_pads_gpio_8_o_ds             (io_pads_gpio_8_o_ds),\n\n  .io_pads_gpio_9_i_ival           (io_pads_gpio_9_i_ival & io_pads_gpio_9_o_ie),\n  .io_pads_gpio_9_o_oval           (io_pads_gpio_9_o_oval),\n  .io_pads_gpio_9_o_oe             (io_pads_gpio_9_o_oe),\n  .io_pads_gpio_9_o_ie             (io_pads_gpio_9_o_ie),\n  .io_pads_gpio_9_o_pue            (io_pads_gpio_9_o_pue),\n  .io_pads_gpio_9_o_ds             (io_pads_gpio_9_o_ds),\n\n  .io_pads_gpio_10_i_ival          (io_pads_gpio_10_i_ival & io_pads_gpio_10_o_ie),\n  .io_pads_gpio_10_o_oval          (io_pads_gpio_10_o_oval),\n  .io_pads_gpio_10_o_oe            (io_pads_gpio_10_o_oe),\n  .io_pads_gpio_10_o_ie            (io_pads_gpio_10_o_ie),\n  .io_pads_gpio_10_o_pue           (io_pads_gpio_10_o_pue),\n  .io_pads_gpio_10_o_ds            (io_pads_gpio_10_o_ds),\n\n  .io_pads_gpio_11_i_ival          (io_pads_gpio_11_i_ival & io_pads_gpio_11_o_ie),\n  .io_pads_gpio_11_o_oval          (io_pads_gpio_11_o_oval),\n  .io_pads_gpio_11_o_oe            (io_pads_gpio_11_o_oe),\n  .io_pads_gpio_11_o_ie            (io_pads_gpio_11_o_ie),\n  .io_pads_gpio_11_o_pue           (io_pads_gpio_11_o_pue),\n  .io_pads_gpio_11_o_ds            (io_pads_gpio_11_o_ds),\n\n  .io_pads_gpio_12_i_ival          (io_pads_gpio_12_i_ival & io_pads_gpio_12_o_ie),\n  .io_pads_gpio_12_o_oval          (io_pads_gpio_12_o_oval),\n  .io_pads_gpio_12_o_oe            (io_pads_gpio_12_o_oe),\n  .io_pads_gpio_12_o_ie            (io_pads_gpio_12_o_ie),\n  .io_pads_gpio_12_o_pue           (io_pads_gpio_12_o_pue),\n  .io_pads_gpio_12_o_ds            (io_pads_gpio_12_o_ds),\n\n  .io_pads_gpio_13_i_ival          (io_pads_gpio_13_i_ival & io_pads_gpio_13_o_ie),\n  .io_pads_gpio_13_o_oval          (io_pads_gpio_13_o_oval),\n  .io_pads_gpio_13_o_oe            (io_pads_gpio_13_o_oe),\n  .io_pads_gpio_13_o_ie            (io_pads_gpio_13_o_ie),\n  .io_pads_gpio_13_o_pue           (io_pads_gpio_13_o_pue),\n  .io_pads_gpio_13_o_ds            (io_pads_gpio_13_o_ds),\n\n  .io_pads_gpio_14_i_ival          (io_pads_gpio_14_i_ival & io_pads_gpio_14_o_ie),\n  .io_pads_gpio_14_o_oval          (io_pads_gpio_14_o_oval),\n  .io_pads_gpio_14_o_oe            (io_pads_gpio_14_o_oe),\n  .io_pads_gpio_14_o_ie            (io_pads_gpio_14_o_ie),\n  .io_pads_gpio_14_o_pue           (io_pads_gpio_14_o_pue),\n  .io_pads_gpio_14_o_ds            (io_pads_gpio_14_o_ds),\n\n  .io_pads_gpio_15_i_ival          (io_pads_gpio_15_i_ival & io_pads_gpio_15_o_ie),\n  .io_pads_gpio_15_o_oval          (io_pads_gpio_15_o_oval),\n  .io_pads_gpio_15_o_oe            (io_pads_gpio_15_o_oe),\n  .io_pads_gpio_15_o_ie            (io_pads_gpio_15_o_ie),\n  .io_pads_gpio_15_o_pue           (io_pads_gpio_15_o_pue),\n  .io_pads_gpio_15_o_ds            (io_pads_gpio_15_o_ds),\n\n  .io_pads_gpio_16_i_ival          (io_pads_gpio_16_i_ival & io_pads_gpio_16_o_ie),\n  .io_pads_gpio_16_o_oval          (io_pads_gpio_16_o_oval),\n  .io_pads_gpio_16_o_oe            (io_pads_gpio_16_o_oe),\n  .io_pads_gpio_16_o_ie            (io_pads_gpio_16_o_ie),\n  .io_pads_gpio_16_o_pue           (io_pads_gpio_16_o_pue),\n  .io_pads_gpio_16_o_ds            (io_pads_gpio_16_o_ds),\n\n  .io_pads_gpio_17_i_ival          (io_pads_gpio_17_i_ival & io_pads_gpio_17_o_ie),\n  .io_pads_gpio_17_o_oval          (io_pads_gpio_17_o_oval),\n  .io_pads_gpio_17_o_oe    "}
{"text": "        (io_pads_gpio_17_o_oe),\n  .io_pads_gpio_17_o_ie            (io_pads_gpio_17_o_ie),\n  .io_pads_gpio_17_o_pue           (io_pads_gpio_17_o_pue),\n  .io_pads_gpio_17_o_ds            (io_pads_gpio_17_o_ds),\n\n  .io_pads_gpio_18_i_ival          (io_pads_gpio_18_i_ival & io_pads_gpio_18_o_ie),\n  .io_pads_gpio_18_o_oval          (io_pads_gpio_18_o_oval),\n  .io_pads_gpio_18_o_oe            (io_pads_gpio_18_o_oe),\n  .io_pads_gpio_18_o_ie            (io_pads_gpio_18_o_ie),\n  .io_pads_gpio_18_o_pue           (io_pads_gpio_18_o_pue),\n  .io_pads_gpio_18_o_ds            (io_pads_gpio_18_o_ds),\n\n  .io_pads_gpio_19_i_ival          (io_pads_gpio_19_i_ival & io_pads_gpio_19_o_ie),\n  .io_pads_gpio_19_o_oval          (io_pads_gpio_19_o_oval),\n  .io_pads_gpio_19_o_oe            (io_pads_gpio_19_o_oe),\n  .io_pads_gpio_19_o_ie            (io_pads_gpio_19_o_ie),\n  .io_pads_gpio_19_o_pue           (io_pads_gpio_19_o_pue),\n  .io_pads_gpio_19_o_ds            (io_pads_gpio_19_o_ds),\n\n  .io_pads_gpio_20_i_ival          (io_pads_gpio_20_i_ival & io_pads_gpio_20_o_ie),\n  .io_pads_gpio_20_o_oval          (io_pads_gpio_20_o_oval),\n  .io_pads_gpio_20_o_oe            (io_pads_gpio_20_o_oe),\n  .io_pads_gpio_20_o_ie            (io_pads_gpio_20_o_ie),\n  .io_pads_gpio_20_o_pue           (io_pads_gpio_20_o_pue),\n  .io_pads_gpio_20_o_ds            (io_pads_gpio_20_o_ds),\n\n  .io_pads_gpio_21_i_ival          (io_pads_gpio_21_i_ival & io_pads_gpio_21_o_ie),\n  .io_pads_gpio_21_o_oval          (io_pads_gpio_21_o_oval),\n  .io_pads_gpio_21_o_oe            (io_pads_gpio_21_o_oe),\n  .io_pads_gpio_21_o_ie            (io_pads_gpio_21_o_ie),\n  .io_pads_gpio_21_o_pue           (io_pads_gpio_21_o_pue),\n  .io_pads_gpio_21_o_ds            (io_pads_gpio_21_o_ds),\n\n  .io_pads_gpio_22_i_ival          (io_pads_gpio_22_i_ival & io_pads_gpio_22_o_ie),\n  .io_pads_gpio_22_o_oval          (io_pads_gpio_22_o_oval),\n  .io_pads_gpio_22_o_oe            (io_pads_gpio_22_o_oe),\n  .io_pads_gpio_22_o_ie            (io_pads_gpio_22_o_ie),\n  .io_pads_gpio_22_o_pue           (io_pads_gpio_22_o_pue),\n  .io_pads_gpio_22_o_ds            (io_pads_gpio_22_o_ds),\n\n  .io_pads_gpio_23_i_ival          (io_pads_gpio_23_i_ival & io_pads_gpio_23_o_ie),\n  .io_pads_gpio_23_o_oval          (io_pads_gpio_23_o_oval),\n  .io_pads_gpio_23_o_oe            (io_pads_gpio_23_o_oe),\n  .io_pads_gpio_23_o_ie            (io_pads_gpio_23_o_ie),\n  .io_pads_gpio_23_o_pue           (io_pads_gpio_23_o_pue),\n  .io_pads_gpio_23_o_ds            (io_pads_gpio_23_o_ds),\n\n  .io_pads_gpio_24_i_ival          (io_pads_gpio_24_i_ival & io_pads_gpio_24_o_ie),\n  .io_pads_gpio_24_o_oval          (io_pads_gpio_24_o_oval),\n  .io_pads_gpio_24_o_oe            (io_pads_gpio_24_o_oe),\n  .io_pads_gpio_24_o_ie            (io_pads_gpio_24_o_ie),\n  .io_pads_gpio_24_o_pue           (io_pads_gpio_24_o_pue),\n  .io_pads_gpio_24_o_ds            (io_pads_gpio_24_o_ds),\n\n  .io_pads_gpio_25_i_ival          (io_pads_gpio_25_i_ival & io_pads_gpio_25_o_ie),\n  .io_pads_gpio_25_o_oval          (io_pads_gpio_25_o_oval),\n  .io_pads_gpio_25_o_oe            (io_pads_gpio_25_o_oe),\n  .io_pads_gpio_25_o_ie            (io_pads_gpio_25_o_ie),\n  .io_pads_gpio_25_o_pue           (io_pads_gpio_25_o_pue),\n  .io_pads_gpio_25_o_ds            (io_pads_gpio_25_o_ds),\n\n  .io_pads_gpio_26_i_ival          (io_pads_gpio_26_i_ival & io_pads_gpio_26_o_ie),\n  .io_pads_gpio_26_o_oval          (io_pads_gpio_26_o_oval),\n  .io_pads_gpio_26_o_oe            (io_pads_gpio_26_o_oe),\n  .io_pads_gpio_26_o_ie            (io_pads_gpio_26_o_ie),\n  .io_pads_gpio_26_o_pue           (io_pads_gpio_26_o_pue),\n  .io_pads_gpio_26_o_ds            (io_pads_gpio_26_o_ds),\n\n  .io_pads_gpio_27_i_ival          (io_pads_gpio_27_i_ival & io_pads_gpio_27_o_ie),\n  .io_pads_gpio_27_o_oval          (io_pads_gpio_27_o_oval),\n  .io_pads_gpio_27_o_oe            (io_pads_gpio_27_o_oe),\n  .io_pads_gpio_27_o_ie            (io_pads_gpio_27_o_ie),\n  .io_pads_gpio_27_o_pue           (io_pads_gpio_27_o_pue),\n  .io_pads_gpio_27_o_ds            (io_pads_gpio_27_o_ds),\n\n  .io_pads_gpio_28_i_ival          (io_pads_gpio_28_i_ival & io_pads_gpio_28_o_ie),\n  .io_pads_gpio_28_o_oval          (io_pads_gpio_28_o_oval),\n  .io_pads_gpio_28_o_oe            (io_pads_gpio_28_o_oe),\n  .io_pads_gpio_28_o_ie            (io_pads_gpio_28_o_ie),\n  .io_pads_gpio_28_o_pue           (io_pads_gpio_28_o_pue),\n  .io_pads_gpio_28_o_ds            (io_pads_gpio_28_o_ds),\n\n  .io_pads_gpio_29_i_ival          (io_pads_gpio_29_i_ival & io_pads_gpio_29_o_ie),\n  .io_pads_gpio_29_o_oval          (io_pads_gpio_29_o_oval),\n  .io_pads_gpio_29_o_oe            (io_pads_gpio_29_o_oe),\n  .io_pads_gpio_29_o_ie            (io_pads_gpio_29_o_ie),\n  .io_pads_gpio_29_o_pue           (io_pads_gpio_29_o_pue),\n  .io_pads_gpio_29_o_ds            (io_pads_gpio_29_o_ds),\n\n  .io_pads_gpio_30_i_ival          (io_pads_gpio_30_i_ival & io_pads_gpio_30_o_ie),\n  .io_pads_gpio_30_o_oval          (io_pads_gpio_30_o_oval),\n  .io_pads_gpio_30_o_oe            (io_pads_gpio_30_o_oe),\n  .io_pads_gpio_30_o_ie            (io_pads_gpio_30_o_ie),\n  .io_pads_gpio_30_o_pue           (io_pads_gpio_30_o_pue),\n  .io_pads_gpio_30_o_ds            (io_pads_gpio_30_o_ds),\n\n  .io_pads_gpio_31_i_ival          (io_pads_gpio_31_i_ival & io_pads_gpio_31_o_ie),\n  .io_pads_gpio_31_o_oval          (io_pads_gpio_31_o_oval),\n  .io_pads_gpio_31_o_oe            (io_pads_gpio_31_o_oe),\n  .io_pads_gpio_31_o_ie            (io_pads_gpio_31_o_ie),\n  .io_pads_gpio_31_o_pue           (io_pads_gpio_31_o_pue),\n  .io_pads_gpio_31_o_ds            (io_pads_gpio_31_o_ds),\n\n  .io_pads_qspi_sck_i_ival    (1'b1 ),\n  .io_pads_qspi_sck_o_oval    (io_pads_qspi_sck_o_oval ),\n  .io_pads_qspi_sck_o_oe      (),\n  .io_pads_qspi_sck_o_ie      (),\n  .io_pads_qspi_sck_o_pue     (),\n  .io_pads_qspi_sck_o_ds      (),\n  .io_pads_qspi_dq_0_i_ival   (io_pads_qspi_dq_0_i_ival & io_pads_qspi_dq_0_o_ie),\n  .io_pads_qspi_dq_0_o_oval   (io_pads_qspi_dq_0_o_oval),\n  .io_pads_qspi_dq_0_o_oe     (io_pads_qspi_dq_0_o_oe  ),\n  .io_pads_qspi_dq_0_o_ie     (io_pads_qspi_dq_0_o_ie  ),\n  .io_pads_qspi_dq_0_o_pue    (io_pads_qspi_dq_0_o_pue ),\n  .io_pads_qspi_dq_0_o_ds     (io_pads_qspi_dq_0_o_ds  ),\n\n  .io_pads_qspi_dq_1_i_ival   (io_pads_qspi_dq_1_i_ival & io_pads_qspi_dq_1_o_ie),\n  .io_pads_qspi_dq_1_o_oval   (io_pads_qspi_dq_1_o_oval),\n  .io_pads_qspi_dq_1_o_oe     (io_pads_qspi_dq_1_o_oe  ),\n  .io_pads_qspi_dq_1_o_ie     (io_pads_qspi_dq_1_o_ie  ),\n  .io_pads_qspi_dq_1_o_pue    (io_pads_qspi_dq_1_o_pue ),\n  .io_pads_qspi_dq_1_o_ds     (io_pads_qspi_dq_1_o_ds  ),\n\n  .io_pads_qspi_dq_2_i_ival   (io_pads_qspi_dq_2_i_ival & io_pads_qspi_dq_2_o_ie),\n  .io_pads_qspi_dq_2_o_oval   (io_pads_qspi_dq_2_o_oval),\n  .io_pads_qspi_dq_2_o_oe     (io_pads_qspi_dq_2_o_oe  ),\n  .io_pads_qspi_dq_2_o_ie     (io_pads_qspi_dq_2_o_ie  ),\n  .io_pads_qspi_dq_2_o_pue    (io_pads_qspi_dq_2_o_pue ),\n  .io_pads_qspi_dq_2_o_ds     (io_pads_qspi_dq_2_o_ds  ),\n\n  .io_pads_qspi_dq_3_i_ival   (io_pads_qspi_dq_3_i_ival & io_pads_qspi_dq_3_o_ie),\n  .io_pads_qspi_dq_3_o_oval   (io_pads_qspi_dq_3_o_oval),\n  .io_pads_qspi_dq_3_o_oe     (io_pads_qspi_dq_3_o_oe  ),\n  .io_pads_qspi_dq_3_o_ie     (io_pads_qspi_dq_3_o_ie  ),\n  .io_pads_qspi_dq_3_o_pue    (io_pads_qspi_dq_3_o_pue ),\n  .io_pads_qspi_dq_3_o_ds     (io_pads_qspi_dq_3_o_ds  ),\n  .io_pads_qspi_cs_0_i_ival   (1'b1),\n  .io_pads_qspi_cs_0_o_oval   (io_pads_qspi_cs_0_o_oval),\n  .io_pads_qspi_cs_0_o_oe     (),\n  .io_pads_qspi_cs_0_o_ie     (),\n  .io_pads_qspi_cs_0_o_pue    (),\n  .io_pads_qspi_cs_0_o_ds     (),\n\n    .hfextclk        (hfextclk),\n    .hfxoscen        (hfxoscen),\n    .lfextclk        (lfextclk),\n    .lfxoscen        (lfxoscen),\n\n  .io_pads_aon_erst_n_i_ival        (io_pads_aon_erst_n_i_ival       ), \n  .io_pads_aon_erst_n_o_oval        (),\n  .io_pads_aon_erst_n_o_oe          (),\n  .io_pads_aon_erst_n_o_ie          (),\n  .io_pads_aon_erst_n_o_pue         (),\n  .io_pads_aon_erst_n_o_ds          (),\n  .io_pads_aon_pmu_dwakeup_n_i_ival (io_pads_aon_pmu_dwakeup_n_i_ival),\n  .io_pads_aon_pmu_dwakeup_n_o_oval (),\n  .io_pads_aon_pmu_dwakeup_n_o_oe   (),\n  .io_pads_aon_pmu_dwakeup_n_o_ie   (),\n  .io_pads_aon_pmu_dwakeup_n_o_pue  (),\n  .io_pads_aon_pmu_dwakeup_n_o_ds   (),\n  .io_pads_aon_pmu_vddpaden_i_ival  (1'b1 ),\n  .io_pads_aon_pmu_vddpaden_o_oval  (io_pads_aon_pmu_vddpaden_o_oval ),\n  .io_pads_aon_pmu_vddpaden_o_oe    (),\n  .io_pads_aon_pmu_vddpaden_o_ie    (),\n  .io_pads_aon_pmu_vddpaden_o_pue   (),\n  .io_pads_aon_pmu_vddpaden_o_ds    (),\n\n  \n    .io_pads_aon_pmu_padrst_i_ival    (1'b1 ),\n    .io_pads_aon_pmu_padrst_o_oval    (io_pads_aon_pmu_padrst_o_oval ),\n    .io_pads_aon_pmu_padrst_o_oe      (),\n    .io_pads_aon_pmu_padrst_o_ie      (),\n    .io_pads_aon_pmu_padrst_o_pue     (),\n    .io_pads_aon_pmu_padrst_o_ds      (),\n\n    .io_pads_bootrom_n_i_ival       (io_pads_bootrom_n_i_ival),\n    .io_pads_bootrom_n_o_oval       (),\n    .io_pads_bootrom_n_o_oe         (),\n    .io_pads_bootrom_n_o_ie         (),\n    .io_pads_bootrom_n_o_pue        (),\n    .io_pads_bootrom_n_o_ds         (),\n\n    .io_pads_dbgmode0_n_i_ival       (io_pads_dbgmode0_n_i_ival),\n\n    .io_pads_dbgmode1_n_i_ival       (io_pads_dbgmode1_n_i_ival),\n\n    .io_pads_dbgmode2_n_i_ival       (io_pads_dbgmode2_n_i_ival) \n\n\n  );\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The CLINT module\n//\n// ====================================================================\n\n`include \"e203_defines.v\"\n\n\nmodule e203_subsys_clint(\n  input                          clint_icb_cmd_valid,\n  output                         clint_icb_cmd_ready,\n  input  [`E203_ADDR_SIZE-1:0]   clint_icb_cmd_addr, \n  input                          clint_icb_cmd_read, \n  input  [`E203_XLEN-1:0]        clint_icb_cmd_wdata,\n  input  [`E203_XLEN/8-1:0]      clint_icb_cmd_wmask,\n  //\n  output                         clint_icb_rsp_valid,\n  input                          clint_icb_rsp_ready,\n  output                         clint_icb_rsp_err,\n  output [`E203_XLEN-1:0]        clint_icb_rsp_rdata,\n\n  output  clint_tmr_irq,\n  output  clint_sft_irq,\n\n  input   aon_rtcToggle_a,\n  input   tm_stop,\n\n  input  clk,\n  input  rst_n\n  );\n\n\n  wire aon_rtcToggle_r;\n  wire aon_rtcToggle;\n  sirv_gnrl_sync # (\n  .DP(`E203_ASYNC_FF_LEVELS),\n  .DW(1)\n  ) u_aon_rtctoggle_sync(\n      .din_a    (aon_rtcToggle_a),\n      .dout     (aon_rtcToggle_r),\n      .clk      (clk  ),\n      .rst_n    (rst_n) \n  );\n\n  sirv_clint_top u_sirv_clint_top(\n  .clk             (clk   ),\n  .rst_n           (rst_n ),\n\n  .i_icb_cmd_valid (clint_icb_cmd_valid),\n  .i_icb_cmd_ready (clint_icb_cmd_ready),\n  .i_icb_cmd_addr  (clint_icb_cmd_addr ),\n  .i_icb_cmd_read  (clint_icb_cmd_read ),\n  .i_icb_cmd_wdata (clint_icb_cmd_wdata),\n  \n  .i_icb_rsp_valid (clint_icb_rsp_valid),\n  .i_icb_rsp_ready (clint_icb_rsp_ready),\n  .i_icb_rsp_rdata (clint_icb_rsp_rdata),\n\n  .io_tiles_0_mtip (clint_tmr_irq),\n  .io_tiles_0_msip (clint_sft_irq),\n  .io_rtcToggle    (aon_rtcToggle)\n  );\n\n  // We self-defined a mcounterstop CSR which contained a tm_stop field, this \n  //   field can be use to disable different counters to save dynamic powers\n  //   in the case where they dont really need the counters\n  assign aon_rtcToggle = aon_rtcToggle_r & (~tm_stop);\n\n  assign clint_icb_rsp_err     = 1'b0;\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The gltch free clock mux\n//\n// ====================================================================\n\n`include \"e203_defines.v\"\n\n\nmodule e203_subsys_gfcm(\n  input test_mode,\n  input clk0_rst_n,\n  input clk1_rst_n,\n  input sel1    ,\n  input clk0    ,\n  input clk1    ,\n  output clkout   \n  );\n\n  wire clk0_sel = ~sel1;\n  wire clk1_sel = sel1;\n\n  localparam SYNC_LEVEL = 3;\n\n  wire clk0_sync_in;\n\n  reg [SYNC_LEVEL-1:0] clk0_sync_r; \n  \n  always @(posedge clk0 or negedge clk0_rst_n)\n  begin:clk0_sync_PROC\n    if(clk0_rst_n == 1'b0)\n      begin\n        clk0_sync_r[SYNC_LEVEL-1:0] <= {SYNC_LEVEL{1'b0}};\n      end\n    else\n      begin\n        clk0_sync_r[SYNC_LEVEL-1:0] <= {clk0_sync_r[SYNC_LEVEL-2:0],clk0_sync_in};\n      end\n  end\n\n  wire clk1_sync_in;\n\n  reg [SYNC_LEVEL-1:0] clk1_sync_r; \n  \n  always @(posedge clk1 or negedge clk1_rst_n)\n  begin:clk1_sync_PROC\n    if(clk1_rst_n == 1'b0)\n      begin\n        clk1_sync_r[SYNC_LEVEL-1:0] <= {SYNC_LEVEL{1'b0}};\n      end\n    else\n      begin\n        clk1_sync_r[SYNC_LEVEL-1:0] <= {clk1_sync_r[SYNC_LEVEL-2:0],clk1_sync_in};\n      end\n  end\n\n\n  assign clk0_sync_in = (~clk1_sync_r[SYNC_LEVEL-1]) & clk0_sel; \n  assign clk1_sync_in = (~clk0_sync_r[SYNC_LEVEL-1]) & clk1_sel; \n\n  wire clk0_gated;\n  wire clk1_gated;\n\n\n  wire clk0_gate_en = clk0_sync_r[1];\n\n  e203_clkgate u_clk0_clkgate(\n    .clk_in   (clk0        ),\n    .test_mode(test_mode  ),\n    .clock_en (clk0_gate_en),\n    .clk_out  (clk0_gated)\n  );\n\n  \n  wire clk1_gate_en = clk1_sync_r[1];\n\n  e203_clkgate u_clk1_clkgate(\n    .clk_in   (clk1        ),\n    .test_mode(test_mode  ),\n    .clock_en (clk1_gate_en),\n    .clk_out  (clk1_gated)\n  );\n\n  assign clkout = clk0_gated | clk1_gated;\n\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The HCLKGEN module, mainly include the PLL to generate clock\n//\n// ====================================================================\n\n`include \"e203_defines.v\"\n\n\nmodule e203_subsys_hclkgen(\n  input test_mode,\n  input hfclkrst,// To reset the PLL Clock\n  \n  input hfextclk,// The original clock from crystal\n\n  input  pllbypass ,\n  input  pll_RESET ,\n  input  pll_ASLEEP ,\n  input [1:0]  pll_OD,\n  input [7:0]  pll_M,\n  input [4:0]  pll_N,\n  input plloutdivby1,\n  input [5:0] plloutdiv, \n\n  output  inspect_16m_clk,\n  output  inspect_pll_clk,\n\n  output  hfclk// The generated clock by this module\n  );\n\n  wire hfclkrst_n = ~hfclkrst;\n\n  // The PLL module\n  wire plloutclk;\n  wire pll_powerd = pll_ASLEEP | hfclkrst; // Power down by PMU or the register programmed\n  e203_subsys_pll u_e203_subsys_pll(\n    .pll_asleep (pll_powerd ),\n    .pll_RESET  (pll_RESET),\n    .pll_OD  (pll_OD),\n    .pll_M   (pll_M ),\n    .pll_N   (pll_N ),\n    .pllrefclk  (hfextclk ),\n    .plloutclk  (plloutclk ) \n  );\n\n  // The Reset syncer for the PLLout clk\n  wire plloutclk_rst_n;\n  e203_subsys_hclkgen_rstsync plloutclk_rstsync(\n    .clk      (plloutclk),\n    .rst_n_a  (hfclkrst_n),\n    .test_mode(test_mode),\n    .rst_n    (plloutclk_rst_n)\n  );\n\n  // The Reset syncer for the HFextclk\n  wire hfextclk_rst_n;\n  e203_subsys_hclkgen_rstsync hfextclk_rstsync(\n    .clk      (hfextclk),\n    .rst_n_a  (hfclkrst_n),\n    .test_mode(test_mode),\n    .rst_n    (hfextclk_rst_n)\n  );\n\n\n\n  // The PLL divider\n  wire plloutdivclk;\n  e203_subsys_pllclkdiv u_e203_subsys_pllclkdiv(\n    .test_mode(test_mode),\n    .rst_n (plloutclk_rst_n),\n    .divby1(plloutdivby1),\n    .div   (plloutdiv   ), \n    .clk   (plloutclk),// The PLL clock\n    .clkout(plloutdivclk) // The divided Clock\n  );\n\n  // The glitch free clock mux\n  wire gfcm_clk;\n  e203_subsys_gfcm u_e203_subsys_gfcm(\n    .test_mode(test_mode),\n    .clk0_rst_n   (plloutclk_rst_n),\n    .clk1_rst_n   (hfextclk_rst_n),\n    .sel1    (pllbypass),\n    .clk0    (plloutdivclk),// The divided PLL clock\n    .clk1    (hfextclk),// The original Crystal clock\n    .clkout  (gfcm_clk)\n  );\n\n  assign hfclk = test_mode ? hfextclk : gfcm_clk;\n\n  assign inspect_16m_clk = hfextclk ;\n  assign inspect_pll_clk = plloutclk;\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n// Designer   : Bob Hu\n//\n// Description:\n//  The Reset Sync module to implement reset control\n//\n// ====================================================================\n\n`include \"e203_defines.v\"\n\nmodule e203_subsys_hclkgen_rstsync (\n  input  clk,        // clock\n  input  rst_n_a,      // async reset\n  input  test_mode,  // test mode \n\n  output rst_n \n\n);\n\nlocalparam RST_SYNC_LEVEL = `E203_ASYNC_FF_LEVELS;\n\nreg [RST_SYNC_LEVEL-1:0] rst_sync_r; \n\nalways @(posedge clk or negedge rst_n_a)\nbegin:rst_sync_PROC\n  if(rst_n_a == 1'b0)\n    begin\n      rst_sync_r[RST_SYNC_LEVEL-1:0] <= {RST_SYNC_LEVEL{1'b0}};\n    end\n  else\n    begin\n      rst_sync_r[RST_SYNC_LEVEL-1:0] <= {rst_sync_r[RST_SYNC_LEVEL-2:0],1'b1};\n    end\nend\n\nassign rst_n = test_mode ? rst_n_a : rst_sync_r[`E203_ASYNC_FF_LEVELS-1];\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The Subsystem-TOP module to implement CPU and some closely coupled devices\n//\n// ====================================================================\n\n\n`include \"e203_defines.v\"\n\n\nmodule e203_subsys_main(\n  output core_csr_clk,\n\n  output hfxoscen,// The signal to enable the crystal pad generated clock\n\n  output inspect_pc_29b       ,\n  output inspect_dbg_irq      ,\n\n  input  inspect_mode, \n  input  inspect_por_rst, \n  input  inspect_32k_clk, \n  input  inspect_jtag_clk,\n\n  input  [`E203_PC_SIZE-1:0] pc_rtvec,\n  ///////////////////////////////////////\n  // With the interface to debug module \n  //\n    // The interface with commit stage\n  output  [`E203_PC_SIZE-1:0] cmt_dpc,\n  output  cmt_dpc_ena,\n\n  output  [3-1:0] cmt_dcause,\n  output  cmt_dcause_ena,\n\n  input   dbg_irq_a,\n  output  dbg_irq_r,\n\n    // The interface with CSR control \n  output  wr_dcsr_ena    ,\n  output  wr_dpc_ena     ,\n  output  wr_dscratch_ena,\n\n\n\n  output  [32-1:0] wr_csr_nxt    ,\n\n  input  [32-1:0] dcsr_r    ,\n  input  [`E203_PC_SIZE-1:0] dpc_r     ,\n  input  [32-1:0] dscratch_r,\n\n  input  dbg_mode,\n  input  dbg_halt_r,\n  input  dbg_step_r,\n  input  dbg_ebreakm_r,\n  input  dbg_stopcycle,\n\n\n  ///////////////////////////////////////\n  input  [`E203_HART_ID_W-1:0] core_mhartid,  \n    \n  input  aon_wdg_irq_a,\n  input  aon_rtc_irq_a,\n  input  aon_rtcToggle_a,\n\n  output                         aon_icb_cmd_valid,\n  input                          aon_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   aon_icb_cmd_addr, \n  output                         aon_icb_cmd_read, \n  output [`E203_XLEN-1:0]        aon_icb_cmd_wdata,\n  //\n  input                          aon_icb_rsp_valid,\n  output                         aon_icb_rsp_ready,\n  input                          aon_icb_rsp_err,\n  input  [`E203_XLEN-1:0]        aon_icb_rsp_rdata,\n\n      //////////////////////////////////////////////////////////\n  output                         dm_icb_cmd_valid,\n  input                          dm_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   dm_icb_cmd_addr, \n  output                         dm_icb_cmd_read, \n  output [`E203_XLEN-1:0]        dm_icb_cmd_wdata,\n  //\n  input                          dm_icb_rsp_valid,\n  output                         dm_icb_rsp_ready,\n  input  [`E203_XLEN-1:0]        dm_icb_rsp_rdata,\n\n  input  io_pads_gpio_0_i_ival,\n  output io_pads_gpio_0_o_oval,\n  output io_pads_gpio_0_o_oe,\n  output io_pads_gpio_0_o_ie,\n  output io_pads_gpio_0_o_pue,\n  output io_pads_gpio_0_o_ds,\n  input  io_pads_gpio_1_i_ival,\n  output io_pads_gpio_1_o_oval,\n  output io_pads_gpio_1_o_oe,\n  output io_pads_gpio_1_o_ie,\n  output io_pads_gpio_1_o_pue,\n  output io_pads_gpio_1_o_ds,\n  input  io_pads_gpio_2_i_ival,\n  output io_pads_gpio_2_o_oval,\n  output io_pads_gpio_2_o_oe,\n  output io_pads_gpio_2_o_ie,\n  output io_pads_gpio_2_o_pue,\n  output io_pads_gpio_2_o_ds,\n  input  io_pads_gpio_3_i_ival,\n  output io_pads_gpio_3_o_oval,\n  output io_pads_gpio_3_o_oe,\n  output io_pads_gpio_3_o_ie,\n  output io_pads_gpio_3_o_pue,\n  output io_pads_gpio_3_o_ds,\n  input  io_pads_gpio_4_i_ival,\n  output io_pads_gpio_4_o_oval,\n  output io_pads_gpio_4_o_oe,\n  output io_pads_gpio_4_o_ie,\n  output io_pads_gpio_4_o_pue,\n  output io_pads_gpio_4_o_ds,\n  input  io_pads_gpio_5_i_ival,\n  output io_pads_gpio_5_o_oval,\n  output io_pads_gpio_5_o_oe,\n  output io_pads_gpio_5_o_ie,\n  output io_pads_gpio_5_o_pue,\n  output io_pads_gpio_5_o_ds,\n  input  io_pads_gpio_6_i_ival,\n  output io_pads_gpio_6_o_oval,\n  output io_pads_gpio_6_o_oe,\n  output io_pads_gpio_6_o_ie,\n  output io_pads_gpio_6_o_pue,\n  output io_pads_gpio_6_o_ds,\n  input  io_pads_gpio_7_i_ival,\n  output io_pads_gpio_7_o_oval,\n  output io_pads_gpio_7_o_oe,\n  output io_pads_gpio_7_o_ie,\n  output io_pads_gpio_7_o_pue,\n  output io_pads_gpio_7_o_ds,\n  input  io_pads_gpio_8_i_ival,\n  output io_pads_gpio_8_o_oval,\n  output io_pads_gpio_8_o_oe,\n  output io_pads_gpio_8_o_ie,\n  output io_pads_gpio_8_o_pue,\n  output io_pads_gpio_8_o_ds,\n  input  io_pads_gpio_9_i_ival,\n  output io_pads_gpio_9_o_oval,\n  output io_pads_gpio_9_o_oe,\n  output io_pads_gpio_9_o_ie,\n  output io_pads_gpio_9_o_pue,\n  output io_pads_gpio_9_o_ds,\n  input  io_pads_gpio_10_i_ival,\n  output io_pads_gpio_10_o_oval,\n  output io_pads_gpio_10_o_oe,\n  output io_pads_gpio_10_o_ie,\n  output io_pads_gpio_10_o_pue,\n  output io_pads_gpio_10_o_ds,\n  input  io_pads_gpio_11_i_ival,\n  output io_pads_gpio_11_o_oval,\n  output io_pads_gpio_11_o_oe,\n  output io_pads_gpio_11_o_ie,\n  output io_pads_gpio_11_o_pue,\n  output io_pads_gpio_11_o_ds,\n  input  io_pads_gpio_12_i_ival,\n  output io_pads_gpio_12_o_oval,\n  output io_pads_gpio_12_o_oe,\n  output io_pads_gpio_12_o_ie,\n  output io_pads_gpio_12_o_pue,\n  output io_pads_gpio_12_o_ds,\n  input  io_pads_gpio_13_i_ival,\n  output io_pads_gpio_13_o_oval,\n  output io_pads_gpio_13_o_oe,\n  output io_pads_gpio_13_o_ie,\n  output io_pads_gpio_13_o_pue,\n  output io_pads_gpio_13_o_ds,\n  input  io_pads_gpio_14_i_ival,\n  output io_pads_gpio_14_o_oval,\n  output io_pads_gpio_14_o_oe,\n  output io_pads_gpio_14_o_ie,\n  output io_pads_gpio_14_o_pue,\n  output io_pads_gpio_14_o_ds,\n  input  io_pads_gpio_15_i_ival,\n  output io_pads_gpio_15_o_oval,\n  output io_pads_gpio_15_o_oe,\n  output io_pads_gpio_15_o_ie,\n  output io_pads_gpio_15_o_pue,\n  output io_pads_gpio_15_o_ds,\n  input  io_pads_gpio_16_i_ival,\n  output io_pads_gpio_16_o_oval,\n  output io_pads_gpio_16_o_oe,\n  output io_pads_gpio_16_o_ie,\n  output io_pads_gpio_16_o_pue,\n  output io_pads_gpio_16_o_ds,\n  input  io_pads_gpio_17_i_ival,\n  output io_pads_gpio_17_o_oval,\n  output io_pads_gpio_17_o_oe,\n  output io_pads_gpio_17_o_ie,\n  output io_pads_gpio_17_o_pue,\n  output io_pads_gpio_17_o_ds,\n  input  io_pads_gpio_18_i_ival,\n  output io_pads_gpio_18_o_oval,\n  output io_pads_gpio_18_o_oe,\n  output io_pads_gpio_18_o_ie,\n  output io_pads_gpio_18_o_pue,\n  output io_pads_gpio_18_o_ds,\n  input  io_pads_gpio_19_i_ival,\n  output io_pads_gpio_19_o_oval,\n  output io_pads_gpio_19_o_oe,\n  output io_pads_gpio_19_o_ie,\n  output io_pads_gpio_19_o_pue,\n  output io_pads_gpio_19_o_ds,\n  input  io_pads_gpio_20_i_ival,\n  output io_pads_gpio_20_o_oval,\n  output io_pads_gpio_20_o_oe,\n  output io_pads_gpio_20_o_ie,\n  output io_pads_gpio_20_o_pue,\n  output io_pads_gpio_20_o_ds,\n  input  io_pads_gpio_21_i_ival,\n  output io_pads_gpio_21_o_oval,\n  output io_pads_gpio_21_o_oe,\n  output io_pads_gpio_21_o_ie,\n  output io_pads_gpio_21_o_pue,\n  output io_pads_gpio_21_o_ds,\n  input  io_pads_gpio_22_i_ival,\n  output io_pads_gpio_22_o_oval,\n  output io_pads_gpio_22_o_oe,\n  output io_pads_gpio_22_o_ie,\n  output io_pads_gpio_22_o_pue,\n  output io_pads_gpio_22_o_ds,\n  input  io_pads_gpio_23_i_ival,\n  output io_pads_gpio_23_o_oval,\n  output io_pads_gpio_23_o_oe,\n  output io_pads_gpio_23_o_ie,\n  output io_pads_gpio_23_o_pue,\n  output io_pads_gpio_23_o_ds,\n  input  io_pads_gpio_24_i_ival,\n  output io_pads_gpio_24_o_oval,\n  output io_pads_gpio_24_o_oe,\n  output io_pads_gpio_24_o_ie,\n  output io_pads_gpio_24_o_pue,\n  output io_pads_gpio_24_o_ds,\n  input  io_pads_gpio_25_i_ival,\n  output io_pads_gpio_25_o_oval,\n  output io_pads_gpio_25_o_oe,\n  output io_pads_gpio_25_o_ie,\n  output io_pads_gpio_25_o_pue,\n  output io_pads_gpio_25_o_ds,\n  input  io_pads_gpio_26_i_ival,\n  output io_pads_gpio_26_o_oval,\n  output io_pads_gpio_26_o_oe,\n  output io_pads_gpio_26_o_ie,\n  output io_pads_gpio_26_o_pue,\n  output io_pads_gpio_26_o_ds,\n  input  io_pads_gpio_27_i_ival,\n  output io_pads_gpio_27_o_oval,\n  output io_pads_gpio_27_o_oe,\n  output io_pads_gpio_27_o_ie,\n  output io_pads_gpio_27_o_pue,\n  output io_pads_gpio_27_o_ds,\n  input  io_pads_gpio_28_i_ival,\n  output io_pads_gpio_28_o_oval,\n  output io_pads_gpio_28_o_oe,\n  output io_pads_gpio_28_o_ie,\n  output io_pads_gpio_28_o_pue,\n  output io_pads_gpio_28_o_ds,\n  input  io_pads_gpio_29_i_ival,\n  output io_pads_gpio_29_o_oval,\n  output io_pads_gpio_29_o_oe,\n  output io_pads_gpio_29_o_ie,\n  output io_pads_gpio_29_o_pue,\n  output io_pads_gpio_29_o_ds,\n  input  io_pads_gpio_30_i_ival,\n  output io_pads_gpio_30_o_oval,\n  output io_pads_gpio_30_o_oe,\n  output io_pads_gpio_30_o_ie,\n  output io_pads_gpio_30_o_pue,\n  output io_pads_gpio_30_o_ds,\n  input  io_pads_gpio_31_i_ival,\n  output io_pads_gpio_31_o_oval,\n  output io_pads_gpio_31_o_oe,\n  output io_pads_gpio_31_o_ie,\n  output io_pads_gpio_31_o_pue,\n  output io_pads_gpio_31_o_ds,\n\n  input   io_pads_qspi_sck_i_ival,\n  output  io_pads_qspi_sck_o_oval,\n  output  io_pads_qspi_sck_o_oe,\n  output  io_pads_qspi_sck_o_ie,\n  output  io_pads_qspi_sck_o_pue,\n  output  io_pads_qspi_sck_o_ds,\n  input   io_pads_qspi_dq_0_i_ival,\n  output  io_pads_qspi_dq_0_o_oval,\n  output  io_pads_qspi_dq_0_o_oe,\n  output  io_pads_qspi_dq_0_o_ie,\n  output  io_pads_qspi_dq_0_o_pue,\n  output  io_pads_qspi_dq_0_o_ds,\n  input   io_pads_qspi_dq_1_i_ival,\n  output  io_pads_qspi_dq_1_o_oval,\n  output  io_pads_qspi_dq_1_o_oe,\n  output  io_pads_qspi_dq_1_o_ie,\n  output  io_pads_qspi_dq_1_o_pue,\n  output  io_pads_qspi_dq_1_o_ds,\n  input   io_pads_qspi_dq_2_i_ival,\n  output  io_pads_qspi_dq_2_o_oval,\n  output  io_pads_qspi_dq_2_o_oe,\n  output  io_pads_qspi_dq_2_o_ie,\n  output  io_pads_qspi_dq_2_o_pue,\n  output  io_pads_qspi_dq_2_o_ds,\n  input   io_pads_qspi_dq_3_i_ival,\n  output  io_pads_qspi_dq_3_o_oval,\n  output  io_pads_qspi_dq_3_o_oe,\n  output  io_pads_qspi_dq_3_o_ie,\n  output  io_pads_qspi_dq_3_o_pue,\n  output  io_pads_qspi_dq_3_o_ds,\n  input   io_pads_qspi_cs_0_i_ival,\n  output  io_pads_qspi_cs_0_o_oval,\n  output  io_pads_qspi_cs_0_o_oe,\n  output  io_pads_qspi_cs_0_o_ie,\n  output  io_pads_qspi_cs_0_o_pue,\n  output  io_pads_qspi_cs_0_o_ds,\n\n  `ifdef E203_HAS_ITCM_EXTITF //{\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  // External-agent ICB to ITCM\n  //    * Bus cmd channel\n  input                          ext2itcm_icb_cmd_valid,\n  output                         ext2itcm_icb_cmd_ready,\n  input  [`E203_ITCM_ADDR_WIDTH-1:0]   ext2itcm_icb_cmd_addr, \n  input                          ext2itcm_icb_cmd_read, \n  input  [`E203_XLEN-1:0]        ext2itcm_icb_cmd_wdata,\n  input  [`E203_XLEN/8-1:0]      ext2itcm_icb_cmd_wmask,\n  //\n  //    * Bus RSP channel\n  output                         ext2itcm_icb_rsp_valid,\n  input                          ext2itcm_icb_rsp_ready,\n  output                         ext2itcm_icb_rsp_err  ,\n  output [`E203_XLEN-1:0]        ext2itcm_icb_rsp_rdata,\n  `endif//}\n\n  `ifdef E203_HAS_DTCM_EXTITF //{\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  // External-agent ICB to DTCM\n  //    * Bus cmd channel\n  input                          ext2dtcm_icb_cmd_valid,\n  output                         ext2dtcm_icb_cmd_ready,\n  input  [`E203_DTCM_ADDR_WIDTH-1:0]   ext2dtcm_icb_cmd_addr, \n  input                          ext2dtcm_icb_cmd_read, \n  input  [`E203_XLEN-1:0]        ext2dtcm_icb_cmd_wdata,\n  input  [`E203_XLEN/8-1:0]      ext2dtcm_icb_cmd_wmask,\n  //\n  //    * Bus RSP channel\n  output                         ext2dtcm_icb_rsp_valid,\n  input                          ext2dtcm_icb_rsp_ready,\n  output                         ext2dtcm_icb_rsp_err  ,\n  output [`E203_XLEN-1:0]        ext2dtcm_icb_rsp_rdata,\n  `endif//}\n\n  \n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  // The ICB Interface to Private Peripheral Interface\n  //\n  //    * Bus cmd channel\n  output                         sysper_icb_cmd_valid,\n  input                          sysper_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   sysper_icb_cmd_addr, \n  output                         sysper_icb_cmd_read, \n  output [`E203_XLEN-1:0]        sysper_icb_cmd_wdata,\n  output [`E203_XLEN/8-1:0]      sysper_icb_cmd_wmask,\n  //\n  //    * Bus RSP channel\n  input                          sysper_icb_rsp_valid,\n  output                         sysper_icb_rsp_ready,\n  input                          sysper_icb_rsp_err  ,\n  input  [`E203_XLEN-1:0]        sysper_icb_rsp_rdata,\n\n  `ifdef E203_HAS_FIO //{\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  // The ICB Interface to Fast I/O\n  //\n  //    * Bus cmd channel\n  output                         sysfio_icb_cmd_valid,\n  input                          sysfio_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   sysfio_icb_cmd_addr, \n  output                         sysfio_icb_cmd_read, \n  output [`E203_XLEN-1:0]        sysfio_icb_cmd_wdata,\n  output [`E203_XLEN/8-1:0]      sysfio_icb_cmd_wmask,\n  //\n  //    * Bus RSP channel\n  input                          sysfio_icb_rsp_valid,\n  output                         sysfio_icb_rsp_ready,\n  input                          sysfio_icb_rsp_err  ,\n  input  [`E203_XLEN-1:0]        sysfio_icb_rsp_rdata,\n  `endif//}\n\n  `ifdef E203_HAS_MEM_ITF //{\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  // The ICB Interface from Ifetch \n  //\n  //    * Bus cmd channel\n  output                         sysmem_icb_cmd_valid,\n  input                          sysmem_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   sysmem_icb_cmd_addr, \n  output                         sysmem_icb_cmd_read, \n  output [`E203_XLEN-1:0]        sysmem_icb_cmd_wdata,\n  output [`E203_XLEN/8-1:0]      sysmem_icb_cmd_wmask,\n  //\n  //    * Bus RSP channel\n  input                          sysmem_icb_rsp_valid,\n  output                         sysmem_icb_rsp_ready,\n  input                          sysmem_icb_rsp_err  ,\n  input  [`E203_XLEN-1:0]        sysmem_icb_rsp_rdata,\n  `endif//}\n\n  input  test_mode,\n\n  input  corerst, // The original async reset\n  input  hfclkrst, // The original async reset\n  input  hfextclk,// The original clock from crystal\n  output hfclk // The generated clock by HCLKGEN\n\n  );\n\n wire [31:0] inspect_pc;\n wire inspect_mem_cmd_valid;\n wire inspect_mem_cmd_ready;\n wire inspect_mem_rsp_valid;\n wire inspect_mem_rsp_ready;\n wire inspect_core_clk;\n wire inspect_pll_clk;\n wire inspect_16m_clk;\n\n assign inspect_pc_29b = inspect_pc[29];\n\n wire  gpio_0_o_oval ;\n wire  gpio_0_o_oe   ;\n wire  gpio_0_o_ie   ;\n wire  gpio_0_o_pue  ;\n wire  gpio_0_o_ds   ;\n wire  gpio_1_o_oval ;\n wire  gpio_1_o_oe   ;\n wire  gpio_1_o_ie   ;\n wire  gpio_1_o_pue  ;\n wire  gpio_1_o_ds   ;\n wire  gpio_2_o_oval ;\n wire  gpio_2_o_oe   ;\n wire  gpio_2_o_ie   ;\n wire  gpio_2_o_pue  ;\n wire  gpio_2_o_ds   ;\n wire  gpio_3_o_oval ;\n wire  gpio_3_o_oe   ;\n wire  gpio_3_o_ie   ;\n wire  gpio_3_o_pue  ;\n wire  gpio_3_o_ds   ;\n wire  gpio_4_o_oval ;\n wire  gpio_4_o_oe   ;\n wire  gpio_4_o_ie   ;\n wire  gpio_4_o_pue  ;\n wire  gpio_4_o_ds   ;\n wire  gpio_5_o_oval ;\n wire  gpio_5_o_oe   ;\n wire  gpio_5_o_ie   ;\n wire  gpio_5_o_pue  ;\n wire  gpio_5_o_ds   ;\n wire  gpio_6_o_oval ;\n wire  gpio_6_o_oe   ;\n wire  gpio_6_o_ie   ;\n wire  gpio_6_o_pue  ;\n wire  gpio_6_o_ds   ;\n wire  gpio_7_o_oval ;\n wire  gpio_7_o_oe   ;\n wire  gpio_7_o_ie   ;\n wire  gpio_7_o_pue  ;\n wire  gpio_7_o_ds   ;\n wire  gpio_8_o_oval ;\n wire  gpio_8_o_oe   ;\n wire  gpio_8_o_ie   ;\n wire  gpio_8_o_pue  ;\n wire  gpio_8_o_ds   ;\n wire  gpio_9_o_oval ;\n wire  gpio_9_o_oe   ;\n wire  gpio_9_o_ie   ;\n wire  gpio_9_o_pue  ;\n wire  gpio_9_o_ds   ;\n wire  gpio_10_o_oval;\n wire  gpio_10_o_oe  ;\n wire  gpio_10_o_ie  ;\n wire  gpio_10_o_pue ;\n wire  gpio_10_o_ds  ;\n wire  gpio_11_o_oval;\n wire  gpio_11_o_oe  ;\n wire  gpio_11_o_ie  ;\n wire  gpio_11_o_pue ;\n wire  gpio_11_o_ds  ;\n wire  gpio_12_o_oval;\n wire  gpio_12_o_oe  ;\n wire  gpio_12_o_ie  ;\n wire  gpio_12_o_pue ;\n wire  gpio_12_o_ds  ;\n wire  gpio_13_o_oval;\n wire  gpio_13_o_oe  ;\n wire  gpio_13_o_ie  ;\n wire  gpio_13_o_pue ;\n wire  gpio_13_o_ds  ;\n wire  gpio_14_o_oval;\n wire  gpio_14_o_oe  ;\n wire  gpio_14_o_ie  ;\n wire  gpio_14_o_pue ;\n wire  gpio_14_o_ds  ;\n wire  gpio_15_o_oval;\n wire  gpio_15_o_oe  ;\n wire  gpio_15_o_ie  ;\n wire  gpio_15_o_pue ;\n wire  gpio_15_o_ds  ;\n wire  gpio_16_o_oval;\n wire  gpio_16_o_oe  ;\n wire  gpio_16_o_ie  ;\n wire  gpio_16_o_pue ;\n wire  gpio_16_o_ds  ;\n wire  gpio_17_o_oval;\n wire  gpio_17_o_oe  ;\n wire  gpio_17_o_ie  ;\n wire  gpio_17_o_pue ;\n wire  gpio_17_o_ds  ;\n wire  gpio_18_o_oval;\n wire  gpio_18_o_oe  ;\n wire  gpio_18_o_ie  ;\n wire  gpio_18_o_pue ;\n wire  gpio_18_o_ds  ;\n wire  gpio_19_o_oval;\n wire  gpio_19_o_oe  ;\n wire  gpio_19_o_ie  ;\n wire  gpio_19_o_pue ;\n wire  gpio_19_o_ds  ;\n wire  gpio_20_o_oval;\n wire  gpio_20_o_oe  ;\n wire  gpio_20_o_ie  ;\n wire  gpio_20_o_pue ;\n wire  gpio_20_o_ds  ;\n wire  gpio_21_o_oval;\n wire  gpio_21_o_oe  ;\n wire  gpio_21_o_ie  ;\n wire  gpio_21_o_pue ;\n wire  gpio_21_o_ds  ;\n wire  gpio_22_o_oval;\n wire  gpio_22_o_oe  ;\n wire  gpio_22_o_ie  ;\n wire  gpio_22_o_pue ;\n wire  gpio_22_o_ds  ;\n wire  gpio_23_o_oval;\n wire  gpio_23_o_oe  ;\n wire  gpio_23_o_ie  ;\n wire  gpio_23_o_pue ;\n wire  gpio_23_o_ds  ;\n wire  gpio_24_o_oval;\n wire  gpio_24_o_oe  ;\n wire  gpio_24_o_ie  ;\n wire  gpio_24_o_pue ;\n wire  gpio_24_o_ds  ;\n wire  gpio_25_o_oval;\n wire  gpio_25_o_oe  ;\n wire  gpio_25_o_ie  ;\n wire  gpio_25_o_pue ;\n wire  gpio_25_o_ds  ;\n wire  gpio_26_o_oval;\n wire  gpio_26_o_oe  ;\n wire  gpio_26_o_ie  ;\n wire  gpio_26_o_pue ;\n wire  gpio_26_o_ds  ;\n wire  gpio_27_o_oval;\n wire  gpio_27_o_oe  ;\n wire  gpio_27_o_ie  ;\n wire  gpio_27_o_pue ;\n wire  gpio_27_o_ds  ;\n wire  gpio_28_o_oval;\n wire  gpio_28_o_oe  ;\n wire  gpio_28_o_ie  ;\n wire  gpio_28_o_pue ;\n wire  gpio_28_o_ds  ;\n wire  gpio_29_o_oval;\n wire  gpio_29_o_oe  ;\n wire  gpio_29_o_ie  ;\n wire  gpio_29_o_pue ;\n wire  gpio_29_o_ds  ;\n wire  gpio_30_o_oval;\n wire  gpio_30_o_oe  ;\n wire  gpio_30_o_ie  ;\n wire  gpio_30_o_pue ;\n wire  gpio_30_o_ds  ;\n wire  gpio_31_o_oval;\n wire  gpio_31_o_oe  ;\n wire  gpio_31_o_ie  ;\n wire  gpio_31_o_pue ;\n wire  gpio_31_o_ds  ;\n\n\n    // The GPIO are reused for inspect mode, in which the GPIO\n  //   is forced to be an output\n assign  io_pads_gpio_0_o_oval    = inspect_mode ? inspect_pc[0] : gpio_0_o_oval;\n assign  io_pads_gpio_0_o_oe      = inspect_mode ? 1'b1          : gpio_0_o_oe;\n assign  io_pads_gpio_0_o_ie      = inspect_mode ? 1'b0          : gpio_0_o_ie;\n assign  io_pads_gpio_0_o_pue     = inspect_mode ? 1'b0          : gpio_0_o_pue;\n assign  io_pads_gpio_0_o_ds      = inspect_mode ? 1'b1          : gpio_0_o_ds;\n assign  io_pads_gpio_1_o_oval    = inspect_mode ? inspect_pc[1] : gpio_1_o_oval;\n assign  io_pads_gpio_1_o_oe      = inspect_mode ? 1'b1          : gpio_1_o_oe;\n assign  io_pads_g"}
{"text": "pio_1_o_ie      = inspect_mode ? 1'b0          : gpio_1_o_ie;\n assign  io_pads_gpio_1_o_pue     = inspect_mode ? 1'b0          : gpio_1_o_pue;\n assign  io_pads_gpio_1_o_ds      = inspect_mode ? 1'b1          : gpio_1_o_ds;\n assign  io_pads_gpio_2_o_oval    = inspect_mode ? inspect_pc[2] : gpio_2_o_oval;\n assign  io_pads_gpio_2_o_oe      = inspect_mode ? 1'b1          : gpio_2_o_oe;\n assign  io_pads_gpio_2_o_ie      = inspect_mode ? 1'b0          : gpio_2_o_ie;\n assign  io_pads_gpio_2_o_pue     = inspect_mode ? 1'b0          : gpio_2_o_pue;\n assign  io_pads_gpio_2_o_ds      = inspect_mode ? 1'b1          : gpio_2_o_ds;\n assign  io_pads_gpio_3_o_oval    = inspect_mode ? inspect_pc[3] : gpio_3_o_oval;\n assign  io_pads_gpio_3_o_oe      = inspect_mode ? 1'b1          : gpio_3_o_oe;\n assign  io_pads_gpio_3_o_ie      = inspect_mode ? 1'b0          : gpio_3_o_ie;\n assign  io_pads_gpio_3_o_pue     = inspect_mode ? 1'b0          : gpio_3_o_pue;\n assign  io_pads_gpio_3_o_ds      = inspect_mode ? 1'b1          : gpio_3_o_ds;\n assign  io_pads_gpio_4_o_oval    = inspect_mode ? inspect_pc[4] : gpio_4_o_oval;\n assign  io_pads_gpio_4_o_oe      = inspect_mode ? 1'b1          : gpio_4_o_oe;\n assign  io_pads_gpio_4_o_ie      = inspect_mode ? 1'b0          : gpio_4_o_ie;\n assign  io_pads_gpio_4_o_pue     = inspect_mode ? 1'b0          : gpio_4_o_pue;\n assign  io_pads_gpio_4_o_ds      = inspect_mode ? 1'b1          : gpio_4_o_ds;\n assign  io_pads_gpio_5_o_oval    = inspect_mode ? inspect_pc[5] : gpio_5_o_oval;\n assign  io_pads_gpio_5_o_oe      = inspect_mode ? 1'b1          : gpio_5_o_oe;\n assign  io_pads_gpio_5_o_ie      = inspect_mode ? 1'b0          : gpio_5_o_ie;\n assign  io_pads_gpio_5_o_pue     = inspect_mode ? 1'b0          : gpio_5_o_pue;\n assign  io_pads_gpio_5_o_ds      = inspect_mode ? 1'b1          : gpio_5_o_ds;\n assign  io_pads_gpio_6_o_oval    = inspect_mode ? inspect_pc[6] : gpio_6_o_oval;\n assign  io_pads_gpio_6_o_oe      = inspect_mode ? 1'b1          : gpio_6_o_oe;\n assign  io_pads_gpio_6_o_ie      = inspect_mode ? 1'b0          : gpio_6_o_ie;\n assign  io_pads_gpio_6_o_pue     = inspect_mode ? 1'b0          : gpio_6_o_pue;\n assign  io_pads_gpio_6_o_ds      = inspect_mode ? 1'b1          : gpio_6_o_ds;\n assign  io_pads_gpio_7_o_oval    = inspect_mode ? inspect_pc[7] : gpio_7_o_oval;\n assign  io_pads_gpio_7_o_oe      = inspect_mode ? 1'b1          : gpio_7_o_oe;\n assign  io_pads_gpio_7_o_ie      = inspect_mode ? 1'b0          : gpio_7_o_ie;\n assign  io_pads_gpio_7_o_pue     = inspect_mode ? 1'b0          : gpio_7_o_pue;\n assign  io_pads_gpio_7_o_ds      = inspect_mode ? 1'b1          : gpio_7_o_ds;\n assign  io_pads_gpio_8_o_oval    = inspect_mode ? inspect_pc[8] : gpio_8_o_oval;\n assign  io_pads_gpio_8_o_oe      = inspect_mode ? 1'b1          : gpio_8_o_oe;\n assign  io_pads_gpio_8_o_ie      = inspect_mode ? 1'b0          : gpio_8_o_ie;\n assign  io_pads_gpio_8_o_pue     = inspect_mode ? 1'b0          : gpio_8_o_pue;\n assign  io_pads_gpio_8_o_ds      = inspect_mode ? 1'b1          : gpio_8_o_ds;\n assign  io_pads_gpio_9_o_oval    = inspect_mode ? inspect_pc[9] : gpio_9_o_oval;\n assign  io_pads_gpio_9_o_oe      = inspect_mode ? 1'b1          : gpio_9_o_oe;\n assign  io_pads_gpio_9_o_ie      = inspect_mode ? 1'b0          : gpio_9_o_ie;\n assign  io_pads_gpio_9_o_pue     = inspect_mode ? 1'b0          : gpio_9_o_pue;\n assign  io_pads_gpio_9_o_ds      = inspect_mode ? 1'b1          : gpio_9_o_ds;\n assign  io_pads_gpio_10_o_oval   = inspect_mode ? inspect_pc[10]: gpio_10_o_oval;\n assign  io_pads_gpio_10_o_oe     = inspect_mode ? 1'b1          : gpio_10_o_oe;\n assign  io_pads_gpio_10_o_ie     = inspect_mode ? 1'b0          : gpio_10_o_ie;\n assign  io_pads_gpio_10_o_pue    = inspect_mode ? 1'b0          : gpio_10_o_pue;\n assign  io_pads_gpio_10_o_ds     = inspect_mode ? 1'b1          : gpio_10_o_ds;\n assign  io_pads_gpio_11_o_oval   = inspect_mode ? inspect_pc[11]: gpio_11_o_oval;\n assign  io_pads_gpio_11_o_oe     = inspect_mode ? 1'b1          : gpio_11_o_oe;\n assign  io_pads_gpio_11_o_ie     = inspect_mode ? 1'b0          : gpio_11_o_ie;\n assign  io_pads_gpio_11_o_pue    = inspect_mode ? 1'b0          : gpio_11_o_pue;\n assign  io_pads_gpio_11_o_ds     = inspect_mode ? 1'b1          : gpio_11_o_ds;\n assign  io_pads_gpio_12_o_oval   = inspect_mode ? inspect_pc[12]: gpio_12_o_oval;\n assign  io_pads_gpio_12_o_oe     = inspect_mode ? 1'b1          : gpio_12_o_oe;\n assign  io_pads_gpio_12_o_ie     = inspect_mode ? 1'b0          : gpio_12_o_ie;\n assign  io_pads_gpio_12_o_pue    = inspect_mode ? 1'b0          : gpio_12_o_pue;\n assign  io_pads_gpio_12_o_ds     = inspect_mode ? 1'b1          : gpio_12_o_ds;\n assign  io_pads_gpio_13_o_oval   = inspect_mode ? inspect_pc[13]: gpio_13_o_oval;\n assign  io_pads_gpio_13_o_oe     = inspect_mode ? 1'b1          : gpio_13_o_oe;\n assign  io_pads_gpio_13_o_ie     = inspect_mode ? 1'b0          : gpio_13_o_ie;\n assign  io_pads_gpio_13_o_pue    = inspect_mode ? 1'b0          : gpio_13_o_pue;\n assign  io_pads_gpio_13_o_ds     = inspect_mode ? 1'b1          : gpio_13_o_ds;\n assign  io_pads_gpio_14_o_oval   = inspect_mode ? inspect_pc[14]: gpio_14_o_oval;\n assign  io_pads_gpio_14_o_oe     = inspect_mode ? 1'b1          : gpio_14_o_oe;\n assign  io_pads_gpio_14_o_ie     = inspect_mode ? 1'b0          : gpio_14_o_ie;\n assign  io_pads_gpio_14_o_pue    = inspect_mode ? 1'b0          : gpio_14_o_pue;\n assign  io_pads_gpio_14_o_ds     = inspect_mode ? 1'b1          : gpio_14_o_ds;\n assign  io_pads_gpio_15_o_oval   = inspect_mode ? inspect_pc[15]: gpio_15_o_oval;\n assign  io_pads_gpio_15_o_oe     = inspect_mode ? 1'b1          : gpio_15_o_oe;\n assign  io_pads_gpio_15_o_ie     = inspect_mode ? 1'b0          : gpio_15_o_ie;\n assign  io_pads_gpio_15_o_pue    = inspect_mode ? 1'b0          : gpio_15_o_pue;\n assign  io_pads_gpio_15_o_ds     = inspect_mode ? 1'b1          : gpio_15_o_ds;\n assign  io_pads_gpio_16_o_oval   = inspect_mode ? inspect_pc[16]: gpio_16_o_oval;\n assign  io_pads_gpio_16_o_oe     = inspect_mode ? 1'b1          : gpio_16_o_oe;\n assign  io_pads_gpio_16_o_ie     = inspect_mode ? 1'b0          : gpio_16_o_ie;\n assign  io_pads_gpio_16_o_pue    = inspect_mode ? 1'b0          : gpio_16_o_pue;\n assign  io_pads_gpio_16_o_ds     = inspect_mode ? 1'b1          : gpio_16_o_ds;\n assign  io_pads_gpio_17_o_oval   = inspect_mode ? inspect_pc[17]: gpio_17_o_oval;\n assign  io_pads_gpio_17_o_oe     = inspect_mode ? 1'b1          : gpio_17_o_oe;\n assign  io_pads_gpio_17_o_ie     = inspect_mode ? 1'b0          : gpio_17_o_ie;\n assign  io_pads_gpio_17_o_pue    = inspect_mode ? 1'b0          : gpio_17_o_pue;\n assign  io_pads_gpio_17_o_ds     = inspect_mode ? 1'b1          : gpio_17_o_ds;\n assign  io_pads_gpio_18_o_oval   = inspect_mode ? inspect_pc[18]: gpio_18_o_oval;\n assign  io_pads_gpio_18_o_oe     = inspect_mode ? 1'b1          : gpio_18_o_oe;\n assign  io_pads_gpio_18_o_ie     = inspect_mode ? 1'b0          : gpio_18_o_ie;\n assign  io_pads_gpio_18_o_pue    = inspect_mode ? 1'b0          : gpio_18_o_pue;\n assign  io_pads_gpio_18_o_ds     = inspect_mode ? 1'b1          : gpio_18_o_ds;\n assign  io_pads_gpio_19_o_oval   = inspect_mode ? inspect_pc[19]: gpio_19_o_oval;\n assign  io_pads_gpio_19_o_oe     = inspect_mode ? 1'b1          : gpio_19_o_oe;\n assign  io_pads_gpio_19_o_ie     = inspect_mode ? 1'b0          : gpio_19_o_ie;\n assign  io_pads_gpio_19_o_pue    = inspect_mode ? 1'b0          : gpio_19_o_pue;\n assign  io_pads_gpio_19_o_ds     = inspect_mode ? 1'b1          : gpio_19_o_ds;\n assign  io_pads_gpio_20_o_oval   = inspect_mode ? inspect_pc[20]: gpio_20_o_oval;\n assign  io_pads_gpio_20_o_oe     = inspect_mode ? 1'b1          : gpio_20_o_oe;\n assign  io_pads_gpio_20_o_ie     = inspect_mode ? 1'b0          : gpio_20_o_ie;\n assign  io_pads_gpio_20_o_pue    = inspect_mode ? 1'b0          : gpio_20_o_pue;\n assign  io_pads_gpio_20_o_ds     = inspect_mode ? 1'b1          : gpio_20_o_ds;\n assign  io_pads_gpio_21_o_oval   = inspect_mode ? inspect_pc[21]: gpio_21_o_oval;\n assign  io_pads_gpio_21_o_oe     = inspect_mode ? 1'b1          : gpio_21_o_oe;\n assign  io_pads_gpio_21_o_ie     = inspect_mode ? 1'b0          : gpio_21_o_ie;\n assign  io_pads_gpio_21_o_pue    = inspect_mode ? 1'b0          : gpio_21_o_pue;\n assign  io_pads_gpio_21_o_ds     = inspect_mode ? 1'b1          : gpio_21_o_ds;\n\n assign  io_pads_gpio_22_o_oval   = inspect_mode ? inspect_mem_cmd_valid : gpio_22_o_oval;\n assign  io_pads_gpio_22_o_oe     = inspect_mode ? 1'b1                  : gpio_22_o_oe;\n assign  io_pads_gpio_22_o_ie     = inspect_mode ? 1'b0                  : gpio_22_o_ie;\n assign  io_pads_gpio_22_o_pue    = inspect_mode ? 1'b0                  : gpio_22_o_pue;\n assign  io_pads_gpio_22_o_ds     = inspect_mode ? 1'b1                  : gpio_22_o_ds;\n assign  io_pads_gpio_23_o_oval   = inspect_mode ? inspect_mem_cmd_ready : gpio_23_o_oval;\n assign  io_pads_gpio_23_o_oe     = inspect_mode ? 1'b1                  : gpio_23_o_oe;\n assign  io_pads_gpio_23_o_ie     = inspect_mode ? 1'b0                  : gpio_23_o_ie;\n assign  io_pads_gpio_23_o_pue    = inspect_mode ? 1'b0                  : gpio_23_o_pue;\n assign  io_pads_gpio_23_o_ds     = inspect_mode ? 1'b1                  : gpio_23_o_ds;\n assign  io_pads_gpio_24_o_oval   = inspect_mode ? inspect_mem_rsp_valid : gpio_24_o_oval;\n assign  io_pads_gpio_24_o_oe     = inspect_mode ? 1'b1                  : gpio_24_o_oe;\n assign  io_pads_gpio_24_o_ie     = inspect_mode ? 1'b0                  : gpio_24_o_ie;\n assign  io_pads_gpio_24_o_pue    = inspect_mode ? 1'b0                  : gpio_24_o_pue;\n assign  io_pads_gpio_24_o_ds     = inspect_mode ? 1'b1                  : gpio_24_o_ds;\n assign  io_pads_gpio_25_o_oval   = inspect_mode ? inspect_mem_rsp_ready : gpio_25_o_oval;\n assign  io_pads_gpio_25_o_oe     = inspect_mode ? 1'b1                  : gpio_25_o_oe;\n assign  io_pads_gpio_25_o_ie     = inspect_mode ? 1'b0                  : gpio_25_o_ie;\n assign  io_pads_gpio_25_o_pue    = inspect_mode ? 1'b0                  : gpio_25_o_pue;\n assign  io_pads_gpio_25_o_ds     = inspect_mode ? 1'b1                  : gpio_25_o_ds;\n assign  io_pads_gpio_26_o_oval   = inspect_mode ? inspect_jtag_clk      : gpio_26_o_oval;\n assign  io_pads_gpio_26_o_oe     = inspect_mode ? 1'b1                  : gpio_26_o_oe;\n assign  io_pads_gpio_26_o_ie     = inspect_mode ? 1'b0                  : gpio_26_o_ie;\n assign  io_pads_gpio_26_o_pue    = inspect_mode ? 1'b0                  : gpio_26_o_pue;\n assign  io_pads_gpio_26_o_ds     = inspect_mode ? 1'b1                  : gpio_26_o_ds;\n assign  io_pads_gpio_27_o_oval   = inspect_mode ? inspect_core_clk      : gpio_27_o_oval;\n assign  io_pads_gpio_27_o_oe     = inspect_mode ? 1'b1                  : gpio_27_o_oe;\n assign  io_pads_gpio_27_o_ie     = inspect_mode ? 1'b0                  : gpio_27_o_ie;\n assign  io_pads_gpio_27_o_pue    = inspect_mode ? 1'b0                  : gpio_27_o_pue;\n assign  io_pads_gpio_27_o_ds     = inspect_mode ? 1'b1                  : gpio_27_o_ds;\n assign  io_pads_gpio_28_o_oval   = inspect_mode ? inspect_por_rst       : gpio_28_o_oval;\n assign  io_pads_gpio_28_o_oe     = inspect_mode ? 1'b1                  : gpio_28_o_oe;\n assign  io_pads_gpio_28_o_ie     = inspect_mode ? 1'b0                  : gpio_28_o_ie;\n assign  io_pads_gpio_28_o_pue    = inspect_mode ? 1'b0                  : gpio_28_o_pue;\n assign  io_pads_gpio_28_o_ds     = inspect_mode ? 1'b1                  : gpio_28_o_ds;\n assign  io_pads_gpio_29_o_oval   = inspect_mode ? inspect_32k_clk       : gpio_29_o_oval;\n assign  io_pads_gpio_29_o_oe     = inspect_mode ? 1'b1                  : gpio_29_o_oe;\n assign  io_pads_gpio_29_o_ie     = inspect_mode ? 1'b0                  : gpio_29_o_ie;\n assign  io_pads_gpio_29_o_pue    = inspect_mode ? 1'b0                  : gpio_29_o_pue;\n assign  io_pads_gpio_29_o_ds     = inspect_mode ? 1'b1                  : gpio_29_o_ds;\n assign  io_pads_gpio_30_o_oval   = inspect_mode ? inspect_16m_clk       : gpio_30_o_oval;\n assign  io_pads_gpio_30_o_oe     = inspect_mode ? 1'b1                  : gpio_30_o_oe;\n assign  io_pads_gpio_30_o_ie     = inspect_mode ? 1'b0                  : gpio_30_o_ie;\n assign  io_pads_gpio_30_o_pue    = inspect_mode ? 1'b0                  : gpio_30_o_pue;\n assign  io_pads_gpio_30_o_ds     = inspect_mode ? 1'b1                  : gpio_30_o_ds;\n assign  io_pads_gpio_31_o_oval   = inspect_mode ? inspect_pll_clk       : gpio_31_o_oval;\n assign  io_pads_gpio_31_o_oe     = inspect_mode ? 1'b1                  : gpio_31_o_oe;\n assign  io_pads_gpio_31_o_ie     = inspect_mode ? 1'b0                  : gpio_31_o_ie;\n assign  io_pads_gpio_31_o_pue    = inspect_mode ? 1'b0                  : gpio_31_o_pue;\n assign  io_pads_gpio_31_o_ds     = inspect_mode ? 1'b1                  : gpio_31_o_ds;\n\n\n  \n  //This is to reset the main domain\n  wire main_rst;\n sirv_ResetCatchAndSync_2 u_main_ResetCatchAndSync_2_1 (\n    .test_mode(test_mode),\n    .clock(hfclk),\n    .reset(corerst),\n    .io_sync_reset(main_rst)\n  );\n\n  wire main_rst_n = ~main_rst;\n\n  wire pllbypass ;\n  wire pll_RESET ;\n  wire pll_ASLEEP ;\n  wire [1:0]  pll_OD;\n  wire [7:0]  pll_M;\n  wire [4:0]  pll_N;\n  wire plloutdivby1;\n  wire [5:0] plloutdiv;\n\n  e203_subsys_hclkgen u_e203_subsys_hclkgen(\n    .test_mode   (test_mode),\n    .hfclkrst    (hfclkrst ),\n    .hfextclk    (hfextclk    ),\n                 \n    .pllbypass   (pllbypass   ),\n    .pll_RESET   (pll_RESET   ),\n    .pll_ASLEEP  (pll_ASLEEP   ),\n    .pll_OD      (pll_OD),\n    .pll_M       (pll_M ),\n    .pll_N       (pll_N ),\n    .plloutdivby1(plloutdivby1),\n    .plloutdiv   (plloutdiv   ), \n\n    .inspect_pll_clk(inspect_pll_clk),\n    .inspect_16m_clk(inspect_16m_clk),\n                \n    .hfclk       (hfclk       ) // The generated clock by this module\n  );\n\n\n  wire  tcm_ds = 1'b0;// Currently we dont support it\n  wire  tcm_sd = 1'b0;// Currently we dont support it\n\n`ifndef E203_HAS_LOCKSTEP//{\n  wire core_rst_n = main_rst_n;\n  wire bus_rst_n  = main_rst_n;\n  wire per_rst_n  = main_rst_n;\n`endif//}\n\n\n\n\n\n  wire                         ppi_icb_cmd_valid;\n  wire                         ppi_icb_cmd_ready;\n  wire [`E203_ADDR_SIZE-1:0]   ppi_icb_cmd_addr; \n  wire                         ppi_icb_cmd_read; \n  wire [`E203_XLEN-1:0]        ppi_icb_cmd_wdata;\n  wire [`E203_XLEN/8-1:0]      ppi_icb_cmd_wmask;\n\n  wire                         ppi_icb_rsp_valid;\n  wire                         ppi_icb_rsp_ready;\n  wire                         ppi_icb_rsp_err  ;\n  wire [`E203_XLEN-1:0]        ppi_icb_rsp_rdata;\n\n  \n  wire                         clint_icb_cmd_valid;\n  wire                         clint_icb_cmd_ready;\n  wire [`E203_ADDR_SIZE-1:0]   clint_icb_cmd_addr; \n  wire                         clint_icb_cmd_read; \n  wire [`E203_XLEN-1:0]        clint_icb_cmd_wdata;\n  wire [`E203_XLEN/8-1:0]      clint_icb_cmd_wmask;\n\n  wire                         clint_icb_rsp_valid;\n  wire                         clint_icb_rsp_ready;\n  wire                         clint_icb_rsp_err  ;\n  wire [`E203_XLEN-1:0]        clint_icb_rsp_rdata;\n\n  \n  wire                         plic_icb_cmd_valid;\n  wire                         plic_icb_cmd_ready;\n  wire [`E203_ADDR_SIZE-1:0]   plic_icb_cmd_addr; \n  wire                         plic_icb_cmd_read; \n  wire [`E203_XLEN-1:0]        plic_icb_cmd_wdata;\n  wire [`E203_XLEN/8-1:0]      plic_icb_cmd_wmask;\n\n  wire                         plic_icb_rsp_valid;\n  wire                         plic_icb_rsp_ready;\n  wire                         plic_icb_rsp_err  ;\n  wire [`E203_XLEN-1:0]        plic_icb_rsp_rdata;\n\n  `ifdef E203_HAS_FIO //{\n  wire                         fio_icb_cmd_valid;\n  wire                         fio_icb_cmd_ready;\n  wire [`E203_ADDR_SIZE-1:0]   fio_icb_cmd_addr; \n  wire                         fio_icb_cmd_read; \n  wire [`E203_XLEN-1:0]        fio_icb_cmd_wdata;\n  wire [`E203_XLEN/8-1:0]      fio_icb_cmd_wmask;\n\n  wire                         fio_icb_rsp_valid;\n  wire                         fio_icb_rsp_ready;\n  wire                         fio_icb_rsp_err  ;\n  wire [`E203_XLEN-1:0]        fio_icb_rsp_rdata;\n\n  assign sysfio_icb_cmd_valid = fio_icb_cmd_valid;\n  assign fio_icb_cmd_ready    = sysfio_icb_cmd_ready;\n  assign sysfio_icb_cmd_addr  = fio_icb_cmd_addr ; \n  assign sysfio_icb_cmd_read  = fio_icb_cmd_read ; \n  assign sysfio_icb_cmd_wdata = fio_icb_cmd_wdata;\n  assign sysfio_icb_cmd_wmask = fio_icb_cmd_wmask;\n                           \n  assign fio_icb_rsp_valid    = sysfio_icb_rsp_valid;\n  assign sysfio_icb_rsp_ready = fio_icb_rsp_ready;\n  assign fio_icb_rsp_err      = sysfio_icb_rsp_err  ;\n  assign fio_icb_rsp_rdata    = sysfio_icb_rsp_rdata;\n  `endif//}\n\n  wire                         mem_icb_cmd_valid;\n  wire                         mem_icb_cmd_ready;\n  wire [`E203_ADDR_SIZE-1:0]   mem_icb_cmd_addr; \n  wire                         mem_icb_cmd_read; \n  wire [`E203_XLEN-1:0]        mem_icb_cmd_wdata;\n  wire [`E203_XLEN/8-1:0]      mem_icb_cmd_wmask;\n  \n  wire                         mem_icb_rsp_valid;\n  wire                         mem_icb_rsp_ready;\n  wire                         mem_icb_rsp_err  ;\n  wire [`E203_XLEN-1:0]        mem_icb_rsp_rdata;\n\n  wire  plic_ext_irq;\n  wire  clint_sft_irq;\n  wire  clint_tmr_irq;\n\n  wire tm_stop;\n\n\n  wire core_wfi;\n\n\n\n  e203_cpu_top u_e203_cpu_top(\n\n  .inspect_pc               (inspect_pc), \n  .inspect_dbg_irq          (inspect_dbg_irq      ),\n  .inspect_mem_cmd_valid    (inspect_mem_cmd_valid), \n  .inspect_mem_cmd_ready    (inspect_mem_cmd_ready), \n  .inspect_mem_rsp_valid    (inspect_mem_rsp_valid),\n  .inspect_mem_rsp_ready    (inspect_mem_rsp_ready),\n  .inspect_core_clk         (inspect_core_clk),\n\n  .core_csr_clk          (core_csr_clk      ),\n\n\n        \n        \n\n    .tm_stop         (tm_stop),\n    .pc_rtvec        (pc_rtvec),\n\n    .tcm_sd          (tcm_sd),\n    .tcm_ds          (tcm_ds),\n    \n    .core_wfi        (core_wfi),\n\n    .dbg_irq_r       (dbg_irq_r      ),\n\n    .cmt_dpc         (cmt_dpc        ),\n    .cmt_dpc_ena     (cmt_dpc_ena    ),\n    .cmt_dcause      (cmt_dcause     ),\n    .cmt_dcause_ena  (cmt_dcause_ena ),\n\n    .wr_dcsr_ena     (wr_dcsr_ena    ),\n    .wr_dpc_ena      (wr_dpc_ena     ),\n    .wr_dscratch_ena (wr_dscratch_ena),\n\n\n\n                                     \n    .wr_csr_nxt      (wr_csr_nxt    ),\n                                     \n    .dcsr_r          (dcsr_r         ),\n    .dpc_r           (dpc_r          ),\n    .dscratch_r      (dscratch_r     ),\n\n    .dbg_mode        (dbg_mode),\n    .dbg_halt_r      (dbg_halt_r),\n    .dbg_step_r      (dbg_step_r),\n    .dbg_ebreakm_r   (dbg_ebreakm_r),\n    .dbg_stopcycle   (dbg_stopcycle),\n\n    .core_mhartid            (core_mhartid),  \n    .dbg_irq_a               (dbg_irq_a),\n    .ext_irq_a               (plic_ext_irq),\n    .sft_irq_a               (clint_sft_irq),\n    .tmr_irq_a               (clint_tmr_irq),\n\n  `ifdef E203_HAS_ITCM_EXTITF //{\n    .ext2itcm_icb_cmd_valid  (ext2itcm_icb_cmd_valid),\n    .ext2itcm_icb_cmd_ready  (ext2itcm_icb_cmd_ready),\n    .ext2itcm_icb_cmd_addr   (ext2itcm_icb_cmd_addr ),\n    .ext2itcm_icb_cmd_read   (ext2itcm_icb_cmd_read ),\n    .ext2itcm_icb_cmd_wdata  (ext2itcm_icb_cmd_wdata),\n    .ext2itcm_icb_cmd_wmask  (ext2itcm_icb_cmd_wmask),\n    \n    .ext2itcm_icb_rsp_valid  (ext2itcm_icb_rsp_valid),\n    .ext2itcm_icb_rsp_ready  (ext2itcm_icb_rsp_ready),\n    .ext2itcm_icb_rsp_err    (ext2itcm_icb_rsp_err  ),\n    .ext2itcm_icb_rsp_rdata  (ext2itcm_icb_rsp_rdata),\n  `endif//}\n\n  `ifdef E203_HAS_DTCM_EXTITF //{\n    .ext2dtcm_icb_cmd_valid  (ext2dtcm_icb_cmd_valid),\n    .ext2dtcm_icb_cmd_ready  (ext2dtcm_icb_cmd_ready),\n    .ext2dtcm_icb_cmd_addr   (ext2dtcm_icb_cmd_addr ),\n    .ext2dtcm_icb_cmd_read   (ext2dtcm_icb_cmd_read ),\n    .ext2dtcm_icb_cmd_wdata  (ext2dtcm_icb_cmd_wdata),\n    .ext2dtcm_icb_cmd_wmask  (ext2dtcm_icb_cmd_wmask),\n    \n    .ext2dtcm_icb_rsp_valid  (ext2dtcm_icb_rsp_valid),\n    .ext2dtcm_icb_rsp_ready  (ext2dtcm_icb_rsp_ready),\n    .ext2dt"}
{"text": "cm_icb_rsp_err    (ext2dtcm_icb_rsp_err  ),\n    .ext2dtcm_icb_rsp_rdata  (ext2dtcm_icb_rsp_rdata),\n  `endif//}\n\n\n    .ppi_icb_cmd_valid     (ppi_icb_cmd_valid),\n    .ppi_icb_cmd_ready     (ppi_icb_cmd_ready),\n    .ppi_icb_cmd_addr      (ppi_icb_cmd_addr ),\n    .ppi_icb_cmd_read      (ppi_icb_cmd_read ),\n    .ppi_icb_cmd_wdata     (ppi_icb_cmd_wdata),\n    .ppi_icb_cmd_wmask     (ppi_icb_cmd_wmask),\n    \n    .ppi_icb_rsp_valid     (ppi_icb_rsp_valid),\n    .ppi_icb_rsp_ready     (ppi_icb_rsp_ready),\n    .ppi_icb_rsp_err       (ppi_icb_rsp_err  ),\n    .ppi_icb_rsp_rdata     (ppi_icb_rsp_rdata),\n\n    .plic_icb_cmd_valid     (plic_icb_cmd_valid),\n    .plic_icb_cmd_ready     (plic_icb_cmd_ready),\n    .plic_icb_cmd_addr      (plic_icb_cmd_addr ),\n    .plic_icb_cmd_read      (plic_icb_cmd_read ),\n    .plic_icb_cmd_wdata     (plic_icb_cmd_wdata),\n    .plic_icb_cmd_wmask     (plic_icb_cmd_wmask),\n    \n    .plic_icb_rsp_valid     (plic_icb_rsp_valid),\n    .plic_icb_rsp_ready     (plic_icb_rsp_ready),\n    .plic_icb_rsp_err       (plic_icb_rsp_err  ),\n    .plic_icb_rsp_rdata     (plic_icb_rsp_rdata),\n\n    .clint_icb_cmd_valid     (clint_icb_cmd_valid),\n    .clint_icb_cmd_ready     (clint_icb_cmd_ready),\n    .clint_icb_cmd_addr      (clint_icb_cmd_addr ),\n    .clint_icb_cmd_read      (clint_icb_cmd_read ),\n    .clint_icb_cmd_wdata     (clint_icb_cmd_wdata),\n    .clint_icb_cmd_wmask     (clint_icb_cmd_wmask),\n    \n    .clint_icb_rsp_valid     (clint_icb_rsp_valid),\n    .clint_icb_rsp_ready     (clint_icb_rsp_ready),\n    .clint_icb_rsp_err       (clint_icb_rsp_err  ),\n    .clint_icb_rsp_rdata     (clint_icb_rsp_rdata),\n\n    .fio_icb_cmd_valid     (fio_icb_cmd_valid),\n    .fio_icb_cmd_ready     (fio_icb_cmd_ready),\n    .fio_icb_cmd_addr      (fio_icb_cmd_addr ),\n    .fio_icb_cmd_read      (fio_icb_cmd_read ),\n    .fio_icb_cmd_wdata     (fio_icb_cmd_wdata),\n    .fio_icb_cmd_wmask     (fio_icb_cmd_wmask),\n    \n    .fio_icb_rsp_valid     (fio_icb_rsp_valid),\n    .fio_icb_rsp_ready     (fio_icb_rsp_ready),\n    .fio_icb_rsp_err       (fio_icb_rsp_err  ),\n    .fio_icb_rsp_rdata     (fio_icb_rsp_rdata),\n\n    .mem_icb_cmd_valid  (mem_icb_cmd_valid),\n    .mem_icb_cmd_ready  (mem_icb_cmd_ready),\n    .mem_icb_cmd_addr   (mem_icb_cmd_addr ),\n    .mem_icb_cmd_read   (mem_icb_cmd_read ),\n    .mem_icb_cmd_wdata  (mem_icb_cmd_wdata),\n    .mem_icb_cmd_wmask  (mem_icb_cmd_wmask),\n    \n    .mem_icb_rsp_valid  (mem_icb_rsp_valid),\n    .mem_icb_rsp_ready  (mem_icb_rsp_ready),\n    .mem_icb_rsp_err    (mem_icb_rsp_err  ),\n    .mem_icb_rsp_rdata  (mem_icb_rsp_rdata),\n\n    .test_mode     (test_mode), \n    .clk           (hfclk  ),\n    .rst_n         (core_rst_n) \n  );\n\n  wire  qspi0_irq; \n  wire  qspi1_irq;\n  wire  qspi2_irq;\n\n  wire  uart0_irq;                \n  wire  uart1_irq;                \n\n  wire  pwm0_irq_0;\n  wire  pwm0_irq_1;\n  wire  pwm0_irq_2;\n  wire  pwm0_irq_3;\n\n  wire  pwm1_irq_0;\n  wire  pwm1_irq_1;\n  wire  pwm1_irq_2;\n  wire  pwm1_irq_3;\n\n  wire  pwm2_irq_0;\n  wire  pwm2_irq_1;\n  wire  pwm2_irq_2;\n  wire  pwm2_irq_3;\n\n  wire  i2c_mst_irq;\n\n  wire  gpio_irq_0;\n  wire  gpio_irq_1;\n  wire  gpio_irq_2;\n  wire  gpio_irq_3;\n  wire  gpio_irq_4;\n  wire  gpio_irq_5;\n  wire  gpio_irq_6;\n  wire  gpio_irq_7;\n  wire  gpio_irq_8;\n  wire  gpio_irq_9;\n  wire  gpio_irq_10;\n  wire  gpio_irq_11;\n  wire  gpio_irq_12;\n  wire  gpio_irq_13;\n  wire  gpio_irq_14;\n  wire  gpio_irq_15;\n  wire  gpio_irq_16;\n  wire  gpio_irq_17;\n  wire  gpio_irq_18;\n  wire  gpio_irq_19;\n  wire  gpio_irq_20;\n  wire  gpio_irq_21;\n  wire  gpio_irq_22;\n  wire  gpio_irq_23;\n  wire  gpio_irq_24;\n  wire  gpio_irq_25;\n  wire  gpio_irq_26;\n  wire  gpio_irq_27;\n  wire  gpio_irq_28;\n  wire  gpio_irq_29;\n  wire  gpio_irq_30;\n  wire  gpio_irq_31;\n\n\n e203_subsys_plic u_e203_subsys_plic(\n    .plic_icb_cmd_valid     (plic_icb_cmd_valid),\n    .plic_icb_cmd_ready     (plic_icb_cmd_ready),\n    .plic_icb_cmd_addr      (plic_icb_cmd_addr ),\n    .plic_icb_cmd_read      (plic_icb_cmd_read ),\n    .plic_icb_cmd_wdata     (plic_icb_cmd_wdata),\n    .plic_icb_cmd_wmask     (plic_icb_cmd_wmask),\n    \n    .plic_icb_rsp_valid     (plic_icb_rsp_valid),\n    .plic_icb_rsp_ready     (plic_icb_rsp_ready),\n    .plic_icb_rsp_err       (plic_icb_rsp_err  ),\n    .plic_icb_rsp_rdata     (plic_icb_rsp_rdata),\n\n    .plic_ext_irq           (plic_ext_irq),\n\n    .wdg_irq_a              (aon_wdg_irq_a),\n    .rtc_irq_a              (aon_rtc_irq_a),\n\n    .qspi0_irq              (qspi0_irq  ), \n    .qspi1_irq              (qspi1_irq  ),\n    .qspi2_irq              (qspi2_irq  ),\n                                        \n    .uart0_irq              (uart0_irq  ),                \n    .uart1_irq              (uart1_irq  ),                \n                                        \n    .pwm0_irq_0             (pwm0_irq_0 ),\n    .pwm0_irq_1             (pwm0_irq_1 ),\n    .pwm0_irq_2             (pwm0_irq_2 ),\n    .pwm0_irq_3             (pwm0_irq_3 ),\n                                        \n    .pwm1_irq_0             (pwm1_irq_0 ),\n    .pwm1_irq_1             (pwm1_irq_1 ),\n    .pwm1_irq_2             (pwm1_irq_2 ),\n    .pwm1_irq_3             (pwm1_irq_3 ),\n                                        \n    .pwm2_irq_0             (pwm2_irq_0 ),\n    .pwm2_irq_1             (pwm2_irq_1 ),\n    .pwm2_irq_2             (pwm2_irq_2 ),\n    .pwm2_irq_3             (pwm2_irq_3 ),\n                                        \n    .i2c_mst_irq            (i2c_mst_irq),\n\n    .gpio_irq_0             (gpio_irq_0 ),\n    .gpio_irq_1             (gpio_irq_1 ),\n    .gpio_irq_2             (gpio_irq_2 ),\n    .gpio_irq_3             (gpio_irq_3 ),\n    .gpio_irq_4             (gpio_irq_4 ),\n    .gpio_irq_5             (gpio_irq_5 ),\n    .gpio_irq_6             (gpio_irq_6 ),\n    .gpio_irq_7             (gpio_irq_7 ),\n    .gpio_irq_8             (gpio_irq_8 ),\n    .gpio_irq_9             (gpio_irq_9 ),\n    .gpio_irq_10            (gpio_irq_10),\n    .gpio_irq_11            (gpio_irq_11),\n    .gpio_irq_12            (gpio_irq_12),\n    .gpio_irq_13            (gpio_irq_13),\n    .gpio_irq_14            (gpio_irq_14),\n    .gpio_irq_15            (gpio_irq_15),\n    .gpio_irq_16            (gpio_irq_16),\n    .gpio_irq_17            (gpio_irq_17),\n    .gpio_irq_18            (gpio_irq_18),\n    .gpio_irq_19            (gpio_irq_19),\n    .gpio_irq_20            (gpio_irq_20),\n    .gpio_irq_21            (gpio_irq_21),\n    .gpio_irq_22            (gpio_irq_22),\n    .gpio_irq_23            (gpio_irq_23),\n    .gpio_irq_24            (gpio_irq_24),\n    .gpio_irq_25            (gpio_irq_25),\n    .gpio_irq_26            (gpio_irq_26),\n    .gpio_irq_27            (gpio_irq_27),\n    .gpio_irq_28            (gpio_irq_28),\n    .gpio_irq_29            (gpio_irq_29),\n    .gpio_irq_30            (gpio_irq_30),\n    .gpio_irq_31            (gpio_irq_31),\n\n    .clk                    (hfclk  ),\n    .rst_n                  (per_rst_n) \n  );\n\ne203_subsys_clint u_e203_subsys_clint(\n    .tm_stop                 (tm_stop),\n\n    .clint_icb_cmd_valid     (clint_icb_cmd_valid),\n    .clint_icb_cmd_ready     (clint_icb_cmd_ready),\n    .clint_icb_cmd_addr      (clint_icb_cmd_addr ),\n    .clint_icb_cmd_read      (clint_icb_cmd_read ),\n    .clint_icb_cmd_wdata     (clint_icb_cmd_wdata),\n    .clint_icb_cmd_wmask     (clint_icb_cmd_wmask),\n    \n    .clint_icb_rsp_valid     (clint_icb_rsp_valid),\n    .clint_icb_rsp_ready     (clint_icb_rsp_ready),\n    .clint_icb_rsp_err       (clint_icb_rsp_err  ),\n    .clint_icb_rsp_rdata     (clint_icb_rsp_rdata),\n\n    .clint_tmr_irq           (clint_tmr_irq),\n    .clint_sft_irq           (clint_sft_irq),\n\n    .aon_rtcToggle_a         (aon_rtcToggle_a),\n\n    .clk           (hfclk  ),\n    .rst_n         (per_rst_n) \n  );\n\n  \n  wire                     qspi0_ro_icb_cmd_valid;\n  wire                     qspi0_ro_icb_cmd_ready;\n  wire [32-1:0]            qspi0_ro_icb_cmd_addr; \n  wire                     qspi0_ro_icb_cmd_read; \n  wire [32-1:0]            qspi0_ro_icb_cmd_wdata;\n  \n  wire                     qspi0_ro_icb_rsp_valid;\n  wire                     qspi0_ro_icb_rsp_ready;\n  wire [32-1:0]            qspi0_ro_icb_rsp_rdata;\n\n  \n  wire                     otp_ro_icb_cmd_valid;\n  wire                     otp_ro_icb_cmd_ready;\n  wire [32-1:0]            otp_ro_icb_cmd_addr; \n  wire                     otp_ro_icb_cmd_read; \n  wire [32-1:0]            otp_ro_icb_cmd_wdata;\n \n  wire                     otp_ro_icb_rsp_valid;\n  wire                     otp_ro_icb_rsp_ready;\n  wire [32-1:0]            otp_ro_icb_rsp_rdata;\n\n\n  e203_subsys_perips u_e203_subsys_perips (\n    .pllbypass   (pllbypass   ),\n    .pll_RESET   (pll_RESET   ),\n    .pll_ASLEEP  (pll_ASLEEP  ),\n    .pll_OD(pll_OD),\n    .pll_M (pll_M ),\n    .pll_N (pll_N ),\n    .plloutdivby1(plloutdivby1),\n    .plloutdiv   (plloutdiv   ), \n\n    .hfxoscen    (hfxoscen),\n    .ppi_icb_cmd_valid     (ppi_icb_cmd_valid),\n    .ppi_icb_cmd_ready     (ppi_icb_cmd_ready),\n    .ppi_icb_cmd_addr      (ppi_icb_cmd_addr ),\n    .ppi_icb_cmd_read      (ppi_icb_cmd_read ),\n    .ppi_icb_cmd_wdata     (ppi_icb_cmd_wdata),\n    .ppi_icb_cmd_wmask     (ppi_icb_cmd_wmask),\n    \n    .ppi_icb_rsp_valid     (ppi_icb_rsp_valid),\n    .ppi_icb_rsp_ready     (ppi_icb_rsp_ready),\n    .ppi_icb_rsp_err       (ppi_icb_rsp_err  ),\n    .ppi_icb_rsp_rdata     (ppi_icb_rsp_rdata),\n\n  \n    .sysper_icb_cmd_valid  (sysper_icb_cmd_valid),\n    .sysper_icb_cmd_ready  (sysper_icb_cmd_ready),\n    .sysper_icb_cmd_addr   (sysper_icb_cmd_addr ), \n    .sysper_icb_cmd_read   (sysper_icb_cmd_read ), \n    .sysper_icb_cmd_wdata  (sysper_icb_cmd_wdata),\n    .sysper_icb_cmd_wmask  (sysper_icb_cmd_wmask),\n                                                \n    .sysper_icb_rsp_valid  (sysper_icb_rsp_valid),\n    .sysper_icb_rsp_ready  (sysper_icb_rsp_ready),\n    .sysper_icb_rsp_err    (sysper_icb_rsp_err  ),\n    .sysper_icb_rsp_rdata  (sysper_icb_rsp_rdata),\n\n    .aon_icb_cmd_valid     (aon_icb_cmd_valid),\n    .aon_icb_cmd_ready     (aon_icb_cmd_ready),\n    .aon_icb_cmd_addr      (aon_icb_cmd_addr ), \n    .aon_icb_cmd_read      (aon_icb_cmd_read ), \n    .aon_icb_cmd_wdata     (aon_icb_cmd_wdata),\n                                             \n    .aon_icb_rsp_valid     (aon_icb_rsp_valid),\n    .aon_icb_rsp_ready     (aon_icb_rsp_ready),\n    .aon_icb_rsp_err       (aon_icb_rsp_err  ),\n    .aon_icb_rsp_rdata     (aon_icb_rsp_rdata),\n\n`ifdef FAKE_FLASH_MODEL//{\n    .qspi0_ro_icb_cmd_valid  (1'b0), \n    .qspi0_ro_icb_cmd_ready  (),\n    .qspi0_ro_icb_cmd_addr   (32'b0 ),\n    .qspi0_ro_icb_cmd_read   (1'b0 ),\n    .qspi0_ro_icb_cmd_wdata  (32'b0),\n                             \n    .qspi0_ro_icb_rsp_valid  (),\n    .qspi0_ro_icb_rsp_ready  (1'b0),\n    .qspi0_ro_icb_rsp_rdata  (),\n`else//}{\n    .qspi0_ro_icb_cmd_valid  (qspi0_ro_icb_cmd_valid), \n    .qspi0_ro_icb_cmd_ready  (qspi0_ro_icb_cmd_ready),\n    .qspi0_ro_icb_cmd_addr   (qspi0_ro_icb_cmd_addr ),\n    .qspi0_ro_icb_cmd_read   (qspi0_ro_icb_cmd_read ),\n    .qspi0_ro_icb_cmd_wdata  (qspi0_ro_icb_cmd_wdata),\n                             \n    .qspi0_ro_icb_rsp_valid  (qspi0_ro_icb_rsp_valid),\n    .qspi0_ro_icb_rsp_ready  (qspi0_ro_icb_rsp_ready),\n    .qspi0_ro_icb_rsp_rdata  (qspi0_ro_icb_rsp_rdata),\n`endif//}\n                           \n    .otp_ro_icb_cmd_valid    (otp_ro_icb_cmd_valid  ),\n    .otp_ro_icb_cmd_ready    (otp_ro_icb_cmd_ready  ),\n    .otp_ro_icb_cmd_addr     (otp_ro_icb_cmd_addr   ),\n    .otp_ro_icb_cmd_read     (otp_ro_icb_cmd_read   ),\n    .otp_ro_icb_cmd_wdata    (otp_ro_icb_cmd_wdata  ),\n                          \n    .otp_ro_icb_rsp_valid    (otp_ro_icb_rsp_valid  ),\n    .otp_ro_icb_rsp_ready    (otp_ro_icb_rsp_ready  ),\n    .otp_ro_icb_rsp_rdata    (otp_ro_icb_rsp_rdata  ),\n\n    .io_pads_gpio_0_i_ival      (io_pads_gpio_0_i_ival),\n    .io_pads_gpio_0_o_oval      (gpio_0_o_oval),\n    .io_pads_gpio_0_o_oe        (gpio_0_o_oe),\n    .io_pads_gpio_0_o_ie        (gpio_0_o_ie),\n    .io_pads_gpio_0_o_pue       (gpio_0_o_pue),\n    .io_pads_gpio_0_o_ds        (gpio_0_o_ds),\n    .io_pads_gpio_1_i_ival      (io_pads_gpio_1_i_ival),\n    .io_pads_gpio_1_o_oval      (gpio_1_o_oval),\n    .io_pads_gpio_1_o_oe        (gpio_1_o_oe),\n    .io_pads_gpio_1_o_ie        (gpio_1_o_ie),\n    .io_pads_gpio_1_o_pue       (gpio_1_o_pue),\n    .io_pads_gpio_1_o_ds        (gpio_1_o_ds),\n    .io_pads_gpio_2_i_ival      (io_pads_gpio_2_i_ival),\n    .io_pads_gpio_2_o_oval      (gpio_2_o_oval),\n    .io_pads_gpio_2_o_oe        (gpio_2_o_oe),\n    .io_pads_gpio_2_o_ie        (gpio_2_o_ie),\n    .io_pads_gpio_2_o_pue       (gpio_2_o_pue),\n    .io_pads_gpio_2_o_ds        (gpio_2_o_ds),\n    .io_pads_gpio_3_i_ival      (io_pads_gpio_3_i_ival),\n    .io_pads_gpio_3_o_oval      (gpio_3_o_oval),\n    .io_pads_gpio_3_o_oe        (gpio_3_o_oe),\n    .io_pads_gpio_3_o_ie        (gpio_3_o_ie),\n    .io_pads_gpio_3_o_pue       (gpio_3_o_pue),\n    .io_pads_gpio_3_o_ds        (gpio_3_o_ds),\n    .io_pads_gpio_4_i_ival      (io_pads_gpio_4_i_ival),\n    .io_pads_gpio_4_o_oval      (gpio_4_o_oval),\n    .io_pads_gpio_4_o_oe        (gpio_4_o_oe),\n    .io_pads_gpio_4_o_ie        (gpio_4_o_ie),\n    .io_pads_gpio_4_o_pue       (gpio_4_o_pue),\n    .io_pads_gpio_4_o_ds        (gpio_4_o_ds),\n    .io_pads_gpio_5_i_ival      (io_pads_gpio_5_i_ival),\n    .io_pads_gpio_5_o_oval      (gpio_5_o_oval),\n    .io_pads_gpio_5_o_oe        (gpio_5_o_oe),\n    .io_pads_gpio_5_o_ie        (gpio_5_o_ie),\n    .io_pads_gpio_5_o_pue       (gpio_5_o_pue),\n    .io_pads_gpio_5_o_ds        (gpio_5_o_ds),\n    .io_pads_gpio_6_i_ival      (io_pads_gpio_6_i_ival),\n    .io_pads_gpio_6_o_oval      (gpio_6_o_oval),\n    .io_pads_gpio_6_o_oe        (gpio_6_o_oe),\n    .io_pads_gpio_6_o_ie        (gpio_6_o_ie),\n    .io_pads_gpio_6_o_pue       (gpio_6_o_pue),\n    .io_pads_gpio_6_o_ds        (gpio_6_o_ds),\n    .io_pads_gpio_7_i_ival      (io_pads_gpio_7_i_ival),\n    .io_pads_gpio_7_o_oval      (gpio_7_o_oval),\n    .io_pads_gpio_7_o_oe        (gpio_7_o_oe),\n    .io_pads_gpio_7_o_ie        (gpio_7_o_ie),\n    .io_pads_gpio_7_o_pue       (gpio_7_o_pue),\n    .io_pads_gpio_7_o_ds        (gpio_7_o_ds),\n    .io_pads_gpio_8_i_ival      (io_pads_gpio_8_i_ival),\n    .io_pads_gpio_8_o_oval      (gpio_8_o_oval),\n    .io_pads_gpio_8_o_oe        (gpio_8_o_oe),\n    .io_pads_gpio_8_o_ie        (gpio_8_o_ie),\n    .io_pads_gpio_8_o_pue       (gpio_8_o_pue),\n    .io_pads_gpio_8_o_ds        (gpio_8_o_ds),\n    .io_pads_gpio_9_i_ival      (io_pads_gpio_9_i_ival),\n    .io_pads_gpio_9_o_oval      (gpio_9_o_oval),\n    .io_pads_gpio_9_o_oe        (gpio_9_o_oe),\n    .io_pads_gpio_9_o_ie        (gpio_9_o_ie),\n    .io_pads_gpio_9_o_pue       (gpio_9_o_pue),\n    .io_pads_gpio_9_o_ds        (gpio_9_o_ds),\n    .io_pads_gpio_10_i_ival     (io_pads_gpio_10_i_ival),\n    .io_pads_gpio_10_o_oval     (gpio_10_o_oval),\n    .io_pads_gpio_10_o_oe       (gpio_10_o_oe),\n    .io_pads_gpio_10_o_ie       (gpio_10_o_ie),\n    .io_pads_gpio_10_o_pue      (gpio_10_o_pue),\n    .io_pads_gpio_10_o_ds       (gpio_10_o_ds),\n    .io_pads_gpio_11_i_ival     (io_pads_gpio_11_i_ival),\n    .io_pads_gpio_11_o_oval     (gpio_11_o_oval),\n    .io_pads_gpio_11_o_oe       (gpio_11_o_oe),\n    .io_pads_gpio_11_o_ie       (gpio_11_o_ie),\n    .io_pads_gpio_11_o_pue      (gpio_11_o_pue),\n    .io_pads_gpio_11_o_ds       (gpio_11_o_ds),\n    .io_pads_gpio_12_i_ival     (io_pads_gpio_12_i_ival),\n    .io_pads_gpio_12_o_oval     (gpio_12_o_oval),\n    .io_pads_gpio_12_o_oe       (gpio_12_o_oe),\n    .io_pads_gpio_12_o_ie       (gpio_12_o_ie),\n    .io_pads_gpio_12_o_pue      (gpio_12_o_pue),\n    .io_pads_gpio_12_o_ds       (gpio_12_o_ds),\n    .io_pads_gpio_13_i_ival     (io_pads_gpio_13_i_ival),\n    .io_pads_gpio_13_o_oval     (gpio_13_o_oval),\n    .io_pads_gpio_13_o_oe       (gpio_13_o_oe),\n    .io_pads_gpio_13_o_ie       (gpio_13_o_ie),\n    .io_pads_gpio_13_o_pue      (gpio_13_o_pue),\n    .io_pads_gpio_13_o_ds       (gpio_13_o_ds),\n    .io_pads_gpio_14_i_ival     (io_pads_gpio_14_i_ival),\n    .io_pads_gpio_14_o_oval     (gpio_14_o_oval),\n    .io_pads_gpio_14_o_oe       (gpio_14_o_oe),\n    .io_pads_gpio_14_o_ie       (gpio_14_o_ie),\n    .io_pads_gpio_14_o_pue      (gpio_14_o_pue),\n    .io_pads_gpio_14_o_ds       (gpio_14_o_ds),\n    .io_pads_gpio_15_i_ival     (io_pads_gpio_15_i_ival),\n    .io_pads_gpio_15_o_oval     (gpio_15_o_oval),\n    .io_pads_gpio_15_o_oe       (gpio_15_o_oe),\n    .io_pads_gpio_15_o_ie       (gpio_15_o_ie),\n    .io_pads_gpio_15_o_pue      (gpio_15_o_pue),\n    .io_pads_gpio_15_o_ds       (gpio_15_o_ds),\n    .io_pads_gpio_16_i_ival     (io_pads_gpio_16_i_ival),\n    .io_pads_gpio_16_o_oval     (gpio_16_o_oval),\n    .io_pads_gpio_16_o_oe       (gpio_16_o_oe),\n    .io_pads_gpio_16_o_ie       (gpio_16_o_ie),\n    .io_pads_gpio_16_o_pue      (gpio_16_o_pue),\n    .io_pads_gpio_16_o_ds       (gpio_16_o_ds),\n    .io_pads_gpio_17_i_ival     (io_pads_gpio_17_i_ival),\n    .io_pads_gpio_17_o_oval     (gpio_17_o_oval),\n    .io_pads_gpio_17_o_oe       (gpio_17_o_oe),\n    .io_pads_gpio_17_o_ie       (gpio_17_o_ie),\n    .io_pads_gpio_17_o_pue      (gpio_17_o_pue),\n    .io_pads_gpio_17_o_ds       (gpio_17_o_ds),\n    .io_pads_gpio_18_i_ival     (io_pads_gpio_18_i_ival),\n    .io_pads_gpio_18_o_oval     (gpio_18_o_oval),\n    .io_pads_gpio_18_o_oe       (gpio_18_o_oe),\n    .io_pads_gpio_18_o_ie       (gpio_18_o_ie),\n    .io_pads_gpio_18_o_pue      (gpio_18_o_pue),\n    .io_pads_gpio_18_o_ds       (gpio_18_o_ds),\n    .io_pads_gpio_19_i_ival     (io_pads_gpio_19_i_ival),\n    .io_pads_gpio_19_o_oval     (gpio_19_o_oval),\n    .io_pads_gpio_19_o_oe       (gpio_19_o_oe),\n    .io_pads_gpio_19_o_ie       (gpio_19_o_ie),\n    .io_pads_gpio_19_o_pue      (gpio_19_o_pue),\n    .io_pads_gpio_19_o_ds       (gpio_19_o_ds),\n    .io_pads_gpio_20_i_ival     (io_pads_gpio_20_i_ival),\n    .io_pads_gpio_20_o_oval     (gpio_20_o_oval),\n    .io_pads_gpio_20_o_oe       (gpio_20_o_oe),\n    .io_pads_gpio_20_o_ie       (gpio_20_o_ie),\n    .io_pads_gpio_20_o_pue      (gpio_20_o_pue),\n    .io_pads_gpio_20_o_ds       (gpio_20_o_ds),\n    .io_pads_gpio_21_i_ival     (io_pads_gpio_21_i_ival),\n    .io_pads_gpio_21_o_oval     (gpio_21_o_oval),\n    .io_pads_gpio_21_o_oe       (gpio_21_o_oe),\n    .io_pads_gpio_21_o_ie       (gpio_21_o_ie),\n    .io_pads_gpio_21_o_pue      (gpio_21_o_pue),\n    .io_pads_gpio_21_o_ds       (gpio_21_o_ds),\n    .io_pads_gpio_22_i_ival     (io_pads_gpio_22_i_ival),\n    .io_pads_gpio_22_o_oval     (gpio_22_o_oval),\n    .io_pads_gpio_22_o_oe       (gpio_22_o_oe),\n    .io_pads_gpio_22_o_ie       (gpio_22_o_ie),\n    .io_pads_gpio_22_o_pue      (gpio_22_o_pue),\n    .io_pads_gpio_22_o_ds       (gpio_22_o_ds),\n    .io_pads_gpio_23_i_ival     (io_pads_gpio_23_i_ival),\n    .io_pads_gpio_23_o_oval     (gpio_23_o_oval),\n    .io_pads_gpio_23_o_oe       (gpio_23_o_oe),\n    .io_pads_gpio_23_o_ie       (gpio_23_o_ie),\n    .io_pads_gpio_23_o_pue      (gpio_23_o_pue),\n    .io_pads_gpio_23_o_ds       (gpio_23_o_ds),\n    .io_pads_gpio_24_i_ival     (io_pads_gpio_24_i_ival),\n    .io_pads_gpio_24_o_oval     (gpio_24_o_oval),\n    .io_pads_gpio_24_o_oe       (gpio_24_o_oe),\n    .io_pads_gpio_24_o_ie       (gpio_24_o_ie),\n    .io_pads_gpio_24_o_pue      (gpio_24_o_pue),\n    .io_pads_gpio_24_o_ds       (gpio_24_o_ds),\n    .io_pads_gpio_25_i_ival     (io_pads_gpio_25_i_ival),\n    .io_pads_gpio_25_o_oval     (gpio_25_o_oval),\n    .io_pads_gpio_25_o_oe       (gpio_25_o_oe),\n    .io_pads_gpio_25_o_ie       (gpio_25_o_ie),\n    .io_pads_gpio_25_o_pue      (gpio_25_o_pue),\n    .io_pads_gpio_25_o_ds       (gpio_25_o_ds),\n    .io_pads_gpio_26_i_ival     (io_pads_gpio_26_i_ival),\n    .io_pads_gpio_26_o_oval     (gpio_26_o_oval),\n    .io_pads_gpio_26_o_oe       (gpio_26_o_oe),\n    .io_pads_gpio_26_o_ie       (gpio_26_o_ie),\n    .io_pads_gpio_26_o_pue      (gpio_26_o_pue),\n    .io_pads_gpio_26_o_ds       (gpio_26_o_ds),\n    .io_pads_gpio_27_i_ival     (io_pads_gpio_27_i_ival),\n    .io_pads_gpio_27_o_oval     (gpio_27_o_oval),\n    .io_pads_gpio_27_o_oe       (gpio_27_o_oe),\n    .io_pads_gpio_27_o_ie       (gpio_27_o_ie),\n    .io_pads_gpio_27_o_pue      (gpio_27_"}
{"text": "o_pue),\n    .io_pads_gpio_27_o_ds       (gpio_27_o_ds),\n    .io_pads_gpio_28_i_ival     (io_pads_gpio_28_i_ival),\n    .io_pads_gpio_28_o_oval     (gpio_28_o_oval),\n    .io_pads_gpio_28_o_oe       (gpio_28_o_oe),\n    .io_pads_gpio_28_o_ie       (gpio_28_o_ie),\n    .io_pads_gpio_28_o_pue      (gpio_28_o_pue),\n    .io_pads_gpio_28_o_ds       (gpio_28_o_ds),\n    .io_pads_gpio_29_i_ival     (io_pads_gpio_29_i_ival),\n    .io_pads_gpio_29_o_oval     (gpio_29_o_oval),\n    .io_pads_gpio_29_o_oe       (gpio_29_o_oe),\n    .io_pads_gpio_29_o_ie       (gpio_29_o_ie),\n    .io_pads_gpio_29_o_pue      (gpio_29_o_pue),\n    .io_pads_gpio_29_o_ds       (gpio_29_o_ds),\n    .io_pads_gpio_30_i_ival     (io_pads_gpio_30_i_ival),\n    .io_pads_gpio_30_o_oval     (gpio_30_o_oval),\n    .io_pads_gpio_30_o_oe       (gpio_30_o_oe),\n    .io_pads_gpio_30_o_ie       (gpio_30_o_ie),\n    .io_pads_gpio_30_o_pue      (gpio_30_o_pue),\n    .io_pads_gpio_30_o_ds       (gpio_30_o_ds),\n    .io_pads_gpio_31_i_ival     (io_pads_gpio_31_i_ival),\n    .io_pads_gpio_31_o_oval     (gpio_31_o_oval),\n    .io_pads_gpio_31_o_oe       (gpio_31_o_oe),\n    .io_pads_gpio_31_o_ie       (gpio_31_o_ie),\n    .io_pads_gpio_31_o_pue      (gpio_31_o_pue),\n    .io_pads_gpio_31_o_ds       (gpio_31_o_ds),\n\n    .io_pads_qspi_sck_i_ival    (io_pads_qspi_sck_i_ival    ),\n    .io_pads_qspi_sck_o_oval    (io_pads_qspi_sck_o_oval    ),\n    .io_pads_qspi_sck_o_oe      (io_pads_qspi_sck_o_oe      ),\n    .io_pads_qspi_sck_o_ie      (io_pads_qspi_sck_o_ie      ),\n    .io_pads_qspi_sck_o_pue     (io_pads_qspi_sck_o_pue     ),\n    .io_pads_qspi_sck_o_ds      (io_pads_qspi_sck_o_ds      ),\n    .io_pads_qspi_dq_0_i_ival   (io_pads_qspi_dq_0_i_ival   ),\n    .io_pads_qspi_dq_0_o_oval   (io_pads_qspi_dq_0_o_oval   ),\n    .io_pads_qspi_dq_0_o_oe     (io_pads_qspi_dq_0_o_oe     ),\n    .io_pads_qspi_dq_0_o_ie     (io_pads_qspi_dq_0_o_ie     ),\n    .io_pads_qspi_dq_0_o_pue    (io_pads_qspi_dq_0_o_pue    ),\n    .io_pads_qspi_dq_0_o_ds     (io_pads_qspi_dq_0_o_ds     ),\n    .io_pads_qspi_dq_1_i_ival   (io_pads_qspi_dq_1_i_ival   ),\n    .io_pads_qspi_dq_1_o_oval   (io_pads_qspi_dq_1_o_oval   ),\n    .io_pads_qspi_dq_1_o_oe     (io_pads_qspi_dq_1_o_oe     ),\n    .io_pads_qspi_dq_1_o_ie     (io_pads_qspi_dq_1_o_ie     ),\n    .io_pads_qspi_dq_1_o_pue    (io_pads_qspi_dq_1_o_pue    ),\n    .io_pads_qspi_dq_1_o_ds     (io_pads_qspi_dq_1_o_ds     ),\n    .io_pads_qspi_dq_2_i_ival   (io_pads_qspi_dq_2_i_ival   ),\n    .io_pads_qspi_dq_2_o_oval   (io_pads_qspi_dq_2_o_oval   ),\n    .io_pads_qspi_dq_2_o_oe     (io_pads_qspi_dq_2_o_oe     ),\n    .io_pads_qspi_dq_2_o_ie     (io_pads_qspi_dq_2_o_ie     ),\n    .io_pads_qspi_dq_2_o_pue    (io_pads_qspi_dq_2_o_pue    ),\n    .io_pads_qspi_dq_2_o_ds     (io_pads_qspi_dq_2_o_ds     ),\n    .io_pads_qspi_dq_3_i_ival   (io_pads_qspi_dq_3_i_ival   ),\n    .io_pads_qspi_dq_3_o_oval   (io_pads_qspi_dq_3_o_oval   ),\n    .io_pads_qspi_dq_3_o_oe     (io_pads_qspi_dq_3_o_oe     ),\n    .io_pads_qspi_dq_3_o_ie     (io_pads_qspi_dq_3_o_ie     ),\n    .io_pads_qspi_dq_3_o_pue    (io_pads_qspi_dq_3_o_pue    ),\n    .io_pads_qspi_dq_3_o_ds     (io_pads_qspi_dq_3_o_ds     ),\n    .io_pads_qspi_cs_0_i_ival   (io_pads_qspi_cs_0_i_ival   ),\n    .io_pads_qspi_cs_0_o_oval   (io_pads_qspi_cs_0_o_oval   ),\n    .io_pads_qspi_cs_0_o_oe     (io_pads_qspi_cs_0_o_oe     ),\n    .io_pads_qspi_cs_0_o_ie     (io_pads_qspi_cs_0_o_ie     ),\n    .io_pads_qspi_cs_0_o_pue    (io_pads_qspi_cs_0_o_pue    ),\n    .io_pads_qspi_cs_0_o_ds     (io_pads_qspi_cs_0_o_ds     ),\n\n    .qspi0_irq              (qspi0_irq  ), \n    .qspi1_irq              (qspi1_irq  ),\n    .qspi2_irq              (qspi2_irq  ),\n                                        \n    .uart0_irq              (uart0_irq  ),                \n    .uart1_irq              (uart1_irq  ),                \n                                        \n    .pwm0_irq_0             (pwm0_irq_0 ),\n    .pwm0_irq_1             (pwm0_irq_1 ),\n    .pwm0_irq_2             (pwm0_irq_2 ),\n    .pwm0_irq_3             (pwm0_irq_3 ),\n                                        \n    .pwm1_irq_0             (pwm1_irq_0 ),\n    .pwm1_irq_1             (pwm1_irq_1 ),\n    .pwm1_irq_2             (pwm1_irq_2 ),\n    .pwm1_irq_3             (pwm1_irq_3 ),\n                                        \n    .pwm2_irq_0             (pwm2_irq_0 ),\n    .pwm2_irq_1             (pwm2_irq_1 ),\n    .pwm2_irq_2             (pwm2_irq_2 ),\n    .pwm2_irq_3             (pwm2_irq_3 ),\n                                        \n    .i2c_mst_irq            (i2c_mst_irq),\n\n    .gpio_irq_0             (gpio_irq_0 ),\n    .gpio_irq_1             (gpio_irq_1 ),\n    .gpio_irq_2             (gpio_irq_2 ),\n    .gpio_irq_3             (gpio_irq_3 ),\n    .gpio_irq_4             (gpio_irq_4 ),\n    .gpio_irq_5             (gpio_irq_5 ),\n    .gpio_irq_6             (gpio_irq_6 ),\n    .gpio_irq_7             (gpio_irq_7 ),\n    .gpio_irq_8             (gpio_irq_8 ),\n    .gpio_irq_9             (gpio_irq_9 ),\n    .gpio_irq_10            (gpio_irq_10),\n    .gpio_irq_11            (gpio_irq_11),\n    .gpio_irq_12            (gpio_irq_12),\n    .gpio_irq_13            (gpio_irq_13),\n    .gpio_irq_14            (gpio_irq_14),\n    .gpio_irq_15            (gpio_irq_15),\n    .gpio_irq_16            (gpio_irq_16),\n    .gpio_irq_17            (gpio_irq_17),\n    .gpio_irq_18            (gpio_irq_18),\n    .gpio_irq_19            (gpio_irq_19),\n    .gpio_irq_20            (gpio_irq_20),\n    .gpio_irq_21            (gpio_irq_21),\n    .gpio_irq_22            (gpio_irq_22),\n    .gpio_irq_23            (gpio_irq_23),\n    .gpio_irq_24            (gpio_irq_24),\n    .gpio_irq_25            (gpio_irq_25),\n    .gpio_irq_26            (gpio_irq_26),\n    .gpio_irq_27            (gpio_irq_27),\n    .gpio_irq_28            (gpio_irq_28),\n    .gpio_irq_29            (gpio_irq_29),\n    .gpio_irq_30            (gpio_irq_30),\n    .gpio_irq_31            (gpio_irq_31),\n\n    .clk           (hfclk  ),\n    .bus_rst_n     (bus_rst_n), \n    .rst_n         (per_rst_n) \n  );\n\ne203_subsys_mems u_e203_subsys_mems(\n\n    .mem_icb_cmd_valid  (mem_icb_cmd_valid),\n    .mem_icb_cmd_ready  (mem_icb_cmd_ready),\n    .mem_icb_cmd_addr   (mem_icb_cmd_addr ),\n    .mem_icb_cmd_read   (mem_icb_cmd_read ),\n    .mem_icb_cmd_wdata  (mem_icb_cmd_wdata),\n    .mem_icb_cmd_wmask  (mem_icb_cmd_wmask),\n    \n    .mem_icb_rsp_valid  (mem_icb_rsp_valid),\n    .mem_icb_rsp_ready  (mem_icb_rsp_ready),\n    .mem_icb_rsp_err    (mem_icb_rsp_err  ),\n    .mem_icb_rsp_rdata  (mem_icb_rsp_rdata),\n\n    .sysmem_icb_cmd_valid  (sysmem_icb_cmd_valid),\n    .sysmem_icb_cmd_ready  (sysmem_icb_cmd_ready),\n    .sysmem_icb_cmd_addr   (sysmem_icb_cmd_addr ),\n    .sysmem_icb_cmd_read   (sysmem_icb_cmd_read ),\n    .sysmem_icb_cmd_wdata  (sysmem_icb_cmd_wdata),\n    .sysmem_icb_cmd_wmask  (sysmem_icb_cmd_wmask),\n    \n    .sysmem_icb_rsp_valid  (sysmem_icb_rsp_valid),\n    .sysmem_icb_rsp_ready  (sysmem_icb_rsp_ready),\n    .sysmem_icb_rsp_err    (sysmem_icb_rsp_err  ),\n    .sysmem_icb_rsp_rdata  (sysmem_icb_rsp_rdata),\n \n    .qspi0_ro_icb_cmd_valid  (qspi0_ro_icb_cmd_valid), \n    .qspi0_ro_icb_cmd_ready  (qspi0_ro_icb_cmd_ready),\n    .qspi0_ro_icb_cmd_addr   (qspi0_ro_icb_cmd_addr ),\n    .qspi0_ro_icb_cmd_read   (qspi0_ro_icb_cmd_read ),\n    .qspi0_ro_icb_cmd_wdata  (qspi0_ro_icb_cmd_wdata),\n                             \n    .qspi0_ro_icb_rsp_valid  (qspi0_ro_icb_rsp_valid),\n    .qspi0_ro_icb_rsp_ready  (qspi0_ro_icb_rsp_ready),\n    .qspi0_ro_icb_rsp_err    (1'b0  ),\n    .qspi0_ro_icb_rsp_rdata  (qspi0_ro_icb_rsp_rdata),\n                           \n    .otp_ro_icb_cmd_valid    (otp_ro_icb_cmd_valid  ),\n    .otp_ro_icb_cmd_ready    (otp_ro_icb_cmd_ready  ),\n    .otp_ro_icb_cmd_addr     (otp_ro_icb_cmd_addr   ),\n    .otp_ro_icb_cmd_read     (otp_ro_icb_cmd_read   ),\n    .otp_ro_icb_cmd_wdata    (otp_ro_icb_cmd_wdata  ),\n                          \n    .otp_ro_icb_rsp_valid    (otp_ro_icb_rsp_valid  ),\n    .otp_ro_icb_rsp_ready    (otp_ro_icb_rsp_ready  ),\n    .otp_ro_icb_rsp_err      (1'b0    ),\n    .otp_ro_icb_rsp_rdata    (otp_ro_icb_rsp_rdata  ),\n\n    .dm_icb_cmd_valid    (dm_icb_cmd_valid  ),\n    .dm_icb_cmd_ready    (dm_icb_cmd_ready  ),\n    .dm_icb_cmd_addr     (dm_icb_cmd_addr   ),\n    .dm_icb_cmd_read     (dm_icb_cmd_read   ),\n    .dm_icb_cmd_wdata    (dm_icb_cmd_wdata  ),\n     \n    .dm_icb_rsp_valid    (dm_icb_rsp_valid  ),\n    .dm_icb_rsp_ready    (dm_icb_rsp_ready  ),\n    .dm_icb_rsp_rdata    (dm_icb_rsp_rdata  ),\n\n    .clk           (hfclk  ),\n    .bus_rst_n     (bus_rst_n), \n    .rst_n         (per_rst_n) \n  );\n\n\n\n`ifdef FAKE_FLASH_MODEL//{\nfake_qspi0_model_top u_fake_qspi0_model_top(\n    .icb_cmd_valid  (qspi0_ro_icb_cmd_valid), \n    .icb_cmd_ready  (qspi0_ro_icb_cmd_ready),\n    .icb_cmd_addr   (qspi0_ro_icb_cmd_addr ),\n    .icb_cmd_read   (qspi0_ro_icb_cmd_read ),\n    .icb_cmd_wdata  (qspi0_ro_icb_cmd_wdata),\n                    \n    .icb_rsp_valid  (qspi0_ro_icb_rsp_valid),\n    .icb_rsp_ready  (qspi0_ro_icb_rsp_ready),\n    .icb_rsp_rdata  (qspi0_ro_icb_rsp_rdata),\n\n    .clk            (hfclk    ),\n    .rst_n          (bus_rst_n)  \n  );\n`endif//}\n\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The system memory bus and the ROM instance \n//\n// ====================================================================\n\n\n`include \"e203_defines.v\"\n\n\nmodule e203_subsys_mems(\n  input                          mem_icb_cmd_valid,\n  output                         mem_icb_cmd_ready,\n  input  [`E203_ADDR_SIZE-1:0]   mem_icb_cmd_addr, \n  input                          mem_icb_cmd_read, \n  input  [`E203_XLEN-1:0]        mem_icb_cmd_wdata,\n  input  [`E203_XLEN/8-1:0]      mem_icb_cmd_wmask,\n  //\n  output                         mem_icb_rsp_valid,\n  input                          mem_icb_rsp_ready,\n  output                         mem_icb_rsp_err,\n  output [`E203_XLEN-1:0]        mem_icb_rsp_rdata,\n  \n  //////////////////////////////////////////////////////////\n  output                         sysmem_icb_cmd_valid,\n  input                          sysmem_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   sysmem_icb_cmd_addr, \n  output                         sysmem_icb_cmd_read, \n  output [`E203_XLEN-1:0]        sysmem_icb_cmd_wdata,\n  output [`E203_XLEN/8-1:0]      sysmem_icb_cmd_wmask,\n  //\n  input                          sysmem_icb_rsp_valid,\n  output                         sysmem_icb_rsp_ready,\n  input                          sysmem_icb_rsp_err,\n  input  [`E203_XLEN-1:0]        sysmem_icb_rsp_rdata,\n\n    //////////////////////////////////////////////////////////\n  output                         qspi0_ro_icb_cmd_valid,\n  input                          qspi0_ro_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   qspi0_ro_icb_cmd_addr, \n  output                         qspi0_ro_icb_cmd_read, \n  output [`E203_XLEN-1:0]        qspi0_ro_icb_cmd_wdata,\n  //\n  input                          qspi0_ro_icb_rsp_valid,\n  output                         qspi0_ro_icb_rsp_ready,\n  input                          qspi0_ro_icb_rsp_err,\n  input  [`E203_XLEN-1:0]        qspi0_ro_icb_rsp_rdata,\n\n\n    //////////////////////////////////////////////////////////\n  output                         otp_ro_icb_cmd_valid,\n  input                          otp_ro_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   otp_ro_icb_cmd_addr, \n  output                         otp_ro_icb_cmd_read, \n  output [`E203_XLEN-1:0]        otp_ro_icb_cmd_wdata,\n  //\n  input                          otp_ro_icb_rsp_valid,\n  output                         otp_ro_icb_rsp_ready,\n  input                          otp_ro_icb_rsp_err,\n  input  [`E203_XLEN-1:0]        otp_ro_icb_rsp_rdata,\n\n    //////////////////////////////////////////////////////////\n  output                         dm_icb_cmd_valid,\n  input                          dm_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   dm_icb_cmd_addr, \n  output                         dm_icb_cmd_read, \n  output [`E203_XLEN-1:0]        dm_icb_cmd_wdata,\n  //\n  input                          dm_icb_rsp_valid,\n  output                         dm_icb_rsp_ready,\n  input  [`E203_XLEN-1:0]        dm_icb_rsp_rdata,\n\n  input  clk,\n  input  bus_rst_n,\n  input  rst_n\n  );\n\n\n\n      \n  wire                         mrom_icb_cmd_valid;\n  wire                         mrom_icb_cmd_ready;\n  wire [`E203_ADDR_SIZE-1:0]   mrom_icb_cmd_addr; \n  wire                         mrom_icb_cmd_read; \n  \n  wire                         mrom_icb_rsp_valid;\n  wire                         mrom_icb_rsp_ready;\n  wire                         mrom_icb_rsp_err  ;\n  wire [`E203_XLEN-1:0]        mrom_icb_rsp_rdata;\n\n  wire                     expl_axi_icb_cmd_valid;\n  wire                     expl_axi_icb_cmd_ready;\n  wire [32-1:0]            expl_axi_icb_cmd_addr; \n  wire                     expl_axi_icb_cmd_read; \n  wire [32-1:0]            expl_axi_icb_cmd_wdata;\n  wire [4 -1:0]            expl_axi_icb_cmd_wmask;\n  \n  wire                     expl_axi_icb_rsp_valid;\n  wire                     expl_axi_icb_rsp_ready;\n  wire [32-1:0]            expl_axi_icb_rsp_rdata;\n  wire                     expl_axi_icb_rsp_err;\n\n\n localparam MROM_AW = 12  ;\n localparam MROM_DP = 1024;\n  // There are several slaves for Mem bus, including:\n  //  * DM        : 0x0000 0000 -- 0x0000 0FFF\n  //  * MROM      : 0x0000 1000 -- 0x0000 1FFF\n  //  * OTP-RO    : 0x0002 0000 -- 0x0003 FFFF\n  //  * QSPI0-RO  : 0x2000 0000 -- 0x3FFF FFFF\n  //  * SysMem    : 0x8000 0000 -- 0xFFFF FFFF\n\n  sirv_icb1to8_bus # (\n  .ICB_FIFO_DP        (2),// We add a ping-pong buffer here to cut down the timing path\n  .ICB_FIFO_CUT_READY (1),// We configure it to cut down the back-pressure ready signal\n  .AW                   (32),\n  .DW                   (`E203_XLEN),\n  .SPLT_FIFO_OUTS_NUM   (1),// The Mem only allow 1 oustanding\n  .SPLT_FIFO_CUT_READY  (1),// The Mem always cut ready\n  //  * DM        : 0x0000 0000 -- 0x0000 0FFF\n  .O0_BASE_ADDR       (32'h0000_0000),       \n  .O0_BASE_REGION_LSB (12),\n  //  * MROM      : 0x0000 1000 -- 0x0000 1FFF\n  .O1_BASE_ADDR       (32'h0000_1000),       \n  .O1_BASE_REGION_LSB (12),\n  //  * OTP-RO    : 0x0002 0000 -- 0x0003 FFFF\n  .O2_BASE_ADDR       (32'h0002_0000),       \n  .O2_BASE_REGION_LSB (17),\n  //  * QSPI0-RO  : 0x2000 0000 -- 0x3FFF FFFF\n  .O3_BASE_ADDR       (32'h2000_0000),       \n  .O3_BASE_REGION_LSB (29),\n  //  * SysMem    : 0x8000 0000 -- 0xFFFF FFFF\n  //    Actually since the 0xFxxx xxxx have been occupied by FIO, \n  //    sysmem have no chance to access it\n  .O4_BASE_ADDR       (32'h8000_0000),       \n  .O4_BASE_REGION_LSB (31),\n\n      // * Here is an example AXI Peripheral\n  .O5_BASE_ADDR       (32'h4000_0000),       \n  .O5_BASE_REGION_LSB (28),\n  \n      // Not used\n  .O6_BASE_ADDR       (32'h0000_0000),       \n  .O6_BASE_REGION_LSB (0),\n  \n      // Not used\n  .O7_BASE_ADDR       (32'h0000_0000),       \n  .O7_BASE_REGION_LSB (0)\n\n  )u_sirv_mem_fab(\n\n    .i_icb_cmd_valid  (mem_icb_cmd_valid),\n    .i_icb_cmd_ready  (mem_icb_cmd_ready),\n    .i_icb_cmd_addr   (mem_icb_cmd_addr ),\n    .i_icb_cmd_read   (mem_icb_cmd_read ),\n    .i_icb_cmd_wdata  (mem_icb_cmd_wdata),\n    .i_icb_cmd_wmask  (mem_icb_cmd_wmask),\n    .i_icb_cmd_lock   (1'b0 ),\n    .i_icb_cmd_excl   (1'b0 ),\n    .i_icb_cmd_size   (2'b0 ),\n    .i_icb_cmd_burst  (2'b0),\n    .i_icb_cmd_beat   (2'b0 ),\n    \n    .i_icb_rsp_valid  (mem_icb_rsp_valid),\n    .i_icb_rsp_ready  (mem_icb_rsp_ready),\n    .i_icb_rsp_err    (mem_icb_rsp_err  ),\n    .i_icb_rsp_excl_ok(),\n    .i_icb_rsp_rdata  (mem_icb_rsp_rdata),\n    \n  //  * DM\n    .o0_icb_enable     (1'b1),\n\n    .o0_icb_cmd_valid  (dm_icb_cmd_valid),\n    .o0_icb_cmd_ready  (dm_icb_cmd_ready),\n    .o0_icb_cmd_addr   (dm_icb_cmd_addr ),\n    .o0_icb_cmd_read   (dm_icb_cmd_read ),\n    .o0_icb_cmd_wdata  (dm_icb_cmd_wdata),\n    .o0_icb_cmd_wmask  (),\n    .o0_icb_cmd_lock   (),\n    .o0_icb_cmd_excl   (),\n    .o0_icb_cmd_size   (),\n    .o0_icb_cmd_burst  (),\n    .o0_icb_cmd_beat   (),\n    \n    .o0_icb_rsp_valid  (dm_icb_rsp_valid),\n    .o0_icb_rsp_ready  (dm_icb_rsp_ready),\n    .o0_icb_rsp_err    (1'b0),\n    .o0_icb_rsp_excl_ok(1'b0),\n    .o0_icb_rsp_rdata  (dm_icb_rsp_rdata),\n\n  //  * MROM      \n    .o1_icb_enable     (1'b1),\n\n    .o1_icb_cmd_valid  (mrom_icb_cmd_valid),\n    .o1_icb_cmd_ready  (mrom_icb_cmd_ready),\n    .o1_icb_cmd_addr   (mrom_icb_cmd_addr ),\n    .o1_icb_cmd_read   (mrom_icb_cmd_read ),\n    .o1_icb_cmd_wdata  (),\n    .o1_icb_cmd_wmask  (),\n    .o1_icb_cmd_lock   (),\n    .o1_icb_cmd_excl   (),\n    .o1_icb_cmd_size   (),\n    .o1_icb_cmd_burst  (),\n    .o1_icb_cmd_beat   (),\n    \n    .o1_icb_rsp_valid  (mrom_icb_rsp_valid),\n    .o1_icb_rsp_ready  (mrom_icb_rsp_ready),\n    .o1_icb_rsp_err    (mrom_icb_rsp_err),\n    .o1_icb_rsp_excl_ok(1'b0  ),\n    .o1_icb_rsp_rdata  (mrom_icb_rsp_rdata),\n\n  //  * OTP-RO    \n    .o2_icb_enable     (1'b1),\n\n    .o2_icb_cmd_valid  (otp_ro_icb_cmd_valid),\n    .o2_icb_cmd_ready  (otp_ro_icb_cmd_ready),\n    .o2_icb_cmd_addr   (otp_ro_icb_cmd_addr ),\n    .o2_icb_cmd_read   (otp_ro_icb_cmd_read ),\n    .o2_icb_cmd_wdata  (otp_ro_icb_cmd_wdata),\n    .o2_icb_cmd_wmask  (),\n    .o2_icb_cmd_lock   (),\n    .o2_icb_cmd_excl   (),\n    .o2_icb_cmd_size   (),\n    .o2_icb_cmd_burst  (),\n    .o2_icb_cmd_beat   (),\n    \n    .o2_icb_rsp_valid  (otp_ro_icb_rsp_valid),\n    .o2_icb_rsp_ready  (otp_ro_icb_rsp_ready),\n    .o2_icb_rsp_err    (otp_ro_icb_rsp_err),\n    .o2_icb_rsp_excl_ok(1'b0  ),\n    .o2_icb_rsp_rdata  (otp_ro_icb_rsp_rdata),\n\n\n  //  * QSPI0-RO  \n    .o3_icb_enable     (1'b1),\n\n    .o3_icb_cmd_valid  (qspi0_ro_icb_cmd_valid),\n    .o3_icb_cmd_ready  (qspi0_ro_icb_cmd_ready),\n    .o3_icb_cmd_addr   (qspi0_ro_icb_cmd_addr ),\n    .o3_icb_cmd_read   (qspi0_ro_icb_cmd_read ),\n    .o3_icb_cmd_wdata  (qspi0_ro_icb_cmd_wdata),\n    .o3_icb_cmd_wmask  (),\n    .o3_icb_cmd_lock   (),\n    .o3_icb_cmd_excl   (),\n    .o3_icb_cmd_size   (),\n    .o3_icb_cmd_burst  (),\n    .o3_icb_cmd_beat   (),\n    \n    .o3_icb_rsp_valid  (qspi0_ro_icb_rsp_valid),\n    .o3_icb_rsp_ready  (qspi0_ro_icb_rsp_ready),\n    .o3_icb_rsp_err    (qspi0_ro_icb_rsp_err),\n    .o3_icb_rsp_excl_ok(1'b0  ),\n    .o3_icb_rsp_rdata  (qspi0_ro_icb_rsp_rdata),\n\n\n  //  * SysMem\n    .o4_icb_enable     (1'b1),\n\n    .o4_icb_cmd_valid  (sysmem_icb_cmd_valid),\n    .o4_icb_cmd_ready  (sysmem_icb_cmd_ready),\n    .o4_icb_cmd_addr   (sysmem_icb_cmd_addr ),\n    .o4_icb_cmd_read   (sysmem_icb_cmd_read ),\n    .o4_icb_cmd_wdata  (sysmem_icb_cmd_wdata),\n    .o4_icb_cmd_wmask  (sysmem_icb_cmd_wmask),\n    .o4_icb_cmd_lock   (),\n    .o4_icb_cmd_excl   (),\n    .o4_icb_cmd_size   (),\n    .o4_icb_cmd_burst  (),\n    .o4_icb_cmd_beat   (),\n    \n    .o4_icb_rsp_valid  (sysmem_icb_rsp_valid),\n    .o4_icb_rsp_ready  (sysmem_icb_rsp_ready),\n    .o4_icb_rsp_err    (sysmem_icb_rsp_err    ),\n    .o4_icb_rsp_excl_ok(1'b0),\n    .o4_icb_rsp_rdata  (sysmem_icb_rsp_rdata),\n\n   //  * Example AXI    \n    .o5_icb_enable     (1'b1),\n\n    .o5_icb_cmd_valid  (expl_axi_icb_cmd_valid),\n    .o5_icb_cmd_ready  (expl_axi_icb_cmd_ready),\n    .o5_icb_cmd_addr   (expl_axi_icb_cmd_addr ),\n    .o5_icb_cmd_read   (expl_axi_icb_cmd_read ),\n    .o5_icb_cmd_wdata  (expl_axi_icb_cmd_wdata),\n    .o5_icb_cmd_wmask  (expl_axi_icb_cmd_wmask),\n    .o5_icb_cmd_lock   (),\n    .o5_icb_cmd_excl   (),\n    .o5_icb_cmd_size   (),\n    .o5_icb_cmd_burst  (),\n    .o5_icb_cmd_beat   (),\n    \n    .o5_icb_rsp_valid  (expl_axi_icb_rsp_valid),\n    .o5_icb_rsp_ready  (expl_axi_icb_rsp_ready),\n    .o5_icb_rsp_err    (expl_axi_icb_rsp_err),\n    .o5_icb_rsp_excl_ok(1'b0  ),\n    .o5_icb_rsp_rdata  (expl_axi_icb_rsp_rdata),\n\n\n        //  * Not used\n    .o6_icb_enable     (1'b0),\n\n    .o6_icb_cmd_valid  (),\n    .o6_icb_cmd_ready  (1'b0),\n    .o6_icb_cmd_addr   (),\n    .o6_icb_cmd_read   (),\n    .o6_icb_cmd_wdata  (),\n    .o6_icb_cmd_wmask  (),\n    .o6_icb_cmd_lock   (),\n    .o6_icb_cmd_excl   (),\n    .o6_icb_cmd_size   (),\n    .o6_icb_cmd_burst  (),\n    .o6_icb_cmd_beat   (),\n    \n    .o6_icb_rsp_valid  (1'b0),\n    .o6_icb_rsp_ready  (),\n    .o6_icb_rsp_err    (1'b0  ),\n    .o6_icb_rsp_excl_ok(1'b0  ),\n    .o6_icb_rsp_rdata  (`E203_XLEN'b0),\n\n        //  * Not used\n    .o7_icb_enable     (1'b0),\n\n    .o7_icb_cmd_valid  (),\n    .o7_icb_cmd_ready  (1'b0),\n    .o7_icb_cmd_addr   (),\n    .o7_icb_cmd_read   (),\n    .o7_icb_cmd_wdata  (),\n    .o7_icb_cmd_wmask  (),\n    .o7_icb_cmd_lock   (),\n    .o7_icb_cmd_excl   (),\n    .o7_icb_cmd_size   (),\n    .o7_icb_cmd_burst  (),\n    .o7_icb_cmd_beat   (),\n    \n    .o7_icb_rsp_valid  (1'b0),\n    .o7_icb_rsp_ready  (),\n    .o7_icb_rsp_err    (1'b0  ),\n    .o7_icb_rsp_excl_ok(1'b0  ),\n    .o7_icb_rsp_rdata  (`E203_XLEN'b0),\n\n    .clk           (clk  ),\n    .rst_n         (bus_rst_n) \n  );\n\n  sirv_mrom_top #(\n    .AW(MROM_AW),\n    .DW(32),\n    .DP(MROM_DP)\n  )u_sirv_mrom_top(\n\n    .rom_icb_cmd_valid  (mrom_icb_cmd_valid),\n    .rom_icb_cmd_ready  (mrom_icb_cmd_ready),\n    .rom_icb_cmd_addr   (mrom_icb_cmd_addr [MROM_AW-1:0]),\n    .rom_icb_cmd_read   (mrom_icb_cmd_read ),\n    \n    .rom_icb_rsp_valid  (mrom_icb_rsp_valid),\n    .rom_icb_rsp_ready  (mrom_icb_rsp_ready),\n    .rom_icb_rsp_err    (mrom_icb_rsp_err  ),\n    .rom_icb_rsp_rdata  (mrom_icb_rsp_rdata),\n\n    .clk           (clk  ),\n    .rst_n         (rst_n) \n  );\n\n      // * Here is an example AXI Peripheral\n  wire expl_axi_arvalid;\n  wire expl_axi_arready;\n  wire [`E203_ADDR_SIZE-1:0] expl_axi_araddr;\n  wire [3:0] expl_axi_arcache;\n  wire [2:0] expl_axi_arprot;\n  wire [1:0] expl_axi_arlock;\n  wire [1:0] expl_axi_arburst;\n  wire [3:0] expl_axi_arlen;\n  wire [2:0] expl_axi_arsize;\n\n  wire expl_axi_awvalid;\n  wire expl_axi_awready;\n  wire [`E203_ADDR_SIZE-1:0] expl_axi_awaddr;\n  wire [3:0] expl_axi_awcache;\n  wire [2:0] expl_axi_awprot;\n  wire [1:0] expl_axi_awlock;\n  wire [1:0] expl_axi_awburst;\n  wire [3:0] expl_axi_awlen;\n  wire [2:0] expl_axi_awsize;\n\n  wire expl_axi_rvalid;\n  wire expl_axi_rready;\n  wire [`E203_XLEN-1:0] expl_axi_rdata;\n  wire [1:0] expl_axi_rresp;\n  wire expl_axi_rlast;\n\n  wire expl_axi_wvalid;\n  wire expl_axi_wready;\n  wire [`E203_XLEN-1:0] expl_axi_wdata;\n  wire [(`E203_XLEN/8)-1:0] expl_axi_wstrb;\n  wire expl_axi_wlast;\n\n  wire expl_axi_bvalid;\n  wire expl_axi_bready;\n  wire [1:0] expl_axi_bresp;\n   \nsirv_gnrl_icb2axi # (\n  .AXI_FIFO_DP (2), // We just add ping-pong buffer here to avoid any potential timing loops\n                    //   User can change it to 0 if dont care\n  .AXI_FIFO_CUT_READY (1), // This is to cut the back-pressure signal if you set as 1\n  .AW   (32),\n  .FIFO_OUTS_NUM (4),// We only allow 4 oustandings at most for mem, user can configure it to any value\n  .FIFO_CUT_READY(1),\n  .DW   (`E203_XLEN) \n) u_expl_axi_icb2axi(\n    .i_icb_cmd_valid (expl_axi_icb_cmd_valid),\n    .i_icb_cmd_ready (expl_axi_icb_cmd_ready),\n    .i_icb_cmd_addr  (expl_axi_icb_cmd_addr ),\n    .i_icb_cmd_read  (expl_axi_icb_cmd_read ),\n    .i_icb_cmd_wdata (expl_axi_icb_cmd_wdata),\n    .i_icb_cmd_wmask (expl_axi_icb_cmd_wmask),\n    .i_icb_cmd_size  (),\n    \n    .i_icb_rsp_valid (expl_axi_icb_rsp_valid),\n    .i_icb_rsp_ready (expl_axi_icb_rsp_ready),\n    .i_icb_rsp_rdata (expl_axi_icb_rsp_rdata),\n    .i_icb_rsp_err   (expl_axi_icb_rsp_err),\n\n    .o_axi_arvalid   (expl_axi_arvalid),\n    .o_axi_arready   (expl_axi_arready),\n    .o_axi_araddr    (expl_axi_araddr ),\n    .o_axi_arcache   (expl_axi_arcache),\n    .o_axi_arprot    (expl_axi_arprot ),\n    .o_axi_arlock    (expl_axi_arlock ),\n    .o_axi_arburst   (expl_axi_arburst),\n    .o_axi_arlen     (expl_axi_arlen  ),\n    .o_axi_arsize    (expl_axi_arsize ),\n                      \n    .o_axi_awvalid   (expl_axi_awvalid),\n    .o_axi_awready   (expl_axi_awready),\n    .o_axi_awaddr    (expl_axi_awaddr ),\n    .o_axi_awcache   (expl_axi_awcache),\n    .o_axi_awprot    (expl_axi_awprot ),\n    .o_axi_awlock    (expl_axi_awlock ),\n    .o_axi_awburst   (expl_axi_awburst),\n    .o_axi_awlen     (expl_axi_awlen  ),\n    .o_axi_awsize    (expl_axi_awsize ),\n                     \n    .o_axi_rvalid    (expl_axi_rvalid ),\n    .o_axi_rready    (expl_axi_rready ),\n    .o_axi_rdata     (expl_axi_rdata  ),\n    .o_axi_rresp     (expl_axi_rresp  ),\n    .o_axi_rlast     (expl_axi_rlast  ),\n                    \n    .o_axi_wvalid    (expl_axi_wvalid ),\n    .o_axi_wready    (expl_axi_wready ),\n    .o_axi_wdata     (expl_axi_wdata  ),\n    .o_axi_wstrb     (expl_axi_wstrb  ),\n    .o_axi_wlast     (expl_axi_wlast  ),\n                   \n    .o_axi_bvalid    (expl_axi_bvalid ),\n    .o_axi_bready    (expl_axi_bready ),\n    .o_axi_bresp     (expl_axi_bresp  ),\n\n    .clk           (clk  ),\n    .rst_n         (bus_rst_n) \n  );\n\nsirv_expl_axi_slv # (\n  .AW   (32),\n  .DW   (`E203_XLEN) \n) u_perips_expl_axi_slv (\n    .axi_arvalid   (expl_axi_arvalid),\n    .axi_arready   (expl_axi_arready),\n    .axi_araddr    (expl_axi_araddr ),\n    .axi_arcache   (expl_axi_arcache),\n    .axi_arprot    (expl_axi_arprot ),\n    .axi_arlock    (expl_axi_arlock ),\n    .axi_arburst   (expl_axi_arburst),\n    .axi_arlen     (expl_axi_arlen  ),\n    .axi_arsize    (expl_axi_arsize ),\n\n    .axi_awvalid   (expl_axi_awvalid),\n    .axi_awready   (expl_axi_awready),\n    .axi_awaddr    (expl_axi_awaddr ),\n    .axi_awcache   (expl_axi_awcache),\n    .axi_awprot    (expl_axi_awprot ),\n    .axi_awlock    (expl_axi_awlock ),\n    .axi_awburst   (expl_axi_awburst),\n    .axi_awlen     (expl_axi_awlen  ),\n    .axi_awsize    (expl_axi_awsize ),\n  \n    .axi_rvalid    (expl_axi_rvalid ),\n    .axi_rready    (expl_axi_rready ),\n    .axi_rdata     (expl_axi_rdata  ),\n    .axi_rresp     (expl_axi_rresp  ),\n    .axi_rlast     (expl_axi_rlast  ),\n\n    .axi_wvalid    (expl_axi_wvalid ),\n    .axi_wready    (expl_axi_wready ),\n    .axi_wdata     (expl_axi_wdata  ),\n    .axi_wstrb     (expl_axi_wstrb  ),\n    .axi_wlast     (expl_axi_wlast  ),\n \n    .axi_bvalid    (expl_axi_bvalid ),\n    .axi_bready    (expl_axi_bready ),\n    .axi_bresp     (expl_axi_bresp  ),\n\n    .clk           (clk  ),\n    .rst_n         (rst_n) \n  );\n\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The peirpheral bus and the connected devices \n//\n// ====================================================================\n\n`include \"e203_defines.v\"\n\n\nmodule e203_subsys_perips(\n  input                          ppi_icb_cmd_valid,\n  output                         ppi_icb_cmd_ready,\n  input  [`E203_ADDR_SIZE-1:0]   ppi_icb_cmd_addr, \n  input                          ppi_icb_cmd_read, \n  input  [`E203_XLEN-1:0]        ppi_icb_cmd_wdata,\n  input  [`E203_XLEN/8-1:0]      ppi_icb_cmd_wmask,\n  //\n  output                         ppi_icb_rsp_valid,\n  input                          ppi_icb_rsp_ready,\n  output                         ppi_icb_rsp_err,\n  output [`E203_XLEN-1:0]        ppi_icb_rsp_rdata,\n  \n  //////////////////////////////////////////////////////////\n  output                         sysper_icb_cmd_valid,\n  input                          sysper_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   sysper_icb_cmd_addr, \n  output                         sysper_icb_cmd_read, \n  output [`E203_XLEN-1:0]        sysper_icb_cmd_wdata,\n  output [`E203_XLEN/8-1:0]      sysper_icb_cmd_wmask,\n  //\n  input                          sysper_icb_rsp_valid,\n  output                         sysper_icb_rsp_ready,\n  input                          sysper_icb_rsp_err,\n  input  [`E203_XLEN-1:0]        sysper_icb_rsp_rdata,\n\n  //////////////////////////////////////////////////////////\n  output                         aon_icb_cmd_valid,\n  input                          aon_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   aon_icb_cmd_addr, \n  output                         aon_icb_cmd_read, \n  output [`E203_XLEN-1:0]        aon_icb_cmd_wdata,\n  //\n  input                          aon_icb_rsp_valid,\n  output                         aon_icb_rsp_ready,\n  input                          aon_icb_rsp_err,\n  input  [`E203_XLEN-1:0]        aon_icb_rsp_rdata,\n\n  input                      qspi0_ro_icb_cmd_valid,\n  output                     qspi0_ro_icb_cmd_ready,\n  input  [32-1:0]            qspi0_ro_icb_cmd_addr, \n  input                      qspi0_ro_icb_cmd_read, \n  input  [32-1:0]            qspi0_ro_icb_cmd_wdata,\n  \n  output                     qspi0_ro_icb_rsp_valid,\n  input                      qspi0_ro_icb_rsp_ready,\n  output [32-1:0]            qspi0_ro_icb_rsp_rdata,\n\n  \n  input                      otp_ro_icb_cmd_valid,\n  output                     otp_ro_icb_cmd_ready,\n  input  [32-1:0]            otp_ro_icb_cmd_addr, \n  input                      otp_ro_icb_cmd_read, \n  input  [32-1:0]            otp_ro_icb_cmd_wdata,\n  \n  output                     otp_ro_icb_rsp_valid,\n  input                      otp_ro_icb_rsp_ready,\n  output [32-1:0]            otp_ro_icb_rsp_rdata,\n\n\n  input  io_pads_gpio_0_i_ival,\n  output io_pads_gpio_0_o_oval,\n  output io_pads_gpio_0_o_oe,\n  output io_pads_gpio_0_o_ie,\n  output io_pads_gpio_0_o_pue,\n  output io_pads_gpio_0_o_ds,\n  input  io_pads_gpio_1_i_ival,\n  output io_pads_gpio_1_o_oval,\n  output io_pads_gpio_1_o_oe,\n  output io_pads_gpio_1_o_ie,\n  output io_pads_gpio_1_o_pue,\n  output io_pads_gpio_1_o_ds,\n  input  io_pads_gpio_2_i_ival,\n  output io_pads_gpio_2_o_oval,\n  output io_pads_gpio_2_o_oe,\n  output io_pads_gpio_2_o_ie,\n  output io_pads_gpio_2_o_pue,\n  output io_pads_gpio_2_o_ds,\n  input  io_pads_gpio_3_i_ival,\n  output io_pads_gpio_3_o_oval,\n  output io_pads_gpio_3_o_oe,\n  output io_pads_gpio_3_o_ie,\n  output io_pads_gpio_3_o_pue,\n  output io_pads_gpio_3_o_ds,\n  input  io_pads_gpio_4_i_ival,\n  output io_pads_gpio_4_o_oval,\n  output io_pads_gpio_4_o_oe,\n  output io_pads_gpio_4_o_ie,\n  output io_pads_gpio_4_o_pue,\n  output io_pads_gpio_4_o_ds,\n  input  io_pads_gpio_5_i_ival,\n  output io_pads_gpio_5_o_oval,\n  output io_pads_gpio_5_o_oe,\n  output io_pads_gpio_5_o_ie,\n  output io_pads_gpio_5_o_pue,\n  output io_pads_gpio_5_o_ds,\n  input  io_pads_gpio_6_i_ival,\n  output io_pads_gpio_6_o_oval,\n  output io_pads_gpio_6_o_oe,\n  output io_pads_gpio_6_o_ie,\n  output io_pads_gpio_6_o_pue,\n  output io_pads_gpio_6_o_ds,\n  input  io_pads_gpio_7_i_ival,\n  output io_pads_gpio_7_o_oval,\n  output io_pads_gpio_7_o_oe,\n  output io_pads_gpio_7_o_ie,\n  output io_pads_gpio_7_o_pue,\n  output io_pads_gpio_7_o_ds,\n  input  io_pads_gpio_8_i_ival,\n  output io_pads_gpio_8_o_oval,\n  output io_pads_gpio_8_o_oe,\n  output io_pads_gpio_8_o_ie,\n  output io_pads_gpio_8_o_pue,\n  output io_pads_gpio_8_o_ds,\n  input  io_pads_gpio_9_i_ival,\n  output io_pads_gpio_9_o_oval,\n  output io_pads_gpio_9_o_oe,\n  output io_pads_gpio_9_o_ie,\n  output io_pads_gpio_9_o_pue,\n  output io_pads_gpio_9_o_ds,\n  input  io_pads_gpio_10_i_ival,\n  output io_pads_gpio_10_o_oval,\n  output io_pads_gpio_10_o_oe,\n  output io_pads_gpio_10_o_ie,\n  output io_pads_gpio_10_o_pue,\n  output io_pads_gpio_10_o_ds,\n  input  io_pads_gpio_11_i_ival,\n  output io_pads_gpio_11_o_oval,\n  output io_pads_gpio_11_o_oe,\n  output io_pads_gpio_11_o_ie,\n  output io_pads_gpio_11_o_pue,\n  output io_pads_gpio_11_o_ds,\n  input  io_pads_gpio_12_i_ival,\n  output io_pads_gpio_12_o_oval,\n  output io_pads_gpio_12_o_oe,\n  output io_pads_gpio_12_o_ie,\n  output io_pads_gpio_12_o_pue,\n  output io_pads_gpio_12_o_ds,\n  input  io_pads_gpio_13_i_ival,\n  output io_pads_gpio_13_o_oval,\n  output io_pads_gpio_13_o_oe,\n  output io_pads_gpio_13_o_ie,\n  output io_pads_gpio_13_o_pue,\n  output io_pads_gpio_13_o_ds,\n  input  io_pads_gpio_14_i_ival,\n  output io_pads_gpio_14_o_oval,\n  output io_pads_gpio_14_o_oe,\n  output io_pads_gpio_14_o_ie,\n  output io_pads_gpio_14_o_pue,\n  output io_pads_gpio_14_o_ds,\n  input  io_pads_gpio_15_i_ival,\n  output io_pads_gpio_15_o_oval,\n  output io_pads_gpio_15_o_oe,\n  output io_pads_gpio_15_o_ie,\n  output io_pads_gpio_15_o_pue,\n  output io_pads_gpio_15_o_ds,\n  input  io_pads_gpio_16_i_ival,\n  output io_pads_gpio_16_o_oval,\n  output io_pads_gpio_16_o_oe,\n  output io_pads_gpio_16_o_ie,\n  output io_pads_gpio_16_o_pue,\n  output io_pads_gpio_16_o_ds,\n  input  io_pads_gpio_17_i_ival,\n  output io_pads_gpio_17_o_oval,\n  output io_pads_gpio_17_o_oe,\n  output io_pads_gpio_17_o_ie,\n  output io_pads_gpio_17_o_pue,\n  output io_pads_gpio_17_o_ds,\n  input  io_pads_gpio_18_i_ival,\n  output io_pads_gpio_18_o_oval,\n  output io_pads_gpio_18_o_oe,\n  output io_pads_gpio_18_o_ie,\n  output io_pads_gpio_18_o_pue,\n  output io_pads_gpio_18_o_ds,\n  input  io_pads_gpio_19_i_ival,\n  output io_pads_gpio_19_o_oval,\n  output io_pads_gpio_19_o_oe,\n  output io_pads_gpio_19_o_ie,\n  output io_pads_gpio_19_o_pue,\n  output io_pads_gpio_19_o_ds,\n  input  io_pads_gpio_20_i_ival,\n  output io_pads_gpio_20_o_oval,\n  output io_pads_gpio_20_o_oe,\n  output io_pads_gpio_20_o_ie,\n  output io_pads_gpio_20_o_pue,\n  output io_pads_gpio_20_o_ds,\n  input  io_pads_gpio_21_i_ival,\n  output io_pads_gpio_21_o_oval,\n  output io_pads_gpio_21_o_oe,\n  output io_pads_gpio_21_o_ie,\n  output io_pads_gpio_21_o_pue,\n  output io_pads_gpio_21_o_ds,\n  input  io_pads_gpio_22_i_ival,\n  output io_pads_gpio_22_o_oval,\n  output io_pads_gpio_22_o_oe,\n  output io_pads_gpio_22_o_ie,\n  output io_pads_gpio_22_o_pue,\n  output io_pads_gpio_22_o_ds,\n  input  io_pads_gpio_23_i_ival,\n  output io_pads_gpio_23_o_oval,\n  output io_pads_gpio_23_o_oe,\n  output io_pads_gpio_23_o_ie,\n  output io_pads_gpio_23_o_pue,\n  output io_pads_gpio_23_o_ds,\n  input  io_pads_gpio_24_i_ival,\n  output io_pads_gpio_24_o_oval,\n  output io_pads_gpio_24_o_oe,\n  output io_pads_gpio_24_o_ie,\n  output io_pads_gpio_24_o_pue,\n  output io_pads_gpio_24_o_ds,\n  input  io_pads_gpio_25_i_ival,\n  output io_pads_gpio_25_o_oval,\n  output io_pads_gpio_25_o_oe,\n  output io_pads_gpio_25_o_ie,\n  output io_pads_gpio_25_o_pue,\n  output io_pads_gpio_25_o_ds,\n  input  io_pads_gpio_26_i_ival,\n  output io_pads_gpio_26_o_oval,\n  output io_pads_gpio_26_o_oe,\n  output io_pads_gpio_26_o_ie,\n  output io_pads_gpio_26_o_pue,\n  output io_pads_gpio_26_o_ds,\n  input  io_pads_gpio_27_i_ival,\n  output io_pads_gpio_27_o_oval,\n  output io_pads_gpio_27_o_oe,\n  output io_pads_gpio_27_o_ie,\n  output io_pads_gpio_27_o_pue,\n  output io_pads_gpio_27_o_ds,\n  input  io_pads_gpio_28_i_ival,\n  output io_pads_gpio_28_o_oval,\n  output io_pads_gpio_28_o_oe,\n  output io_pads_gpio_28_o_ie,\n  output io_pads_gpio_28_o_pue,\n  output io_pads_gpio_28_o_ds,\n  input  io_pads_gpio_29_i_ival,\n  output io_pads_gpio_29_o_oval,\n  output io_pads_gpio_29_o_oe,\n  output io_pads_gpio_29_o_ie,\n  output io_pads_gpio_29_o_pue,\n  output io_pads_gpio_29_o_ds,\n  input  io_pads_gpio_30_i_ival,\n  output io_pads_gpio_30_o_oval,\n  output io_pads_gpio_30_o_oe,\n  output io_pads_gpio_30_o_ie,\n  output io_pads_gpio_30_o_pue,\n  output io_pads_gpio_30_o_ds,\n  input  io_pads_gpio_31_i_ival,\n  output io_pads_gpio_31_o_oval,\n  output io_pads_gpio_31_o_oe,\n  output io_pads_gpio_31_o_ie,\n  output io_pads_gpio_31_o_pue,\n  output io_pads_gpio_31_o_ds,\n\n  input   io_pads_qspi_sck_i_ival,\n  output  io_pads_qspi_sck_o_oval,\n  output  io_pads_qspi_sck_o_oe,\n  output  io_pads_qspi_sck_o_ie,\n  output  io_pads_qspi_sck_o_pue,\n  output  io_pads_qspi_sck_o_ds,\n  input   io_pads_qspi_dq_0_i_ival,\n  output  io_pads_qspi_dq_0_o_oval,\n  output  io_pads_qspi_dq_0_o_oe,\n  output  io_pads_qspi_dq_0_o_ie,\n  output  io_pads_qspi_dq_0_o_pue,\n  output  io_pads_qspi_dq_0_o_ds,\n  input   io_pads_qspi_dq_1_i_ival,\n  output  io_pads_qspi_dq_1_o_oval,\n  output  io_pads_qspi_dq_1_o_oe,\n  output  io_pads_qspi_dq_1_o_ie,\n  output  io_pads_qspi_dq_1_o_pue,\n  output  io_pads_qspi_dq_1_o_ds,\n  input   io_pads_qspi_dq_2_i_ival,\n  output  io_pads_qspi_dq_2_o_oval,\n  output  io_pads_qspi_dq_2_o_oe,\n  output  io_pads_qspi_dq_2_o_ie,\n  output  io_pads_qspi_dq_2_o_pue,\n  output  io_pads_qspi_dq_2_o_ds,\n  input   io_pads_qspi_dq_3_i_ival,\n  output  io_pads_qspi_dq_3_o_oval,\n  output  io_pads_qspi_dq_3_o_oe,\n  output  io_pads_qspi_dq_3_o_ie,\n  output  io_pads_qspi_dq_3_o_pue,\n  output  io_pads_qspi_dq_3_o_ds,\n  input   io_pads_qspi_cs_0_i_ival,\n  output  io_pads_qspi_cs_0_o_oval,\n  output  io_pads_qspi_cs_0_o_oe,\n  output  io_pads_qspi_cs_0_o_ie,\n  output  io_pads_qspi_cs_0_o_pue,\n  output  io_pads_qspi_cs_0_o_ds,\n\n  output qspi0_irq, \n  output qspi1_irq,\n  output qspi2_irq,\n\n  output uart0_irq,                \n  output uart1_irq,                \n\n  output pwm0_irq_0,\n  output pwm0_irq_1,\n  output pwm0_irq_2,\n  output pwm0_irq_3,\n\n  output pwm1_irq_0,\n  output pwm1_irq_1,\n  output pwm1_irq_2,\n  output pwm1_irq_3,\n\n  output pwm2_irq_0,\n  output pwm2_irq_1,\n  output pwm2_irq_2,\n  output pwm2_irq_3,\n\n  output i2c_mst_irq,\n\n  output gpio_irq_0,\n  output gpio_irq_1,\n  output gpio_irq_2,\n  output gpio_irq_3,\n  output gpio_irq_4,\n  output gpio_irq_5,\n  output gpio_irq_6,\n  output gpio_irq_7,\n  output gpio_irq_8,\n  output gpio_irq_9,\n  output gpio_irq_10,\n  output gpio_irq_11,\n  output gpio_irq_12,\n  output gpio_irq_13,\n  output gpio_irq_14,\n  output gpio_irq_15,\n  output gpio_irq_16,\n  output gpio_irq_17,\n  output gpio_irq_18,\n  output gpio_irq_19,\n  output gpio_irq_20,\n  output gpio_irq_21,\n  output gpio_irq_22,\n  output gpio_irq_23,\n  output gpio_irq_24,\n  output gpio_irq_25,\n  output gpio_irq_26,\n  output gpio_irq_27,\n  output gpio_irq_28,\n  output gpio_irq_29,\n  output gpio_irq_30,\n  output gpio_irq_31,\n\n  output pllbypass ,\n  output pll_RESET ,\n  output pll_ASLEEP ,\n  output [1:0]  pll_OD,\n  output [7:0]  pll_M,\n  output [4:0]  pll_N,\n  output plloutdivby1,\n  output [5:0] plloutdiv,\n\n  output hfxoscen,\n\n\n\n  input  clk,\n  input  bus_rst_n,\n  input  rst_n\n  );\n\n  \n  wire                         i_aon_icb_cmd_valid;\n  wire                         i_aon_icb_cmd_ready;\n  wire [`E203_ADDR_SIZE-1:0]   i_aon_icb_cmd_addr; \n  wire                         i_aon_icb_cmd_read; \n  wire [`E203_XLEN-1:0]        i_aon_icb_cmd_wdata;\n\n  wire                         i_aon_icb_rsp_valid;\n  wire                         i_aon_icb_rsp_ready;\n  wire                         i_aon_icb_rsp_err;\n  wire [`E203_XLEN-1:0]        i_aon_icb_rsp_rdata;\n\n  wire i2c_scl_pad_i   ;\n  wire i2c_scl_pad_o   ;\n  wire i2c_scl_padoen_o;\n  wire i2c_sda_pad_i   ;\n  wire i2c_sda_pad_o   ;\n  wire i2c_sda_padoen_o;\n\n  wire pwm0_gpio_0;\n  wire pwm0_gpio_1;\n  wire pwm0_gpio_2;\n  wire pwm0_gpio_3;\n\n  wire pwm1_gpio_0;\n  wire pwm1_gpio_1;\n  wire pwm1_gpio_2;\n  wire pwm1_gpio_3;\n\n  wire pwm2_gpio_0;\n  wire pwm2_gpio_1;\n  wire pwm2_gpio_2;\n  wire pwm2_gpio_3;\n\n  wire qspi0_sck;\n  wire qspi0_dq_0_i;\n  wire qspi0_dq_0_o;\n  wire qspi0_dq_0_oe;\n  wire qspi0_dq_1_i;\n  wire qspi0_dq_1_o;\n  wire qspi0_dq_1_oe;\n  wire qspi0_dq_2_i;\n  wire qspi0_dq_2_o;\n  wire qspi0_dq_2_oe;\n  wire qspi0_dq_3_i;\n  wire qspi0_dq_3_o;\n  wire qspi0_dq_3_oe;\n  wire qspi0_cs_0;\n\n\n  wire qspi1_sck;\n  wire qspi1_dq_0_i;\n  wire qspi1_dq_0_o;\n  wire qspi1_dq_0_oe;\n  wire qspi1_dq_1_i;\n  wire qspi1_dq_1_o;\n  wire qspi1_dq_1_oe;\n  wire qspi1_dq_2_i;\n  wire qspi1_dq_2_o;\n  wire qspi1_dq_2_oe;\n  wire qspi1_dq_3_i;\n  wire qspi1_dq_3_o;\n  wire qspi1_dq_3_oe;\n  wire qspi1_cs_0;\n  wire qspi1_cs_1;\n  wire qspi1_cs_2;\n  wire qspi1_cs_3;\n\n\n  wire qspi2_sck;\n  wire qspi2_dq_0_i;\n  wire qspi2_dq_0_o;\n  wire qspi2_dq_0_oe;\n  wire qspi2_dq_1_i;\n  wire qspi2_dq_1_o;\n  wire qspi2_dq_1_oe;\n  wire qspi2_dq_2_i;\n  wire qspi2_dq_2_o;\n  wire qspi2_dq_2_oe;\n  wire qspi2_dq_3_i;\n  wire qspi2_dq_3_o;\n  wire qspi2_dq_3_oe;\n  wire qspi2_cs_0;\n\n  wire gpio_iof_0_0_i_ival   ;\n  wire gpio_iof_0_0_o_oval   ;\n  wire gpio_iof_0_0_o_oe   ;\n  wire gpio_iof_0_0_o_ie   ;\n  wire gpio_iof_0_0_o_valid   ;\n  wire gpio_iof_0_1_i_ival   ;\n  wire gpio_iof_0_1_o_oval   ;\n  wire gpio_iof_0_1_o_oe   ;\n  wire gpio_iof_0_1_o_ie   ;\n  wire gpio_iof_0_1_o_valid   ;\n  wire gpio_iof_0_2_i_ival   ;\n  wire gpio_iof_0_2_o_oval   ;\n  wire gpio_iof_0_2_o_oe   ;\n  wire gpio_iof_0_2_o_ie   ;\n  wire gpio_iof_0_2_o_valid   ;\n  wire gpio_iof_0_3_i_ival   ;\n  wire gpio_iof_0_3_o_oval   ;\n  wire gpio_iof_0_3_o_oe   ;\n  wire gpio_iof_0_3_o_ie   ;\n  wire gpio_iof_0_3_o_valid   ;\n  wire gpio_iof_0_4_i_ival   ;\n  wire gpio_iof_0_4_o_oval   ;\n  wire gpio_iof_0_4_o_oe   ;\n  wire gpio_iof_0_4_o_ie   ;\n  wire gpio_iof_0_4_o_valid   ;\n  wire gpio_iof_0_5_i_ival   ;\n  wire gpio_iof_0_5_o_oval   ;\n  wire gpio_iof_0_5_o_oe   ;\n  wire gpio_iof_0_5_o_ie   ;\n  wire gpio_iof_0_5_o_valid   ;\n  wire gpio_iof_0_6_i_ival   ;\n  wire gpio_iof_0_6_o_oval   ;\n  wire gpio_iof_0_6_o_oe   ;\n  wire gpio_iof_0_6_o_ie   ;\n  wire gpio_iof_0_6_o_valid   ;\n  wire gpio_iof_0_7_i_ival   ;\n  wire gpio_iof_0_7_o_oval   ;\n  wire gpio_iof_0_7_o_oe   ;\n  wire gpio_iof_0_7_o_ie   ;\n  wire gpio_iof_0_7_o_valid   ;\n  wire gpio_iof_0_8_i_ival   ;\n  wire gpio_iof_0_8_o_oval   ;\n  wire gpio_iof_0_8_o_oe   ;\n  wire gpio_iof_0_8_o_ie   ;\n  wire gpio_iof_0_8_o_valid   ;\n  wire gpio_iof_0_9_i_ival   ;\n  wire gpio_iof_0_9_o_oval   ;\n  wire gpio_iof_0_9_o_oe   ;\n  wire gpio_iof_0_9_o_ie   ;\n  wire gpio_iof_0_9_o_valid   ;\n  wire gpio_iof_0_10_i_ival   ;\n  wire gpio_iof_0_10_o_oval   ;\n  wire gpio_iof_0_10_o_oe   ;\n  wire gpio_iof_0_10_o_ie   ;\n  wire gpio_iof_0_10_o_valid   ;\n  wire gpio_iof_0_11_i_ival   ;\n  wire gpio_iof_0_11_o_oval   ;\n  wire gpio_iof_0_11_o_oe   ;\n  wire gpio_iof_0_11_o_ie   ;\n  wire gpio_iof_0_11_o_valid   ;\n  wire gpio_iof_0_12_i_ival   ;\n  wire gpio_iof_0_12_o_oval   ;\n  wire gpio_iof_0_12_o_oe   ;\n  wire gpio_iof_0_12_o_ie   ;\n  wire gpio_iof_0_12_o_valid   ;\n  wire gpio_iof_0_13_i_ival   ;\n  wire gpio_iof_0_13_o_oval   ;\n  wire gpio_iof_0_13_o_oe   ;\n  wire gpio_iof_0_13_o_ie   ;\n  wire gpio_iof_0_13_o_valid   ;\n  wire gpio_iof_0_14_i_ival   ;\n  wire gpio_iof_0_14_o_oval   ;\n  wire gpio_iof_0_14_o_oe   ;\n  wire gpio_iof_0_14_o_ie   ;\n  wire gpio_iof_0_14_o_valid   ;\n  wire gpio_iof_0_15_i_ival   ;\n  wire gpio_iof_0_15_o_oval   ;\n  wire gpio_iof_0_15_o_oe   ;\n  wire gpio_iof_0_15_o_ie   ;\n  wire gpio_iof_0_15_o_valid   ;\n  wire gpio_iof_0_16_i_ival   ;\n  wire gpio_iof_0_16_o_oval   ;\n  wire gpio_iof_0_16_o_oe   ;\n  wire gpio_iof_0_16_o_ie   ;\n  wire gpio_iof_0_16_o_valid   ;\n  wire gpio_iof_0_17_i_ival   ;\n  wire gpio_iof_0_17_o_oval   ;\n  wire gpio_iof_0_17_o_oe   ;\n  wire gpio_iof_0_17_o_ie   ;\n  wire gpio_iof_0_17_o_valid   ;\n  wire gpio_iof_0_18_i_ival   ;\n  wire gpio_iof_0_18_o_oval   ;\n  wire gpio_iof_0_18_o_oe   ;\n  wire gpio_iof_0_18_o_ie   ;\n  wire gpio_iof_0_18_o_valid   ;\n  wire gpio_iof_0_19_i_ival   ;\n  wire gpio_iof_0_19_o_oval   ;\n  wire gpio_iof_0_19_o_oe   ;\n  wire gpio_iof_0_19_o_ie   ;\n  wire gpio_iof_0_19_o_valid   ;\n  wire gpio_iof_0_20_i_ival   ;\n  wire gpio_iof_0_20_o_oval   ;\n  wire gpio_iof_0_20_o_oe   ;\n  wire gpio_iof_0_20_o_ie   ;\n  wire gpio_iof_0_20_o_valid   ;\n  wire gpio_iof_0_21_i_ival   ;\n  wire gpio_iof_0_21_o_oval   ;\n  wire gpio_iof_0_21_o_oe   ;\n  wire gpio_iof_0_21_o_ie   ;\n  wire gpio_iof_0_21_o_valid   ;\n  wire gpio_iof_0_22_i_ival   ;\n  wire gpio_iof_0_22_o_oval   ;\n  wire gpio_iof_0_22_o_oe   ;\n  wire gpio_iof_0_22_o_ie   ;\n  wire gpio_iof_0_22_o_valid   ;\n  wire gpio_iof_0_23_i_ival   ;\n  wire gpio_iof_0_23_o_oval   ;\n  wire gpio_iof_0_23_o_oe   ;\n  wire gpio_iof_0_23_o_ie   ;\n  wire gpio_iof_0_23_o_valid   ;\n  wire gpio_iof_0_24_i_ival   ;\n  wire gpio_iof_0_24_o_oval   ;\n  wire gpio_iof_0_24_o_oe   ;\n  wire gpio_iof_0_24_o_ie   ;\n  wire gpio_iof_0_24_o_valid   ;\n  wire gpio_iof_0_25_i_ival   ;\n  wire gpio_iof_0_25_o_oval   ;\n  wire gpio_iof_0_25_o_oe   ;\n  wire gpio_iof_0_25_o_ie   ;\n  wire gpio_iof_0_25_o_valid   ;\n  wire gpio_iof_0_26_i_ival   ;\n  wire gpio_iof_0_26_o_oval   ;\n  wire gpio_iof_0_26_o_oe   ;\n  wire gpio_iof_0_26_o_ie   ;\n  wire gpio_iof_0_26_o_valid   ;\n  wire gpio_iof_0_27_i_ival   ;\n  wire gpio_iof_0_27_o_oval   ;\n  wire gpio_iof_0_27_o_oe   ;\n  wire gpio_iof_0_27_o_ie   ;\n  wire gpio_iof_0_27_o_valid   ;\n  wire gpio_iof_0_28_i_ival   ;\n  wire gpio_iof_0_28_o_oval   ;\n  wire gpio_iof_0_28_o_oe   ;\n  wire gpio_iof_0_28_o_ie   ;\n  wire gpio_iof_0_28_o_valid   ;\n  wire gpio_iof_0_29_i_ival   ;\n  wire gpio_iof_0_29_o_oval   ;\n  wire gpio_iof_0_29_o_oe   ;\n  wire gpio_iof_0_29_o_ie   ;\n  wire gpio_iof_0_29_o_valid   ;\n  wire gpio_iof_0_30_i_ival   ;\n  wire gpio_iof_0_30_o_oval   ;\n  wire gpio_iof_0_30_o_oe   ;\n  wire gpio_iof_0_30_o_ie   ;\n  wire gpio_iof_0_30_o_valid   ;\n  wire gpio_iof_0_31_i_ival   ;\n  wire gpio_iof_0_31_o_oval   ;\n  wire gpio_iof_0_31_o_oe   ;\n  wire gpio_iof_0_31_o_ie   ;\n  wire gpio_iof_0_31_o_valid   ;\n  \n  wire gpio_iof_1_0_i_ival   ;\n  wire gpio_iof_1_0_o_oval   ;\n  wire gpio_iof_1_0_o_oe   ;\n  wire gpio_iof_1_0_o_ie   ;\n  wire gpio_iof_1_0_o_valid   ;\n  wire gpio_iof_1_1_i_ival   ;\n  wire gpio_iof_1_1_o_oval   ;\n  wire gpio_iof_1_1_o_oe   ;\n  wire gpio_iof_1_1_o_ie   ;\n  wire gpio_iof_1_1_o_valid   ;\n  wire gpio_iof_1_2_i_ival   ;\n  wire gpio_iof_1_2_o_oval   ;\n  wire gpio_iof_1_2_o_oe   ;\n  wire gpio_io"}
{"text": "f_1_2_o_ie   ;\n  wire gpio_iof_1_2_o_valid   ;\n  wire gpio_iof_1_3_i_ival   ;\n  wire gpio_iof_1_3_o_oval   ;\n  wire gpio_iof_1_3_o_oe   ;\n  wire gpio_iof_1_3_o_ie   ;\n  wire gpio_iof_1_3_o_valid   ;\n  wire gpio_iof_1_4_i_ival   ;\n  wire gpio_iof_1_4_o_oval   ;\n  wire gpio_iof_1_4_o_oe   ;\n  wire gpio_iof_1_4_o_ie   ;\n  wire gpio_iof_1_4_o_valid   ;\n  wire gpio_iof_1_5_i_ival   ;\n  wire gpio_iof_1_5_o_oval   ;\n  wire gpio_iof_1_5_o_oe   ;\n  wire gpio_iof_1_5_o_ie   ;\n  wire gpio_iof_1_5_o_valid   ;\n  wire gpio_iof_1_6_i_ival   ;\n  wire gpio_iof_1_6_o_oval   ;\n  wire gpio_iof_1_6_o_oe   ;\n  wire gpio_iof_1_6_o_ie   ;\n  wire gpio_iof_1_6_o_valid   ;\n  wire gpio_iof_1_7_i_ival   ;\n  wire gpio_iof_1_7_o_oval   ;\n  wire gpio_iof_1_7_o_oe   ;\n  wire gpio_iof_1_7_o_ie   ;\n  wire gpio_iof_1_7_o_valid   ;\n  wire gpio_iof_1_8_i_ival   ;\n  wire gpio_iof_1_8_o_oval   ;\n  wire gpio_iof_1_8_o_oe   ;\n  wire gpio_iof_1_8_o_ie   ;\n  wire gpio_iof_1_8_o_valid   ;\n  wire gpio_iof_1_9_i_ival   ;\n  wire gpio_iof_1_9_o_oval   ;\n  wire gpio_iof_1_9_o_oe   ;\n  wire gpio_iof_1_9_o_ie   ;\n  wire gpio_iof_1_9_o_valid   ;\n  wire gpio_iof_1_10_i_ival   ;\n  wire gpio_iof_1_10_o_oval   ;\n  wire gpio_iof_1_10_o_oe   ;\n  wire gpio_iof_1_10_o_ie   ;\n  wire gpio_iof_1_10_o_valid   ;\n  wire gpio_iof_1_11_i_ival   ;\n  wire gpio_iof_1_11_o_oval   ;\n  wire gpio_iof_1_11_o_oe   ;\n  wire gpio_iof_1_11_o_ie   ;\n  wire gpio_iof_1_11_o_valid   ;\n  wire gpio_iof_1_12_i_ival   ;\n  wire gpio_iof_1_12_o_oval   ;\n  wire gpio_iof_1_12_o_oe   ;\n  wire gpio_iof_1_12_o_ie   ;\n  wire gpio_iof_1_12_o_valid   ;\n  wire gpio_iof_1_13_i_ival   ;\n  wire gpio_iof_1_13_o_oval   ;\n  wire gpio_iof_1_13_o_oe   ;\n  wire gpio_iof_1_13_o_ie   ;\n  wire gpio_iof_1_13_o_valid   ;\n  wire gpio_iof_1_14_i_ival   ;\n  wire gpio_iof_1_14_o_oval   ;\n  wire gpio_iof_1_14_o_oe   ;\n  wire gpio_iof_1_14_o_ie   ;\n  wire gpio_iof_1_14_o_valid   ;\n  wire gpio_iof_1_15_i_ival   ;\n  wire gpio_iof_1_15_o_oval   ;\n  wire gpio_iof_1_15_o_oe   ;\n  wire gpio_iof_1_15_o_ie   ;\n  wire gpio_iof_1_15_o_valid   ;\n  wire gpio_iof_1_16_i_ival   ;\n  wire gpio_iof_1_16_o_oval   ;\n  wire gpio_iof_1_16_o_oe   ;\n  wire gpio_iof_1_16_o_ie   ;\n  wire gpio_iof_1_16_o_valid   ;\n  wire gpio_iof_1_17_i_ival   ;\n  wire gpio_iof_1_17_o_oval   ;\n  wire gpio_iof_1_17_o_oe   ;\n  wire gpio_iof_1_17_o_ie   ;\n  wire gpio_iof_1_17_o_valid   ;\n  wire gpio_iof_1_18_i_ival   ;\n  wire gpio_iof_1_18_o_oval   ;\n  wire gpio_iof_1_18_o_oe   ;\n  wire gpio_iof_1_18_o_ie   ;\n  wire gpio_iof_1_18_o_valid   ;\n  wire gpio_iof_1_19_i_ival   ;\n  wire gpio_iof_1_19_o_oval   ;\n  wire gpio_iof_1_19_o_oe   ;\n  wire gpio_iof_1_19_o_ie   ;\n  wire gpio_iof_1_19_o_valid   ;\n  wire gpio_iof_1_20_i_ival   ;\n  wire gpio_iof_1_20_o_oval   ;\n  wire gpio_iof_1_20_o_oe   ;\n  wire gpio_iof_1_20_o_ie   ;\n  wire gpio_iof_1_20_o_valid   ;\n  wire gpio_iof_1_21_i_ival   ;\n  wire gpio_iof_1_21_o_oval   ;\n  wire gpio_iof_1_21_o_oe   ;\n  wire gpio_iof_1_21_o_ie   ;\n  wire gpio_iof_1_21_o_valid   ;\n  wire gpio_iof_1_22_i_ival   ;\n  wire gpio_iof_1_22_o_oval   ;\n  wire gpio_iof_1_22_o_oe   ;\n  wire gpio_iof_1_22_o_ie   ;\n  wire gpio_iof_1_22_o_valid   ;\n  wire gpio_iof_1_23_i_ival   ;\n  wire gpio_iof_1_23_o_oval   ;\n  wire gpio_iof_1_23_o_oe   ;\n  wire gpio_iof_1_23_o_ie   ;\n  wire gpio_iof_1_23_o_valid   ;\n  wire gpio_iof_1_24_i_ival   ;\n  wire gpio_iof_1_24_o_oval   ;\n  wire gpio_iof_1_24_o_oe   ;\n  wire gpio_iof_1_24_o_ie   ;\n  wire gpio_iof_1_24_o_valid   ;\n  wire gpio_iof_1_25_i_ival   ;\n  wire gpio_iof_1_25_o_oval   ;\n  wire gpio_iof_1_25_o_oe   ;\n  wire gpio_iof_1_25_o_ie   ;\n  wire gpio_iof_1_25_o_valid   ;\n  wire gpio_iof_1_26_i_ival   ;\n  wire gpio_iof_1_26_o_oval   ;\n  wire gpio_iof_1_26_o_oe   ;\n  wire gpio_iof_1_26_o_ie   ;\n  wire gpio_iof_1_26_o_valid   ;\n  wire gpio_iof_1_27_i_ival   ;\n  wire gpio_iof_1_27_o_oval   ;\n  wire gpio_iof_1_27_o_oe   ;\n  wire gpio_iof_1_27_o_ie   ;\n  wire gpio_iof_1_27_o_valid   ;\n  wire gpio_iof_1_28_i_ival   ;\n  wire gpio_iof_1_28_o_oval   ;\n  wire gpio_iof_1_28_o_oe   ;\n  wire gpio_iof_1_28_o_ie   ;\n  wire gpio_iof_1_28_o_valid   ;\n  wire gpio_iof_1_29_i_ival   ;\n  wire gpio_iof_1_29_o_oval   ;\n  wire gpio_iof_1_29_o_oe   ;\n  wire gpio_iof_1_29_o_ie   ;\n  wire gpio_iof_1_29_o_valid   ;\n  wire gpio_iof_1_30_i_ival   ;\n  wire gpio_iof_1_30_o_oval   ;\n  wire gpio_iof_1_30_o_oe   ;\n  wire gpio_iof_1_30_o_ie   ;\n  wire gpio_iof_1_30_o_valid   ;\n  wire gpio_iof_1_31_i_ival   ;\n  wire gpio_iof_1_31_o_oval   ;\n  wire gpio_iof_1_31_o_oe   ;\n  wire gpio_iof_1_31_o_ie   ;\n  wire gpio_iof_1_31_o_valid   ;\n\n  wire  uart0_txd;\n  wire  uart0_rxd;\n  wire  uart_pins_0_io_pins_rxd_i_ival;\n  wire  uart_pins_0_io_pins_rxd_o_oval;\n  wire  uart_pins_0_io_pins_rxd_o_oe;\n  wire  uart_pins_0_io_pins_rxd_o_ie;\n  wire  uart_pins_0_io_pins_rxd_o_pue;\n  wire  uart_pins_0_io_pins_rxd_o_ds;\n  wire  uart_pins_0_io_pins_txd_i_ival;\n  wire  uart_pins_0_io_pins_txd_o_oval;\n  wire  uart_pins_0_io_pins_txd_o_oe;\n  wire  uart_pins_0_io_pins_txd_o_ie;\n  wire  uart_pins_0_io_pins_txd_o_pue;\n  wire  uart_pins_0_io_pins_txd_o_ds;\n  wire  uart1_txd;\n  wire  uart1_rxd;\n  wire  uart_pins_1_io_pins_rxd_i_ival;\n  wire  uart_pins_1_io_pins_rxd_o_oval;\n  wire  uart_pins_1_io_pins_rxd_o_oe;\n  wire  uart_pins_1_io_pins_rxd_o_ie;\n  wire  uart_pins_1_io_pins_rxd_o_pue;\n  wire  uart_pins_1_io_pins_rxd_o_ds;\n  wire  uart_pins_1_io_pins_txd_i_ival;\n  wire  uart_pins_1_io_pins_txd_o_oval;\n  wire  uart_pins_1_io_pins_txd_o_oe;\n  wire  uart_pins_1_io_pins_txd_o_ie;\n  wire  uart_pins_1_io_pins_txd_o_pue;\n  wire  uart_pins_1_io_pins_txd_o_ds;\n  wire  pwm_pins_0_io_pins_pwm_0_i_ival;\n  wire  pwm_pins_0_io_pins_pwm_0_o_oval;\n  wire  pwm_pins_0_io_pins_pwm_0_o_oe;\n  wire  pwm_pins_0_io_pins_pwm_0_o_ie;\n  wire  pwm_pins_0_io_pins_pwm_0_o_pue;\n  wire  pwm_pins_0_io_pins_pwm_0_o_ds;\n  wire  pwm_pins_0_io_pins_pwm_1_i_ival;\n  wire  pwm_pins_0_io_pins_pwm_1_o_oval;\n  wire  pwm_pins_0_io_pins_pwm_1_o_oe;\n  wire  pwm_pins_0_io_pins_pwm_1_o_ie;\n  wire  pwm_pins_0_io_pins_pwm_1_o_pue;\n  wire  pwm_pins_0_io_pins_pwm_1_o_ds;\n  wire  pwm_pins_0_io_pins_pwm_2_i_ival;\n  wire  pwm_pins_0_io_pins_pwm_2_o_oval;\n  wire  pwm_pins_0_io_pins_pwm_2_o_oe;\n  wire  pwm_pins_0_io_pins_pwm_2_o_ie;\n  wire  pwm_pins_0_io_pins_pwm_2_o_pue;\n  wire  pwm_pins_0_io_pins_pwm_2_o_ds;\n  wire  pwm_pins_0_io_pins_pwm_3_i_ival;\n  wire  pwm_pins_0_io_pins_pwm_3_o_oval;\n  wire  pwm_pins_0_io_pins_pwm_3_o_oe;\n  wire  pwm_pins_0_io_pins_pwm_3_o_ie;\n  wire  pwm_pins_0_io_pins_pwm_3_o_pue;\n  wire  pwm_pins_0_io_pins_pwm_3_o_ds;\n  wire  pwm_pins_1_io_pins_pwm_0_i_ival;\n  wire  pwm_pins_1_io_pins_pwm_0_o_oval;\n  wire  pwm_pins_1_io_pins_pwm_0_o_oe;\n  wire  pwm_pins_1_io_pins_pwm_0_o_ie;\n  wire  pwm_pins_1_io_pins_pwm_0_o_pue;\n  wire  pwm_pins_1_io_pins_pwm_0_o_ds;\n  wire  pwm_pins_1_io_pins_pwm_1_i_ival;\n  wire  pwm_pins_1_io_pins_pwm_1_o_oval;\n  wire  pwm_pins_1_io_pins_pwm_1_o_oe;\n  wire  pwm_pins_1_io_pins_pwm_1_o_ie;\n  wire  pwm_pins_1_io_pins_pwm_1_o_pue;\n  wire  pwm_pins_1_io_pins_pwm_1_o_ds;\n  wire  pwm_pins_1_io_pins_pwm_2_i_ival;\n  wire  pwm_pins_1_io_pins_pwm_2_o_oval;\n  wire  pwm_pins_1_io_pins_pwm_2_o_oe;\n  wire  pwm_pins_1_io_pins_pwm_2_o_ie;\n  wire  pwm_pins_1_io_pins_pwm_2_o_pue;\n  wire  pwm_pins_1_io_pins_pwm_2_o_ds;\n  wire  pwm_pins_1_io_pins_pwm_3_i_ival;\n  wire  pwm_pins_1_io_pins_pwm_3_o_oval;\n  wire  pwm_pins_1_io_pins_pwm_3_o_oe;\n  wire  pwm_pins_1_io_pins_pwm_3_o_ie;\n  wire  pwm_pins_1_io_pins_pwm_3_o_pue;\n  wire  pwm_pins_1_io_pins_pwm_3_o_ds;\n  wire  pwm_pins_2_io_pins_pwm_0_i_ival;\n  wire  pwm_pins_2_io_pins_pwm_0_o_oval;\n  wire  pwm_pins_2_io_pins_pwm_0_o_oe;\n  wire  pwm_pins_2_io_pins_pwm_0_o_ie;\n  wire  pwm_pins_2_io_pins_pwm_0_o_pue;\n  wire  pwm_pins_2_io_pins_pwm_0_o_ds;\n  wire  pwm_pins_2_io_pins_pwm_1_i_ival;\n  wire  pwm_pins_2_io_pins_pwm_1_o_oval;\n  wire  pwm_pins_2_io_pins_pwm_1_o_oe;\n  wire  pwm_pins_2_io_pins_pwm_1_o_ie;\n  wire  pwm_pins_2_io_pins_pwm_1_o_pue;\n  wire  pwm_pins_2_io_pins_pwm_1_o_ds;\n  wire  pwm_pins_2_io_pins_pwm_2_i_ival;\n  wire  pwm_pins_2_io_pins_pwm_2_o_oval;\n  wire  pwm_pins_2_io_pins_pwm_2_o_oe;\n  wire  pwm_pins_2_io_pins_pwm_2_o_ie;\n  wire  pwm_pins_2_io_pins_pwm_2_o_pue;\n  wire  pwm_pins_2_io_pins_pwm_2_o_ds;\n  wire  pwm_pins_2_io_pins_pwm_3_i_ival;\n  wire  pwm_pins_2_io_pins_pwm_3_o_oval;\n  wire  pwm_pins_2_io_pins_pwm_3_o_oe;\n  wire  pwm_pins_2_io_pins_pwm_3_o_ie;\n  wire  pwm_pins_2_io_pins_pwm_3_o_pue;\n  wire  pwm_pins_2_io_pins_pwm_3_o_ds;\n  wire  spi_pins_0_io_pins_sck_i_ival;\n  wire  spi_pins_0_io_pins_sck_o_oval;\n  wire  spi_pins_0_io_pins_sck_o_oe;\n  wire  spi_pins_0_io_pins_sck_o_ie;\n  wire  spi_pins_0_io_pins_sck_o_pue;\n  wire  spi_pins_0_io_pins_sck_o_ds;\n  wire  spi_pins_0_io_pins_dq_0_i_ival;\n  wire  spi_pins_0_io_pins_dq_0_o_oval;\n  wire  spi_pins_0_io_pins_dq_0_o_oe;\n  wire  spi_pins_0_io_pins_dq_0_o_ie;\n  wire  spi_pins_0_io_pins_dq_0_o_pue;\n  wire  spi_pins_0_io_pins_dq_0_o_ds;\n  wire  spi_pins_0_io_pins_dq_1_i_ival;\n  wire  spi_pins_0_io_pins_dq_1_o_oval;\n  wire  spi_pins_0_io_pins_dq_1_o_oe;\n  wire  spi_pins_0_io_pins_dq_1_o_ie;\n  wire  spi_pins_0_io_pins_dq_1_o_pue;\n  wire  spi_pins_0_io_pins_dq_1_o_ds;\n  wire  spi_pins_0_io_pins_dq_2_i_ival;\n  wire  spi_pins_0_io_pins_dq_2_o_oval;\n  wire  spi_pins_0_io_pins_dq_2_o_oe;\n  wire  spi_pins_0_io_pins_dq_2_o_ie;\n  wire  spi_pins_0_io_pins_dq_2_o_pue;\n  wire  spi_pins_0_io_pins_dq_2_o_ds;\n  wire  spi_pins_0_io_pins_dq_3_i_ival;\n  wire  spi_pins_0_io_pins_dq_3_o_oval;\n  wire  spi_pins_0_io_pins_dq_3_o_oe;\n  wire  spi_pins_0_io_pins_dq_3_o_ie;\n  wire  spi_pins_0_io_pins_dq_3_o_pue;\n  wire  spi_pins_0_io_pins_dq_3_o_ds;\n  wire  spi_pins_0_io_pins_cs_0_i_ival;\n  wire  spi_pins_0_io_pins_cs_0_o_oval;\n  wire  spi_pins_0_io_pins_cs_0_o_oe;\n  wire  spi_pins_0_io_pins_cs_0_o_ie;\n  wire  spi_pins_0_io_pins_cs_0_o_pue;\n  wire  spi_pins_0_io_pins_cs_0_o_ds;\n  wire  spi_pins_0_io_pins_cs_1_i_ival;\n  wire  spi_pins_0_io_pins_cs_1_o_oval;\n  wire  spi_pins_0_io_pins_cs_1_o_oe;\n  wire  spi_pins_0_io_pins_cs_1_o_ie;\n  wire  spi_pins_0_io_pins_cs_1_o_pue;\n  wire  spi_pins_0_io_pins_cs_1_o_ds;\n  wire  spi_pins_0_io_pins_cs_2_i_ival;\n  wire  spi_pins_0_io_pins_cs_2_o_oval;\n  wire  spi_pins_0_io_pins_cs_2_o_oe;\n  wire  spi_pins_0_io_pins_cs_2_o_ie;\n  wire  spi_pins_0_io_pins_cs_2_o_pue;\n  wire  spi_pins_0_io_pins_cs_2_o_ds;\n  wire  spi_pins_0_io_pins_cs_3_i_ival;\n  wire  spi_pins_0_io_pins_cs_3_o_oval;\n  wire  spi_pins_0_io_pins_cs_3_o_oe;\n  wire  spi_pins_0_io_pins_cs_3_o_ie;\n  wire  spi_pins_0_io_pins_cs_3_o_pue;\n  wire  spi_pins_0_io_pins_cs_3_o_ds;\n  wire  spi_pins_1_io_pins_sck_i_ival;\n  wire  spi_pins_1_io_pins_sck_o_oval;\n  wire  spi_pins_1_io_pins_sck_o_oe;\n  wire  spi_pins_1_io_pins_sck_o_ie;\n  wire  spi_pins_1_io_pins_sck_o_pue;\n  wire  spi_pins_1_io_pins_sck_o_ds;\n  wire  spi_pins_1_io_pins_dq_0_i_ival;\n  wire  spi_pins_1_io_pins_dq_0_o_oval;\n  wire  spi_pins_1_io_pins_dq_0_o_oe;\n  wire  spi_pins_1_io_pins_dq_0_o_ie;\n  wire  spi_pins_1_io_pins_dq_0_o_pue;\n  wire  spi_pins_1_io_pins_dq_0_o_ds;\n  wire  spi_pins_1_io_pins_dq_1_i_ival;\n  wire  spi_pins_1_io_pins_dq_1_o_oval;\n  wire  spi_pins_1_io_pins_dq_1_o_oe;\n  wire  spi_pins_1_io_pins_dq_1_o_ie;\n  wire  spi_pins_1_io_pins_dq_1_o_pue;\n  wire  spi_pins_1_io_pins_dq_1_o_ds;\n  wire  spi_pins_1_io_pins_dq_2_i_ival;\n  wire  spi_pins_1_io_pins_dq_2_o_oval;\n  wire  spi_pins_1_io_pins_dq_2_o_oe;\n  wire  spi_pins_1_io_pins_dq_2_o_ie;\n  wire  spi_pins_1_io_pins_dq_2_o_pue;\n  wire  spi_pins_1_io_pins_dq_2_o_ds;\n  wire  spi_pins_1_io_pins_dq_3_i_ival;\n  wire  spi_pins_1_io_pins_dq_3_o_oval;\n  wire  spi_pins_1_io_pins_dq_3_o_oe;\n  wire  spi_pins_1_io_pins_dq_3_o_ie;\n  wire  spi_pins_1_io_pins_dq_3_o_pue;\n  wire  spi_pins_1_io_pins_dq_3_o_ds;\n  wire  spi_pins_1_io_pins_cs_0_i_ival;\n  wire  spi_pins_1_io_pins_cs_0_o_oval;\n  wire  spi_pins_1_io_pins_cs_0_o_oe;\n  wire  spi_pins_1_io_pins_cs_0_o_ie;\n  wire  spi_pins_1_io_pins_cs_0_o_pue;\n  wire  spi_pins_1_io_pins_cs_0_o_ds;\n\n  assign gpio_iof_0_0_o_oval       = 1'b0;\n  assign gpio_iof_0_0_o_oe         = 1'b0;\n  assign gpio_iof_0_0_o_ie         = 1'b0;\n  assign gpio_iof_0_0_o_valid      = 1'b0;\n\n  assign gpio_iof_0_1_o_oval       = 1'b0;\n  assign gpio_iof_0_1_o_oe         = 1'b0;\n  assign gpio_iof_0_1_o_ie         = 1'b0;\n  assign gpio_iof_0_1_o_valid      = 1'b0;\n\n  assign spi_pins_0_io_pins_cs_0_i_ival = gpio_iof_0_2_i_ival;\n  assign gpio_iof_0_2_o_oval       = spi_pins_0_io_pins_cs_0_o_oval;\n  assign gpio_iof_0_2_o_oe         = spi_pins_0_io_pins_cs_0_o_oe;\n  assign gpio_iof_0_2_o_ie         = spi_pins_0_io_pins_cs_0_o_ie;\n  assign gpio_iof_0_2_o_valid      = 1'h1;\n\n  assign spi_pins_0_io_pins_dq_0_i_ival = gpio_iof_0_3_i_ival;\n  assign gpio_iof_0_3_o_oval       = spi_pins_0_io_pins_dq_0_o_oval;\n  assign gpio_iof_0_3_o_oe         = spi_pins_0_io_pins_dq_0_o_oe;\n  assign gpio_iof_0_3_o_ie         = spi_pins_0_io_pins_dq_0_o_ie;\n  assign gpio_iof_0_3_o_valid      = 1'h1;\n\n  assign spi_pins_0_io_pins_dq_1_i_ival = gpio_iof_0_4_i_ival;\n  assign gpio_iof_0_4_o_oval       = spi_pins_0_io_pins_dq_1_o_oval;\n  assign gpio_iof_0_4_o_oe         = spi_pins_0_io_pins_dq_1_o_oe;\n  assign gpio_iof_0_4_o_ie         = spi_pins_0_io_pins_dq_1_o_ie;\n  assign gpio_iof_0_4_o_valid      = 1'h1;\n\n  assign spi_pins_0_io_pins_sck_i_ival = gpio_iof_0_5_i_ival;\n  assign gpio_iof_0_5_o_oval       = spi_pins_0_io_pins_sck_o_oval;\n  assign gpio_iof_0_5_o_oe         = spi_pins_0_io_pins_sck_o_oe;\n  assign gpio_iof_0_5_o_ie         = spi_pins_0_io_pins_sck_o_ie;\n  assign gpio_iof_0_5_o_valid      = 1'h1;\n\n  assign spi_pins_0_io_pins_dq_2_i_ival = gpio_iof_0_6_i_ival;\n  assign gpio_iof_0_6_o_oval       = spi_pins_0_io_pins_dq_2_o_oval;\n  assign gpio_iof_0_6_o_oe         = spi_pins_0_io_pins_dq_2_o_oe;\n  assign gpio_iof_0_6_o_ie         = spi_pins_0_io_pins_dq_2_o_ie;\n  assign gpio_iof_0_6_o_valid      = 1'h1;\n\n  assign spi_pins_0_io_pins_dq_3_i_ival = gpio_iof_0_7_i_ival;\n  assign gpio_iof_0_7_o_oval       = spi_pins_0_io_pins_dq_3_o_oval;\n  assign gpio_iof_0_7_o_oe         = spi_pins_0_io_pins_dq_3_o_oe;\n  assign gpio_iof_0_7_o_ie         = spi_pins_0_io_pins_dq_3_o_ie;\n  assign gpio_iof_0_7_o_valid      = 1'h1;\n\n  assign spi_pins_0_io_pins_cs_1_i_ival = gpio_iof_0_8_i_ival;\n  assign gpio_iof_0_8_o_oval       = spi_pins_0_io_pins_cs_1_o_oval;\n  assign gpio_iof_0_8_o_oe         = spi_pins_0_io_pins_cs_1_o_oe;\n  assign gpio_iof_0_8_o_ie         = spi_pins_0_io_pins_cs_1_o_ie;\n  assign gpio_iof_0_8_o_valid      = 1'h1;\n\n  assign spi_pins_0_io_pins_cs_2_i_ival = gpio_iof_0_9_i_ival;\n  assign gpio_iof_0_9_o_oval       = spi_pins_0_io_pins_cs_2_o_oval;\n  assign gpio_iof_0_9_o_oe         = spi_pins_0_io_pins_cs_2_o_oe;\n  assign gpio_iof_0_9_o_ie         = spi_pins_0_io_pins_cs_2_o_ie;\n  assign gpio_iof_0_9_o_valid      = 1'h1;\n\n  assign spi_pins_0_io_pins_cs_3_i_ival = gpio_iof_0_10_i_ival;\n  assign gpio_iof_0_10_o_oval      = spi_pins_0_io_pins_cs_3_o_oval;\n  assign gpio_iof_0_10_o_oe        = spi_pins_0_io_pins_cs_3_o_oe;\n  assign gpio_iof_0_10_o_ie        = spi_pins_0_io_pins_cs_3_o_ie;\n  assign gpio_iof_0_10_o_valid     = 1'h1;\n\n  assign gpio_iof_0_11_o_oval      = 1'b0;\n  assign gpio_iof_0_11_o_oe        = 1'b0;\n  assign gpio_iof_0_11_o_ie        = 1'b0;\n  assign gpio_iof_0_11_o_valid     = 1'b0;\n\n  assign gpio_iof_0_12_o_oval      = 1'b0;\n  assign gpio_iof_0_12_o_oe        = 1'b0;\n  assign gpio_iof_0_12_o_ie        = 1'b0;\n  assign gpio_iof_0_12_o_valid     = 1'b0;\n\n  assign gpio_iof_0_13_o_oval      = 1'b0;\n  assign gpio_iof_0_13_o_oe        = 1'b0;\n  assign gpio_iof_0_13_o_ie        = 1'b0;\n  assign gpio_iof_0_13_o_valid     = 1'b0;\n\n  assign i2c_sda_pad_i             = gpio_iof_0_14_i_ival;\n  assign gpio_iof_0_14_o_oval      = i2c_sda_pad_o;\n  assign gpio_iof_0_14_o_oe        = (~i2c_sda_padoen_o);// Note this padoen is active low\n  assign gpio_iof_0_14_o_ie        = i2c_sda_padoen_o;\n  assign gpio_iof_0_14_o_valid     = 1'b1;\n\n  assign i2c_scl_pad_i             = gpio_iof_0_15_i_ival;\n  assign gpio_iof_0_15_o_oval      = i2c_scl_pad_o;\n  assign gpio_iof_0_15_o_oe        = (~i2c_scl_padoen_o);// Note this padoen is active low\n  assign gpio_iof_0_15_o_ie        = i2c_scl_padoen_o;\n  assign gpio_iof_0_15_o_valid     = 1'b1;\n\n  assign uart_pins_0_io_pins_rxd_i_ival = gpio_iof_0_16_i_ival;\n  assign gpio_iof_0_16_o_oval      = uart_pins_0_io_pins_rxd_o_oval;\n  assign gpio_iof_0_16_o_oe        = uart_pins_0_io_pins_rxd_o_oe;\n  assign gpio_iof_0_16_o_ie        = uart_pins_0_io_pins_rxd_o_ie;\n  assign gpio_iof_0_16_o_valid     = 1'h1;\n\n  assign uart_pins_0_io_pins_txd_i_ival = gpio_iof_0_17_i_ival;\n  assign gpio_iof_0_17_o_oval      = uart_pins_0_io_pins_txd_o_oval;\n  assign gpio_iof_0_17_o_oe        = uart_pins_0_io_pins_txd_o_oe;\n  assign gpio_iof_0_17_o_ie        = uart_pins_0_io_pins_txd_o_ie;\n  assign gpio_iof_0_17_o_valid     = 1'h1;\n\n  assign gpio_iof_0_18_o_oval      = 1'b0;\n  assign gpio_iof_0_18_o_oe        = 1'b0;\n  assign gpio_iof_0_18_o_ie        = 1'b0;\n  assign gpio_iof_0_18_o_valid     = 1'b0;\n\n  assign gpio_iof_0_19_o_oval      = 1'b0;\n  assign gpio_iof_0_19_o_oe        = 1'b0;\n  assign gpio_iof_0_19_o_ie        = 1'b0;\n  assign gpio_iof_0_19_o_valid     = 1'b0;\n\n  assign gpio_iof_0_20_o_oval      = 1'b0;\n  assign gpio_iof_0_20_o_oe        = 1'b0;\n  assign gpio_iof_0_20_o_ie        = 1'b0;\n  assign gpio_iof_0_20_o_valid     = 1'b0;\n\n  assign gpio_iof_0_21_o_oval      = 1'b0;\n  assign gpio_iof_0_21_o_oe        = 1'b0;\n  assign gpio_iof_0_21_o_ie        = 1'b0;\n  assign gpio_iof_0_21_o_valid     = 1'b0;\n\n  assign gpio_iof_0_22_o_oval      = 1'b0;\n  assign gpio_iof_0_22_o_oe        = 1'b0;\n  assign gpio_iof_0_22_o_ie        = 1'b0;\n  assign gpio_iof_0_22_o_valid     = 1'b0;\n\n  assign gpio_iof_0_23_o_oval      = 1'b0;\n  assign gpio_iof_0_23_o_oe        = 1'b0;\n  assign gpio_iof_0_23_o_ie        = 1'b0;\n  assign gpio_iof_0_23_o_valid     = 1'b0;\n\n  assign uart_pins_1_io_pins_rxd_i_ival = gpio_iof_0_24_i_ival;\n  assign gpio_iof_0_24_o_oval      = uart_pins_1_io_pins_rxd_o_oval;\n  assign gpio_iof_0_24_o_oe        = uart_pins_1_io_pins_rxd_o_oe;\n  assign gpio_iof_0_24_o_ie        = uart_pins_1_io_pins_rxd_o_ie;\n  assign gpio_iof_0_24_o_valid     = 1'h1;\n\n  assign uart_pins_1_io_pins_txd_i_ival = gpio_iof_0_25_i_ival;\n  assign gpio_iof_0_25_o_oval      = uart_pins_1_io_pins_txd_o_oval;\n  assign gpio_iof_0_25_o_oe        = uart_pins_1_io_pins_txd_o_oe;\n  assign gpio_iof_0_25_o_ie        = uart_pins_1_io_pins_txd_o_ie;\n  assign gpio_iof_0_25_o_valid     = 1'h1;\n\n  assign spi_pins_1_io_pins_cs_0_i_ival = gpio_iof_0_26_i_ival;\n  assign gpio_iof_0_26_o_oval      = spi_pins_1_io_pins_cs_0_o_oval;\n  assign gpio_iof_0_26_o_oe        = spi_pins_1_io_pins_cs_0_o_oe;\n  assign gpio_iof_0_26_o_ie        = spi_pins_1_io_pins_cs_0_o_ie;\n  assign gpio_iof_0_26_o_valid     = 1'h1;\n\n  assign spi_pins_1_io_pins_dq_0_i_ival = gpio_iof_0_27_i_ival;\n  assign gpio_iof_0_27_o_oval      = spi_pins_1_io_pins_dq_0_o_oval;\n  assign gpio_iof_0_27_o_oe        = spi_pins_1_io_pins_dq_0_o_oe;\n  assign gpio_iof_0_27_o_ie        = spi_pins_1_io_pins_dq_0_o_ie;\n  assign gpio_iof_0_27_o_valid     = 1'h1;\n\n  assign spi_pins_1_io_pins_dq_1_i_ival = gpio_iof_0_28_i_ival;\n  assign gpio_iof_0_28_o_oval      = spi_pins_1_io_pins_dq_1_o_oval;\n  assign gpio_iof_0_28_o_oe        = spi_pins_1_io_pins_dq_1_o_oe;\n  assign gpio_iof_0_28_o_ie        = spi_pins_1_io_pins_dq_1_o_ie;\n  assign gpio_iof_0_28_o_valid     = 1'h1;\n\n  assign spi_pins_1_io_pins_sck_i_ival = gpio_iof_0_29_i_ival;\n  assign gpio_iof_0_29_o_oval      = spi_pins_1_io_pins_sck_o_oval;\n  assign gpio_iof_0_29_o_oe        = spi_pins_1_io_pins_sck_o_oe;\n  assign gpio_iof_0_29_o_ie        = spi_pins_1_io_pins_sck_o_ie;\n  assign gpio_iof_0_29_o_valid     = 1'h1;\n\n  assign spi_pins_1_io_pins_dq_2_i_ival = gpio_iof_0_30_i_ival;\n  assign gpio_iof_0_30_o_oval      = spi_pins_1_io_pins_dq_2_o_oval;\n  assign gpio_iof_0_30_o_oe        = spi_pins_1_io_pins_dq_2_o_oe;\n  assign gpio_iof_0_30_o_ie        = spi_pins_1_io_pins_dq_2_o_ie;\n  assign gpio_iof_0_30_o_valid "}
{"text": "    = 1'h1;\n\n  assign spi_pins_1_io_pins_dq_3_i_ival = gpio_iof_0_31_i_ival;\n  assign gpio_iof_0_31_o_oval      = spi_pins_1_io_pins_dq_3_o_oval;\n  assign gpio_iof_0_31_o_oe        = spi_pins_1_io_pins_dq_3_o_oe;\n  assign gpio_iof_0_31_o_ie        = spi_pins_1_io_pins_dq_3_o_ie;\n  assign gpio_iof_0_31_o_valid     = 1'h1;\n\n  assign pwm_pins_0_io_pins_pwm_0_i_ival = gpio_iof_1_0_i_ival;\n  assign gpio_iof_1_0_o_oval       = pwm_pins_0_io_pins_pwm_0_o_oval;\n  assign gpio_iof_1_0_o_oe         = pwm_pins_0_io_pins_pwm_0_o_oe;\n  assign gpio_iof_1_0_o_ie         = pwm_pins_0_io_pins_pwm_0_o_ie;\n  assign gpio_iof_1_0_o_valid      = 1'h1;\n\n  assign pwm_pins_0_io_pins_pwm_1_i_ival = gpio_iof_1_1_i_ival;\n  assign gpio_iof_1_1_o_oval       = pwm_pins_0_io_pins_pwm_1_o_oval;\n  assign gpio_iof_1_1_o_oe         = pwm_pins_0_io_pins_pwm_1_o_oe;\n  assign gpio_iof_1_1_o_ie         = pwm_pins_0_io_pins_pwm_1_o_ie;\n  assign gpio_iof_1_1_o_valid      = 1'h1;\n\n  assign pwm_pins_0_io_pins_pwm_2_i_ival = gpio_iof_1_2_i_ival;\n  assign gpio_iof_1_2_o_oval       = pwm_pins_0_io_pins_pwm_2_o_oval;\n  assign gpio_iof_1_2_o_oe         = pwm_pins_0_io_pins_pwm_2_o_oe;\n  assign gpio_iof_1_2_o_ie         = pwm_pins_0_io_pins_pwm_2_o_ie;\n  assign gpio_iof_1_2_o_valid      = 1'h1;\n\n  assign pwm_pins_0_io_pins_pwm_3_i_ival = gpio_iof_1_3_i_ival;\n  assign gpio_iof_1_3_o_oval       = pwm_pins_0_io_pins_pwm_3_o_oval;\n  assign gpio_iof_1_3_o_oe         = pwm_pins_0_io_pins_pwm_3_o_oe;\n  assign gpio_iof_1_3_o_ie         = pwm_pins_0_io_pins_pwm_3_o_ie;\n  assign gpio_iof_1_3_o_valid      = 1'h1;\n\n  assign gpio_iof_1_4_o_oval       = 1'b0;\n  assign gpio_iof_1_4_o_oe         = 1'b0;\n  assign gpio_iof_1_4_o_ie         = 1'b0;\n  assign gpio_iof_1_4_o_valid      = 1'b0;\n\n  assign gpio_iof_1_5_o_oval       = 1'b0;\n  assign gpio_iof_1_5_o_oe         = 1'b0;\n  assign gpio_iof_1_5_o_ie         = 1'b0;\n  assign gpio_iof_1_5_o_valid      = 1'b0;\n\n  assign gpio_iof_1_6_o_oval       = 1'b0;\n  assign gpio_iof_1_6_o_oe         = 1'b0;\n  assign gpio_iof_1_6_o_ie         = 1'b0;\n  assign gpio_iof_1_6_o_valid      = 1'b0;\n\n  assign gpio_iof_1_7_o_oval       = 1'b0;\n  assign gpio_iof_1_7_o_oe         = 1'b0;\n  assign gpio_iof_1_7_o_ie         = 1'b0;\n  assign gpio_iof_1_7_o_valid      = 1'b0;\n\n  assign gpio_iof_1_8_o_oval       = 1'b0;\n  assign gpio_iof_1_8_o_oe         = 1'b0;\n  assign gpio_iof_1_8_o_ie         = 1'b0;\n  assign gpio_iof_1_8_o_valid      = 1'b0;\n\n  assign gpio_iof_1_9_o_oval       = 1'b0;\n  assign gpio_iof_1_9_o_oe         = 1'b0;\n  assign gpio_iof_1_9_o_ie         = 1'b0;\n  assign gpio_iof_1_9_o_valid      = 1'b0;\n\n  assign pwm_pins_2_io_pins_pwm_0_i_ival = gpio_iof_1_10_i_ival;\n  assign gpio_iof_1_10_o_oval      = pwm_pins_2_io_pins_pwm_0_o_oval;\n  assign gpio_iof_1_10_o_oe        = pwm_pins_2_io_pins_pwm_0_o_oe;\n  assign gpio_iof_1_10_o_ie        = pwm_pins_2_io_pins_pwm_0_o_ie;\n  assign gpio_iof_1_10_o_valid     = 1'h1;\n\n  assign pwm_pins_2_io_pins_pwm_1_i_ival = gpio_iof_1_11_i_ival;\n  assign gpio_iof_1_11_o_oval      = pwm_pins_2_io_pins_pwm_1_o_oval;\n  assign gpio_iof_1_11_o_oe        = pwm_pins_2_io_pins_pwm_1_o_oe;\n  assign gpio_iof_1_11_o_ie        = pwm_pins_2_io_pins_pwm_1_o_ie;\n  assign gpio_iof_1_11_o_valid     = 1'h1;\n\n  assign pwm_pins_2_io_pins_pwm_2_i_ival = gpio_iof_1_12_i_ival;\n  assign gpio_iof_1_12_o_oval      = pwm_pins_2_io_pins_pwm_2_o_oval;\n  assign gpio_iof_1_12_o_oe        = pwm_pins_2_io_pins_pwm_2_o_oe;\n  assign gpio_iof_1_12_o_ie        = pwm_pins_2_io_pins_pwm_2_o_ie;\n  assign gpio_iof_1_12_o_valid     = 1'h1;\n\n  assign pwm_pins_2_io_pins_pwm_3_i_ival = gpio_iof_1_13_i_ival;\n  assign gpio_iof_1_13_o_oval      = pwm_pins_2_io_pins_pwm_3_o_oval;\n  assign gpio_iof_1_13_o_oe        = pwm_pins_2_io_pins_pwm_3_o_oe;\n  assign gpio_iof_1_13_o_ie        = pwm_pins_2_io_pins_pwm_3_o_ie;\n  assign gpio_iof_1_13_o_valid     = 1'h1;\n\n  assign gpio_iof_1_14_o_oval      = 1'b0;\n  assign gpio_iof_1_14_o_oe        = 1'b0;\n  assign gpio_iof_1_14_o_ie        = 1'b0;\n  assign gpio_iof_1_14_o_valid     = 1'b0;\n\n  assign gpio_iof_1_15_o_oval      = 1'b0;\n  assign gpio_iof_1_15_o_oe        = 1'b0;\n  assign gpio_iof_1_15_o_ie        = 1'b0;\n  assign gpio_iof_1_15_o_valid     = 1'b0;\n\n  assign gpio_iof_1_16_o_oval      = 1'b0;\n  assign gpio_iof_1_16_o_oe        = 1'b0;\n  assign gpio_iof_1_16_o_ie        = 1'b0;\n  assign gpio_iof_1_16_o_valid     = 1'b0;\n\n  assign gpio_iof_1_17_o_oval      = 1'b0;\n  assign gpio_iof_1_17_o_oe        = 1'b0;\n  assign gpio_iof_1_17_o_ie        = 1'b0;\n  assign gpio_iof_1_17_o_valid     = 1'b0;\n\n  assign gpio_iof_1_18_o_oval      = 1'b0;\n  assign gpio_iof_1_18_o_oe        = 1'b0;\n  assign gpio_iof_1_18_o_ie        = 1'b0;\n  assign gpio_iof_1_18_o_valid     = 1'b0;\n\n  assign pwm_pins_1_io_pins_pwm_1_i_ival = gpio_iof_1_19_i_ival;\n  assign gpio_iof_1_19_o_oval      = pwm_pins_1_io_pins_pwm_1_o_oval;\n  assign gpio_iof_1_19_o_oe        = pwm_pins_1_io_pins_pwm_1_o_oe;\n  assign gpio_iof_1_19_o_ie        = pwm_pins_1_io_pins_pwm_1_o_ie;\n  assign gpio_iof_1_19_o_valid     = 1'h1;\n\n  assign pwm_pins_1_io_pins_pwm_0_i_ival = gpio_iof_1_20_i_ival;\n  assign gpio_iof_1_20_o_oval      = pwm_pins_1_io_pins_pwm_0_o_oval;\n  assign gpio_iof_1_20_o_oe        = pwm_pins_1_io_pins_pwm_0_o_oe;\n  assign gpio_iof_1_20_o_ie        = pwm_pins_1_io_pins_pwm_0_o_ie;\n  assign gpio_iof_1_20_o_valid     = 1'h1;\n\n  assign pwm_pins_1_io_pins_pwm_2_i_ival = gpio_iof_1_21_i_ival;\n  assign gpio_iof_1_21_o_oval      = pwm_pins_1_io_pins_pwm_2_o_oval;\n  assign gpio_iof_1_21_o_oe        = pwm_pins_1_io_pins_pwm_2_o_oe;\n  assign gpio_iof_1_21_o_ie        = pwm_pins_1_io_pins_pwm_2_o_ie;\n  assign gpio_iof_1_21_o_valid     = 1'h1;\n\n  assign pwm_pins_1_io_pins_pwm_3_i_ival = gpio_iof_1_22_i_ival;\n  assign gpio_iof_1_22_o_oval      = pwm_pins_1_io_pins_pwm_3_o_oval;\n  assign gpio_iof_1_22_o_oe        = pwm_pins_1_io_pins_pwm_3_o_oe;\n  assign gpio_iof_1_22_o_ie        = pwm_pins_1_io_pins_pwm_3_o_ie;\n  assign gpio_iof_1_22_o_valid     = 1'h1;\n\n  assign gpio_iof_1_23_o_oval      = 1'b0;\n  assign gpio_iof_1_23_o_oe        = 1'b0;\n  assign gpio_iof_1_23_o_ie        = 1'b0;\n  assign gpio_iof_1_23_o_valid     = 1'b0;\n\n  assign gpio_iof_1_24_o_oval      = 1'b0;\n  assign gpio_iof_1_24_o_oe        = 1'b0;\n  assign gpio_iof_1_24_o_ie        = 1'b0;\n  assign gpio_iof_1_24_o_valid     = 1'b0;\n\n  assign gpio_iof_1_25_o_oval      = 1'b0;\n  assign gpio_iof_1_25_o_oe        = 1'b0;\n  assign gpio_iof_1_25_o_ie        = 1'b0;\n  assign gpio_iof_1_25_o_valid     = 1'b0;\n\n  assign gpio_iof_1_26_o_oval      = 1'b0;\n  assign gpio_iof_1_26_o_oe        = 1'b0;\n  assign gpio_iof_1_26_o_ie        = 1'b0;\n  assign gpio_iof_1_26_o_valid     = 1'b0;\n\n  assign gpio_iof_1_27_o_oval      = 1'b0;\n  assign gpio_iof_1_27_o_oe        = 1'b0;\n  assign gpio_iof_1_27_o_ie        = 1'b0;\n  assign gpio_iof_1_27_o_valid     = 1'b0;\n\n  assign gpio_iof_1_28_o_oval      = 1'b0;\n  assign gpio_iof_1_28_o_oe        = 1'b0;\n  assign gpio_iof_1_28_o_ie        = 1'b0;\n  assign gpio_iof_1_28_o_valid     = 1'b0;\n\n  assign gpio_iof_1_29_o_oval      = 1'b0;\n  assign gpio_iof_1_29_o_oe        = 1'b0;\n  assign gpio_iof_1_29_o_ie        = 1'b0;\n  assign gpio_iof_1_29_o_valid     = 1'b0;\n\n  assign gpio_iof_1_30_o_oval      = 1'b0;\n  assign gpio_iof_1_30_o_oe        = 1'b0;\n  assign gpio_iof_1_30_o_ie        = 1'b0;\n  assign gpio_iof_1_30_o_valid     = 1'b0;\n\n  assign gpio_iof_1_31_o_oval      = 1'b0;\n  assign gpio_iof_1_31_o_oe        = 1'b0;\n  assign gpio_iof_1_31_o_ie        = 1'b0;\n  assign gpio_iof_1_31_o_valid     = 1'b0;\n\n  wire                     otp_icb_cmd_valid;\n  wire                     otp_icb_cmd_ready;\n  wire [32-1:0]            otp_icb_cmd_addr; \n  wire                     otp_icb_cmd_read; \n  wire [32-1:0]            otp_icb_cmd_wdata;\n  \n  wire                     otp_icb_rsp_valid;\n  wire                     otp_icb_rsp_ready;\n  wire [32-1:0]            otp_icb_rsp_rdata;\n\n  wire                     gpio_icb_cmd_valid;\n  wire                     gpio_icb_cmd_ready;\n  wire [32-1:0]            gpio_icb_cmd_addr; \n  wire                     gpio_icb_cmd_read; \n  wire [32-1:0]            gpio_icb_cmd_wdata;\n  \n  wire                     gpio_icb_rsp_valid;\n  wire                     gpio_icb_rsp_ready;\n  wire [32-1:0]            gpio_icb_rsp_rdata;\n\n  wire                     uart0_icb_cmd_valid;\n  wire                     uart0_icb_cmd_ready;\n  wire [32-1:0]            uart0_icb_cmd_addr; \n  wire                     uart0_icb_cmd_read; \n  wire [32-1:0]            uart0_icb_cmd_wdata;\n  \n  wire                     uart0_icb_rsp_valid;\n  wire                     uart0_icb_rsp_ready;\n  wire [32-1:0]            uart0_icb_rsp_rdata;\n\n  wire                     qspi0_icb_cmd_valid;\n  wire                     qspi0_icb_cmd_ready;\n  wire [32-1:0]            qspi0_icb_cmd_addr; \n  wire                     qspi0_icb_cmd_read; \n  wire [32-1:0]            qspi0_icb_cmd_wdata;\n  \n  wire                     qspi0_icb_rsp_valid;\n  wire                     qspi0_icb_rsp_ready;\n  wire [32-1:0]            qspi0_icb_rsp_rdata;\n\n  wire                     pwm0_icb_cmd_valid;\n  wire                     pwm0_icb_cmd_ready;\n  wire [32-1:0]            pwm0_icb_cmd_addr; \n  wire                     pwm0_icb_cmd_read; \n  wire [32-1:0]            pwm0_icb_cmd_wdata;\n  \n  wire                     pwm0_icb_rsp_valid;\n  wire                     pwm0_icb_rsp_ready;\n  wire [32-1:0]            pwm0_icb_rsp_rdata;\n\n  wire                     uart1_icb_cmd_valid;\n  wire                     uart1_icb_cmd_ready;\n  wire [32-1:0]            uart1_icb_cmd_addr; \n  wire                     uart1_icb_cmd_read; \n  wire [32-1:0]            uart1_icb_cmd_wdata;\n  \n  wire                     uart1_icb_rsp_valid;\n  wire                     uart1_icb_rsp_ready;\n  wire [32-1:0]            uart1_icb_rsp_rdata;\n\n  wire                     qspi1_icb_cmd_valid;\n  wire                     qspi1_icb_cmd_ready;\n  wire [32-1:0]            qspi1_icb_cmd_addr; \n  wire                     qspi1_icb_cmd_read; \n  wire [32-1:0]            qspi1_icb_cmd_wdata;\n  \n  wire                     qspi1_icb_rsp_valid;\n  wire                     qspi1_icb_rsp_ready;\n  wire [32-1:0]            qspi1_icb_rsp_rdata;\n\n  wire                     pwm1_icb_cmd_valid;\n  wire                     pwm1_icb_cmd_ready;\n  wire [32-1:0]            pwm1_icb_cmd_addr; \n  wire                     pwm1_icb_cmd_read; \n  wire [32-1:0]            pwm1_icb_cmd_wdata;\n  \n  wire                     pwm1_icb_rsp_valid;\n  wire                     pwm1_icb_rsp_ready;\n  wire [32-1:0]            pwm1_icb_rsp_rdata;\n\n  wire                     qspi2_icb_cmd_valid;\n  wire                     qspi2_icb_cmd_ready;\n  wire [32-1:0]            qspi2_icb_cmd_addr; \n  wire                     qspi2_icb_cmd_read; \n  wire [32-1:0]            qspi2_icb_cmd_wdata;\n  \n  wire                     qspi2_icb_rsp_valid;\n  wire                     qspi2_icb_rsp_ready;\n  wire [32-1:0]            qspi2_icb_rsp_rdata;\n\n  wire                     pwm2_icb_cmd_valid;\n  wire                     pwm2_icb_cmd_ready;\n  wire [32-1:0]            pwm2_icb_cmd_addr; \n  wire                     pwm2_icb_cmd_read; \n  wire [32-1:0]            pwm2_icb_cmd_wdata;\n  \n  wire                     pwm2_icb_rsp_valid;\n  wire                     pwm2_icb_rsp_ready;\n  wire [32-1:0]            pwm2_icb_rsp_rdata;\n\n  wire                     expl_axi_icb_cmd_valid;\n  wire                     expl_axi_icb_cmd_ready;\n  wire [32-1:0]            expl_axi_icb_cmd_addr; \n  wire                     expl_axi_icb_cmd_read; \n  wire [32-1:0]            expl_axi_icb_cmd_wdata;\n  wire [4 -1:0]            expl_axi_icb_cmd_wmask;\n  \n  wire                     expl_axi_icb_rsp_valid;\n  wire                     expl_axi_icb_rsp_ready;\n  wire [32-1:0]            expl_axi_icb_rsp_rdata;\n  wire                     expl_axi_icb_rsp_err;\n\n  wire                     expl_apb_icb_cmd_valid;\n  wire                     expl_apb_icb_cmd_ready;\n  wire [32-1:0]            expl_apb_icb_cmd_addr; \n  wire                     expl_apb_icb_cmd_read; \n  wire [32-1:0]            expl_apb_icb_cmd_wdata;\n  wire [4 -1:0]            expl_apb_icb_cmd_wmask;\n  \n  wire                     expl_apb_icb_rsp_valid;\n  wire                     expl_apb_icb_rsp_ready;\n  wire [32-1:0]            expl_apb_icb_rsp_rdata;\n  wire                     expl_apb_icb_rsp_err;\n\n  wire                     i2c_wishb_icb_cmd_valid;\n  wire                     i2c_wishb_icb_cmd_ready;\n  wire [32-1:0]            i2c_wishb_icb_cmd_addr; \n  wire                     i2c_wishb_icb_cmd_read; \n  wire [32-1:0]            i2c_wishb_icb_cmd_wdata;\n  wire [4 -1:0]            i2c_wishb_icb_cmd_wmask;\n  \n  wire                     i2c_wishb_icb_rsp_valid;\n  wire                     i2c_wishb_icb_rsp_ready;\n  wire [32-1:0]            i2c_wishb_icb_rsp_rdata;\n  wire                     i2c_wishb_icb_rsp_err;\n\n  wire                     hclkgen_icb_cmd_valid;\n  wire                     hclkgen_icb_cmd_ready;\n  wire [32-1:0]            hclkgen_icb_cmd_addr; \n  wire                     hclkgen_icb_cmd_read; \n  wire [32-1:0]            hclkgen_icb_cmd_wdata;\n  wire [4 -1:0]            hclkgen_icb_cmd_wmask;\n  \n  wire                     hclkgen_icb_rsp_valid;\n  wire                     hclkgen_icb_rsp_ready;\n  wire [32-1:0]            hclkgen_icb_rsp_rdata;\n  wire                     hclkgen_icb_rsp_err;\n\n  // The total address range for the PPI is from/to\n  //  **************0x1000 0000 -- 0x1FFF FFFF\n  // There are several slaves for PPI bus, including:\n  //  * AON       : 0x1000 0000 -- 0x1000 7FFF\n  //  * HCLKGEN   : 0x1000 8000 -- 0x1000 8FFF\n  //  * OTP       : 0x1001 0000 -- 0x1001 0FFF\n  //  * GPIO      : 0x1001 2000 -- 0x1001 2FFF\n  //  * UART0     : 0x1001 3000 -- 0x1001 3FFF\n  //  * QSPI0     : 0x1001 4000 -- 0x1001 4FFF\n  //  * PWM0      : 0x1001 5000 -- 0x1001 5FFF\n  //  * UART1     : 0x1002 3000 -- 0x1002 3FFF\n  //  * QSPI1     : 0x1002 4000 -- 0x1002 4FFF\n  //  * PWM1      : 0x1002 5000 -- 0x1002 5FFF\n  //  * QSPI2     : 0x1003 4000 -- 0x1003 4FFF\n  //  * PWM2      : 0x1003 5000 -- 0x1003 5FFF\n  //  * Example-AXI      : 0x1004 0000 -- 0x1004 0FFF\n  //  * Example-APB      : 0x1004 1000 -- 0x1004 1FFF\n  //  * Example-WishBone : 0x1004 2000 -- 0x1004 2FFF\n  //  * SysPer    : 0x1100 0000 -- 0x11FF FFFF\n\n  sirv_icb1to16_bus # (\n  .ICB_FIFO_DP        (2),// We add a ping-pong buffer here to cut down the timing path\n  .ICB_FIFO_CUT_READY (1),// We configure it to cut down the back-pressure ready signal\n\n  .AW                   (32),\n  .DW                   (`E203_XLEN),\n  .SPLT_FIFO_OUTS_NUM   (1),// The peirpherals only allow 1 oustanding\n  .SPLT_FIFO_CUT_READY  (1),// The peirpherals always cut ready\n  //  * AON       : 0x1000 0000 -- 0x1000 7FFF\n  .O0_BASE_ADDR       (32'h1000_0000),       \n  .O0_BASE_REGION_LSB (15),\n  //  * HCLKGEN   : 0x1000 8000 -- 0x1000 8FFF\n  .O1_BASE_ADDR       (32'h1000_8000),       \n  .O1_BASE_REGION_LSB (12),\n  //  * OTP       : 0x1001 0000 -- 0x1001 0FFF\n  .O2_BASE_ADDR       (32'h1001_0000),       \n  .O2_BASE_REGION_LSB (12),\n  //  * GPIO      : 0x1001 2000 -- 0x1001 2FFF\n  .O3_BASE_ADDR       (32'h1001_2000),       \n  .O3_BASE_REGION_LSB (12),\n  //  * UART0     : 0x1001 3000 -- 0x1001 3FFF\n  .O4_BASE_ADDR       (32'h1001_3000),       \n  .O4_BASE_REGION_LSB (12),\n  //  * QSPI0     : 0x1001 4000 -- 0x1001 4FFF\n  .O5_BASE_ADDR       (32'h1001_4000),       \n  .O5_BASE_REGION_LSB (12),\n  //  * PWM0      : 0x1001 5000 -- 0x1001 5FFF\n  .O6_BASE_ADDR       (32'h1001_5000),       \n  .O6_BASE_REGION_LSB (12),\n  //  * UART1     : 0x1002 3000 -- 0x1002 3FFF\n  .O7_BASE_ADDR       (32'h1002_3000),       \n  .O7_BASE_REGION_LSB (12),\n  //  * QSPI1     : 0x1002 4000 -- 0x1002 4FFF\n  .O8_BASE_ADDR       (32'h1002_4000),       \n  .O8_BASE_REGION_LSB (12),\n  //  * PWM1      : 0x1002 5000 -- 0x1002 5FFF\n  .O9_BASE_ADDR       (32'h1002_5000),       \n  .O9_BASE_REGION_LSB (12),\n  //  * QSPI2     : 0x1003 4000 -- 0x1003 4FFF\n  .O10_BASE_ADDR       (32'h1003_4000),       \n  .O10_BASE_REGION_LSB (12),\n  //  * PWM2      : 0x1003 5000 -- 0x1003 5FFF\n  .O11_BASE_ADDR       (32'h1003_5000),       \n  .O11_BASE_REGION_LSB (12),\n  //  * SysPer    : 0x1100 0000 -- 0x11FF FFFF\n  .O12_BASE_ADDR       (32'h1100_0000),       \n  .O12_BASE_REGION_LSB (24),\n\n      // * Here is an example AXI Peripheral\n  .O13_BASE_ADDR       (32'h1004_0000),       \n  .O13_BASE_REGION_LSB (12),\n  \n      // * Here is an example APB Peripheral\n  .O14_BASE_ADDR       (32'h1004_1000),       \n  .O14_BASE_REGION_LSB (12),\n  \n      // * Here is an I2C WishBone Peripheral\n  .O15_BASE_ADDR       (32'h1004_2000),       \n  .O15_BASE_REGION_LSB (3)// I2C only have 3 bits address width\n\n  )u_sirv_ppi_fab(\n\n    .i_icb_cmd_valid  (ppi_icb_cmd_valid),\n    .i_icb_cmd_ready  (ppi_icb_cmd_ready),\n    .i_icb_cmd_addr   (ppi_icb_cmd_addr ),\n    .i_icb_cmd_read   (ppi_icb_cmd_read ),\n    .i_icb_cmd_wdata  (ppi_icb_cmd_wdata),\n    .i_icb_cmd_wmask  (ppi_icb_cmd_wmask),\n    .i_icb_cmd_lock   (1'b0),\n    .i_icb_cmd_excl   (1'b0 ),\n    .i_icb_cmd_size   (2'b0 ),\n    .i_icb_cmd_burst  (2'b0 ),\n    .i_icb_cmd_beat   (2'b0 ),\n    \n    .i_icb_rsp_valid  (ppi_icb_rsp_valid),\n    .i_icb_rsp_ready  (ppi_icb_rsp_ready),\n    .i_icb_rsp_err    (ppi_icb_rsp_err  ),\n    .i_icb_rsp_excl_ok(),\n    .i_icb_rsp_rdata  (ppi_icb_rsp_rdata),\n    \n  //  * AON \n    .o0_icb_enable     (1'b1),\n\n        //\n    .o0_icb_cmd_valid  (i_aon_icb_cmd_valid),\n    .o0_icb_cmd_ready  (i_aon_icb_cmd_ready),\n    .o0_icb_cmd_addr   (i_aon_icb_cmd_addr ),\n    .o0_icb_cmd_read   (i_aon_icb_cmd_read ),\n    .o0_icb_cmd_wdata  (i_aon_icb_cmd_wdata),\n    .o0_icb_cmd_wmask  (),\n    .o0_icb_cmd_lock   (),\n    .o0_icb_cmd_excl   (),\n    .o0_icb_cmd_size   (),\n    .o0_icb_cmd_burst  (),\n    .o0_icb_cmd_beat   (),\n    \n    .o0_icb_rsp_valid  (i_aon_icb_rsp_valid),\n    .o0_icb_rsp_ready  (i_aon_icb_rsp_ready),\n    .o0_icb_rsp_err    (i_aon_icb_rsp_err),\n    .o0_icb_rsp_excl_ok(1'b0  ),\n    .o0_icb_rsp_rdata  (i_aon_icb_rsp_rdata),\n\n  //  * HCLKGEN      \n    .o1_icb_enable     (1'b1),\n\n    .o1_icb_cmd_valid  (hclkgen_icb_cmd_valid),\n    .o1_icb_cmd_ready  (hclkgen_icb_cmd_ready),\n    .o1_icb_cmd_addr   (hclkgen_icb_cmd_addr ),\n    .o1_icb_cmd_read   (hclkgen_icb_cmd_read ),\n    .o1_icb_cmd_wdata  (hclkgen_icb_cmd_wdata),\n    .o1_icb_cmd_wmask  (),\n    .o1_icb_cmd_lock   (),\n    .o1_icb_cmd_excl   (),\n    .o1_icb_cmd_size   (),\n    .o1_icb_cmd_burst  (),\n    .o1_icb_cmd_beat   (),\n    \n    .o1_icb_rsp_valid  (hclkgen_icb_rsp_valid),\n    .o1_icb_rsp_ready  (hclkgen_icb_rsp_ready),\n    .o1_icb_rsp_err    (1'b0  ),\n    .o1_icb_rsp_excl_ok(1'b0  ),\n    .o1_icb_rsp_rdata  (hclkgen_icb_rsp_rdata),\n\n  //  * OTP       \n    .o2_icb_enable     (1'b1),\n\n    .o2_icb_cmd_valid  (otp_icb_cmd_valid),\n    .o2_icb_cmd_ready  (otp_icb_cmd_ready),\n    .o2_icb_cmd_addr   (otp_icb_cmd_addr ),\n    .o2_icb_cmd_read   (otp_icb_cmd_read ),\n    .o2_icb_cmd_wdata  (otp_icb_cmd_wdata),\n    .o2_icb_cmd_wmask  (),\n    .o2_icb_cmd_lock   (),\n    .o2_icb_cmd_excl   (),\n    .o2_icb_cmd_size   (),\n    .o2_icb_cmd_burst  (),\n    .o2_icb_cmd_beat   (),\n    \n    .o2_icb_rsp_valid  (otp_icb_rsp_valid),\n    .o2_icb_rsp_ready  (otp_icb_rsp_ready),\n    .o2_icb_rsp_err    (1'b0  ),\n    .o2_icb_rsp_excl_ok(1'b0  ),\n    .o2_icb_rsp_rdata  (otp_icb_rsp_rdata),\n\n\n  //  * GPIO      \n    .o3_icb_enable     (1'b1),\n\n    .o3_icb_cmd_valid  (gpio_icb_cmd_valid),\n    .o3_icb_cmd_ready  (gpio_icb_cmd_ready),\n    .o3_icb_cmd_addr   (gpio_icb_cmd_addr ),\n    .o3_icb_cmd_read   (gpio_icb_cmd_read ),\n    .o3_icb_cmd_wdata  (gpio_icb_cmd_wdata),\n    .o3_icb_cmd_wmask  (),\n    .o3_icb_cmd_lock   (),\n    .o3_icb_cmd_excl   (),\n    .o3_icb_cmd_size   (),\n    .o3_icb_cmd_burst  (),\n    .o3_icb_cmd_beat   (),\n    \n    .o3_icb_rsp_valid  (gpio_icb_rsp_valid),\n    .o3_icb_rsp_ready  (gpio_icb_rsp_ready),\n    .o3_icb_rsp_err    (1'b0  ),\n    .o3_icb_rsp_excl_ok(1'b0  ),\n    .o3_icb_rsp_rdata  (g"}
{"text": "pio_icb_rsp_rdata),\n\n\n  //  * UART0     \n    .o4_icb_enable     (1'b1),\n\n    .o4_icb_cmd_valid  (uart0_icb_cmd_valid),\n    .o4_icb_cmd_ready  (uart0_icb_cmd_ready),\n    .o4_icb_cmd_addr   (uart0_icb_cmd_addr ),\n    .o4_icb_cmd_read   (uart0_icb_cmd_read ),\n    .o4_icb_cmd_wdata  (uart0_icb_cmd_wdata),\n    .o4_icb_cmd_wmask  (),\n    .o4_icb_cmd_lock   (),\n    .o4_icb_cmd_excl   (),\n    .o4_icb_cmd_size   (),\n    .o4_icb_cmd_burst  (),\n    .o4_icb_cmd_beat   (),\n    \n    .o4_icb_rsp_valid  (uart0_icb_rsp_valid),\n    .o4_icb_rsp_ready  (uart0_icb_rsp_ready),\n    .o4_icb_rsp_err    (1'b0  ),\n    .o4_icb_rsp_excl_ok(1'b0  ),\n    .o4_icb_rsp_rdata  (uart0_icb_rsp_rdata),\n\n\n  //  * QSPI0     \n    .o5_icb_enable     (1'b1),\n\n    .o5_icb_cmd_valid  (qspi0_icb_cmd_valid),\n    .o5_icb_cmd_ready  (qspi0_icb_cmd_ready),\n    .o5_icb_cmd_addr   (qspi0_icb_cmd_addr ),\n    .o5_icb_cmd_read   (qspi0_icb_cmd_read ),\n    .o5_icb_cmd_wdata  (qspi0_icb_cmd_wdata),\n    .o5_icb_cmd_wmask  (),\n    .o5_icb_cmd_lock   (),\n    .o5_icb_cmd_excl   (),\n    .o5_icb_cmd_size   (),\n    .o5_icb_cmd_burst  (),\n    .o5_icb_cmd_beat   (),\n    \n    .o5_icb_rsp_valid  (qspi0_icb_rsp_valid),\n    .o5_icb_rsp_ready  (qspi0_icb_rsp_ready),\n    .o5_icb_rsp_err    (1'b0  ),\n    .o5_icb_rsp_excl_ok(1'b0  ),\n    .o5_icb_rsp_rdata  (qspi0_icb_rsp_rdata),\n\n\n  //  * PWM0      \n    .o6_icb_enable     (1'b1),\n\n    .o6_icb_cmd_valid  (pwm0_icb_cmd_valid),\n    .o6_icb_cmd_ready  (pwm0_icb_cmd_ready),\n    .o6_icb_cmd_addr   (pwm0_icb_cmd_addr ),\n    .o6_icb_cmd_read   (pwm0_icb_cmd_read ),\n    .o6_icb_cmd_wdata  (pwm0_icb_cmd_wdata),\n    .o6_icb_cmd_wmask  (),\n    .o6_icb_cmd_lock   (),\n    .o6_icb_cmd_excl   (),\n    .o6_icb_cmd_size   (),\n    .o6_icb_cmd_burst  (),\n    .o6_icb_cmd_beat   (),\n    \n    .o6_icb_rsp_valid  (pwm0_icb_rsp_valid),\n    .o6_icb_rsp_ready  (pwm0_icb_rsp_ready),\n    .o6_icb_rsp_err    (1'b0  ),\n    .o6_icb_rsp_excl_ok(1'b0  ),\n    .o6_icb_rsp_rdata  (pwm0_icb_rsp_rdata),\n\n\n  //  * UART1     \n    .o7_icb_enable     (1'b1),\n\n    .o7_icb_cmd_valid  (uart1_icb_cmd_valid),\n    .o7_icb_cmd_ready  (uart1_icb_cmd_ready),\n    .o7_icb_cmd_addr   (uart1_icb_cmd_addr ),\n    .o7_icb_cmd_read   (uart1_icb_cmd_read ),\n    .o7_icb_cmd_wdata  (uart1_icb_cmd_wdata),\n    .o7_icb_cmd_wmask  (),\n    .o7_icb_cmd_lock   (),\n    .o7_icb_cmd_excl   (),\n    .o7_icb_cmd_size   (),\n    .o7_icb_cmd_burst  (),\n    .o7_icb_cmd_beat   (),\n    \n    .o7_icb_rsp_valid  (uart1_icb_rsp_valid),\n    .o7_icb_rsp_ready  (uart1_icb_rsp_ready),\n    .o7_icb_rsp_err    (1'b0  ),\n    .o7_icb_rsp_excl_ok(1'b0  ),\n    .o7_icb_rsp_rdata  (uart1_icb_rsp_rdata),\n\n\n  //  * QSPI1     \n    .o8_icb_enable     (1'b1),\n\n    .o8_icb_cmd_valid  (qspi1_icb_cmd_valid),\n    .o8_icb_cmd_ready  (qspi1_icb_cmd_ready),\n    .o8_icb_cmd_addr   (qspi1_icb_cmd_addr ),\n    .o8_icb_cmd_read   (qspi1_icb_cmd_read ),\n    .o8_icb_cmd_wdata  (qspi1_icb_cmd_wdata),\n    .o8_icb_cmd_wmask  (),\n    .o8_icb_cmd_lock   (),\n    .o8_icb_cmd_excl   (),\n    .o8_icb_cmd_size   (),\n    .o8_icb_cmd_burst  (),\n    .o8_icb_cmd_beat   (),\n    \n    .o8_icb_rsp_valid  (qspi1_icb_rsp_valid),\n    .o8_icb_rsp_ready  (qspi1_icb_rsp_ready),\n    .o8_icb_rsp_err    (1'b0  ),\n    .o8_icb_rsp_excl_ok(1'b0  ),\n    .o8_icb_rsp_rdata  (qspi1_icb_rsp_rdata),\n\n\n  //  * PWM1      \n    .o9_icb_enable     (1'b1),\n\n    .o9_icb_cmd_valid  (pwm1_icb_cmd_valid),\n    .o9_icb_cmd_ready  (pwm1_icb_cmd_ready),\n    .o9_icb_cmd_addr   (pwm1_icb_cmd_addr ),\n    .o9_icb_cmd_read   (pwm1_icb_cmd_read ),\n    .o9_icb_cmd_wdata  (pwm1_icb_cmd_wdata),\n    .o9_icb_cmd_wmask  (),\n    .o9_icb_cmd_lock   (),\n    .o9_icb_cmd_excl   (),\n    .o9_icb_cmd_size   (),\n    .o9_icb_cmd_burst  (),\n    .o9_icb_cmd_beat   (),\n    \n    .o9_icb_rsp_valid  (pwm1_icb_rsp_valid),\n    .o9_icb_rsp_ready  (pwm1_icb_rsp_ready),\n    .o9_icb_rsp_err    (1'b0  ),\n    .o9_icb_rsp_excl_ok(1'b0  ),\n    .o9_icb_rsp_rdata  (pwm1_icb_rsp_rdata),\n\n\n  //  * QSPI2     \n    .o10_icb_enable     (1'b1),\n\n    .o10_icb_cmd_valid  (qspi2_icb_cmd_valid),\n    .o10_icb_cmd_ready  (qspi2_icb_cmd_ready),\n    .o10_icb_cmd_addr   (qspi2_icb_cmd_addr ),\n    .o10_icb_cmd_read   (qspi2_icb_cmd_read ),\n    .o10_icb_cmd_wdata  (qspi2_icb_cmd_wdata),\n    .o10_icb_cmd_wmask  (),\n    .o10_icb_cmd_lock   (),\n    .o10_icb_cmd_excl   (),\n    .o10_icb_cmd_size   (),\n    .o10_icb_cmd_burst  (),\n    .o10_icb_cmd_beat   (),\n    \n    .o10_icb_rsp_valid  (qspi2_icb_rsp_valid),\n    .o10_icb_rsp_ready  (qspi2_icb_rsp_ready),\n    .o10_icb_rsp_err    (1'b0  ),\n    .o10_icb_rsp_excl_ok(1'b0  ),\n    .o10_icb_rsp_rdata  (qspi2_icb_rsp_rdata),\n\n\n  //  * PWM2      \n    .o11_icb_enable     (1'b1),\n\n    .o11_icb_cmd_valid  (pwm2_icb_cmd_valid),\n    .o11_icb_cmd_ready  (pwm2_icb_cmd_ready),\n    .o11_icb_cmd_addr   (pwm2_icb_cmd_addr ),\n    .o11_icb_cmd_read   (pwm2_icb_cmd_read ),\n    .o11_icb_cmd_wdata  (pwm2_icb_cmd_wdata),\n    .o11_icb_cmd_wmask  (),\n    .o11_icb_cmd_lock   (),\n    .o11_icb_cmd_excl   (),\n    .o11_icb_cmd_size   (),\n    .o11_icb_cmd_burst  (),\n    .o11_icb_cmd_beat   (),\n    \n    .o11_icb_rsp_valid  (pwm2_icb_rsp_valid),\n    .o11_icb_rsp_ready  (pwm2_icb_rsp_ready),\n    .o11_icb_rsp_err    (1'b0  ),\n    .o11_icb_rsp_excl_ok(1'b0  ),\n    .o11_icb_rsp_rdata  (pwm2_icb_rsp_rdata),\n\n\n  //  * SysPer    \n    .o12_icb_enable     (1'b1),\n\n    .o12_icb_cmd_valid  (sysper_icb_cmd_valid),\n    .o12_icb_cmd_ready  (sysper_icb_cmd_ready),\n    .o12_icb_cmd_addr   (sysper_icb_cmd_addr ),\n    .o12_icb_cmd_read   (sysper_icb_cmd_read ),\n    .o12_icb_cmd_wdata  (sysper_icb_cmd_wdata),\n    .o12_icb_cmd_wmask  (sysper_icb_cmd_wmask),\n    .o12_icb_cmd_lock   (),\n    .o12_icb_cmd_excl   (),\n    .o12_icb_cmd_size   (),\n    .o12_icb_cmd_burst  (),\n    .o12_icb_cmd_beat   (),\n    \n    .o12_icb_rsp_valid  (sysper_icb_rsp_valid),\n    .o12_icb_rsp_ready  (sysper_icb_rsp_ready),\n    .o12_icb_rsp_err    (sysper_icb_rsp_err),\n    .o12_icb_rsp_excl_ok(1'b0  ),\n    .o12_icb_rsp_rdata  (sysper_icb_rsp_rdata),\n\n   //  * Example AXI    \n    .o13_icb_enable     (1'b1),\n\n    .o13_icb_cmd_valid  (expl_axi_icb_cmd_valid),\n    .o13_icb_cmd_ready  (expl_axi_icb_cmd_ready),\n    .o13_icb_cmd_addr   (expl_axi_icb_cmd_addr ),\n    .o13_icb_cmd_read   (expl_axi_icb_cmd_read ),\n    .o13_icb_cmd_wdata  (expl_axi_icb_cmd_wdata),\n    .o13_icb_cmd_wmask  (expl_axi_icb_cmd_wmask),\n    .o13_icb_cmd_lock   (),\n    .o13_icb_cmd_excl   (),\n    .o13_icb_cmd_size   (),\n    .o13_icb_cmd_burst  (),\n    .o13_icb_cmd_beat   (),\n    \n    .o13_icb_rsp_valid  (expl_axi_icb_rsp_valid),\n    .o13_icb_rsp_ready  (expl_axi_icb_rsp_ready),\n    .o13_icb_rsp_err    (expl_axi_icb_rsp_err),\n    .o13_icb_rsp_excl_ok(1'b0  ),\n    .o13_icb_rsp_rdata  (expl_axi_icb_rsp_rdata),\n\n   //  * Example APB    \n    .o14_icb_enable     (1'b1),\n\n    .o14_icb_cmd_valid  (expl_apb_icb_cmd_valid),\n    .o14_icb_cmd_ready  (expl_apb_icb_cmd_ready),\n    .o14_icb_cmd_addr   (expl_apb_icb_cmd_addr ),\n    .o14_icb_cmd_read   (expl_apb_icb_cmd_read ),\n    .o14_icb_cmd_wdata  (expl_apb_icb_cmd_wdata),\n    .o14_icb_cmd_wmask  (expl_apb_icb_cmd_wmask),\n    .o14_icb_cmd_lock   (),\n    .o14_icb_cmd_excl   (),\n    .o14_icb_cmd_size   (),\n    .o14_icb_cmd_burst  (),\n    .o14_icb_cmd_beat   (),\n    \n    .o14_icb_rsp_valid  (expl_apb_icb_rsp_valid),\n    .o14_icb_rsp_ready  (expl_apb_icb_rsp_ready),\n    .o14_icb_rsp_err    (expl_apb_icb_rsp_err),\n    .o14_icb_rsp_excl_ok(1'b0  ),\n    .o14_icb_rsp_rdata  (expl_apb_icb_rsp_rdata),\n\n   //  * I2C WishBone    \n    .o15_icb_enable     (1'b1),\n\n    .o15_icb_cmd_valid  (i2c_wishb_icb_cmd_valid),\n    .o15_icb_cmd_ready  (i2c_wishb_icb_cmd_ready),\n    .o15_icb_cmd_addr   (i2c_wishb_icb_cmd_addr ),\n    .o15_icb_cmd_read   (i2c_wishb_icb_cmd_read ),\n    .o15_icb_cmd_wdata  (i2c_wishb_icb_cmd_wdata),\n    .o15_icb_cmd_wmask  (i2c_wishb_icb_cmd_wmask),\n    .o15_icb_cmd_lock   (),\n    .o15_icb_cmd_excl   (),\n    .o15_icb_cmd_size   (),\n    .o15_icb_cmd_burst  (),\n    .o15_icb_cmd_beat   (),\n    \n    .o15_icb_rsp_valid  (i2c_wishb_icb_rsp_valid),\n    .o15_icb_rsp_ready  (i2c_wishb_icb_rsp_ready),\n    .o15_icb_rsp_err    (i2c_wishb_icb_rsp_err),\n    .o15_icb_rsp_excl_ok(1'b0  ),\n    .o15_icb_rsp_rdata  (i2c_wishb_icb_rsp_rdata),\n\n    .clk           (clk  ),\n    .rst_n         (bus_rst_n) \n  );\n\n\n  //  * OTP       \n  sirv_otp_top u_sirv_otp_top( \n    .clk           (clk  ),\n    .rst_n         (rst_n), \n\n    .i_icb_cmd_valid (otp_icb_cmd_valid),\n    .i_icb_cmd_ready (otp_icb_cmd_ready),\n    .i_icb_cmd_addr  (otp_icb_cmd_addr ),\n    .i_icb_cmd_read  (otp_icb_cmd_read ),\n    .i_icb_cmd_wdata (otp_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid (otp_icb_rsp_valid),\n    .i_icb_rsp_ready (otp_icb_rsp_ready),\n    .i_icb_rsp_rdata (otp_icb_rsp_rdata),\n   \n    .f_icb_cmd_valid (otp_ro_icb_cmd_valid),\n    .f_icb_cmd_ready (otp_ro_icb_cmd_ready),\n    .f_icb_cmd_addr  (otp_ro_icb_cmd_addr ),\n    .f_icb_cmd_read  (otp_ro_icb_cmd_read ),\n    .f_icb_cmd_wdata (otp_ro_icb_cmd_wdata),\n  \n    .f_icb_rsp_valid (otp_ro_icb_rsp_valid),\n    .f_icb_rsp_ready (otp_ro_icb_rsp_ready),\n    .f_icb_rsp_rdata (otp_ro_icb_rsp_rdata) \n);\n\n  //  * GPIO      \nsirv_gpio_top u_sirv_gpio_top(\n    .clk           (clk  ),\n    .rst_n         (rst_n),\n\n    .i_icb_cmd_valid (gpio_icb_cmd_valid),\n    .i_icb_cmd_ready (gpio_icb_cmd_ready),\n    .i_icb_cmd_addr  (gpio_icb_cmd_addr ),\n    .i_icb_cmd_read  (gpio_icb_cmd_read ),\n    .i_icb_cmd_wdata (gpio_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid (gpio_icb_rsp_valid),\n    .i_icb_rsp_ready (gpio_icb_rsp_ready),\n    .i_icb_rsp_rdata (gpio_icb_rsp_rdata),\n\n    .gpio_irq_0               (gpio_irq_0),\n    .gpio_irq_1               (gpio_irq_1),\n    .gpio_irq_2               (gpio_irq_2),\n    .gpio_irq_3               (gpio_irq_3),\n    .gpio_irq_4               (gpio_irq_4),\n    .gpio_irq_5               (gpio_irq_5),\n    .gpio_irq_6               (gpio_irq_6),\n    .gpio_irq_7               (gpio_irq_7),\n    .gpio_irq_8               (gpio_irq_8),\n    .gpio_irq_9               (gpio_irq_9),\n    .gpio_irq_10              (gpio_irq_10),\n    .gpio_irq_11              (gpio_irq_11),\n    .gpio_irq_12              (gpio_irq_12),\n    .gpio_irq_13              (gpio_irq_13),\n    .gpio_irq_14              (gpio_irq_14),\n    .gpio_irq_15              (gpio_irq_15),\n    .gpio_irq_16              (gpio_irq_16),\n    .gpio_irq_17              (gpio_irq_17),\n    .gpio_irq_18              (gpio_irq_18),\n    .gpio_irq_19              (gpio_irq_19),\n    .gpio_irq_20              (gpio_irq_20),\n    .gpio_irq_21              (gpio_irq_21),\n    .gpio_irq_22              (gpio_irq_22),\n    .gpio_irq_23              (gpio_irq_23),\n    .gpio_irq_24              (gpio_irq_24),\n    .gpio_irq_25              (gpio_irq_25),\n    .gpio_irq_26              (gpio_irq_26),\n    .gpio_irq_27              (gpio_irq_27),\n    .gpio_irq_28              (gpio_irq_28),\n    .gpio_irq_29              (gpio_irq_29),\n    .gpio_irq_30              (gpio_irq_30),\n    .gpio_irq_31              (gpio_irq_31),\n   \n    .io_port_pins_0_i_ival           (io_pads_gpio_0_i_ival),\n    .io_port_pins_0_o_oval           (io_pads_gpio_0_o_oval),\n    .io_port_pins_0_o_oe             (io_pads_gpio_0_o_oe),\n    .io_port_pins_0_o_ie             (io_pads_gpio_0_o_ie),\n    .io_port_pins_0_o_pue            (io_pads_gpio_0_o_pue),\n    .io_port_pins_0_o_ds             (io_pads_gpio_0_o_ds),\n    .io_port_pins_1_i_ival           (io_pads_gpio_1_i_ival),\n    .io_port_pins_1_o_oval           (io_pads_gpio_1_o_oval),\n    .io_port_pins_1_o_oe             (io_pads_gpio_1_o_oe),\n    .io_port_pins_1_o_ie             (io_pads_gpio_1_o_ie),\n    .io_port_pins_1_o_pue            (io_pads_gpio_1_o_pue),\n    .io_port_pins_1_o_ds             (io_pads_gpio_1_o_ds),\n    .io_port_pins_2_i_ival           (io_pads_gpio_2_i_ival),\n    .io_port_pins_2_o_oval           (io_pads_gpio_2_o_oval),\n    .io_port_pins_2_o_oe             (io_pads_gpio_2_o_oe),\n    .io_port_pins_2_o_ie             (io_pads_gpio_2_o_ie),\n    .io_port_pins_2_o_pue            (io_pads_gpio_2_o_pue),\n    .io_port_pins_2_o_ds             (io_pads_gpio_2_o_ds),\n    .io_port_pins_3_i_ival           (io_pads_gpio_3_i_ival),\n    .io_port_pins_3_o_oval           (io_pads_gpio_3_o_oval),\n    .io_port_pins_3_o_oe             (io_pads_gpio_3_o_oe),\n    .io_port_pins_3_o_ie             (io_pads_gpio_3_o_ie),\n    .io_port_pins_3_o_pue            (io_pads_gpio_3_o_pue),\n    .io_port_pins_3_o_ds             (io_pads_gpio_3_o_ds),\n    .io_port_pins_4_i_ival           (io_pads_gpio_4_i_ival),\n    .io_port_pins_4_o_oval           (io_pads_gpio_4_o_oval),\n    .io_port_pins_4_o_oe             (io_pads_gpio_4_o_oe),\n    .io_port_pins_4_o_ie             (io_pads_gpio_4_o_ie),\n    .io_port_pins_4_o_pue            (io_pads_gpio_4_o_pue),\n    .io_port_pins_4_o_ds             (io_pads_gpio_4_o_ds),\n    .io_port_pins_5_i_ival           (io_pads_gpio_5_i_ival),\n    .io_port_pins_5_o_oval           (io_pads_gpio_5_o_oval),\n    .io_port_pins_5_o_oe             (io_pads_gpio_5_o_oe),\n    .io_port_pins_5_o_ie             (io_pads_gpio_5_o_ie),\n    .io_port_pins_5_o_pue            (io_pads_gpio_5_o_pue),\n    .io_port_pins_5_o_ds             (io_pads_gpio_5_o_ds),\n    .io_port_pins_6_i_ival           (io_pads_gpio_6_i_ival),\n    .io_port_pins_6_o_oval           (io_pads_gpio_6_o_oval),\n    .io_port_pins_6_o_oe             (io_pads_gpio_6_o_oe),\n    .io_port_pins_6_o_ie             (io_pads_gpio_6_o_ie),\n    .io_port_pins_6_o_pue            (io_pads_gpio_6_o_pue),\n    .io_port_pins_6_o_ds             (io_pads_gpio_6_o_ds),\n    .io_port_pins_7_i_ival           (io_pads_gpio_7_i_ival),\n    .io_port_pins_7_o_oval           (io_pads_gpio_7_o_oval),\n    .io_port_pins_7_o_oe             (io_pads_gpio_7_o_oe),\n    .io_port_pins_7_o_ie             (io_pads_gpio_7_o_ie),\n    .io_port_pins_7_o_pue            (io_pads_gpio_7_o_pue),\n    .io_port_pins_7_o_ds             (io_pads_gpio_7_o_ds),\n    .io_port_pins_8_i_ival           (io_pads_gpio_8_i_ival),\n    .io_port_pins_8_o_oval           (io_pads_gpio_8_o_oval),\n    .io_port_pins_8_o_oe             (io_pads_gpio_8_o_oe),\n    .io_port_pins_8_o_ie             (io_pads_gpio_8_o_ie),\n    .io_port_pins_8_o_pue            (io_pads_gpio_8_o_pue),\n    .io_port_pins_8_o_ds             (io_pads_gpio_8_o_ds),\n    .io_port_pins_9_i_ival           (io_pads_gpio_9_i_ival),\n    .io_port_pins_9_o_oval           (io_pads_gpio_9_o_oval),\n    .io_port_pins_9_o_oe             (io_pads_gpio_9_o_oe),\n    .io_port_pins_9_o_ie             (io_pads_gpio_9_o_ie),\n    .io_port_pins_9_o_pue            (io_pads_gpio_9_o_pue),\n    .io_port_pins_9_o_ds             (io_pads_gpio_9_o_ds),\n    .io_port_pins_10_i_ival          (io_pads_gpio_10_i_ival),\n    .io_port_pins_10_o_oval          (io_pads_gpio_10_o_oval),\n    .io_port_pins_10_o_oe            (io_pads_gpio_10_o_oe),\n    .io_port_pins_10_o_ie            (io_pads_gpio_10_o_ie),\n    .io_port_pins_10_o_pue           (io_pads_gpio_10_o_pue),\n    .io_port_pins_10_o_ds            (io_pads_gpio_10_o_ds),\n    .io_port_pins_11_i_ival          (io_pads_gpio_11_i_ival),\n    .io_port_pins_11_o_oval          (io_pads_gpio_11_o_oval),\n    .io_port_pins_11_o_oe            (io_pads_gpio_11_o_oe),\n    .io_port_pins_11_o_ie            (io_pads_gpio_11_o_ie),\n    .io_port_pins_11_o_pue           (io_pads_gpio_11_o_pue),\n    .io_port_pins_11_o_ds            (io_pads_gpio_11_o_ds),\n    .io_port_pins_12_i_ival          (io_pads_gpio_12_i_ival),\n    .io_port_pins_12_o_oval          (io_pads_gpio_12_o_oval),\n    .io_port_pins_12_o_oe            (io_pads_gpio_12_o_oe),\n    .io_port_pins_12_o_ie            (io_pads_gpio_12_o_ie),\n    .io_port_pins_12_o_pue           (io_pads_gpio_12_o_pue),\n    .io_port_pins_12_o_ds            (io_pads_gpio_12_o_ds),\n    .io_port_pins_13_i_ival          (io_pads_gpio_13_i_ival),\n    .io_port_pins_13_o_oval          (io_pads_gpio_13_o_oval),\n    .io_port_pins_13_o_oe            (io_pads_gpio_13_o_oe),\n    .io_port_pins_13_o_ie            (io_pads_gpio_13_o_ie),\n    .io_port_pins_13_o_pue           (io_pads_gpio_13_o_pue),\n    .io_port_pins_13_o_ds            (io_pads_gpio_13_o_ds),\n    .io_port_pins_14_i_ival          (io_pads_gpio_14_i_ival),\n    .io_port_pins_14_o_oval          (io_pads_gpio_14_o_oval),\n    .io_port_pins_14_o_oe            (io_pads_gpio_14_o_oe),\n    .io_port_pins_14_o_ie            (io_pads_gpio_14_o_ie),\n    .io_port_pins_14_o_pue           (io_pads_gpio_14_o_pue),\n    .io_port_pins_14_o_ds            (io_pads_gpio_14_o_ds),\n    .io_port_pins_15_i_ival          (io_pads_gpio_15_i_ival),\n    .io_port_pins_15_o_oval          (io_pads_gpio_15_o_oval),\n    .io_port_pins_15_o_oe            (io_pads_gpio_15_o_oe),\n    .io_port_pins_15_o_ie            (io_pads_gpio_15_o_ie),\n    .io_port_pins_15_o_pue           (io_pads_gpio_15_o_pue),\n    .io_port_pins_15_o_ds            (io_pads_gpio_15_o_ds),\n    .io_port_pins_16_i_ival          (io_pads_gpio_16_i_ival),\n    .io_port_pins_16_o_oval          (io_pads_gpio_16_o_oval),\n    .io_port_pins_16_o_oe            (io_pads_gpio_16_o_oe),\n    .io_port_pins_16_o_ie            (io_pads_gpio_16_o_ie),\n    .io_port_pins_16_o_pue           (io_pads_gpio_16_o_pue),\n    .io_port_pins_16_o_ds            (io_pads_gpio_16_o_ds),\n    .io_port_pins_17_i_ival          (io_pads_gpio_17_i_ival),\n    .io_port_pins_17_o_oval          (io_pads_gpio_17_o_oval),\n    .io_port_pins_17_o_oe            (io_pads_gpio_17_o_oe),\n    .io_port_pins_17_o_ie            (io_pads_gpio_17_o_ie),\n    .io_port_pins_17_o_pue           (io_pads_gpio_17_o_pue),\n    .io_port_pins_17_o_ds            (io_pads_gpio_17_o_ds),\n    .io_port_pins_18_i_ival          (io_pads_gpio_18_i_ival),\n    .io_port_pins_18_o_oval          (io_pads_gpio_18_o_oval),\n    .io_port_pins_18_o_oe            (io_pads_gpio_18_o_oe),\n    .io_port_pins_18_o_ie            (io_pads_gpio_18_o_ie),\n    .io_port_pins_18_o_pue           (io_pads_gpio_18_o_pue),\n    .io_port_pins_18_o_ds            (io_pads_gpio_18_o_ds),\n    .io_port_pins_19_i_ival          (io_pads_gpio_19_i_ival),\n    .io_port_pins_19_o_oval          (io_pads_gpio_19_o_oval),\n    .io_port_pins_19_o_oe            (io_pads_gpio_19_o_oe),\n    .io_port_pins_19_o_ie            (io_pads_gpio_19_o_ie),\n    .io_port_pins_19_o_pue           (io_pads_gpio_19_o_pue),\n    .io_port_pins_19_o_ds            (io_pads_gpio_19_o_ds),\n    .io_port_pins_20_i_ival          (io_pads_gpio_20_i_ival),\n    .io_port_pins_20_o_oval          (io_pads_gpio_20_o_oval),\n    .io_port_pins_20_o_oe            (io_pads_gpio_20_o_oe),\n    .io_port_pins_20_o_ie            (io_pads_gpio_20_o_ie),\n    .io_port_pins_20_o_pue           (io_pads_gpio_20_o_pue),\n    .io_port_pins_20_o_ds            (io_pads_gpio_20_o_ds),\n    .io_port_pins_21_i_ival          (io_pads_gpio_21_i_ival),\n    .io_port_pins_21_o_oval          (io_pads_gpio_21_o_oval),\n    .io_port_pins_21_o_oe            (io_pads_gpio_21_o_oe),\n    .io_port_pins_21_o_ie            (io_pads_gpio_21_o_ie),\n    .io_port_pins_21_o_pue           (io_pads_gpio_21_o_pue),\n    .io_port_pins_21_o_ds            (io_pads_gpio_21_o_ds),\n    .io_port_pins_22_i_ival          (io_pads_gpio_22_i_ival),\n    .io_port_pins_22_o_oval          (io_pads_gpio_22_o_oval),\n    .io_port_pins_22_o_oe            (io_pads_gpio_22_o_oe),\n    .io_port_pins_22_o_ie            (io_pads_gpio_22_o_ie),\n    .io_port_pins_22_o_pue           (io_pads_gpio_22_o_pue),\n    .io_port_pins_22_o_ds            (io_pads_gpio_22_o_ds),\n    .io_port_pins_23_i_ival          (io_pads_gpio_23_i_ival),\n    .io_port_pins_23_o_oval          (io_pads_gpio_23_o_oval),\n    .io_port_pins_23_o_oe            (io_pads_gpio_23_o_oe),\n    .io_port_pins_23_o_ie            (io_pads_gpio_23_o_ie),\n    .io_port_pins_23_o_pue           (io_pads_gpio_23_o_pue),\n    .io_port_pins_23_o_ds            (io_pads_gpio_23_o_ds),\n    .io_port_pins_24_i_ival          (io_pads_gpio_24_i_ival),\n    .io_port_pins_24_o_oval          (io_pads_gpio_24_o_oval),\n    .io_port_pins_24_o_oe            (io_pads_gpio_24_o_oe"}
{"text": "),\n    .io_port_pins_24_o_ie            (io_pads_gpio_24_o_ie),\n    .io_port_pins_24_o_pue           (io_pads_gpio_24_o_pue),\n    .io_port_pins_24_o_ds            (io_pads_gpio_24_o_ds),\n    .io_port_pins_25_i_ival          (io_pads_gpio_25_i_ival),\n    .io_port_pins_25_o_oval          (io_pads_gpio_25_o_oval),\n    .io_port_pins_25_o_oe            (io_pads_gpio_25_o_oe),\n    .io_port_pins_25_o_ie            (io_pads_gpio_25_o_ie),\n    .io_port_pins_25_o_pue           (io_pads_gpio_25_o_pue),\n    .io_port_pins_25_o_ds            (io_pads_gpio_25_o_ds),\n    .io_port_pins_26_i_ival          (io_pads_gpio_26_i_ival),\n    .io_port_pins_26_o_oval          (io_pads_gpio_26_o_oval),\n    .io_port_pins_26_o_oe            (io_pads_gpio_26_o_oe),\n    .io_port_pins_26_o_ie            (io_pads_gpio_26_o_ie),\n    .io_port_pins_26_o_pue           (io_pads_gpio_26_o_pue),\n    .io_port_pins_26_o_ds            (io_pads_gpio_26_o_ds),\n    .io_port_pins_27_i_ival          (io_pads_gpio_27_i_ival),\n    .io_port_pins_27_o_oval          (io_pads_gpio_27_o_oval),\n    .io_port_pins_27_o_oe            (io_pads_gpio_27_o_oe),\n    .io_port_pins_27_o_ie            (io_pads_gpio_27_o_ie),\n    .io_port_pins_27_o_pue           (io_pads_gpio_27_o_pue),\n    .io_port_pins_27_o_ds            (io_pads_gpio_27_o_ds),\n    .io_port_pins_28_i_ival          (io_pads_gpio_28_i_ival),\n    .io_port_pins_28_o_oval          (io_pads_gpio_28_o_oval),\n    .io_port_pins_28_o_oe            (io_pads_gpio_28_o_oe),\n    .io_port_pins_28_o_ie            (io_pads_gpio_28_o_ie),\n    .io_port_pins_28_o_pue           (io_pads_gpio_28_o_pue),\n    .io_port_pins_28_o_ds            (io_pads_gpio_28_o_ds),\n    .io_port_pins_29_i_ival          (io_pads_gpio_29_i_ival),\n    .io_port_pins_29_o_oval          (io_pads_gpio_29_o_oval),\n    .io_port_pins_29_o_oe            (io_pads_gpio_29_o_oe),\n    .io_port_pins_29_o_ie            (io_pads_gpio_29_o_ie),\n    .io_port_pins_29_o_pue           (io_pads_gpio_29_o_pue),\n    .io_port_pins_29_o_ds            (io_pads_gpio_29_o_ds),\n    .io_port_pins_30_i_ival          (io_pads_gpio_30_i_ival),\n    .io_port_pins_30_o_oval          (io_pads_gpio_30_o_oval),\n    .io_port_pins_30_o_oe            (io_pads_gpio_30_o_oe),\n    .io_port_pins_30_o_ie            (io_pads_gpio_30_o_ie),\n    .io_port_pins_30_o_pue           (io_pads_gpio_30_o_pue),\n    .io_port_pins_30_o_ds            (io_pads_gpio_30_o_ds),\n    .io_port_pins_31_i_ival          (io_pads_gpio_31_i_ival),\n    .io_port_pins_31_o_oval          (io_pads_gpio_31_o_oval),\n    .io_port_pins_31_o_oe            (io_pads_gpio_31_o_oe),\n    .io_port_pins_31_o_ie            (io_pads_gpio_31_o_ie),\n    .io_port_pins_31_o_pue           (io_pads_gpio_31_o_pue),\n    .io_port_pins_31_o_ds            (io_pads_gpio_31_o_ds),\n    .io_port_iof_0_0_i_ival          (gpio_iof_0_0_i_ival   ),// (),\n    .io_port_iof_0_0_o_oval          (gpio_iof_0_0_o_oval   ),// (1'b0),\n    .io_port_iof_0_0_o_oe            (gpio_iof_0_0_o_oe     ),// (1'b0),\n    .io_port_iof_0_0_o_ie            (gpio_iof_0_0_o_ie     ),// (1'b0),\n    .io_port_iof_0_0_o_valid         (gpio_iof_0_0_o_valid  ),// (1'b0),\n    .io_port_iof_0_1_i_ival          (gpio_iof_0_1_i_ival   ),// (),\n    .io_port_iof_0_1_o_oval          (gpio_iof_0_1_o_oval   ),// (1'b0),\n    .io_port_iof_0_1_o_oe            (gpio_iof_0_1_o_oe     ),// (1'b0),\n    .io_port_iof_0_1_o_ie            (gpio_iof_0_1_o_ie     ),// (1'b0),\n    .io_port_iof_0_1_o_valid         (gpio_iof_0_1_o_valid  ),// (1'b0),\n    .io_port_iof_0_2_i_ival          (gpio_iof_0_2_i_ival   ),// (),\n    .io_port_iof_0_2_o_oval          (gpio_iof_0_2_o_oval   ),// (qspi1_cs_0),\n    .io_port_iof_0_2_o_oe            (gpio_iof_0_2_o_oe     ),// (1'b1),\n    .io_port_iof_0_2_o_ie            (gpio_iof_0_2_o_ie     ),// (1'b0),\n    .io_port_iof_0_2_o_valid         (gpio_iof_0_2_o_valid  ),// (1'b1),\n    .io_port_iof_0_3_i_ival          (gpio_iof_0_3_i_ival   ),// (),\n    .io_port_iof_0_3_o_oval          (gpio_iof_0_3_o_oval   ),// (qspi1_dq_0_o),\n    .io_port_iof_0_3_o_oe            (gpio_iof_0_3_o_oe     ),// (1'b1),\n    .io_port_iof_0_3_o_ie            (gpio_iof_0_3_o_ie     ),// (1'b0),\n    .io_port_iof_0_3_o_valid         (gpio_iof_0_3_o_valid  ),// (1'b1),\n    .io_port_iof_0_4_i_ival          (gpio_iof_0_4_i_ival   ),// (),\n    .io_port_iof_0_4_o_oval          (gpio_iof_0_4_o_oval   ),// (gpio_iof_0_4_o_oval),\n    .io_port_iof_0_4_o_oe            (gpio_iof_0_4_o_oe     ),// (1'b1),\n    .io_port_iof_0_4_o_ie            (gpio_iof_0_4_o_ie     ),// (1'b0),\n    .io_port_iof_0_4_o_valid         (gpio_iof_0_4_o_valid  ),// (1'b1),\n    .io_port_iof_0_5_i_ival          (gpio_iof_0_5_i_ival   ),// (),\n    .io_port_iof_0_5_o_oval          (gpio_iof_0_5_o_oval   ),// (gpio_iof_0_5_o_oval),\n    .io_port_iof_0_5_o_oe            (gpio_iof_0_5_o_oe     ),// (1'b1),\n    .io_port_iof_0_5_o_ie            (gpio_iof_0_5_o_ie     ),// (1'b0),\n    .io_port_iof_0_5_o_valid         (gpio_iof_0_5_o_valid  ),// (1'b1),\n    .io_port_iof_0_6_i_ival          (gpio_iof_0_6_i_ival   ),// (),\n    .io_port_iof_0_6_o_oval          (gpio_iof_0_6_o_oval   ),// (gpio_iof_0_6_o_oval),\n    .io_port_iof_0_6_o_oe            (gpio_iof_0_6_o_oe     ),// (1'b1),\n    .io_port_iof_0_6_o_ie            (gpio_iof_0_6_o_ie     ),// (1'b0),\n    .io_port_iof_0_6_o_valid         (gpio_iof_0_6_o_valid  ),// (1'b1),\n    .io_port_iof_0_7_i_ival          (gpio_iof_0_7_i_ival   ),// (),\n    .io_port_iof_0_7_o_oval          (gpio_iof_0_7_o_oval   ),// (gpio_iof_0_7_o_oval),\n    .io_port_iof_0_7_o_oe            (gpio_iof_0_7_o_oe     ),// (1'b1),\n    .io_port_iof_0_7_o_ie            (gpio_iof_0_7_o_ie     ),// (1'b0),\n    .io_port_iof_0_7_o_valid         (gpio_iof_0_7_o_valid  ),// (1'b1),\n    .io_port_iof_0_8_i_ival          (gpio_iof_0_8_i_ival   ),// (),\n    .io_port_iof_0_8_o_oval          (gpio_iof_0_8_o_oval   ),// (gpio_iof_0_8_o_oval),\n    .io_port_iof_0_8_o_oe            (gpio_iof_0_8_o_oe     ),// (1'b1),\n    .io_port_iof_0_8_o_ie            (gpio_iof_0_8_o_ie     ),// (1'b0),\n    .io_port_iof_0_8_o_valid         (gpio_iof_0_8_o_valid  ),// (1'b1),\n    .io_port_iof_0_9_i_ival          (gpio_iof_0_9_i_ival   ),// (),\n    .io_port_iof_0_9_o_oval          (gpio_iof_0_9_o_oval   ),// (gpio_iof_0_9_o_oval),\n    .io_port_iof_0_9_o_oe            (gpio_iof_0_9_o_oe     ),// (1'b1),\n    .io_port_iof_0_9_o_ie            (gpio_iof_0_9_o_ie     ),// (1'b0),\n    .io_port_iof_0_9_o_valid         (gpio_iof_0_9_o_valid  ),// (1'b1),\n    .io_port_iof_0_10_i_ival         (gpio_iof_0_10_i_ival  ),// (),\n    .io_port_iof_0_10_o_oval         (gpio_iof_0_10_o_oval  ),// (gpio_iof_0_10_o_oval),\n    .io_port_iof_0_10_o_oe           (gpio_iof_0_10_o_oe    ),// (1'b1),\n    .io_port_iof_0_10_o_ie           (gpio_iof_0_10_o_ie    ),// (1'b0),\n    .io_port_iof_0_10_o_valid        (gpio_iof_0_10_o_valid ),// (1'b1),\n    .io_port_iof_0_11_i_ival         (gpio_iof_0_11_i_ival  ),// (),\n    .io_port_iof_0_11_o_oval         (gpio_iof_0_11_o_oval  ),// (1'b0),\n    .io_port_iof_0_11_o_oe           (gpio_iof_0_11_o_oe    ),// (1'b0),\n    .io_port_iof_0_11_o_ie           (gpio_iof_0_11_o_ie    ),// (1'b0),\n    .io_port_iof_0_11_o_valid        (gpio_iof_0_11_o_valid ),// (1'b0),\n    .io_port_iof_0_12_i_ival         (gpio_iof_0_12_i_ival  ),// (),\n    .io_port_iof_0_12_o_oval         (gpio_iof_0_12_o_oval  ),// (1'b0),\n    .io_port_iof_0_12_o_oe           (gpio_iof_0_12_o_oe    ),// (1'b0),\n    .io_port_iof_0_12_o_ie           (gpio_iof_0_12_o_ie    ),// (1'b0),\n    .io_port_iof_0_12_o_valid        (gpio_iof_0_12_o_valid ),// (1'b0),\n    .io_port_iof_0_13_i_ival         (gpio_iof_0_13_i_ival  ),// (),\n    .io_port_iof_0_13_o_oval         (gpio_iof_0_13_o_oval  ),// (1'b0),\n    .io_port_iof_0_13_o_oe           (gpio_iof_0_13_o_oe    ),// (1'b0),\n    .io_port_iof_0_13_o_ie           (gpio_iof_0_13_o_ie    ),// (1'b0),\n    .io_port_iof_0_13_o_valid        (gpio_iof_0_13_o_valid ),// (1'b0),\n    .io_port_iof_0_14_i_ival         (gpio_iof_0_14_i_ival  ),// (),\n    .io_port_iof_0_14_o_oval         (gpio_iof_0_14_o_oval  ),// (1'b0),\n    .io_port_iof_0_14_o_oe           (gpio_iof_0_14_o_oe    ),// (1'b0),\n    .io_port_iof_0_14_o_ie           (gpio_iof_0_14_o_ie    ),// (1'b0),\n    .io_port_iof_0_14_o_valid        (gpio_iof_0_14_o_valid ),// (1'b0),\n    .io_port_iof_0_15_i_ival         (gpio_iof_0_15_i_ival  ),// (),\n    .io_port_iof_0_15_o_oval         (gpio_iof_0_15_o_oval  ),// (1'b0),\n    .io_port_iof_0_15_o_oe           (gpio_iof_0_15_o_oe    ),// (1'b0),\n    .io_port_iof_0_15_o_ie           (gpio_iof_0_15_o_ie    ),// (1'b0),\n    .io_port_iof_0_15_o_valid        (gpio_iof_0_15_o_valid ),// (1'b0),\n    .io_port_iof_0_16_i_ival         (gpio_iof_0_16_i_ival  ),// (),\n    .io_port_iof_0_16_o_oval         (gpio_iof_0_16_o_oval  ),// (gpio_iof_0_16_o_oval),\n    .io_port_iof_0_16_o_oe           (gpio_iof_0_16_o_oe    ),// (1'b1),\n    .io_port_iof_0_16_o_ie           (gpio_iof_0_16_o_ie    ),// (1'b0),\n    .io_port_iof_0_16_o_valid        (gpio_iof_0_16_o_valid ),// (1'b1),\n    .io_port_iof_0_17_i_ival         (gpio_iof_0_17_i_ival  ),// (),\n    .io_port_iof_0_17_o_oval         (gpio_iof_0_17_o_oval  ),// (gpio_iof_0_17_o_oval),\n    .io_port_iof_0_17_o_oe           (gpio_iof_0_17_o_oe    ),// (1'b1),\n    .io_port_iof_0_17_o_ie           (gpio_iof_0_17_o_ie    ),// (1'b0),\n    .io_port_iof_0_17_o_valid        (gpio_iof_0_17_o_valid ),// (1'b1),\n    .io_port_iof_0_18_i_ival         (gpio_iof_0_18_i_ival  ),// (),\n    .io_port_iof_0_18_o_oval         (gpio_iof_0_18_o_oval  ),// (1'b0),\n    .io_port_iof_0_18_o_oe           (gpio_iof_0_18_o_oe    ),// (1'b0),\n    .io_port_iof_0_18_o_ie           (gpio_iof_0_18_o_ie    ),// (1'b0),\n    .io_port_iof_0_18_o_valid        (gpio_iof_0_18_o_valid ),// (1'b0),\n    .io_port_iof_0_19_i_ival         (gpio_iof_0_19_i_ival  ),// (),\n    .io_port_iof_0_19_o_oval         (gpio_iof_0_19_o_oval  ),// (1'b0),\n    .io_port_iof_0_19_o_oe           (gpio_iof_0_19_o_oe    ),// (1'b0),\n    .io_port_iof_0_19_o_ie           (gpio_iof_0_19_o_ie    ),// (1'b0),\n    .io_port_iof_0_19_o_valid        (gpio_iof_0_19_o_valid ),// (1'b0),\n    .io_port_iof_0_20_i_ival         (gpio_iof_0_20_i_ival  ),// (),\n    .io_port_iof_0_20_o_oval         (gpio_iof_0_20_o_oval  ),// (1'b0),\n    .io_port_iof_0_20_o_oe           (gpio_iof_0_20_o_oe    ),// (1'b0),\n    .io_port_iof_0_20_o_ie           (gpio_iof_0_20_o_ie    ),// (1'b0),\n    .io_port_iof_0_20_o_valid        (gpio_iof_0_20_o_valid ),// (1'b0),\n    .io_port_iof_0_21_i_ival         (gpio_iof_0_21_i_ival  ),// (),\n    .io_port_iof_0_21_o_oval         (gpio_iof_0_21_o_oval  ),// (1'b0),\n    .io_port_iof_0_21_o_oe           (gpio_iof_0_21_o_oe    ),// (1'b0),\n    .io_port_iof_0_21_o_ie           (gpio_iof_0_21_o_ie    ),// (1'b0),\n    .io_port_iof_0_21_o_valid        (gpio_iof_0_21_o_valid ),// (1'b0),\n    .io_port_iof_0_22_i_ival         (gpio_iof_0_22_i_ival  ),// (),\n    .io_port_iof_0_22_o_oval         (gpio_iof_0_22_o_oval  ),// (1'b0),\n    .io_port_iof_0_22_o_oe           (gpio_iof_0_22_o_oe    ),// (1'b0),\n    .io_port_iof_0_22_o_ie           (gpio_iof_0_22_o_ie    ),// (1'b0),\n    .io_port_iof_0_22_o_valid        (gpio_iof_0_22_o_valid ),// (1'b0),\n    .io_port_iof_0_23_i_ival         (gpio_iof_0_23_i_ival  ),// (),\n    .io_port_iof_0_23_o_oval         (gpio_iof_0_23_o_oval  ),// (1'b0),\n    .io_port_iof_0_23_o_oe           (gpio_iof_0_23_o_oe    ),// (1'b0),\n    .io_port_iof_0_23_o_ie           (gpio_iof_0_23_o_ie    ),// (1'b0),\n    .io_port_iof_0_23_o_valid        (gpio_iof_0_23_o_valid ),// (1'b0),\n    .io_port_iof_0_24_i_ival         (gpio_iof_0_24_i_ival  ),// (),\n    .io_port_iof_0_24_o_oval         (gpio_iof_0_24_o_oval  ),// (gpio_iof_0_24_o_oval),\n    .io_port_iof_0_24_o_oe           (gpio_iof_0_24_o_oe    ),// (1'b1),\n    .io_port_iof_0_24_o_ie           (gpio_iof_0_24_o_ie    ),// (1'b0),\n    .io_port_iof_0_24_o_valid        (gpio_iof_0_24_o_valid ),// (1'b1),\n    .io_port_iof_0_25_i_ival         (gpio_iof_0_25_i_ival  ),// (),\n    .io_port_iof_0_25_o_oval         (gpio_iof_0_25_o_oval  ),// (gpio_iof_0_25_o_oval),\n    .io_port_iof_0_25_o_oe           (gpio_iof_0_25_o_oe    ),// (1'b1),\n    .io_port_iof_0_25_o_ie           (gpio_iof_0_25_o_ie    ),// (1'b0),\n    .io_port_iof_0_25_o_valid        (gpio_iof_0_25_o_valid ),// (1'b1),\n    .io_port_iof_0_26_i_ival         (gpio_iof_0_26_i_ival  ),// (),\n    .io_port_iof_0_26_o_oval         (gpio_iof_0_26_o_oval  ),// (gpio_iof_0_26_o_oval),\n    .io_port_iof_0_26_o_oe           (gpio_iof_0_26_o_oe    ),// (1'b1),\n    .io_port_iof_0_26_o_ie           (gpio_iof_0_26_o_ie    ),// (1'b0),\n    .io_port_iof_0_26_o_valid        (gpio_iof_0_26_o_valid ),// (1'b1),\n    .io_port_iof_0_27_i_ival         (gpio_iof_0_27_i_ival  ),// (),\n    .io_port_iof_0_27_o_oval         (gpio_iof_0_27_o_oval  ),// (gpio_iof_0_27_o_oval),\n    .io_port_iof_0_27_o_oe           (gpio_iof_0_27_o_oe    ),// (1'b1),\n    .io_port_iof_0_27_o_ie           (gpio_iof_0_27_o_ie    ),// (1'b0),\n    .io_port_iof_0_27_o_valid        (gpio_iof_0_27_o_valid ),// (1'b1),\n    .io_port_iof_0_28_i_ival         (gpio_iof_0_28_i_ival  ),// (),\n    .io_port_iof_0_28_o_oval         (gpio_iof_0_28_o_oval  ),// (gpio_iof_0_28_o_oval),\n    .io_port_iof_0_28_o_oe           (gpio_iof_0_28_o_oe    ),// (1'b1),\n    .io_port_iof_0_28_o_ie           (gpio_iof_0_28_o_ie    ),// (1'b0),\n    .io_port_iof_0_28_o_valid        (gpio_iof_0_28_o_valid ),// (1'b1),\n    .io_port_iof_0_29_i_ival         (gpio_iof_0_29_i_ival  ),// (),\n    .io_port_iof_0_29_o_oval         (gpio_iof_0_29_o_oval  ),// (gpio_iof_0_29_o_oval),\n    .io_port_iof_0_29_o_oe           (gpio_iof_0_29_o_oe    ),// (1'b1),\n    .io_port_iof_0_29_o_ie           (gpio_iof_0_29_o_ie    ),// (1'b0),\n    .io_port_iof_0_29_o_valid        (gpio_iof_0_29_o_valid ),// (1'b1),\n    .io_port_iof_0_30_i_ival         (gpio_iof_0_30_i_ival  ),// (),\n    .io_port_iof_0_30_o_oval         (gpio_iof_0_30_o_oval  ),// (gpio_iof_0_30_o_oval),\n    .io_port_iof_0_30_o_oe           (gpio_iof_0_30_o_oe    ),// (1'b1),\n    .io_port_iof_0_30_o_ie           (gpio_iof_0_30_o_ie    ),// (1'b0),\n    .io_port_iof_0_30_o_valid        (gpio_iof_0_30_o_valid ),// (1'b1),\n    .io_port_iof_0_31_i_ival         (gpio_iof_0_31_i_ival  ),// (),\n    .io_port_iof_0_31_o_oval         (gpio_iof_0_31_o_oval  ),// (gpio_iof_0_31_o_oval),\n    .io_port_iof_0_31_o_oe           (gpio_iof_0_31_o_oe    ),// (1'b1),\n    .io_port_iof_0_31_o_ie           (gpio_iof_0_31_o_ie    ),// (1'b0),\n    .io_port_iof_0_31_o_valid        (gpio_iof_0_31_o_valid ),// (1'b1),\n    .io_port_iof_1_0_i_ival          (gpio_iof_1_0_i_ival   ),// (),\n    .io_port_iof_1_0_o_oval          (gpio_iof_1_0_o_oval   ),// (gpio_iof_1_0_o_oval),\n    .io_port_iof_1_0_o_oe            (gpio_iof_1_0_o_oe     ),// (gpio_iof_1_0_o_oe),\n    .io_port_iof_1_0_o_ie            (gpio_iof_1_0_o_ie     ),// (gpio_iof_1_0_o_ie),\n    .io_port_iof_1_0_o_valid         (gpio_iof_1_0_o_valid  ),// (gpio_iof_1_0_o_valid),\n    .io_port_iof_1_1_i_ival          (gpio_iof_1_1_i_ival   ),// (),\n    .io_port_iof_1_1_o_oval          (gpio_iof_1_1_o_oval   ),// (gpio_iof_1_1_o_oval),\n    .io_port_iof_1_1_o_oe            (gpio_iof_1_1_o_oe     ),// (gpio_iof_1_1_o_oe),\n    .io_port_iof_1_1_o_ie            (gpio_iof_1_1_o_ie     ),// (gpio_iof_1_1_o_ie),\n    .io_port_iof_1_1_o_valid         (gpio_iof_1_1_o_valid  ),// (gpio_iof_1_1_o_valid),\n    .io_port_iof_1_2_i_ival          (gpio_iof_1_2_i_ival   ),// (),\n    .io_port_iof_1_2_o_oval          (gpio_iof_1_2_o_oval   ),// (gpio_iof_1_2_o_oval),\n    .io_port_iof_1_2_o_oe            (gpio_iof_1_2_o_oe     ),// (gpio_iof_1_2_o_oe),\n    .io_port_iof_1_2_o_ie            (gpio_iof_1_2_o_ie     ),// (gpio_iof_1_2_o_ie),\n    .io_port_iof_1_2_o_valid         (gpio_iof_1_2_o_valid  ),// (gpio_iof_1_2_o_valid),\n    .io_port_iof_1_3_i_ival          (gpio_iof_1_3_i_ival   ),// (),\n    .io_port_iof_1_3_o_oval          (gpio_iof_1_3_o_oval   ),// (gpio_iof_1_3_o_oval),\n    .io_port_iof_1_3_o_oe            (gpio_iof_1_3_o_oe     ),// (gpio_iof_1_3_o_oe),\n    .io_port_iof_1_3_o_ie            (gpio_iof_1_3_o_ie     ),// (gpio_iof_1_3_o_ie),\n    .io_port_iof_1_3_o_valid         (gpio_iof_1_3_o_valid  ),// (gpio_iof_1_3_o_valid),\n    .io_port_iof_1_4_i_ival          (gpio_iof_1_4_i_ival   ),// (),\n    .io_port_iof_1_4_o_oval          (gpio_iof_1_4_o_oval   ),// (gpio_iof_1_4_o_oval),\n    .io_port_iof_1_4_o_oe            (gpio_iof_1_4_o_oe     ),// (gpio_iof_1_4_o_oe),\n    .io_port_iof_1_4_o_ie            (gpio_iof_1_4_o_ie     ),// (gpio_iof_1_4_o_ie),\n    .io_port_iof_1_4_o_valid         (gpio_iof_1_4_o_valid  ),// (gpio_iof_1_4_o_valid),\n    .io_port_iof_1_5_i_ival          (gpio_iof_1_5_i_ival   ),// (),\n    .io_port_iof_1_5_o_oval          (gpio_iof_1_5_o_oval   ),// (gpio_iof_1_5_o_oval),\n    .io_port_iof_1_5_o_oe            (gpio_iof_1_5_o_oe     ),// (gpio_iof_1_5_o_oe),\n    .io_port_iof_1_5_o_ie            (gpio_iof_1_5_o_ie     ),// (gpio_iof_1_5_o_ie),\n    .io_port_iof_1_5_o_valid         (gpio_iof_1_5_o_valid  ),// (gpio_iof_1_5_o_valid),\n    .io_port_iof_1_6_i_ival          (gpio_iof_1_6_i_ival   ),// (),\n    .io_port_iof_1_6_o_oval          (gpio_iof_1_6_o_oval   ),// (gpio_iof_1_6_o_oval),\n    .io_port_iof_1_6_o_oe            (gpio_iof_1_6_o_oe     ),// (gpio_iof_1_6_o_oe),\n    .io_port_iof_1_6_o_ie            (gpio_iof_1_6_o_ie     ),// (gpio_iof_1_6_o_ie),\n    .io_port_iof_1_6_o_valid         (gpio_iof_1_6_o_valid  ),// (gpio_iof_1_6_o_valid),\n    .io_port_iof_1_7_i_ival          (gpio_iof_1_7_i_ival   ),// (),\n    .io_port_iof_1_7_o_oval          (gpio_iof_1_7_o_oval   ),// (gpio_iof_1_7_o_oval),\n    .io_port_iof_1_7_o_oe            (gpio_iof_1_7_o_oe     ),// (gpio_iof_1_7_o_oe),\n    .io_port_iof_1_7_o_ie            (gpio_iof_1_7_o_ie     ),// (gpio_iof_1_7_o_ie),\n    .io_port_iof_1_7_o_valid         (gpio_iof_1_7_o_valid  ),// (gpio_iof_1_7_o_valid),\n    .io_port_iof_1_8_i_ival          (gpio_iof_1_8_i_ival   ),// (),\n    .io_port_iof_1_8_o_oval          (gpio_iof_1_8_o_oval   ),// (gpio_iof_1_8_o_oval),\n    .io_port_iof_1_8_o_oe            (gpio_iof_1_8_o_oe     ),// (gpio_iof_1_8_o_oe),\n    .io_port_iof_1_8_o_ie            (gpio_iof_1_8_o_ie     ),// (gpio_iof_1_8_o_ie),\n    .io_port_iof_1_8_o_valid         (gpio_iof_1_8_o_valid  ),// (gpio_iof_1_8_o_valid),\n    .io_port_iof_1_9_i_ival          (gpio_iof_1_9_i_ival   ),// (),\n    .io_port_iof_1_9_o_oval          (gpio_iof_1_9_o_oval   ),// (gpio_iof_1_9_o_oval),\n    .io_port_iof_1_9_o_oe            (gpio_iof_1_9_o_oe     ),// (gpio_iof_1_9_o_oe),\n    .io_port_iof_1_9_o_ie            (gpio_iof_1_9_o_ie     ),// (gpio_iof_1_9_o_ie),\n    .io_port_iof_1_9_o_valid         (gpio_iof_1_9_o_valid  ),// (gpio_iof_1_9_o_valid),\n    .io_port_iof_1_10_i_ival         (gpio_iof_1_10_i_ival  ),// (gpio_iof_1_10_i_ival),\n    .io_port_iof_1_10_o_oval         (gpio_iof_1_10_o_oval  ),// (gpio_iof_1_10_o_oval),\n    .io_port_iof_1_10_o_oe           (gpio_iof_1_10_o_oe    ),// (gpio_iof_1_10_o_oe),\n    .io_port_iof_1_10_o_ie           (gpio_iof_1_10_o_ie    ),// (gpio_iof_1_10_o_ie),\n    .io_port_iof_1_10_o_valid        (gpio_iof_1_10_o_valid ),// (gpio_iof_1_10_o_valid),\n    .io_port_iof_1_11_i_ival         (gpio_iof_1_11_i_ival  ),// (gpio_iof_1_11_i_ival),\n    .io_port_iof_1_11_o_oval         (gpio_iof_1_11_o_oval  ),// (gpio_iof_1_11_o_oval),\n    .io_port_iof_1_11_o_oe           (gpio_iof_1_11_o_oe    ),// (gpio_iof_1_11_o_oe),\n    .io_port_iof_1_11_o_ie           (gpio_iof_1_11_o_ie    ),// (gpio_iof_1_11_o_ie),\n    .io_port_iof_1_11_o_valid        (gpio_iof_1_11_o_valid ),// (gpio_iof_1_11_o_valid),\n    .io_port_iof_1_12_i_ival         (gpio_iof_1_12_i_ival  ),// (gpio_iof_1_12_i_ival),\n    .io_port_iof_1_12_o_oval         (gpio_iof_1_12_o_oval  ),// (gpio_iof_1_12_o_oval),\n    .io_port_iof_1_12_o_oe           (gpio_iof_1_12_o_oe    ),// (gpio_iof_1_12_o_oe),\n    .io_port_iof_1_12_o_ie           (gpio_iof_1_12_o_i"}
{"text": "e    ),// (gpio_iof_1_12_o_ie),\n    .io_port_iof_1_12_o_valid        (gpio_iof_1_12_o_valid ),// (gpio_iof_1_12_o_valid),\n    .io_port_iof_1_13_i_ival         (gpio_iof_1_13_i_ival  ),// (gpio_iof_1_13_i_ival),\n    .io_port_iof_1_13_o_oval         (gpio_iof_1_13_o_oval  ),// (gpio_iof_1_13_o_oval),\n    .io_port_iof_1_13_o_oe           (gpio_iof_1_13_o_oe    ),// (gpio_iof_1_13_o_oe),\n    .io_port_iof_1_13_o_ie           (gpio_iof_1_13_o_ie    ),// (gpio_iof_1_13_o_ie),\n    .io_port_iof_1_13_o_valid        (gpio_iof_1_13_o_valid ),// (gpio_iof_1_13_o_valid),\n    .io_port_iof_1_14_i_ival         (gpio_iof_1_14_i_ival  ),// (gpio_iof_1_14_i_ival),\n    .io_port_iof_1_14_o_oval         (gpio_iof_1_14_o_oval  ),// (gpio_iof_1_14_o_oval),\n    .io_port_iof_1_14_o_oe           (gpio_iof_1_14_o_oe    ),// (gpio_iof_1_14_o_oe),\n    .io_port_iof_1_14_o_ie           (gpio_iof_1_14_o_ie    ),// (gpio_iof_1_14_o_ie),\n    .io_port_iof_1_14_o_valid        (gpio_iof_1_14_o_valid ),// (gpio_iof_1_14_o_valid),\n    .io_port_iof_1_15_i_ival         (gpio_iof_1_15_i_ival  ),// (gpio_iof_1_15_i_ival),\n    .io_port_iof_1_15_o_oval         (gpio_iof_1_15_o_oval  ),// (gpio_iof_1_15_o_oval),\n    .io_port_iof_1_15_o_oe           (gpio_iof_1_15_o_oe    ),// (gpio_iof_1_15_o_oe),\n    .io_port_iof_1_15_o_ie           (gpio_iof_1_15_o_ie    ),// (gpio_iof_1_15_o_ie),\n    .io_port_iof_1_15_o_valid        (gpio_iof_1_15_o_valid ),// (gpio_iof_1_15_o_valid),\n    .io_port_iof_1_16_i_ival         (gpio_iof_1_16_i_ival  ),// (gpio_iof_1_16_i_ival),\n    .io_port_iof_1_16_o_oval         (gpio_iof_1_16_o_oval  ),// (gpio_iof_1_16_o_oval),\n    .io_port_iof_1_16_o_oe           (gpio_iof_1_16_o_oe    ),// (gpio_iof_1_16_o_oe),\n    .io_port_iof_1_16_o_ie           (gpio_iof_1_16_o_ie    ),// (gpio_iof_1_16_o_ie),\n    .io_port_iof_1_16_o_valid        (gpio_iof_1_16_o_valid ),// (gpio_iof_1_16_o_valid),\n    .io_port_iof_1_17_i_ival         (gpio_iof_1_17_i_ival  ),// (gpio_iof_1_17_i_ival),\n    .io_port_iof_1_17_o_oval         (gpio_iof_1_17_o_oval  ),// (gpio_iof_1_17_o_oval),\n    .io_port_iof_1_17_o_oe           (gpio_iof_1_17_o_oe    ),// (gpio_iof_1_17_o_oe),\n    .io_port_iof_1_17_o_ie           (gpio_iof_1_17_o_ie    ),// (gpio_iof_1_17_o_ie),\n    .io_port_iof_1_17_o_valid        (gpio_iof_1_17_o_valid ),// (gpio_iof_1_17_o_valid),\n    .io_port_iof_1_18_i_ival         (gpio_iof_1_18_i_ival  ),// (gpio_iof_1_18_i_ival),\n    .io_port_iof_1_18_o_oval         (gpio_iof_1_18_o_oval  ),// (gpio_iof_1_18_o_oval),\n    .io_port_iof_1_18_o_oe           (gpio_iof_1_18_o_oe    ),// (gpio_iof_1_18_o_oe),\n    .io_port_iof_1_18_o_ie           (gpio_iof_1_18_o_ie    ),// (gpio_iof_1_18_o_ie),\n    .io_port_iof_1_18_o_valid        (gpio_iof_1_18_o_valid ),// (gpio_iof_1_18_o_valid),\n    .io_port_iof_1_19_i_ival         (gpio_iof_1_19_i_ival  ),// (gpio_iof_1_19_i_ival),\n    .io_port_iof_1_19_o_oval         (gpio_iof_1_19_o_oval  ),// (gpio_iof_1_19_o_oval),\n    .io_port_iof_1_19_o_oe           (gpio_iof_1_19_o_oe    ),// (gpio_iof_1_19_o_oe),\n    .io_port_iof_1_19_o_ie           (gpio_iof_1_19_o_ie    ),// (gpio_iof_1_19_o_ie),\n    .io_port_iof_1_19_o_valid        (gpio_iof_1_19_o_valid ),// (gpio_iof_1_19_o_valid),\n    .io_port_iof_1_20_i_ival         (gpio_iof_1_20_i_ival  ),// (gpio_iof_1_20_i_ival),\n    .io_port_iof_1_20_o_oval         (gpio_iof_1_20_o_oval  ),// (gpio_iof_1_20_o_oval),\n    .io_port_iof_1_20_o_oe           (gpio_iof_1_20_o_oe    ),// (gpio_iof_1_20_o_oe),\n    .io_port_iof_1_20_o_ie           (gpio_iof_1_20_o_ie    ),// (gpio_iof_1_20_o_ie),\n    .io_port_iof_1_20_o_valid        (gpio_iof_1_20_o_valid ),// (gpio_iof_1_20_o_valid),\n    .io_port_iof_1_21_i_ival         (gpio_iof_1_21_i_ival  ),// (gpio_iof_1_21_i_ival),\n    .io_port_iof_1_21_o_oval         (gpio_iof_1_21_o_oval  ),// (gpio_iof_1_21_o_oval),\n    .io_port_iof_1_21_o_oe           (gpio_iof_1_21_o_oe    ),// (gpio_iof_1_21_o_oe),\n    .io_port_iof_1_21_o_ie           (gpio_iof_1_21_o_ie    ),// (gpio_iof_1_21_o_ie),\n    .io_port_iof_1_21_o_valid        (gpio_iof_1_21_o_valid ),// (gpio_iof_1_21_o_valid),\n    .io_port_iof_1_22_i_ival         (gpio_iof_1_22_i_ival  ),// (gpio_iof_1_22_i_ival),\n    .io_port_iof_1_22_o_oval         (gpio_iof_1_22_o_oval  ),// (gpio_iof_1_22_o_oval),\n    .io_port_iof_1_22_o_oe           (gpio_iof_1_22_o_oe    ),// (gpio_iof_1_22_o_oe),\n    .io_port_iof_1_22_o_ie           (gpio_iof_1_22_o_ie    ),// (gpio_iof_1_22_o_ie),\n    .io_port_iof_1_22_o_valid        (gpio_iof_1_22_o_valid ),// (gpio_iof_1_22_o_valid),\n    .io_port_iof_1_23_i_ival         (gpio_iof_1_23_i_ival  ),// (gpio_iof_1_23_i_ival),\n    .io_port_iof_1_23_o_oval         (gpio_iof_1_23_o_oval  ),// (gpio_iof_1_23_o_oval),\n    .io_port_iof_1_23_o_oe           (gpio_iof_1_23_o_oe    ),// (gpio_iof_1_23_o_oe),\n    .io_port_iof_1_23_o_ie           (gpio_iof_1_23_o_ie    ),// (gpio_iof_1_23_o_ie),\n    .io_port_iof_1_23_o_valid        (gpio_iof_1_23_o_valid ),// (gpio_iof_1_23_o_valid),\n    .io_port_iof_1_24_i_ival         (gpio_iof_1_24_i_ival  ),// (gpio_iof_1_24_i_ival),\n    .io_port_iof_1_24_o_oval         (gpio_iof_1_24_o_oval  ),// (gpio_iof_1_24_o_oval),\n    .io_port_iof_1_24_o_oe           (gpio_iof_1_24_o_oe    ),// (gpio_iof_1_24_o_oe),\n    .io_port_iof_1_24_o_ie           (gpio_iof_1_24_o_ie    ),// (gpio_iof_1_24_o_ie),\n    .io_port_iof_1_24_o_valid        (gpio_iof_1_24_o_valid ),// (gpio_iof_1_24_o_valid),\n    .io_port_iof_1_25_i_ival         (gpio_iof_1_25_i_ival  ),// (gpio_iof_1_25_i_ival),\n    .io_port_iof_1_25_o_oval         (gpio_iof_1_25_o_oval  ),// (gpio_iof_1_25_o_oval),\n    .io_port_iof_1_25_o_oe           (gpio_iof_1_25_o_oe    ),// (gpio_iof_1_25_o_oe),\n    .io_port_iof_1_25_o_ie           (gpio_iof_1_25_o_ie    ),// (gpio_iof_1_25_o_ie),\n    .io_port_iof_1_25_o_valid        (gpio_iof_1_25_o_valid ),// (gpio_iof_1_25_o_valid),\n    .io_port_iof_1_26_i_ival         (gpio_iof_1_26_i_ival  ),// (gpio_iof_1_26_i_ival),\n    .io_port_iof_1_26_o_oval         (gpio_iof_1_26_o_oval  ),// (gpio_iof_1_26_o_oval),\n    .io_port_iof_1_26_o_oe           (gpio_iof_1_26_o_oe    ),// (gpio_iof_1_26_o_oe),\n    .io_port_iof_1_26_o_ie           (gpio_iof_1_26_o_ie    ),// (gpio_iof_1_26_o_ie),\n    .io_port_iof_1_26_o_valid        (gpio_iof_1_26_o_valid ),// (gpio_iof_1_26_o_valid),\n    .io_port_iof_1_27_i_ival         (gpio_iof_1_27_i_ival  ),// (gpio_iof_1_27_i_ival),\n    .io_port_iof_1_27_o_oval         (gpio_iof_1_27_o_oval  ),// (gpio_iof_1_27_o_oval),\n    .io_port_iof_1_27_o_oe           (gpio_iof_1_27_o_oe    ),// (gpio_iof_1_27_o_oe),\n    .io_port_iof_1_27_o_ie           (gpio_iof_1_27_o_ie    ),// (gpio_iof_1_27_o_ie),\n    .io_port_iof_1_27_o_valid        (gpio_iof_1_27_o_valid ),// (gpio_iof_1_27_o_valid),\n    .io_port_iof_1_28_i_ival         (gpio_iof_1_28_i_ival  ),// (gpio_iof_1_28_i_ival),\n    .io_port_iof_1_28_o_oval         (gpio_iof_1_28_o_oval  ),// (gpio_iof_1_28_o_oval),\n    .io_port_iof_1_28_o_oe           (gpio_iof_1_28_o_oe    ),// (gpio_iof_1_28_o_oe),\n    .io_port_iof_1_28_o_ie           (gpio_iof_1_28_o_ie    ),// (gpio_iof_1_28_o_ie),\n    .io_port_iof_1_28_o_valid        (gpio_iof_1_28_o_valid ),// (gpio_iof_1_28_o_valid),\n    .io_port_iof_1_29_i_ival         (gpio_iof_1_29_i_ival  ),// (gpio_iof_1_29_i_ival),\n    .io_port_iof_1_29_o_oval         (gpio_iof_1_29_o_oval  ),// (gpio_iof_1_29_o_oval),\n    .io_port_iof_1_29_o_oe           (gpio_iof_1_29_o_oe    ),// (gpio_iof_1_29_o_oe),\n    .io_port_iof_1_29_o_ie           (gpio_iof_1_29_o_ie    ),// (gpio_iof_1_29_o_ie),\n    .io_port_iof_1_29_o_valid        (gpio_iof_1_29_o_valid ),// (gpio_iof_1_29_o_valid),\n    .io_port_iof_1_30_i_ival         (gpio_iof_1_30_i_ival  ),// (gpio_iof_1_30_i_ival),\n    .io_port_iof_1_30_o_oval         (gpio_iof_1_30_o_oval  ),// (gpio_iof_1_30_o_oval),\n    .io_port_iof_1_30_o_oe           (gpio_iof_1_30_o_oe    ),// (gpio_iof_1_30_o_oe),\n    .io_port_iof_1_30_o_ie           (gpio_iof_1_30_o_ie    ),// (gpio_iof_1_30_o_ie),\n    .io_port_iof_1_30_o_valid        (gpio_iof_1_30_o_valid ),// (gpio_iof_1_30_o_valid),\n    .io_port_iof_1_31_i_ival         (gpio_iof_1_31_i_ival  ),// (gpio_iof_1_31_i_ival),\n    .io_port_iof_1_31_o_oval         (gpio_iof_1_31_o_oval  ),// (gpio_iof_1_31_o_oval),\n    .io_port_iof_1_31_o_oe           (gpio_iof_1_31_o_oe    ),// (gpio_iof_1_31_o_oe),\n    .io_port_iof_1_31_o_ie           (gpio_iof_1_31_o_ie    ),// (gpio_iof_1_31_o_ie),\n    .io_port_iof_1_31_o_valid        (gpio_iof_1_31_o_valid ) // (gpio_iof_1_31_o_valid)\n);\n\n  //  * UART0     \nsirv_uart_top u_sirv_uart0_top (\n    .clk           (clk  ),\n    .rst_n         (rst_n),\n\n    .i_icb_cmd_valid (uart0_icb_cmd_valid),\n    .i_icb_cmd_ready (uart0_icb_cmd_ready),\n    .i_icb_cmd_addr  (uart0_icb_cmd_addr ),\n    .i_icb_cmd_read  (uart0_icb_cmd_read ),\n    .i_icb_cmd_wdata (uart0_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid (uart0_icb_rsp_valid),\n    .i_icb_rsp_ready (uart0_icb_rsp_ready),\n    .i_icb_rsp_rdata (uart0_icb_rsp_rdata),\n\n    .io_interrupts_0_0 (uart0_irq),                \n    .io_port_txd       (uart0_txd),\n    .io_port_rxd       (uart0_rxd)\n);\n\n\n  //  * QSPI0     \nsirv_flash_qspi_top u_sirv_qspi0_top(\n    .clk           (clk  ),\n    .rst_n         (rst_n),\n\n    .i_icb_cmd_valid (qspi0_icb_cmd_valid),\n    .i_icb_cmd_ready (qspi0_icb_cmd_ready),\n    .i_icb_cmd_addr  (qspi0_icb_cmd_addr ),\n    .i_icb_cmd_read  (qspi0_icb_cmd_read ),\n    .i_icb_cmd_wdata (qspi0_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid (qspi0_icb_rsp_valid),\n    .i_icb_rsp_ready (qspi0_icb_rsp_ready),\n    .i_icb_rsp_rdata (qspi0_icb_rsp_rdata), \n\n    .f_icb_cmd_valid (qspi0_ro_icb_cmd_valid),\n    .f_icb_cmd_ready (qspi0_ro_icb_cmd_ready),\n    .f_icb_cmd_addr  (qspi0_ro_icb_cmd_addr ),\n    .f_icb_cmd_read  (qspi0_ro_icb_cmd_read ),\n    .f_icb_cmd_wdata (qspi0_ro_icb_cmd_wdata),\n    \n    .f_icb_rsp_valid (qspi0_ro_icb_rsp_valid),\n    .f_icb_rsp_ready (qspi0_ro_icb_rsp_ready),\n    .f_icb_rsp_rdata (qspi0_ro_icb_rsp_rdata), \n\n    .io_port_sck     (qspi0_sck    ), \n    .io_port_dq_0_i  (qspi0_dq_0_i ),\n    .io_port_dq_0_o  (qspi0_dq_0_o ),\n    .io_port_dq_0_oe (qspi0_dq_0_oe),\n    .io_port_dq_1_i  (qspi0_dq_1_i ),\n    .io_port_dq_1_o  (qspi0_dq_1_o ),\n    .io_port_dq_1_oe (qspi0_dq_1_oe),\n    .io_port_dq_2_i  (qspi0_dq_2_i ),\n    .io_port_dq_2_o  (qspi0_dq_2_o ),\n    .io_port_dq_2_oe (qspi0_dq_2_oe),\n    .io_port_dq_3_i  (qspi0_dq_3_i ),\n    .io_port_dq_3_o  (qspi0_dq_3_o ),\n    .io_port_dq_3_oe (qspi0_dq_3_oe),\n    .io_port_cs_0    (qspi0_cs_0   ),\n    .io_tl_i_0_0     (qspi0_irq    ) \n);\n\n  //  * PWM0      \nsirv_pwm8_top u_sirv_pwm0_top(\n    .clk           (clk  ),\n    .rst_n         (rst_n),\n\n    .i_icb_cmd_valid (pwm0_icb_cmd_valid),\n    .i_icb_cmd_ready (pwm0_icb_cmd_ready),\n    .i_icb_cmd_addr  (pwm0_icb_cmd_addr ),\n    .i_icb_cmd_read  (pwm0_icb_cmd_read ),\n    .i_icb_cmd_wdata (pwm0_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid (pwm0_icb_rsp_valid),\n    .i_icb_rsp_ready (pwm0_icb_rsp_ready),\n    .i_icb_rsp_rdata (pwm0_icb_rsp_rdata),\n\n    .io_interrupts_0_0(pwm0_irq_0),\n    .io_interrupts_0_1(pwm0_irq_1),\n    .io_interrupts_0_2(pwm0_irq_2),\n    .io_interrupts_0_3(pwm0_irq_3),\n\n    .io_gpio_0(pwm0_gpio_0),\n    .io_gpio_1(pwm0_gpio_1),\n    .io_gpio_2(pwm0_gpio_2),\n    .io_gpio_3(pwm0_gpio_3)\n);\n\n  //  * UART1     \nsirv_uart_top u_sirv_uart1_top (\n    .clk           (clk  ),\n    .rst_n         (rst_n),\n\n    .i_icb_cmd_valid (uart1_icb_cmd_valid),\n    .i_icb_cmd_ready (uart1_icb_cmd_ready),\n    .i_icb_cmd_addr  (uart1_icb_cmd_addr ),\n    .i_icb_cmd_read  (uart1_icb_cmd_read ),\n    .i_icb_cmd_wdata (uart1_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid (uart1_icb_rsp_valid),\n    .i_icb_rsp_ready (uart1_icb_rsp_ready),\n    .i_icb_rsp_rdata (uart1_icb_rsp_rdata),\n\n    .io_interrupts_0_0 (uart1_irq),                \n    .io_port_txd       (uart1_txd),\n    .io_port_rxd       (uart1_rxd)\n);\n\n\n  //  * QSPI1     \nsirv_qspi_4cs_top u_sirv_qspi1_top(\n    .clk           (clk  ),\n    .rst_n         (rst_n),\n\n    .i_icb_cmd_valid (qspi1_icb_cmd_valid),\n    .i_icb_cmd_ready (qspi1_icb_cmd_ready),\n    .i_icb_cmd_addr  (qspi1_icb_cmd_addr ),\n    .i_icb_cmd_read  (qspi1_icb_cmd_read ),\n    .i_icb_cmd_wdata (qspi1_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid (qspi1_icb_rsp_valid),\n    .i_icb_rsp_ready (qspi1_icb_rsp_ready),\n    .i_icb_rsp_rdata (qspi1_icb_rsp_rdata), \n\n    .io_port_sck     (qspi1_sck    ), \n    .io_port_dq_0_i  (qspi1_dq_0_i ),\n    .io_port_dq_0_o  (qspi1_dq_0_o ),\n    .io_port_dq_0_oe (qspi1_dq_0_oe),\n    .io_port_dq_1_i  (qspi1_dq_1_i ),\n    .io_port_dq_1_o  (qspi1_dq_1_o ),\n    .io_port_dq_1_oe (qspi1_dq_1_oe),\n    .io_port_dq_2_i  (qspi1_dq_2_i ),\n    .io_port_dq_2_o  (qspi1_dq_2_o ),\n    .io_port_dq_2_oe (qspi1_dq_2_oe),\n    .io_port_dq_3_i  (qspi1_dq_3_i ),\n    .io_port_dq_3_o  (qspi1_dq_3_o ),\n    .io_port_dq_3_oe (qspi1_dq_3_oe),\n    .io_port_cs_0    (qspi1_cs_0   ),\n    .io_port_cs_1    (qspi1_cs_1   ),\n    .io_port_cs_2    (qspi1_cs_2   ),\n    .io_port_cs_3    (qspi1_cs_3   ),\n    .io_tl_i_0_0     (qspi1_irq    ) \n);\n\n\n  //  * PWM1      \nsirv_pwm16_top u_sirv_pwm1_top(\n    .clk           (clk  ),\n    .rst_n         (rst_n),\n\n    .i_icb_cmd_valid (pwm1_icb_cmd_valid),\n    .i_icb_cmd_ready (pwm1_icb_cmd_ready),\n    .i_icb_cmd_addr  (pwm1_icb_cmd_addr ),\n    .i_icb_cmd_read  (pwm1_icb_cmd_read ),\n    .i_icb_cmd_wdata (pwm1_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid (pwm1_icb_rsp_valid),\n    .i_icb_rsp_ready (pwm1_icb_rsp_ready),\n    .i_icb_rsp_rdata (pwm1_icb_rsp_rdata),\n\n    .io_interrupts_0_0(pwm1_irq_0),\n    .io_interrupts_0_1(pwm1_irq_1),\n    .io_interrupts_0_2(pwm1_irq_2),\n    .io_interrupts_0_3(pwm1_irq_3),\n\n    .io_gpio_0(pwm1_gpio_0),\n    .io_gpio_1(pwm1_gpio_1),\n    .io_gpio_2(pwm1_gpio_2),\n    .io_gpio_3(pwm1_gpio_3)\n);\n\n  //  * QSPI2     \nsirv_qspi_1cs_top u_sirv_qspi2_top(\n    .clk           (clk  ),\n    .rst_n         (rst_n),\n\n    .i_icb_cmd_valid (qspi2_icb_cmd_valid),\n    .i_icb_cmd_ready (qspi2_icb_cmd_ready),\n    .i_icb_cmd_addr  (qspi2_icb_cmd_addr ),\n    .i_icb_cmd_read  (qspi2_icb_cmd_read ),\n    .i_icb_cmd_wdata (qspi2_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid (qspi2_icb_rsp_valid),\n    .i_icb_rsp_ready (qspi2_icb_rsp_ready),\n    .i_icb_rsp_rdata (qspi2_icb_rsp_rdata), \n\n    .io_port_sck     (qspi2_sck    ), \n    .io_port_dq_0_i  (qspi2_dq_0_i ),\n    .io_port_dq_0_o  (qspi2_dq_0_o ),\n    .io_port_dq_0_oe (qspi2_dq_0_oe),\n    .io_port_dq_1_i  (qspi2_dq_1_i ),\n    .io_port_dq_1_o  (qspi2_dq_1_o ),\n    .io_port_dq_1_oe (qspi2_dq_1_oe),\n    .io_port_dq_2_i  (qspi2_dq_2_i ),\n    .io_port_dq_2_o  (qspi2_dq_2_o ),\n    .io_port_dq_2_oe (qspi2_dq_2_oe),\n    .io_port_dq_3_i  (qspi2_dq_3_i ),\n    .io_port_dq_3_o  (qspi2_dq_3_o ),\n    .io_port_dq_3_oe (qspi2_dq_3_oe),\n    .io_port_cs_0    (qspi2_cs_0   ),\n    .io_tl_i_0_0     (qspi2_irq    ) \n);\n\n  //  * PWM2      \nsirv_pwm16_top u_sirv_pwm2_top(\n    .clk           (clk  ),\n    .rst_n         (rst_n),\n\n    .i_icb_cmd_valid (pwm2_icb_cmd_valid),\n    .i_icb_cmd_ready (pwm2_icb_cmd_ready),\n    .i_icb_cmd_addr  (pwm2_icb_cmd_addr ),\n    .i_icb_cmd_read  (pwm2_icb_cmd_read ),\n    .i_icb_cmd_wdata (pwm2_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid (pwm2_icb_rsp_valid),\n    .i_icb_rsp_ready (pwm2_icb_rsp_ready),\n    .i_icb_rsp_rdata (pwm2_icb_rsp_rdata),\n\n    .io_interrupts_0_0(pwm2_irq_0),\n    .io_interrupts_0_1(pwm2_irq_1),\n    .io_interrupts_0_2(pwm2_irq_2),\n    .io_interrupts_0_3(pwm2_irq_3),\n\n    .io_gpio_0(pwm2_gpio_0),\n    .io_gpio_1(pwm2_gpio_1),\n    .io_gpio_2(pwm2_gpio_2),\n    .io_gpio_3(pwm2_gpio_3)\n);\n\n  sirv_uartgpioport u_uart0_pins (\n    .clock(clk),\n    .reset(~rst_n),\n    .io_uart_txd(uart0_txd),\n    .io_uart_rxd(uart0_rxd),\n    .io_pins_rxd_i_ival(uart_pins_0_io_pins_rxd_i_ival),\n    .io_pins_rxd_o_oval(uart_pins_0_io_pins_rxd_o_oval),\n    .io_pins_rxd_o_oe(uart_pins_0_io_pins_rxd_o_oe),\n    .io_pins_rxd_o_ie(uart_pins_0_io_pins_rxd_o_ie),\n    .io_pins_rxd_o_pue(uart_pins_0_io_pins_rxd_o_pue),\n    .io_pins_rxd_o_ds(uart_pins_0_io_pins_rxd_o_ds),\n    .io_pins_txd_i_ival(uart_pins_0_io_pins_txd_i_ival),\n    .io_pins_txd_o_oval(uart_pins_0_io_pins_txd_o_oval),\n    .io_pins_txd_o_oe(uart_pins_0_io_pins_txd_o_oe),\n    .io_pins_txd_o_ie(uart_pins_0_io_pins_txd_o_ie),\n    .io_pins_txd_o_pue(uart_pins_0_io_pins_txd_o_pue),\n    .io_pins_txd_o_ds(uart_pins_0_io_pins_txd_o_ds)\n  );\n\n  sirv_uartgpioport u_uart1_pins (\n    .clock(clk),\n    .reset(~rst_n),\n    .io_uart_txd(uart1_txd),\n    .io_uart_rxd(uart1_rxd),\n    .io_pins_rxd_i_ival(uart_pins_1_io_pins_rxd_i_ival),\n    .io_pins_rxd_o_oval(uart_pins_1_io_pins_rxd_o_oval),\n    .io_pins_rxd_o_oe(uart_pins_1_io_pins_rxd_o_oe),\n    .io_pins_rxd_o_ie(uart_pins_1_io_pins_rxd_o_ie),\n    .io_pins_rxd_o_pue(uart_pins_1_io_pins_rxd_o_pue),\n    .io_pins_rxd_o_ds(uart_pins_1_io_pins_rxd_o_ds),\n    .io_pins_txd_i_ival(uart_pins_1_io_pins_txd_i_ival),\n    .io_pins_txd_o_oval(uart_pins_1_io_pins_txd_o_oval),\n    .io_pins_txd_o_oe(uart_pins_1_io_pins_txd_o_oe),\n    .io_pins_txd_o_ie(uart_pins_1_io_pins_txd_o_ie),\n    .io_pins_txd_o_pue(uart_pins_1_io_pins_txd_o_pue),\n    .io_pins_txd_o_ds(uart_pins_1_io_pins_txd_o_ds)\n  );\n  sirv_pwmgpioport u_pwm0_pins (\n    .clock(clk),\n    .reset(~rst_n),\n    .io_pwm_port_0(pwm0_gpio_0),\n    .io_pwm_port_1(pwm0_gpio_1),\n    .io_pwm_port_2(pwm0_gpio_2),\n    .io_pwm_port_3(pwm0_gpio_3),\n    .io_pins_pwm_0_i_ival(pwm_pins_0_io_pins_pwm_0_i_ival),\n    .io_pins_pwm_0_o_oval(pwm_pins_0_io_pins_pwm_0_o_oval),\n    .io_pins_pwm_0_o_oe(pwm_pins_0_io_pins_pwm_0_o_oe),\n    .io_pins_pwm_0_o_ie(pwm_pins_0_io_pins_pwm_0_o_ie),\n    .io_pins_pwm_0_o_pue(pwm_pins_0_io_pins_pwm_0_o_pue),\n    .io_pins_pwm_0_o_ds(pwm_pins_0_io_pins_pwm_0_o_ds),\n    .io_pins_pwm_1_i_ival(pwm_pins_0_io_pins_pwm_1_i_ival),\n    .io_pins_pwm_1_o_oval(pwm_pins_0_io_pins_pwm_1_o_oval),\n    .io_pins_pwm_1_o_oe(pwm_pins_0_io_pins_pwm_1_o_oe),\n    .io_pins_pwm_1_o_ie(pwm_pins_0_io_pins_pwm_1_o_ie),\n    .io_pins_pwm_1_o_pue(pwm_pins_0_io_pins_pwm_1_o_pue),\n    .io_pins_pwm_1_o_ds(pwm_pins_0_io_pins_pwm_1_o_ds),\n    .io_pins_pwm_2_i_ival(pwm_pins_0_io_pins_pwm_2_i_ival),\n    .io_pins_pwm_2_o_oval(pwm_pins_0_io_pins_pwm_2_o_oval),\n    .io_pins_pwm_2_o_oe(pwm_pins_0_io_pins_pwm_2_o_oe),\n    .io_pins_pwm_2_o_ie(pwm_pins_0_io_pins_pwm_2_o_ie),\n    .io_pins_pwm_2_o_pue(pwm_pins_0_io_pins_pwm_2_o_pue),\n    .io_pins_pwm_2_o_ds(pwm_pins_0_io_pins_pwm_2_o_ds),\n    .io_pins_pwm_3_i_ival(pwm_pins_0_io_pins_pwm_3_i_ival),\n    .io_pins_pwm_3_o_oval(pwm_pins_0_io_pins_pwm_3_o_oval),\n    .io_pins_pwm_3_o_oe(pwm_pins_0_io_pins_pwm_3_o_oe),\n    .io_pins_pwm_3_o_ie(pwm_pins_0_io_pins_pwm_3_o_ie),\n    .io_pins_pwm_3_o_pue(pwm_pins_0_io_pins_pwm_3_o_pue),\n    .io_pins_pwm_3_o_ds(pwm_pins_0_io_pins_pwm_3_o_ds)\n  );\n  sirv_pwmgpioport u_pwm1_pins (\n    .clock(clk),\n    .reset(~rst_n),\n    .io_pwm_port_0(pwm1_gpio_0),\n    .io_pwm_port_1(pwm1_gpio_1),\n    .io_pwm_port_2(pwm1_gpio_2),\n    .io_pwm_port_3(pwm1_gpio_3),\n    .io_pins_pwm_0_i_ival(pwm_pins_1_io_pins_pwm_0_i_ival),\n    .io_pins_pwm_0_o_oval(pwm_pins_1_io_pins_pwm_0_o_oval),\n    .io_pins_pwm_0_o_oe(pwm_pins_1_io_pins_pwm_0_o_oe),\n    .io_pins_pwm_0_o_ie(pwm_pins_1_io_pins_pwm_0_o_ie),\n    .io_pins_pwm_0_o_pue(pwm_pins_1_io_pins_pwm_0_o_pue),\n    .io_pins_pwm_0_o_ds(pwm_pins_1_io_pins_pwm_0_o_ds),\n    .io_pins_pwm_1_i_ival(pwm_pins_1_io_pins_pwm_1_i_ival),\n    .io_pins_pwm_1_o_oval(pwm_pins_1_io_pins_pwm_1_o_oval),\n    .io_pins_pwm_1_o_oe(pwm_pins_1_io_pins_pwm_1_o_oe),\n    .io_pins_pwm_1_o_ie(pwm_pins_1_io_pins_pwm_1_o_ie),\n    .io_pins_pwm_1_o_pue(pwm_pins_1_io_pins_pwm_1_o_pue),\n    .io_pins_pwm_1_o_ds(pwm_pins_1_io_pins_pwm_1_o_ds),\n    .io_pins_pwm_2_i_ival(pwm_pins_1_io_pins_pwm_2_i_ival),\n    .io_pins_pwm_2_o_oval(pwm_pins_1_io_pins_pwm_2_o_oval),\n    .io_pins_pwm_2_o_oe(pwm_pins_1_io_pins_pwm_2_o_oe),\n    .io_pins_pwm_2_o_ie(pwm_pins_1_io_pins_pwm_2_o_ie),\n    .io_pins_pwm_2_o_pue(pwm_pins_1_io_pins_pwm_2_o_pue),\n    .io_pins_pwm_2_o_ds(pwm_pins_1_io_pins_pwm_2_o_ds),\n    .io_pins_pwm_3_i_ival(pwm_pins_1_io_pins_pwm_3_i_ival),\n    .io_pins_"}
{"text": "pwm_3_o_oval(pwm_pins_1_io_pins_pwm_3_o_oval),\n    .io_pins_pwm_3_o_oe(pwm_pins_1_io_pins_pwm_3_o_oe),\n    .io_pins_pwm_3_o_ie(pwm_pins_1_io_pins_pwm_3_o_ie),\n    .io_pins_pwm_3_o_pue(pwm_pins_1_io_pins_pwm_3_o_pue),\n    .io_pins_pwm_3_o_ds(pwm_pins_1_io_pins_pwm_3_o_ds)\n  );\n  sirv_pwmgpioport u_pwm2_pins (\n    .clock(clk),\n    .reset(~rst_n),\n    .io_pwm_port_0(pwm2_gpio_0),\n    .io_pwm_port_1(pwm2_gpio_1),\n    .io_pwm_port_2(pwm2_gpio_2),\n    .io_pwm_port_3(pwm2_gpio_3),\n    .io_pins_pwm_0_i_ival(pwm_pins_2_io_pins_pwm_0_i_ival),\n    .io_pins_pwm_0_o_oval(pwm_pins_2_io_pins_pwm_0_o_oval),\n    .io_pins_pwm_0_o_oe(pwm_pins_2_io_pins_pwm_0_o_oe),\n    .io_pins_pwm_0_o_ie(pwm_pins_2_io_pins_pwm_0_o_ie),\n    .io_pins_pwm_0_o_pue(pwm_pins_2_io_pins_pwm_0_o_pue),\n    .io_pins_pwm_0_o_ds(pwm_pins_2_io_pins_pwm_0_o_ds),\n    .io_pins_pwm_1_i_ival(pwm_pins_2_io_pins_pwm_1_i_ival),\n    .io_pins_pwm_1_o_oval(pwm_pins_2_io_pins_pwm_1_o_oval),\n    .io_pins_pwm_1_o_oe(pwm_pins_2_io_pins_pwm_1_o_oe),\n    .io_pins_pwm_1_o_ie(pwm_pins_2_io_pins_pwm_1_o_ie),\n    .io_pins_pwm_1_o_pue(pwm_pins_2_io_pins_pwm_1_o_pue),\n    .io_pins_pwm_1_o_ds(pwm_pins_2_io_pins_pwm_1_o_ds),\n    .io_pins_pwm_2_i_ival(pwm_pins_2_io_pins_pwm_2_i_ival),\n    .io_pins_pwm_2_o_oval(pwm_pins_2_io_pins_pwm_2_o_oval),\n    .io_pins_pwm_2_o_oe(pwm_pins_2_io_pins_pwm_2_o_oe),\n    .io_pins_pwm_2_o_ie(pwm_pins_2_io_pins_pwm_2_o_ie),\n    .io_pins_pwm_2_o_pue(pwm_pins_2_io_pins_pwm_2_o_pue),\n    .io_pins_pwm_2_o_ds(pwm_pins_2_io_pins_pwm_2_o_ds),\n    .io_pins_pwm_3_i_ival(pwm_pins_2_io_pins_pwm_3_i_ival),\n    .io_pins_pwm_3_o_oval(pwm_pins_2_io_pins_pwm_3_o_oval),\n    .io_pins_pwm_3_o_oe(pwm_pins_2_io_pins_pwm_3_o_oe),\n    .io_pins_pwm_3_o_ie(pwm_pins_2_io_pins_pwm_3_o_ie),\n    .io_pins_pwm_3_o_pue(pwm_pins_2_io_pins_pwm_3_o_pue),\n    .io_pins_pwm_3_o_ds(pwm_pins_2_io_pins_pwm_3_o_ds)\n  );\n  sirv_spigpioport u_qspi1_pins(\n    .clock(clk),\n    .reset(~rst_n),\n    .io_spi_sck(qspi1_sck),\n    .io_spi_dq_0_i(qspi1_dq_0_i),\n    .io_spi_dq_0_o(qspi1_dq_0_o),\n    .io_spi_dq_0_oe(qspi1_dq_0_oe),\n    .io_spi_dq_1_i(qspi1_dq_1_i),\n    .io_spi_dq_1_o(qspi1_dq_1_o),\n    .io_spi_dq_1_oe(qspi1_dq_1_oe),\n    .io_spi_dq_2_i(qspi1_dq_2_i),\n    .io_spi_dq_2_o(qspi1_dq_2_o),\n    .io_spi_dq_2_oe(qspi1_dq_2_oe),\n    .io_spi_dq_3_i(qspi1_dq_3_i),\n    .io_spi_dq_3_o(qspi1_dq_3_o),\n    .io_spi_dq_3_oe(qspi1_dq_3_oe),\n    .io_spi_cs_0(qspi1_cs_0),\n    .io_spi_cs_1(qspi1_cs_1),\n    .io_spi_cs_2(qspi1_cs_2),\n    .io_spi_cs_3(qspi1_cs_3),\n    .io_pins_sck_i_ival(spi_pins_0_io_pins_sck_i_ival),\n    .io_pins_sck_o_oval(spi_pins_0_io_pins_sck_o_oval),\n    .io_pins_sck_o_oe(spi_pins_0_io_pins_sck_o_oe),\n    .io_pins_sck_o_ie(spi_pins_0_io_pins_sck_o_ie),\n    .io_pins_sck_o_pue(spi_pins_0_io_pins_sck_o_pue),\n    .io_pins_sck_o_ds(spi_pins_0_io_pins_sck_o_ds),\n    .io_pins_dq_0_i_ival(spi_pins_0_io_pins_dq_0_i_ival),\n    .io_pins_dq_0_o_oval(spi_pins_0_io_pins_dq_0_o_oval),\n    .io_pins_dq_0_o_oe(spi_pins_0_io_pins_dq_0_o_oe),\n    .io_pins_dq_0_o_ie(spi_pins_0_io_pins_dq_0_o_ie),\n    .io_pins_dq_0_o_pue(spi_pins_0_io_pins_dq_0_o_pue),\n    .io_pins_dq_0_o_ds(spi_pins_0_io_pins_dq_0_o_ds),\n    .io_pins_dq_1_i_ival(spi_pins_0_io_pins_dq_1_i_ival),\n    .io_pins_dq_1_o_oval(spi_pins_0_io_pins_dq_1_o_oval),\n    .io_pins_dq_1_o_oe(spi_pins_0_io_pins_dq_1_o_oe),\n    .io_pins_dq_1_o_ie(spi_pins_0_io_pins_dq_1_o_ie),\n    .io_pins_dq_1_o_pue(spi_pins_0_io_pins_dq_1_o_pue),\n    .io_pins_dq_1_o_ds(spi_pins_0_io_pins_dq_1_o_ds),\n    .io_pins_dq_2_i_ival(spi_pins_0_io_pins_dq_2_i_ival),\n    .io_pins_dq_2_o_oval(spi_pins_0_io_pins_dq_2_o_oval),\n    .io_pins_dq_2_o_oe(spi_pins_0_io_pins_dq_2_o_oe),\n    .io_pins_dq_2_o_ie(spi_pins_0_io_pins_dq_2_o_ie),\n    .io_pins_dq_2_o_pue(spi_pins_0_io_pins_dq_2_o_pue),\n    .io_pins_dq_2_o_ds(spi_pins_0_io_pins_dq_2_o_ds),\n    .io_pins_dq_3_i_ival(spi_pins_0_io_pins_dq_3_i_ival),\n    .io_pins_dq_3_o_oval(spi_pins_0_io_pins_dq_3_o_oval),\n    .io_pins_dq_3_o_oe(spi_pins_0_io_pins_dq_3_o_oe),\n    .io_pins_dq_3_o_ie(spi_pins_0_io_pins_dq_3_o_ie),\n    .io_pins_dq_3_o_pue(spi_pins_0_io_pins_dq_3_o_pue),\n    .io_pins_dq_3_o_ds(spi_pins_0_io_pins_dq_3_o_ds),\n    .io_pins_cs_0_i_ival(spi_pins_0_io_pins_cs_0_i_ival),\n    .io_pins_cs_0_o_oval(spi_pins_0_io_pins_cs_0_o_oval),\n    .io_pins_cs_0_o_oe(spi_pins_0_io_pins_cs_0_o_oe),\n    .io_pins_cs_0_o_ie(spi_pins_0_io_pins_cs_0_o_ie),\n    .io_pins_cs_0_o_pue(spi_pins_0_io_pins_cs_0_o_pue),\n    .io_pins_cs_0_o_ds(spi_pins_0_io_pins_cs_0_o_ds),\n    .io_pins_cs_1_i_ival(spi_pins_0_io_pins_cs_1_i_ival),\n    .io_pins_cs_1_o_oval(spi_pins_0_io_pins_cs_1_o_oval),\n    .io_pins_cs_1_o_oe(spi_pins_0_io_pins_cs_1_o_oe),\n    .io_pins_cs_1_o_ie(spi_pins_0_io_pins_cs_1_o_ie),\n    .io_pins_cs_1_o_pue(spi_pins_0_io_pins_cs_1_o_pue),\n    .io_pins_cs_1_o_ds(spi_pins_0_io_pins_cs_1_o_ds),\n    .io_pins_cs_2_i_ival(spi_pins_0_io_pins_cs_2_i_ival),\n    .io_pins_cs_2_o_oval(spi_pins_0_io_pins_cs_2_o_oval),\n    .io_pins_cs_2_o_oe(spi_pins_0_io_pins_cs_2_o_oe),\n    .io_pins_cs_2_o_ie(spi_pins_0_io_pins_cs_2_o_ie),\n    .io_pins_cs_2_o_pue(spi_pins_0_io_pins_cs_2_o_pue),\n    .io_pins_cs_2_o_ds(spi_pins_0_io_pins_cs_2_o_ds),\n    .io_pins_cs_3_i_ival(spi_pins_0_io_pins_cs_3_i_ival),\n    .io_pins_cs_3_o_oval(spi_pins_0_io_pins_cs_3_o_oval),\n    .io_pins_cs_3_o_oe(spi_pins_0_io_pins_cs_3_o_oe),\n    .io_pins_cs_3_o_ie(spi_pins_0_io_pins_cs_3_o_ie),\n    .io_pins_cs_3_o_pue(spi_pins_0_io_pins_cs_3_o_pue),\n    .io_pins_cs_3_o_ds(spi_pins_0_io_pins_cs_3_o_ds)\n  );\n  sirv_spigpioport_1 u_qspi2_pins(\n    .clock(clk),\n    .reset(~rst_n),\n    .io_spi_sck(qspi2_sck),\n    .io_spi_dq_0_i(qspi2_dq_0_i),\n    .io_spi_dq_0_o(qspi2_dq_0_o),\n    .io_spi_dq_0_oe(qspi2_dq_0_oe),\n    .io_spi_dq_1_i(qspi2_dq_1_i),\n    .io_spi_dq_1_o(qspi2_dq_1_o),\n    .io_spi_dq_1_oe(qspi2_dq_1_oe),\n    .io_spi_dq_2_i(qspi2_dq_2_i),\n    .io_spi_dq_2_o(qspi2_dq_2_o),\n    .io_spi_dq_2_oe(qspi2_dq_2_oe),\n    .io_spi_dq_3_i(qspi2_dq_3_i),\n    .io_spi_dq_3_o(qspi2_dq_3_o),\n    .io_spi_dq_3_oe(qspi2_dq_3_oe),\n    .io_spi_cs_0(qspi2_cs_0),\n    .io_pins_sck_i_ival(spi_pins_1_io_pins_sck_i_ival),\n    .io_pins_sck_o_oval(spi_pins_1_io_pins_sck_o_oval),\n    .io_pins_sck_o_oe(spi_pins_1_io_pins_sck_o_oe),\n    .io_pins_sck_o_ie(spi_pins_1_io_pins_sck_o_ie),\n    .io_pins_sck_o_pue(spi_pins_1_io_pins_sck_o_pue),\n    .io_pins_sck_o_ds(spi_pins_1_io_pins_sck_o_ds),\n    .io_pins_dq_0_i_ival(spi_pins_1_io_pins_dq_0_i_ival),\n    .io_pins_dq_0_o_oval(spi_pins_1_io_pins_dq_0_o_oval),\n    .io_pins_dq_0_o_oe(spi_pins_1_io_pins_dq_0_o_oe),\n    .io_pins_dq_0_o_ie(spi_pins_1_io_pins_dq_0_o_ie),\n    .io_pins_dq_0_o_pue(spi_pins_1_io_pins_dq_0_o_pue),\n    .io_pins_dq_0_o_ds(spi_pins_1_io_pins_dq_0_o_ds),\n    .io_pins_dq_1_i_ival(spi_pins_1_io_pins_dq_1_i_ival),\n    .io_pins_dq_1_o_oval(spi_pins_1_io_pins_dq_1_o_oval),\n    .io_pins_dq_1_o_oe(spi_pins_1_io_pins_dq_1_o_oe),\n    .io_pins_dq_1_o_ie(spi_pins_1_io_pins_dq_1_o_ie),\n    .io_pins_dq_1_o_pue(spi_pins_1_io_pins_dq_1_o_pue),\n    .io_pins_dq_1_o_ds(spi_pins_1_io_pins_dq_1_o_ds),\n    .io_pins_dq_2_i_ival(spi_pins_1_io_pins_dq_2_i_ival),\n    .io_pins_dq_2_o_oval(spi_pins_1_io_pins_dq_2_o_oval),\n    .io_pins_dq_2_o_oe(spi_pins_1_io_pins_dq_2_o_oe),\n    .io_pins_dq_2_o_ie(spi_pins_1_io_pins_dq_2_o_ie),\n    .io_pins_dq_2_o_pue(spi_pins_1_io_pins_dq_2_o_pue),\n    .io_pins_dq_2_o_ds(spi_pins_1_io_pins_dq_2_o_ds),\n    .io_pins_dq_3_i_ival(spi_pins_1_io_pins_dq_3_i_ival),\n    .io_pins_dq_3_o_oval(spi_pins_1_io_pins_dq_3_o_oval),\n    .io_pins_dq_3_o_oe(spi_pins_1_io_pins_dq_3_o_oe),\n    .io_pins_dq_3_o_ie(spi_pins_1_io_pins_dq_3_o_ie),\n    .io_pins_dq_3_o_pue(spi_pins_1_io_pins_dq_3_o_pue),\n    .io_pins_dq_3_o_ds(spi_pins_1_io_pins_dq_3_o_ds),\n    .io_pins_cs_0_i_ival(spi_pins_1_io_pins_cs_0_i_ival),\n    .io_pins_cs_0_o_oval(spi_pins_1_io_pins_cs_0_o_oval),\n    .io_pins_cs_0_o_oe(spi_pins_1_io_pins_cs_0_o_oe),\n    .io_pins_cs_0_o_ie(spi_pins_1_io_pins_cs_0_o_ie),\n    .io_pins_cs_0_o_pue(spi_pins_1_io_pins_cs_0_o_pue),\n    .io_pins_cs_0_o_ds(spi_pins_1_io_pins_cs_0_o_ds)\n  );\n\n sirv_spigpioport_2 u_dedicated_qspi0_pins (\n    .clock(clk),\n    .reset(~rst_n),\n    .io_spi_sck(qspi0_sck),\n    .io_spi_dq_0_i(qspi0_dq_0_i),\n    .io_spi_dq_0_o(qspi0_dq_0_o),\n    .io_spi_dq_0_oe(qspi0_dq_0_oe),\n    .io_spi_dq_1_i(qspi0_dq_1_i),\n    .io_spi_dq_1_o(qspi0_dq_1_o),\n    .io_spi_dq_1_oe(qspi0_dq_1_oe),\n    .io_spi_dq_2_i(qspi0_dq_2_i),\n    .io_spi_dq_2_o(qspi0_dq_2_o),\n    .io_spi_dq_2_oe(qspi0_dq_2_oe),\n    .io_spi_dq_3_i(qspi0_dq_3_i),\n    .io_spi_dq_3_o(qspi0_dq_3_o),\n    .io_spi_dq_3_oe(qspi0_dq_3_oe),\n    .io_spi_cs_0(qspi0_cs_0),\n    .io_pins_sck_i_ival(io_pads_qspi_sck_i_ival),\n    .io_pins_sck_o_oval(io_pads_qspi_sck_o_oval),\n    .io_pins_sck_o_oe(io_pads_qspi_sck_o_oe),\n    .io_pins_sck_o_ie(io_pads_qspi_sck_o_ie),\n    .io_pins_sck_o_pue(io_pads_qspi_sck_o_pue),\n    .io_pins_sck_o_ds(io_pads_qspi_sck_o_ds),\n    .io_pins_dq_0_i_ival(io_pads_qspi_dq_0_i_ival),\n    .io_pins_dq_0_o_oval(io_pads_qspi_dq_0_o_oval),\n    .io_pins_dq_0_o_oe(io_pads_qspi_dq_0_o_oe),\n    .io_pins_dq_0_o_ie(io_pads_qspi_dq_0_o_ie),\n    .io_pins_dq_0_o_pue(io_pads_qspi_dq_0_o_pue),\n    .io_pins_dq_0_o_ds(io_pads_qspi_dq_0_o_ds),\n    .io_pins_dq_1_i_ival(io_pads_qspi_dq_1_i_ival),\n    .io_pins_dq_1_o_oval(io_pads_qspi_dq_1_o_oval),\n    .io_pins_dq_1_o_oe(io_pads_qspi_dq_1_o_oe),\n    .io_pins_dq_1_o_ie(io_pads_qspi_dq_1_o_ie),\n    .io_pins_dq_1_o_pue(io_pads_qspi_dq_1_o_pue),\n    .io_pins_dq_1_o_ds(io_pads_qspi_dq_1_o_ds),\n    .io_pins_dq_2_i_ival(io_pads_qspi_dq_2_i_ival),\n    .io_pins_dq_2_o_oval(io_pads_qspi_dq_2_o_oval),\n    .io_pins_dq_2_o_oe(io_pads_qspi_dq_2_o_oe),\n    .io_pins_dq_2_o_ie(io_pads_qspi_dq_2_o_ie),\n    .io_pins_dq_2_o_pue(io_pads_qspi_dq_2_o_pue),\n    .io_pins_dq_2_o_ds(io_pads_qspi_dq_2_o_ds),\n    .io_pins_dq_3_i_ival(io_pads_qspi_dq_3_i_ival),\n    .io_pins_dq_3_o_oval(io_pads_qspi_dq_3_o_oval),\n    .io_pins_dq_3_o_oe(io_pads_qspi_dq_3_o_oe),\n    .io_pins_dq_3_o_ie(io_pads_qspi_dq_3_o_ie),\n    .io_pins_dq_3_o_pue(io_pads_qspi_dq_3_o_pue),\n    .io_pins_dq_3_o_ds(io_pads_qspi_dq_3_o_ds),\n    .io_pins_cs_0_i_ival(io_pads_qspi_cs_0_i_ival),\n    .io_pins_cs_0_o_oval(io_pads_qspi_cs_0_o_oval),\n    .io_pins_cs_0_o_oe(io_pads_qspi_cs_0_o_oe),\n    .io_pins_cs_0_o_ie(io_pads_qspi_cs_0_o_ie),\n    .io_pins_cs_0_o_pue(io_pads_qspi_cs_0_o_pue),\n    .io_pins_cs_0_o_ds(io_pads_qspi_cs_0_o_ds)\n  );\n\n  localparam CMD_PACK_W = 65;\n  localparam RSP_PACK_W = 33;\n\n\n\n\n  wire [CMD_PACK_W-1:0] i_aon_icb_cmd_pack;\n  wire [RSP_PACK_W-1:0] i_aon_icb_rsp_pack;\n  wire [CMD_PACK_W-1:0] aon_icb_cmd_pack;\n  wire [RSP_PACK_W-1:0] aon_icb_rsp_pack;\n  \n  assign i_aon_icb_cmd_pack = {\n          i_aon_icb_cmd_addr, \n          i_aon_icb_cmd_read, \n          i_aon_icb_cmd_wdata};\n\n  assign {aon_icb_cmd_addr, \n          aon_icb_cmd_read, \n          aon_icb_cmd_wdata} = aon_icb_cmd_pack;\n\n  sirv_gnrl_cdc_tx   \n   # (\n     .DW      (CMD_PACK_W),\n     .SYNC_DP (`E203_ASYNC_FF_LEVELS) \n   ) u_aon_icb_cdc_tx (\n     .o_vld  (aon_icb_cmd_valid ), \n     .o_rdy_a(aon_icb_cmd_ready ), \n     .o_dat  (aon_icb_cmd_pack ),\n     .i_vld  (i_aon_icb_cmd_valid ),\n     .i_rdy  (i_aon_icb_cmd_ready ),\n     .i_dat  (i_aon_icb_cmd_pack ),\n   \n     .clk    (clk),\n     .rst_n  (rst_n)\n   );\n     \n\n  assign aon_icb_rsp_pack = {\n          aon_icb_rsp_err, \n          aon_icb_rsp_rdata};\n\n  assign {i_aon_icb_rsp_err, \n          i_aon_icb_rsp_rdata} = i_aon_icb_rsp_pack;\n\n   sirv_gnrl_cdc_rx   \n      # (\n     .DW      (RSP_PACK_W),\n     .SYNC_DP (`E203_ASYNC_FF_LEVELS) \n   ) u_aon_icb_cdc_rx (\n     .i_vld_a(aon_icb_rsp_valid), \n     .i_rdy  (aon_icb_rsp_ready), \n     .i_dat  (aon_icb_rsp_pack),\n     .o_vld  (i_aon_icb_rsp_valid),\n     .o_rdy  (i_aon_icb_rsp_ready),\n     .o_dat  (i_aon_icb_rsp_pack),\n   \n     .clk    (clk),\n     .rst_n  (rst_n)\n   );\n\n\n      // * Here is an example AXI Peripheral\n  wire expl_axi_arvalid;\n  wire expl_axi_arready;\n  wire [`E203_ADDR_SIZE-1:0] expl_axi_araddr;\n  wire [3:0] expl_axi_arcache;\n  wire [2:0] expl_axi_arprot;\n  wire [1:0] expl_axi_arlock;\n  wire [1:0] expl_axi_arburst;\n  wire [3:0] expl_axi_arlen;\n  wire [2:0] expl_axi_arsize;\n\n  wire expl_axi_awvalid;\n  wire expl_axi_awready;\n  wire [`E203_ADDR_SIZE-1:0] expl_axi_awaddr;\n  wire [3:0] expl_axi_awcache;\n  wire [2:0] expl_axi_awprot;\n  wire [1:0] expl_axi_awlock;\n  wire [1:0] expl_axi_awburst;\n  wire [3:0] expl_axi_awlen;\n  wire [2:0] expl_axi_awsize;\n\n  wire expl_axi_rvalid;\n  wire expl_axi_rready;\n  wire [`E203_XLEN-1:0] expl_axi_rdata;\n  wire [1:0] expl_axi_rresp;\n  wire expl_axi_rlast;\n\n  wire expl_axi_wvalid;\n  wire expl_axi_wready;\n  wire [`E203_XLEN-1:0] expl_axi_wdata;\n  wire [(`E203_XLEN/8)-1:0] expl_axi_wstrb;\n  wire expl_axi_wlast;\n\n  wire expl_axi_bvalid;\n  wire expl_axi_bready;\n  wire [1:0] expl_axi_bresp;\n   \nsirv_gnrl_icb2axi # (\n  .AXI_FIFO_DP (2), // We just add ping-pong buffer here to avoid any potential timing loops\n                    //   User can change it to 0 if dont care\n  .AXI_FIFO_CUT_READY (1), // This is to cut the back-pressure signal if you set as 1\n  .AW   (32),\n  .FIFO_OUTS_NUM (1),// We only allow 1 oustandings at most for peripheral, user can configure it to any value\n  .FIFO_CUT_READY(1),\n  .DW   (`E203_XLEN) \n) u_expl_axi_icb2axi(\n    .i_icb_cmd_valid (expl_axi_icb_cmd_valid),\n    .i_icb_cmd_ready (expl_axi_icb_cmd_ready),\n    .i_icb_cmd_addr  (expl_axi_icb_cmd_addr ),\n    .i_icb_cmd_read  (expl_axi_icb_cmd_read ),\n    .i_icb_cmd_wdata (expl_axi_icb_cmd_wdata),\n    .i_icb_cmd_wmask (expl_axi_icb_cmd_wmask),\n    .i_icb_cmd_size  (),\n    \n    .i_icb_rsp_valid (expl_axi_icb_rsp_valid),\n    .i_icb_rsp_ready (expl_axi_icb_rsp_ready),\n    .i_icb_rsp_rdata (expl_axi_icb_rsp_rdata),\n    .i_icb_rsp_err   (expl_axi_icb_rsp_err),\n\n    .o_axi_arvalid   (expl_axi_arvalid),\n    .o_axi_arready   (expl_axi_arready),\n    .o_axi_araddr    (expl_axi_araddr ),\n    .o_axi_arcache   (expl_axi_arcache),\n    .o_axi_arprot    (expl_axi_arprot ),\n    .o_axi_arlock    (expl_axi_arlock ),\n    .o_axi_arburst   (expl_axi_arburst),\n    .o_axi_arlen     (expl_axi_arlen  ),\n    .o_axi_arsize    (expl_axi_arsize ),\n                      \n    .o_axi_awvalid   (expl_axi_awvalid),\n    .o_axi_awready   (expl_axi_awready),\n    .o_axi_awaddr    (expl_axi_awaddr ),\n    .o_axi_awcache   (expl_axi_awcache),\n    .o_axi_awprot    (expl_axi_awprot ),\n    .o_axi_awlock    (expl_axi_awlock ),\n    .o_axi_awburst   (expl_axi_awburst),\n    .o_axi_awlen     (expl_axi_awlen  ),\n    .o_axi_awsize    (expl_axi_awsize ),\n                     \n    .o_axi_rvalid    (expl_axi_rvalid ),\n    .o_axi_rready    (expl_axi_rready ),\n    .o_axi_rdata     (expl_axi_rdata  ),\n    .o_axi_rresp     (expl_axi_rresp  ),\n    .o_axi_rlast     (expl_axi_rlast  ),\n                    \n    .o_axi_wvalid    (expl_axi_wvalid ),\n    .o_axi_wready    (expl_axi_wready ),\n    .o_axi_wdata     (expl_axi_wdata  ),\n    .o_axi_wstrb     (expl_axi_wstrb  ),\n    .o_axi_wlast     (expl_axi_wlast  ),\n                   \n    .o_axi_bvalid    (expl_axi_bvalid ),\n    .o_axi_bready    (expl_axi_bready ),\n    .o_axi_bresp     (expl_axi_bresp  ),\n\n    .clk           (clk  ),\n    .rst_n         (bus_rst_n) \n  );\n\nsirv_expl_axi_slv # (\n  .AW   (32),\n  .DW   (`E203_XLEN) \n) u_perips_expl_axi_slv (\n    .axi_arvalid   (expl_axi_arvalid),\n    .axi_arready   (expl_axi_arready),\n    .axi_araddr    (expl_axi_araddr ),\n    .axi_arcache   (expl_axi_arcache),\n    .axi_arprot    (expl_axi_arprot ),\n    .axi_arlock    (expl_axi_arlock ),\n    .axi_arburst   (expl_axi_arburst),\n    .axi_arlen     (expl_axi_arlen  ),\n    .axi_arsize    (expl_axi_arsize ),\n     \n    .axi_awvalid   (expl_axi_awvalid),\n    .axi_awready   (expl_axi_awready),\n    .axi_awaddr    (expl_axi_awaddr ),\n    .axi_awcache   (expl_axi_awcache),\n    .axi_awprot    (expl_axi_awprot ),\n    .axi_awlock    (expl_axi_awlock ),\n    .axi_awburst   (expl_axi_awburst),\n    .axi_awlen     (expl_axi_awlen  ),\n    .axi_awsize    (expl_axi_awsize ),\n    \n    .axi_rvalid    (expl_axi_rvalid ),\n    .axi_rready    (expl_axi_rready ),\n    .axi_rdata     (expl_axi_rdata  ),\n    .axi_rresp     (expl_axi_rresp  ),\n    .axi_rlast     (expl_axi_rlast  ),\n   \n    .axi_wvalid    (expl_axi_wvalid ),\n    .axi_wready    (expl_axi_wready ),\n    .axi_wdata     (expl_axi_wdata  ),\n    .axi_wstrb     (expl_axi_wstrb  ),\n    .axi_wlast     (expl_axi_wlast  ),\n  \n    .axi_bvalid    (expl_axi_bvalid ),\n    .axi_bready    (expl_axi_bready ),\n    .axi_bresp     (expl_axi_bresp  ),\n\n    .clk           (clk  ),\n    .rst_n         (rst_n) \n  );\n\n\n      // * Here is an example APB Peripheral\n  wire [`E203_ADDR_SIZE-1:0] expl_apb_paddr;\n  wire expl_apb_pwrite;\n  wire expl_apb_pselx;\n  wire expl_apb_penable;\n  wire [`E203_XLEN-1:0] expl_apb_pwdata;\n  wire [`E203_XLEN-1:0] expl_apb_prdata;\n   \nsirv_gnrl_icb2apb # (\n  .AW   (32),\n  .DW   (`E203_XLEN) \n) u_expl_apb_icb2apb(\n    .i_icb_cmd_valid (expl_apb_icb_cmd_valid),\n    .i_icb_cmd_ready (expl_apb_icb_cmd_ready),\n    .i_icb_cmd_addr  (expl_apb_icb_cmd_addr ),\n    .i_icb_cmd_read  (expl_apb_icb_cmd_read ),\n    .i_icb_cmd_wdata (expl_apb_icb_cmd_wdata),\n    .i_icb_cmd_wmask (expl_apb_icb_cmd_wmask),\n    .i_icb_cmd_size  (),\n    \n    .i_icb_rsp_valid (expl_apb_icb_rsp_valid),\n    .i_icb_rsp_ready (expl_apb_icb_rsp_ready),\n    .i_icb_rsp_rdata (expl_apb_icb_rsp_rdata),\n    .i_icb_rsp_err   (expl_apb_icb_rsp_err),\n\n    .apb_paddr     (expl_apb_paddr  ),\n    .apb_pwrite    (expl_apb_pwrite ),\n    .apb_pselx     (expl_apb_pselx  ),\n    .apb_penable   (expl_apb_penable), \n    .apb_pwdata    (expl_apb_pwdata ),\n    .apb_prdata    (expl_apb_prdata ),\n\n    .clk           (clk  ),\n    .rst_n         (bus_rst_n) \n  );\n\nsirv_expl_apb_slv # (\n  .AW   (32),\n  .DW   (`E203_XLEN) \n) u_perips_expl_apb_slv (\n\n    .apb_paddr     (expl_apb_paddr  ),\n    .apb_pwrite    (expl_apb_pwrite ),\n    .apb_pselx     (expl_apb_pselx  ),\n    .apb_penable   (expl_apb_penable), \n    .apb_pwdata    (expl_apb_pwdata ),\n    .apb_prdata    (expl_apb_prdata ),\n\n    .clk           (clk  ),\n    .rst_n         (rst_n) \n  );\n\n\n  \n\n      // * Here is an example WishBone Peripheral\n  wire  [`E203_ADDR_SIZE-1:0] i2c_wishb_adr;     // lower address bits\n  wire  [8-1:0] i2c_wishb_dat_w;   // databus input\n  wire  [8-1:0] i2c_wishb_dat_r;   // databus output\n  wire           i2c_wishb_we;      // write enable input\n  wire           i2c_wishb_stb;     // stobe/core select signal\n  wire           i2c_wishb_cyc;     // valid bus cycle input\n  wire           i2c_wishb_ack;     // bus cycle acknowledge output\n\nsirv_gnrl_icb32towishb8 # (\n  .AW   (`E203_ADDR_SIZE) \n) u_i2c_wishb_icb32towishb8(\n    .i_icb_cmd_valid (i2c_wishb_icb_cmd_valid),\n    .i_icb_cmd_ready (i2c_wishb_icb_cmd_ready),\n    .i_icb_cmd_addr  (i2c_wishb_icb_cmd_addr ),\n    .i_icb_cmd_read  (i2c_wishb_icb_cmd_read ),\n    .i_icb_cmd_wdata (i2c_wishb_icb_cmd_wdata),\n    .i_icb_cmd_wmask (i2c_wishb_icb_cmd_wmask),\n    .i_icb_cmd_size  (2'b0),\n    \n    .i_icb_rsp_valid (i2c_wishb_icb_rsp_valid),\n    .i_icb_rsp_ready (i2c_wishb_icb_rsp_ready),\n    .i_icb_rsp_rdata (i2c_wishb_icb_rsp_rdata),\n    .i_icb_rsp_err   (i2c_wishb_icb_rsp_err),\n\n    .wb_adr   (i2c_wishb_adr),\n    .wb_dat_w (i2c_wishb_dat_w[7:0]),\n    .wb_dat_r (i2c_wishb_dat_r[7:0]),\n    .wb_we    (i2c_wishb_we   ),\n    .wb_stb   (i2c_wishb_stb  ),\n    .wb_cyc   (i2c_wishb_cyc  ),\n    .wb_ack   (i2c_wishb_ack  ),\n\n    .clk           (clk  ),\n    .rst_n         (bus_rst_n) \n  );\n\n\n  i2c_master_top u_i2c_master_top (\n\t.wb_clk_i (clk),\n\t.wb_rst_i (1'b0),\n\t.arst_i   (rst_n),\n\t.wb_adr_i (i2c_wishb_adr[2:0]),\n\t.wb_dat_i (i2c_wishb_dat_w[7:0]),\n\t.wb_dat_o (i2c_wishb_dat_r[7:0]),\n\t.wb_we_i  (i2c_wishb_we),\n\t.wb_stb_i (i2c_wishb_stb),\n\t.wb_cyc_i (i2c_wishb_cyc),\n\t.wb_ack_o (i2c_wishb_ack),\n\n\t.scl_pad_i   (i2c_scl_pad_i),\n\t.scl_pad_o   (i2c_scl_pad_o   ),\n\t.scl_padoen_o(i2c_scl_padoen_o),\n                              \n\t.sda_pad_i   (i2c_sda_pad_i),\n\t.sda_pad_o   (i2c_sda_pad_o   ),\n\t.sda_padoen_o(i2c_sda_padoen_o),\n\n\t.wb_inta_o(i2c_mst_irq) "}
{"text": "\n  );\n\n\n  sirv_hclkgen_regs u_sirv_hclkgen_regs(\n    .clk  (clk),\n    .rst_n(rst_n),\n\n    .pllbypass   (pllbypass   ),\n    .pll_RESET(pll_RESET),\n    .pll_ASLEEP(pll_ASLEEP),\n    .pll_OD(pll_OD),\n    .pll_M (pll_M ),\n    .pll_N (pll_N ),\n    .plloutdivby1(plloutdivby1),\n    .plloutdiv   (plloutdiv   ),\n                              \n    .hfxoscen    (hfxoscen    ),\n\n\n    .i_icb_cmd_valid(hclkgen_icb_cmd_valid),\n    .i_icb_cmd_ready(hclkgen_icb_cmd_ready),\n    .i_icb_cmd_addr (hclkgen_icb_cmd_addr[11:0]), \n    .i_icb_cmd_read (hclkgen_icb_cmd_read ), \n    .i_icb_cmd_wdata(hclkgen_icb_cmd_wdata),\n                     \n    .i_icb_rsp_valid(hclkgen_icb_rsp_valid),\n    .i_icb_rsp_ready(hclkgen_icb_rsp_ready),\n    .i_icb_rsp_rdata(hclkgen_icb_rsp_rdata)\n  );\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The wrapper with some glue logics for PLIC \n//\n// ====================================================================\n\n\n`include \"e203_defines.v\"\n\n\nmodule e203_subsys_plic(\n  input                          plic_icb_cmd_valid,\n  output                         plic_icb_cmd_ready,\n  input  [`E203_ADDR_SIZE-1:0]   plic_icb_cmd_addr, \n  input                          plic_icb_cmd_read, \n  input  [`E203_XLEN-1:0]        plic_icb_cmd_wdata,\n  input  [`E203_XLEN/8-1:0]      plic_icb_cmd_wmask,\n  //\n  output                         plic_icb_rsp_valid,\n  input                          plic_icb_rsp_ready,\n  output                         plic_icb_rsp_err,\n  output [`E203_XLEN-1:0]        plic_icb_rsp_rdata,\n\n  output plic_ext_irq,\n\n  input  wdg_irq_a,\n  input  rtc_irq_a,\n\n  input  qspi0_irq, \n  input  qspi1_irq,\n  input  qspi2_irq,\n\n  input  uart0_irq,                \n  input  uart1_irq,                \n\n  input  pwm0_irq_0,\n  input  pwm0_irq_1,\n  input  pwm0_irq_2,\n  input  pwm0_irq_3,\n\n  input  pwm1_irq_0,\n  input  pwm1_irq_1,\n  input  pwm1_irq_2,\n  input  pwm1_irq_3,\n\n  input  pwm2_irq_0,\n  input  pwm2_irq_1,\n  input  pwm2_irq_2,\n  input  pwm2_irq_3,\n\n  input  i2c_mst_irq,\n\n  input  gpio_irq_0,\n  input  gpio_irq_1,\n  input  gpio_irq_2,\n  input  gpio_irq_3,\n  input  gpio_irq_4,\n  input  gpio_irq_5,\n  input  gpio_irq_6,\n  input  gpio_irq_7,\n  input  gpio_irq_8,\n  input  gpio_irq_9,\n  input  gpio_irq_10,\n  input  gpio_irq_11,\n  input  gpio_irq_12,\n  input  gpio_irq_13,\n  input  gpio_irq_14,\n  input  gpio_irq_15,\n  input  gpio_irq_16,\n  input  gpio_irq_17,\n  input  gpio_irq_18,\n  input  gpio_irq_19,\n  input  gpio_irq_20,\n  input  gpio_irq_21,\n  input  gpio_irq_22,\n  input  gpio_irq_23,\n  input  gpio_irq_24,\n  input  gpio_irq_25,\n  input  gpio_irq_26,\n  input  gpio_irq_27,\n  input  gpio_irq_28,\n  input  gpio_irq_29,\n  input  gpio_irq_30,\n  input  gpio_irq_31,\n\n  input  clk,\n  input  rst_n\n  );\n\n  assign plic_icb_rsp_err     = 1'b0;\n\n  wire  wdg_irq_r;\n  wire  rtc_irq_r;\n\n  sirv_gnrl_sync # (\n  .DP(`E203_ASYNC_FF_LEVELS),\n  .DW(1)\n  ) u_rtc_irq_sync(\n      .din_a    (rtc_irq_a),\n      .dout     (rtc_irq_r),\n      .clk      (clk  ),\n      .rst_n    (rst_n) \n  );\n\n  sirv_gnrl_sync # (\n  .DP(`E203_ASYNC_FF_LEVELS),\n  .DW(1)\n  ) u_wdg_irq_sync(\n      .din_a    (wdg_irq_a),\n      .dout     (wdg_irq_r),\n      .clk      (clk  ),\n      .rst_n    (rst_n) \n  );\n\n  wire plic_irq_i_0  = wdg_irq_r;\n  wire plic_irq_i_1  = rtc_irq_r;\n  wire plic_irq_i_2  = uart0_irq;\n  wire plic_irq_i_3  = uart1_irq;\n  wire plic_irq_i_4  = qspi0_irq;\n  wire plic_irq_i_5  = qspi1_irq;   \n  wire plic_irq_i_6  = qspi2_irq;   \n  wire plic_irq_i_7  = gpio_irq_0 ; \n  wire plic_irq_i_8  = gpio_irq_1 ; \n  wire plic_irq_i_9  = gpio_irq_2 ; \n  wire plic_irq_i_10 = gpio_irq_3 ; \n  wire plic_irq_i_11 = gpio_irq_4 ; \n  wire plic_irq_i_12 = gpio_irq_5 ; \n  wire plic_irq_i_13 = gpio_irq_6 ; \n  wire plic_irq_i_14 = gpio_irq_7 ; \n  wire plic_irq_i_15 = gpio_irq_8 ; \n  wire plic_irq_i_16 = gpio_irq_9 ; \n  wire plic_irq_i_17 = gpio_irq_10; \n  wire plic_irq_i_18 = gpio_irq_11; \n  wire plic_irq_i_19 = gpio_irq_12; \n  wire plic_irq_i_20 = gpio_irq_13; \n  wire plic_irq_i_21 = gpio_irq_14; \n  wire plic_irq_i_22 = gpio_irq_15; \n  wire plic_irq_i_23 = gpio_irq_16; \n  wire plic_irq_i_24 = gpio_irq_17; \n  wire plic_irq_i_25 = gpio_irq_18; \n  wire plic_irq_i_26 = gpio_irq_19; \n  wire plic_irq_i_27 = gpio_irq_20; \n  wire plic_irq_i_28 = gpio_irq_21; \n  wire plic_irq_i_29 = gpio_irq_22; \n  wire plic_irq_i_30 = gpio_irq_23; \n  wire plic_irq_i_31 = gpio_irq_24; \n  wire plic_irq_i_32 = gpio_irq_25; \n  wire plic_irq_i_33 = gpio_irq_26; \n  wire plic_irq_i_34 = gpio_irq_27; \n  wire plic_irq_i_35 = gpio_irq_28; \n  wire plic_irq_i_36 = gpio_irq_29; \n  wire plic_irq_i_37 = gpio_irq_30; \n  wire plic_irq_i_38 = gpio_irq_31; \n  wire plic_irq_i_39 = pwm0_irq_0;\n  wire plic_irq_i_40 = pwm0_irq_1;\n  wire plic_irq_i_41 = pwm0_irq_2;\n  wire plic_irq_i_42 = pwm0_irq_3;\n  wire plic_irq_i_43 = pwm1_irq_0;\n  wire plic_irq_i_44 = pwm1_irq_1;\n  wire plic_irq_i_45 = pwm1_irq_2;\n  wire plic_irq_i_46 = pwm1_irq_3;\n  wire plic_irq_i_47 = pwm2_irq_0;\n  wire plic_irq_i_48 = pwm2_irq_1;\n  wire plic_irq_i_49 = pwm2_irq_2;\n  wire plic_irq_i_50 = pwm2_irq_3;\n  wire plic_irq_i_51 = i2c_mst_irq;\n                         \n\n  sirv_plic_top u_sirv_plic_top(\n    .clk             (clk   ),\n    .rst_n           (rst_n ),\n  \n    .i_icb_cmd_valid (plic_icb_cmd_valid),\n    .i_icb_cmd_ready (plic_icb_cmd_ready),\n    .i_icb_cmd_addr  (plic_icb_cmd_addr ),\n    .i_icb_cmd_read  (plic_icb_cmd_read ),\n    .i_icb_cmd_wdata (plic_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid (plic_icb_rsp_valid),\n    .i_icb_rsp_ready (plic_icb_rsp_ready),\n    .i_icb_rsp_rdata (plic_icb_rsp_rdata),\n  \n    .io_devices_0_0  (plic_irq_i_0 ),\n    .io_devices_0_1  (plic_irq_i_1 ),\n    .io_devices_0_2  (plic_irq_i_2 ),\n    .io_devices_0_3  (plic_irq_i_3 ),\n    .io_devices_0_4  (plic_irq_i_4 ),\n    .io_devices_0_5  (plic_irq_i_5 ),\n    .io_devices_0_6  (plic_irq_i_6 ),\n    .io_devices_0_7  (plic_irq_i_7 ),\n    .io_devices_0_8  (plic_irq_i_8 ),\n    .io_devices_0_9  (plic_irq_i_9 ),\n    .io_devices_0_10 (plic_irq_i_10),\n    .io_devices_0_11 (plic_irq_i_11),\n    .io_devices_0_12 (plic_irq_i_12),\n    .io_devices_0_13 (plic_irq_i_13),\n    .io_devices_0_14 (plic_irq_i_14),\n    .io_devices_0_15 (plic_irq_i_15),\n    .io_devices_0_16 (plic_irq_i_16),\n    .io_devices_0_17 (plic_irq_i_17),\n    .io_devices_0_18 (plic_irq_i_18),\n    .io_devices_0_19 (plic_irq_i_19),\n    .io_devices_0_20 (plic_irq_i_20),\n    .io_devices_0_21 (plic_irq_i_21),\n    .io_devices_0_22 (plic_irq_i_22),\n    .io_devices_0_23 (plic_irq_i_23),\n    .io_devices_0_24 (plic_irq_i_24),\n    .io_devices_0_25 (plic_irq_i_25),\n    .io_devices_0_26 (plic_irq_i_26),\n    .io_devices_0_27 (plic_irq_i_27),\n    .io_devices_0_28 (plic_irq_i_28),\n    .io_devices_0_29 (plic_irq_i_29),\n    .io_devices_0_30 (plic_irq_i_30),\n    .io_devices_0_31 (plic_irq_i_31),\n    .io_devices_0_32 (plic_irq_i_32),\n    .io_devices_0_33 (plic_irq_i_33),\n    .io_devices_0_34 (plic_irq_i_34),\n    .io_devices_0_35 (plic_irq_i_35),\n    .io_devices_0_36 (plic_irq_i_36),\n    .io_devices_0_37 (plic_irq_i_37),\n    .io_devices_0_38 (plic_irq_i_38),\n    .io_devices_0_39 (plic_irq_i_39),\n    .io_devices_0_40 (plic_irq_i_40),\n    .io_devices_0_41 (plic_irq_i_41),\n    .io_devices_0_42 (plic_irq_i_42),\n    .io_devices_0_43 (plic_irq_i_43),\n    .io_devices_0_44 (plic_irq_i_44),\n    .io_devices_0_45 (plic_irq_i_45),\n    .io_devices_0_46 (plic_irq_i_46),\n    .io_devices_0_47 (plic_irq_i_47),\n    .io_devices_0_48 (plic_irq_i_48),\n    .io_devices_0_49 (plic_irq_i_49),\n    .io_devices_0_50 (plic_irq_i_50),\n    .io_devices_0_51 (plic_irq_i_51),\n    .io_harts_0_0    (plic_ext_irq ) \n  );\n\n  endmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The PLL module, need to be replaced with real PLL in ASIC flow\n//\n// ====================================================================\n\n`include \"e203_defines.v\"\n\n\nmodule e203_subsys_pll(\n  input  pll_asleep, // The asleep signal to PLL to power down it\n\n  input  pllrefclk, // The reference clock into PLL\n  output plloutclk, // The PLL generated clock\n\n  input        pll_RESET,\n  input [1:0]  pll_OD,\n  input [7:0]  pll_M,\n  input [4:0]  pll_N \n  );\n\n  wire pllout;\n  `ifdef FPGA_SOURCE//{\n      // In FPGA, we have no PLL, so just diretly let it pass through\n      assign pllout = pllrefclk;\n  `else //}{\n      assign pllout = pllrefclk;\n  `endif//}\n\n  assign plloutclk = pllout;\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The PLL module, need to be replaced with real PLL in ASIC flow\n//\n// ====================================================================\n\n`include \"e203_defines.v\"\n\n\nmodule e203_subsys_pllclkdiv(\n  input rst_n,\n  input test_mode,\n  input divby1,\n  input [5:0] div, \n  input clk,// The PLL clock\n  output clkout // The divided Clock\n  );\n\n  wire [5:0] div_cnt_r; \n  wire div_cnt_sat = (div_cnt_r == div);\n  wire [5:0] div_cnt_nxt = div_cnt_sat ? 6'b0 : (div_cnt_r + 1'b1); \n  wire div_cnt_ena = (~divby1);\n  sirv_gnrl_dfflr #(6) div_cnt_dfflr (div_cnt_ena, div_cnt_nxt, div_cnt_r, clk, rst_n);\n\n  wire flag_r; \n  wire flag_nxt = ~flag_r;\n  wire flag_ena = div_cnt_ena & div_cnt_sat;\n  sirv_gnrl_dfflr #(1) flag_dfflr (flag_ena, flag_nxt, flag_r, clk, rst_n);\n\n\n  wire plloutdiv_en = divby1 | \n                    ((~flag_r) & div_cnt_sat); \n\n  e203_clkgate u_pllclkdiv_clkgate(\n    .clk_in   (clk        ),\n    .test_mode(test_mode  ),\n    .clock_en (plloutdiv_en),\n    .clk_out  (clkout)\n  );\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The Subsystem-TOP module to implement CPU and some closely coupled devices\n//\n// ====================================================================\n\n\n`include \"e203_defines.v\"\n\nmodule e203_subsys_top(\n  // This clock should comes from the crystal pad generated high speed clock (16MHz)\n  input  hfextclk,\n  output hfxoscen,// The signal to enable the crystal pad generated clock\n\n  // This clock should comes from the crystal pad generated low speed clock (32.768KHz)\n  input  lfextclk,\n  output lfxoscen,// The signal to enable the crystal pad generated clock\n\n  input  io_pads_dbgmode0_n_i_ival,\n\n  input  io_pads_dbgmode1_n_i_ival,\n\n  input  io_pads_dbgmode2_n_i_ival,\n\n\n  input  io_pads_bootrom_n_i_ival,\n  output io_pads_bootrom_n_o_oval,\n  output io_pads_bootrom_n_o_oe,\n  output io_pads_bootrom_n_o_ie,\n  output io_pads_bootrom_n_o_pue,\n  output io_pads_bootrom_n_o_ds,\n\n  input  io_pads_aon_erst_n_i_ival,\n  output io_pads_aon_erst_n_o_oval,\n  output io_pads_aon_erst_n_o_oe,\n  output io_pads_aon_erst_n_o_ie,\n  output io_pads_aon_erst_n_o_pue,\n  output io_pads_aon_erst_n_o_ds,\n\n  input  io_pads_aon_pmu_dwakeup_n_i_ival,\n  output io_pads_aon_pmu_dwakeup_n_o_oval,\n  output io_pads_aon_pmu_dwakeup_n_o_oe,\n  output io_pads_aon_pmu_dwakeup_n_o_ie,\n  output io_pads_aon_pmu_dwakeup_n_o_pue,\n  output io_pads_aon_pmu_dwakeup_n_o_ds,\n  input  io_pads_aon_pmu_vddpaden_i_ival,\n  output io_pads_aon_pmu_vddpaden_o_oval,\n  output io_pads_aon_pmu_vddpaden_o_oe,\n  output io_pads_aon_pmu_vddpaden_o_ie,\n  output io_pads_aon_pmu_vddpaden_o_pue,\n  output io_pads_aon_pmu_vddpaden_o_ds,\n  input  io_pads_aon_pmu_padrst_i_ival,\n  output io_pads_aon_pmu_padrst_o_oval,\n  output io_pads_aon_pmu_padrst_o_oe,\n  output io_pads_aon_pmu_padrst_o_ie,\n  output io_pads_aon_pmu_padrst_o_pue,\n  output io_pads_aon_pmu_padrst_o_ds,\n\n\n  input  [`E203_HART_ID_W-1:0] core_mhartid,  \n    \n  `ifdef E203_HAS_ITCM_EXTITF //{\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  // External-agent ICB to ITCM\n  //    * Bus cmd channel\n  input                          ext2itcm_icb_cmd_valid,\n  output                         ext2itcm_icb_cmd_ready,\n  input  [`E203_ITCM_ADDR_WIDTH-1:0]   ext2itcm_icb_cmd_addr, \n  input                          ext2itcm_icb_cmd_read, \n  input  [`E203_XLEN-1:0]        ext2itcm_icb_cmd_wdata,\n  input  [`E203_XLEN/8-1:0]      ext2itcm_icb_cmd_wmask,\n  //\n  //    * Bus RSP channel\n  output                         ext2itcm_icb_rsp_valid,\n  input                          ext2itcm_icb_rsp_ready,\n  output                         ext2itcm_icb_rsp_err  ,\n  output [`E203_XLEN-1:0]        ext2itcm_icb_rsp_rdata,\n  `endif//}\n\n  `ifdef E203_HAS_DTCM_EXTITF //{\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  // External-agent ICB to DTCM\n  //    * Bus cmd channel\n  input                          ext2dtcm_icb_cmd_valid,\n  output                         ext2dtcm_icb_cmd_ready,\n  input  [`E203_DTCM_ADDR_WIDTH-1:0]   ext2dtcm_icb_cmd_addr, \n  input                          ext2dtcm_icb_cmd_read, \n  input  [`E203_XLEN-1:0]        ext2dtcm_icb_cmd_wdata,\n  input  [`E203_XLEN/8-1:0]      ext2dtcm_icb_cmd_wmask,\n  //\n  //    * Bus RSP channel\n  output                         ext2dtcm_icb_rsp_valid,\n  input                          ext2dtcm_icb_rsp_ready,\n  output                         ext2dtcm_icb_rsp_err  ,\n  output [`E203_XLEN-1:0]        ext2dtcm_icb_rsp_rdata,\n  `endif//}\n\n  \n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  // The ICB Interface to Private Peripheral Interface\n  //\n  //    * Bus cmd channel\n  output                         sysper_icb_cmd_valid,\n  input                          sysper_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   sysper_icb_cmd_addr, \n  output                         sysper_icb_cmd_read, \n  output [`E203_XLEN-1:0]        sysper_icb_cmd_wdata,\n  output [`E203_XLEN/8-1:0]      sysper_icb_cmd_wmask,\n  //\n  //    * Bus RSP channel\n  input                          sysper_icb_rsp_valid,\n  output                         sysper_icb_rsp_ready,\n  input                          sysper_icb_rsp_err  ,\n  input  [`E203_XLEN-1:0]        sysper_icb_rsp_rdata,\n\n  `ifdef E203_HAS_FIO //{\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  // The ICB Interface to Fast I/O\n  //\n  //    * Bus cmd channel\n  output                         sysfio_icb_cmd_valid,\n  input                          sysfio_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   sysfio_icb_cmd_addr, \n  output                         sysfio_icb_cmd_read, \n  output [`E203_XLEN-1:0]        sysfio_icb_cmd_wdata,\n  output [`E203_XLEN/8-1:0]      sysfio_icb_cmd_wmask,\n  //\n  //    * Bus RSP channel\n  input                          sysfio_icb_rsp_valid,\n  output                         sysfio_icb_rsp_ready,\n  input                          sysfio_icb_rsp_err  ,\n  input  [`E203_XLEN-1:0]        sysfio_icb_rsp_rdata,\n  `endif//}\n\n  `ifdef E203_HAS_MEM_ITF //{\n  //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  // The ICB Interface from Ifetch \n  //\n  //    * Bus cmd channel\n  output                         sysmem_icb_cmd_valid,\n  input                          sysmem_icb_cmd_ready,\n  output [`E203_ADDR_SIZE-1:0]   sysmem_icb_cmd_addr, \n  output                         sysmem_icb_cmd_read, \n  output [`E203_XLEN-1:0]        sysmem_icb_cmd_wdata,\n  output [`E203_XLEN/8-1:0]      sysmem_icb_cmd_wmask,\n  //\n  //    * Bus RSP channel\n  input                          sysmem_icb_rsp_valid,\n  output                         sysmem_icb_rsp_ready,\n  input                          sysmem_icb_rsp_err  ,\n  input  [`E203_XLEN-1:0]        sysmem_icb_rsp_rdata,\n  `endif//}\n\n  input  io_pads_gpio_0_i_ival,\n  output io_pads_gpio_0_o_oval,\n  output io_pads_gpio_0_o_oe,\n  output io_pads_gpio_0_o_ie,\n  output io_pads_gpio_0_o_pue,\n  output io_pads_gpio_0_o_ds,\n  input  io_pads_gpio_1_i_ival,\n  output io_pads_gpio_1_o_oval,\n  output io_pads_gpio_1_o_oe,\n  output io_pads_gpio_1_o_ie,\n  output io_pads_gpio_1_o_pue,\n  output io_pads_gpio_1_o_ds,\n  input  io_pads_gpio_2_i_ival,\n  output io_pads_gpio_2_o_oval,\n  output io_pads_gpio_2_o_oe,\n  output io_pads_gpio_2_o_ie,\n  output io_pads_gpio_2_o_pue,\n  output io_pads_gpio_2_o_ds,\n  input  io_pads_gpio_3_i_ival,\n  output io_pads_gpio_3_o_oval,\n  output io_pads_gpio_3_o_oe,\n  output io_pads_gpio_3_o_ie,\n  output io_pads_gpio_3_o_pue,\n  output io_pads_gpio_3_o_ds,\n  input  io_pads_gpio_4_i_ival,\n  output io_pads_gpio_4_o_oval,\n  output io_pads_gpio_4_o_oe,\n  output io_pads_gpio_4_o_ie,\n  output io_pads_gpio_4_o_pue,\n  output io_pads_gpio_4_o_ds,\n  input  io_pads_gpio_5_i_ival,\n  output io_pads_gpio_5_o_oval,\n  output io_pads_gpio_5_o_oe,\n  output io_pads_gpio_5_o_ie,\n  output io_pads_gpio_5_o_pue,\n  output io_pads_gpio_5_o_ds,\n  input  io_pads_gpio_6_i_ival,\n  output io_pads_gpio_6_o_oval,\n  output io_pads_gpio_6_o_oe,\n  output io_pads_gpio_6_o_ie,\n  output io_pads_gpio_6_o_pue,\n  output io_pads_gpio_6_o_ds,\n  input  io_pads_gpio_7_i_ival,\n  output io_pads_gpio_7_o_oval,\n  output io_pads_gpio_7_o_oe,\n  output io_pads_gpio_7_o_ie,\n  output io_pads_gpio_7_o_pue,\n  output io_pads_gpio_7_o_ds,\n  input  io_pads_gpio_8_i_ival,\n  output io_pads_gpio_8_o_oval,\n  output io_pads_gpio_8_o_oe,\n  output io_pads_gpio_8_o_ie,\n  output io_pads_gpio_8_o_pue,\n  output io_pads_gpio_8_o_ds,\n  input  io_pads_gpio_9_i_ival,\n  output io_pads_gpio_9_o_oval,\n  output io_pads_gpio_9_o_oe,\n  output io_pads_gpio_9_o_ie,\n  output io_pads_gpio_9_o_pue,\n  output io_pads_gpio_9_o_ds,\n  input  io_pads_gpio_10_i_ival,\n  output io_pads_gpio_10_o_oval,\n  output io_pads_gpio_10_o_oe,\n  output io_pads_gpio_10_o_ie,\n  output io_pads_gpio_10_o_pue,\n  output io_pads_gpio_10_o_ds,\n  input  io_pads_gpio_11_i_ival,\n  output io_pads_gpio_11_o_oval,\n  output io_pads_gpio_11_o_oe,\n  output io_pads_gpio_11_o_ie,\n  output io_pads_gpio_11_o_pue,\n  output io_pads_gpio_11_o_ds,\n  input  io_pads_gpio_12_i_ival,\n  output io_pads_gpio_12_o_oval,\n  output io_pads_gpio_12_o_oe,\n  output io_pads_gpio_12_o_ie,\n  output io_pads_gpio_12_o_pue,\n  output io_pads_gpio_12_o_ds,\n  input  io_pads_gpio_13_i_ival,\n  output io_pads_gpio_13_o_oval,\n  output io_pads_gpio_13_o_oe,\n  output io_pads_gpio_13_o_ie,\n  output io_pads_gpio_13_o_pue,\n  output io_pads_gpio_13_o_ds,\n  input  io_pads_gpio_14_i_ival,\n  output io_pads_gpio_14_o_oval,\n  output io_pads_gpio_14_o_oe,\n  output io_pads_gpio_14_o_ie,\n  output io_pads_gpio_14_o_pue,\n  output io_pads_gpio_14_o_ds,\n  input  io_pads_gpio_15_i_ival,\n  output io_pads_gpio_15_o_oval,\n  output io_pads_gpio_15_o_oe,\n  output io_pads_gpio_15_o_ie,\n  output io_pads_gpio_15_o_pue,\n  output io_pads_gpio_15_o_ds,\n  input  io_pads_gpio_16_i_ival,\n  output io_pads_gpio_16_o_oval,\n  output io_pads_gpio_16_o_oe,\n  output io_pads_gpio_16_o_ie,\n  output io_pads_gpio_16_o_pue,\n  output io_pads_gpio_16_o_ds,\n  input  io_pads_gpio_17_i_ival,\n  output io_pads_gpio_17_o_oval,\n  output io_pads_gpio_17_o_oe,\n  output io_pads_gpio_17_o_ie,\n  output io_pads_gpio_17_o_pue,\n  output io_pads_gpio_17_o_ds,\n  input  io_pads_gpio_18_i_ival,\n  output io_pads_gpio_18_o_oval,\n  output io_pads_gpio_18_o_oe,\n  output io_pads_gpio_18_o_ie,\n  output io_pads_gpio_18_o_pue,\n  output io_pads_gpio_18_o_ds,\n  input  io_pads_gpio_19_i_ival,\n  output io_pads_gpio_19_o_oval,\n  output io_pads_gpio_19_o_oe,\n  output io_pads_gpio_19_o_ie,\n  output io_pads_gpio_19_o_pue,\n  output io_pads_gpio_19_o_ds,\n  input  io_pads_gpio_20_i_ival,\n  output io_pads_gpio_20_o_oval,\n  output io_pads_gpio_20_o_oe,\n  output io_pads_gpio_20_o_ie,\n  output io_pads_gpio_20_o_pue,\n  output io_pads_gpio_20_o_ds,\n  input  io_pads_gpio_21_i_ival,\n  output io_pads_gpio_21_o_oval,\n  output io_pads_gpio_21_o_oe,\n  output io_pads_gpio_21_o_ie,\n  output io_pads_gpio_21_o_pue,\n  output io_pads_gpio_21_o_ds,\n  input  io_pads_gpio_22_i_ival,\n  output io_pads_gpio_22_o_oval,\n  output io_pads_gpio_22_o_oe,\n  output io_pads_gpio_22_o_ie,\n  output io_pads_gpio_22_o_pue,\n  output io_pads_gpio_22_o_ds,\n  input  io_pads_gpio_23_i_ival,\n  output io_pads_gpio_23_o_oval,\n  output io_pads_gpio_23_o_oe,\n  output io_pads_gpio_23_o_ie,\n  output io_pads_gpio_23_o_pue,\n  output io_pads_gpio_23_o_ds,\n  input  io_pads_gpio_24_i_ival,\n  output io_pads_gpio_24_o_oval,\n  output io_pads_gpio_24_o_oe,\n  output io_pads_gpio_24_o_ie,\n  output io_pads_gpio_24_o_pue,\n  output io_pads_gpio_24_o_ds,\n  input  io_pads_gpio_25_i_ival,\n  output io_pads_gpio_25_o_oval,\n  output io_pads_gpio_25_o_oe,\n  output io_pads_gpio_25_o_ie,\n  output io_pads_gpio_25_o_pue,\n  output io_pads_gpio_25_o_ds,\n  input  io_pads_gpio_26_i_ival,\n  output io_pads_gpio_26_o_oval,\n  output io_pads_gpio_26_o_oe,\n  output io_pads_gpio_26_o_ie,\n  output io_pads_gpio_26_o_pue,\n  output io_pads_gpio_26_o_ds,\n  input  io_pads_gpio_27_i_ival,\n  output io_pads_gpio_27_o_oval,\n  output io_pads_gpio_27_o_oe,\n  output io_pads_gpio_27_o_ie,\n  output io_pads_gpio_27_o_pue,\n  output io_pads_gpio_27_o_ds,\n  input  io_pads_gpio_28_i_ival,\n  output io_pads_gpio_28_o_oval,\n  output io_pads_gpio_28_o_oe,\n  output io_pads_gpio_28_o_ie,\n  output io_pads_gpio_28_o_pue,\n  output io_pads_gpio_28_o_ds,\n  input  io_pads_gpio_29_i_ival,\n  output io_pads_gpio_29_o_oval,\n  output io_pads_gpio_29_o_oe,\n  output io_pads_gpio_29_o_ie,\n  output io_pads_gpio_29_o_pue,\n  output io_pads_gpio_29_o_ds,\n  input  io_pads_gpio_30_i_ival,\n  output io_pads_gpio_30_o_oval,\n  output io_pads_gpio_30_o_oe,\n  output io_pads_gpio_30_o_ie,\n  output io_pads_gpio_30_o_pue,\n  output io_pads_gpio_30_o_ds,\n  input  io_pads_gpio_31_i_ival,\n  output io_pads_gpio_31_o_oval,\n  output io_pads_gpio_31_o_oe,\n  output io_pads_gpio_31_o_ie,\n  output io_pads_gpio_31_o_pue,\n  output io_pads_gpio_31_o_ds,\n\n  input   io_pads_qspi_sck_i_ival,\n  output  io_pads_qspi_sck_o_oval,\n  output  io_pads_qspi_sck_o_oe,\n  output  io_pads_qspi_sck_o_ie,\n  output  io_pads_qspi_sck_o_pue,\n  output  io_pads_qspi_sck_o_ds,\n  input   io_pads_qspi_dq_0_i_ival,\n  output  io_pads_qspi_dq_0_o_oval,\n  output  io_pads_qspi_dq_0_o_oe,\n  output  io_pads_qspi_dq_0_o_ie,\n  output  io_pads_qspi_dq_0_o_pue,\n  output  io_pads_qspi_dq_0_o_ds,\n  input   io_pads_qspi_dq_1_i_ival,\n  output  io_pads_qspi_dq_1_o_oval,\n  output  io_pads_qspi_dq_1_o_oe,\n  output  io_pads_qspi_dq_1_o_ie,\n  output  io_pads_qspi_dq_1_o_pue,\n  output  io_pads_qspi_dq_1_o_ds,\n  input   io_pads_qspi_dq_2_i_ival,\n  output  io_pads_qspi_dq_2_o_oval,\n  output  io_pads_qspi_dq_2_o_oe,\n  output  io_pads_qspi_dq_2_o_ie,\n  output  io_pads_qspi_dq_2_o_pue,\n  output  io_pads_qspi_dq_2_o_ds,\n  input   io_pads_qspi_dq_3_i_ival,\n  output  io_pads_qspi_dq_3_o_oval,\n  output  io_pads_qspi_dq_3_o_oe,\n  output  io_pads_qspi_dq_3_o_ie,\n  output  io_pads_qspi_dq_3_o_pue,\n  output  io_pads_qspi_dq_3_o_ds,\n  input   io_pads_qspi_cs_0_i_ival,\n  output  io_pads_qspi_cs_0_o_oval,\n  output  io_pads_qspi_cs_0_o_oe,\n  output  io_pads_qspi_cs_0_o_ie,\n  output  io_pads_qspi_cs_0_o_pue,\n  output  io_pads_qspi_cs_0_o_ds,\n\n  input   io_pads_jtag_TCK_i_ival,\n  output  io_pads_jtag_TCK_o_oval,\n  output  io_pads_jtag_TCK_o_oe,\n  output  io_pads_jtag_TCK_o_ie,\n  output  io_pads_jtag_TCK_o_pue,\n  output  io_pads_jtag_TCK_o_ds,\n  input   io_pads_jtag_TMS_i_ival,\n  output  io_pads_jtag_TMS_o_oval,\n  output  io_pads_jtag_TMS_o_oe,\n  output  io_pads_jtag_TMS_o_ie,\n  output  io_pads_jtag_TMS_o_pue,\n  output  io_pads_jtag_TMS_o_ds,\n  input   io_pads_jtag_TDI_i_ival,\n  output  io_pads_jtag_TDI_o_oval,\n  output  io_pads_jtag_TDI_o_oe,\n  output  io_pads_jtag_TDI_o_ie,\n  output  io_pads_jtag_TDI_o_pue,\n  output  io_pads_jtag_TDI_o_ds,\n  input   io_pads_jtag_TDO_i_ival,\n  output  io_pads_jtag_TDO_o_oval,\n  output  io_pads_jtag_TDO_o_oe,\n  output  io_pads_jtag_TDO_o_ie,\n  output  io_pads_jtag_TDO_o_pue,\n  output  io_pads_jtag_TDO_o_ds,\n  input   io_pads_jtag_TRST_n_i_ival,\n  output  io_pads_jtag_TRST_n_o_oval,\n  output  io_pads_jtag_TRST_n_o_oe,\n  output  io_pads_jtag_TRST_n_o_ie,\n  output  io_pads_jtag_TRST_n_o_pue,\n  output  io_pads_jtag_TRST_n_o_ds,\n\n  input  test_iso_override,\n  input  test_mode \n  );\n\n  wire hfclk;// The PLL generated high-speed clock \n  wire hfclkrst;// The reset signal to disable PLL\n  wire corerst;\n\n  ///////////////////////////////////////\n  wire [`E203_HART_NUM-1:0] dbg_irq;\n\n  wire  [`E203_PC_SIZE-1:0] cmt_dpc;\n  wire  cmt_dpc_ena;\n\n  wire  [3-1:0] cmt_dcause;\n  wire  cmt_dcause_ena;\n\n  wire  dbg_irq_r;\n\n  wire  wr_dcsr_ena;\n  wire  wr_dpc_ena ;\n  wire  wr_dscratch_ena;\n\n  wire  [32-1:0] wr_csr_nxt;\n\n\n\n  wire  [32-1:0] dcsr_r    ;\n  wire  [`E203_PC_SIZE-1:0] dpc_r     ;\n  wire  [32-1:0] dscratch_r;\n\n  wire  dbg_mode;\n  wire  dbg_halt_r;\n  wire  dbg_step_r;\n  wire  dbg_ebreakm_r;\n  wire  dbg_stopcycle;\n\n  wire  inspect_mode; \n  wire  inspect_por_rst; \n  wire  inspect_32k_clk; \n  wire  inspect_pc_29b; \n  wire  inspect_dbg_irq;\n  wire  inspect_jtag_clk;\n  wire  core_csr_clk;\n\n\n  wire                          dm_icb_cmd_valid;\n  wire                          dm_icb_cmd_ready;\n  wire  [`E203_ADDR_SIZE-1:0]   dm_icb_cmd_addr; \n  wire                          dm_icb_cmd_read; \n  wire  [`E203_XLEN-1:0]        dm_icb_cmd_wdata;\n  //\n  wire                          dm_icb_rsp_valid;\n  wire                          dm_icb_rsp_ready;\n  wire  [`E203_XLEN-1:0]        dm_icb_rsp_rdata;\n\n  wire  aon_wdg_irq_a   ;\n  wire  aon_rtc_irq_a   ;\n  wire  aon_rtcToggle_a ;\n\n  wire                          aon_icb_cmd_valid;\n  wire                          aon_icb_cmd_ready;\n  wire  [`E203_ADDR_SIZE-1:0]   aon_icb_cmd_addr; \n  wire                          aon_icb_cmd_read; \n  wire  [`E203_XLEN-1:0]        aon_icb_cmd_wdata;\n  //\n  wire                          aon_icb_rsp_valid;\n  wire                          aon_icb_rsp_ready;\n  wire  [`E203_XLEN-1:0]        aon_icb_rsp_rdata;\n\n\n\n  wire  [`E203_PC_SIZE-1:0] pc_rtvec;\n\n\n\n  e203_subsys_main  u_e203_subsys_main(\n    .pc_rtvec        (pc_rtvec),\n\n    .inspect_mode    (inspect_mode    ), \n    .inspect_por_rst (inspect_por_rst), \n    .inspect_32k_clk (inspect_32k_clk), \n    .inspect_pc_29b  (inspect_pc_29b  ), \n    .inspect_dbg_irq (inspect_dbg_irq ),\n    .inspect_jtag_clk(inspect_jtag_clk),\n    .core_csr_clk    (core_csr_clk    ),\n\n    .hfextclk        (hfextclk),\n    .hfxoscen        (hfxoscen),\n\n\n    .dbg_irq_r       (dbg_irq_r      ),\n\n    .cmt_dpc         (cmt_dpc        ),\n    .cmt_dpc_ena     (cmt_dpc_ena    ),\n    .cmt_dcause      (cmt_dcause     ),\n    .cmt_dcause_ena  (cmt_dcause_ena ),\n\n    .wr_dcsr_ena     (wr_dcsr_ena    ),\n    .wr_dpc_ena      (wr_dpc_ena     ),\n    .wr_dscratch_ena (wr_dscratch_ena),\n                                     \n    .wr_csr_nxt      (wr_csr_nxt     ),\n                                     \n\n\n    .dcsr_r          (dcsr_r         ),\n    .dpc_r           (dpc_r          ),\n    .dscratch_r      (dscratch_r     ),\n\n    .dbg_mode        (dbg_mode),\n    .dbg_halt_r      (dbg_halt_r),\n    .dbg_step_r      (dbg_step_r),\n    .dbg_ebreakm_r   (dbg_ebreakm_r),\n    .dbg_stopcycle   (dbg_stopcycle),\n\n\n    .core_mhartid            (core_mhartid),  \n    .dbg_irq_a               (dbg_irq[0]),\n    \n    .aon_wdg_irq_a           (aon_wdg_irq_a     ),      \n    .aon_rtc_irq_a           (aon_rtc_irq_a     ),\n    .aon_rtcToggle_a         (aon_rtcToggle_a   ),\n                             \n    .aon_icb_cmd_valid       (aon_icb_cmd_valid ),\n    .aon_icb_cmd_ready       (aon_icb_cmd_ready ),\n    .aon_icb_cmd_addr        (aon_icb_cmd_addr  ),\n    .aon_icb_cmd_read        (aon_icb_cmd_read  ),\n    .aon_icb_cmd_wdata       (aon_icb_cmd_wdata ),\n                            \n    .aon_icb_rsp_valid       (aon_icb_rsp_valid ),\n    .aon_icb_rsp_ready       (aon_icb_rsp_ready ),\n    .aon_icb_rsp_err         (1'b0   ),\n    .aon_icb_rsp_rdata       (aon_icb_rsp_rdata ),\n\n    .dm_icb_cmd_valid         (dm_icb_cmd_valid),\n    .dm_icb_cmd_ready         (dm_icb_cmd_ready),\n    .dm_icb_cmd_addr          (dm_icb_cmd_addr ),\n    .dm_icb_cmd_read          (dm_icb_cmd_read ),\n    .dm_icb_cmd_wdata         (dm_icb_cmd_wdata),\n    \n    .dm_icb_rsp_valid         (dm_icb_rsp_valid),\n    .dm_icb_rsp_ready         (dm_icb_rsp_ready),\n    .dm_icb_rsp_rdata         (dm_icb_rsp_rdata),\n\n    .io_pads_gpio_0_i_ival           (io_pads_gpio_0_i_ival),\n    .io_pads_gpi"}
{"text": "o_0_o_oval           (io_pads_gpio_0_o_oval),\n    .io_pads_gpio_0_o_oe             (io_pads_gpio_0_o_oe),\n    .io_pads_gpio_0_o_ie             (io_pads_gpio_0_o_ie),\n    .io_pads_gpio_0_o_pue            (io_pads_gpio_0_o_pue),\n    .io_pads_gpio_0_o_ds             (io_pads_gpio_0_o_ds),\n    .io_pads_gpio_1_i_ival           (io_pads_gpio_1_i_ival),\n    .io_pads_gpio_1_o_oval           (io_pads_gpio_1_o_oval),\n    .io_pads_gpio_1_o_oe             (io_pads_gpio_1_o_oe),\n    .io_pads_gpio_1_o_ie             (io_pads_gpio_1_o_ie),\n    .io_pads_gpio_1_o_pue            (io_pads_gpio_1_o_pue),\n    .io_pads_gpio_1_o_ds             (io_pads_gpio_1_o_ds),\n    .io_pads_gpio_2_i_ival           (io_pads_gpio_2_i_ival),\n    .io_pads_gpio_2_o_oval           (io_pads_gpio_2_o_oval),\n    .io_pads_gpio_2_o_oe             (io_pads_gpio_2_o_oe),\n    .io_pads_gpio_2_o_ie             (io_pads_gpio_2_o_ie),\n    .io_pads_gpio_2_o_pue            (io_pads_gpio_2_o_pue),\n    .io_pads_gpio_2_o_ds             (io_pads_gpio_2_o_ds),\n    .io_pads_gpio_3_i_ival           (io_pads_gpio_3_i_ival),\n    .io_pads_gpio_3_o_oval           (io_pads_gpio_3_o_oval),\n    .io_pads_gpio_3_o_oe             (io_pads_gpio_3_o_oe),\n    .io_pads_gpio_3_o_ie             (io_pads_gpio_3_o_ie),\n    .io_pads_gpio_3_o_pue            (io_pads_gpio_3_o_pue),\n    .io_pads_gpio_3_o_ds             (io_pads_gpio_3_o_ds),\n    .io_pads_gpio_4_i_ival           (io_pads_gpio_4_i_ival),\n    .io_pads_gpio_4_o_oval           (io_pads_gpio_4_o_oval),\n    .io_pads_gpio_4_o_oe             (io_pads_gpio_4_o_oe),\n    .io_pads_gpio_4_o_ie             (io_pads_gpio_4_o_ie),\n    .io_pads_gpio_4_o_pue            (io_pads_gpio_4_o_pue),\n    .io_pads_gpio_4_o_ds             (io_pads_gpio_4_o_ds),\n    .io_pads_gpio_5_i_ival           (io_pads_gpio_5_i_ival),\n    .io_pads_gpio_5_o_oval           (io_pads_gpio_5_o_oval),\n    .io_pads_gpio_5_o_oe             (io_pads_gpio_5_o_oe),\n    .io_pads_gpio_5_o_ie             (io_pads_gpio_5_o_ie),\n    .io_pads_gpio_5_o_pue            (io_pads_gpio_5_o_pue),\n    .io_pads_gpio_5_o_ds             (io_pads_gpio_5_o_ds),\n    .io_pads_gpio_6_i_ival           (io_pads_gpio_6_i_ival),\n    .io_pads_gpio_6_o_oval           (io_pads_gpio_6_o_oval),\n    .io_pads_gpio_6_o_oe             (io_pads_gpio_6_o_oe),\n    .io_pads_gpio_6_o_ie             (io_pads_gpio_6_o_ie),\n    .io_pads_gpio_6_o_pue            (io_pads_gpio_6_o_pue),\n    .io_pads_gpio_6_o_ds             (io_pads_gpio_6_o_ds),\n    .io_pads_gpio_7_i_ival           (io_pads_gpio_7_i_ival),\n    .io_pads_gpio_7_o_oval           (io_pads_gpio_7_o_oval),\n    .io_pads_gpio_7_o_oe             (io_pads_gpio_7_o_oe),\n    .io_pads_gpio_7_o_ie             (io_pads_gpio_7_o_ie),\n    .io_pads_gpio_7_o_pue            (io_pads_gpio_7_o_pue),\n    .io_pads_gpio_7_o_ds             (io_pads_gpio_7_o_ds),\n    .io_pads_gpio_8_i_ival           (io_pads_gpio_8_i_ival),\n    .io_pads_gpio_8_o_oval           (io_pads_gpio_8_o_oval),\n    .io_pads_gpio_8_o_oe             (io_pads_gpio_8_o_oe),\n    .io_pads_gpio_8_o_ie             (io_pads_gpio_8_o_ie),\n    .io_pads_gpio_8_o_pue            (io_pads_gpio_8_o_pue),\n    .io_pads_gpio_8_o_ds             (io_pads_gpio_8_o_ds),\n    .io_pads_gpio_9_i_ival           (io_pads_gpio_9_i_ival),\n    .io_pads_gpio_9_o_oval           (io_pads_gpio_9_o_oval),\n    .io_pads_gpio_9_o_oe             (io_pads_gpio_9_o_oe),\n    .io_pads_gpio_9_o_ie             (io_pads_gpio_9_o_ie),\n    .io_pads_gpio_9_o_pue            (io_pads_gpio_9_o_pue),\n    .io_pads_gpio_9_o_ds             (io_pads_gpio_9_o_ds),\n    .io_pads_gpio_10_i_ival          (io_pads_gpio_10_i_ival),\n    .io_pads_gpio_10_o_oval          (io_pads_gpio_10_o_oval),\n    .io_pads_gpio_10_o_oe            (io_pads_gpio_10_o_oe),\n    .io_pads_gpio_10_o_ie            (io_pads_gpio_10_o_ie),\n    .io_pads_gpio_10_o_pue           (io_pads_gpio_10_o_pue),\n    .io_pads_gpio_10_o_ds            (io_pads_gpio_10_o_ds),\n    .io_pads_gpio_11_i_ival          (io_pads_gpio_11_i_ival),\n    .io_pads_gpio_11_o_oval          (io_pads_gpio_11_o_oval),\n    .io_pads_gpio_11_o_oe            (io_pads_gpio_11_o_oe),\n    .io_pads_gpio_11_o_ie            (io_pads_gpio_11_o_ie),\n    .io_pads_gpio_11_o_pue           (io_pads_gpio_11_o_pue),\n    .io_pads_gpio_11_o_ds            (io_pads_gpio_11_o_ds),\n    .io_pads_gpio_12_i_ival          (io_pads_gpio_12_i_ival),\n    .io_pads_gpio_12_o_oval          (io_pads_gpio_12_o_oval),\n    .io_pads_gpio_12_o_oe            (io_pads_gpio_12_o_oe),\n    .io_pads_gpio_12_o_ie            (io_pads_gpio_12_o_ie),\n    .io_pads_gpio_12_o_pue           (io_pads_gpio_12_o_pue),\n    .io_pads_gpio_12_o_ds            (io_pads_gpio_12_o_ds),\n    .io_pads_gpio_13_i_ival          (io_pads_gpio_13_i_ival),\n    .io_pads_gpio_13_o_oval          (io_pads_gpio_13_o_oval),\n    .io_pads_gpio_13_o_oe            (io_pads_gpio_13_o_oe),\n    .io_pads_gpio_13_o_ie            (io_pads_gpio_13_o_ie),\n    .io_pads_gpio_13_o_pue           (io_pads_gpio_13_o_pue),\n    .io_pads_gpio_13_o_ds            (io_pads_gpio_13_o_ds),\n    .io_pads_gpio_14_i_ival          (io_pads_gpio_14_i_ival),\n    .io_pads_gpio_14_o_oval          (io_pads_gpio_14_o_oval),\n    .io_pads_gpio_14_o_oe            (io_pads_gpio_14_o_oe),\n    .io_pads_gpio_14_o_ie            (io_pads_gpio_14_o_ie),\n    .io_pads_gpio_14_o_pue           (io_pads_gpio_14_o_pue),\n    .io_pads_gpio_14_o_ds            (io_pads_gpio_14_o_ds),\n    .io_pads_gpio_15_i_ival          (io_pads_gpio_15_i_ival),\n    .io_pads_gpio_15_o_oval          (io_pads_gpio_15_o_oval),\n    .io_pads_gpio_15_o_oe            (io_pads_gpio_15_o_oe),\n    .io_pads_gpio_15_o_ie            (io_pads_gpio_15_o_ie),\n    .io_pads_gpio_15_o_pue           (io_pads_gpio_15_o_pue),\n    .io_pads_gpio_15_o_ds            (io_pads_gpio_15_o_ds),\n    .io_pads_gpio_16_i_ival          (io_pads_gpio_16_i_ival),\n    .io_pads_gpio_16_o_oval          (io_pads_gpio_16_o_oval),\n    .io_pads_gpio_16_o_oe            (io_pads_gpio_16_o_oe),\n    .io_pads_gpio_16_o_ie            (io_pads_gpio_16_o_ie),\n    .io_pads_gpio_16_o_pue           (io_pads_gpio_16_o_pue),\n    .io_pads_gpio_16_o_ds            (io_pads_gpio_16_o_ds),\n    .io_pads_gpio_17_i_ival          (io_pads_gpio_17_i_ival),\n    .io_pads_gpio_17_o_oval          (io_pads_gpio_17_o_oval),\n    .io_pads_gpio_17_o_oe            (io_pads_gpio_17_o_oe),\n    .io_pads_gpio_17_o_ie            (io_pads_gpio_17_o_ie),\n    .io_pads_gpio_17_o_pue           (io_pads_gpio_17_o_pue),\n    .io_pads_gpio_17_o_ds            (io_pads_gpio_17_o_ds),\n    .io_pads_gpio_18_i_ival          (io_pads_gpio_18_i_ival),\n    .io_pads_gpio_18_o_oval          (io_pads_gpio_18_o_oval),\n    .io_pads_gpio_18_o_oe            (io_pads_gpio_18_o_oe),\n    .io_pads_gpio_18_o_ie            (io_pads_gpio_18_o_ie),\n    .io_pads_gpio_18_o_pue           (io_pads_gpio_18_o_pue),\n    .io_pads_gpio_18_o_ds            (io_pads_gpio_18_o_ds),\n    .io_pads_gpio_19_i_ival          (io_pads_gpio_19_i_ival),\n    .io_pads_gpio_19_o_oval          (io_pads_gpio_19_o_oval),\n    .io_pads_gpio_19_o_oe            (io_pads_gpio_19_o_oe),\n    .io_pads_gpio_19_o_ie            (io_pads_gpio_19_o_ie),\n    .io_pads_gpio_19_o_pue           (io_pads_gpio_19_o_pue),\n    .io_pads_gpio_19_o_ds            (io_pads_gpio_19_o_ds),\n    .io_pads_gpio_20_i_ival          (io_pads_gpio_20_i_ival),\n    .io_pads_gpio_20_o_oval          (io_pads_gpio_20_o_oval),\n    .io_pads_gpio_20_o_oe            (io_pads_gpio_20_o_oe),\n    .io_pads_gpio_20_o_ie            (io_pads_gpio_20_o_ie),\n    .io_pads_gpio_20_o_pue           (io_pads_gpio_20_o_pue),\n    .io_pads_gpio_20_o_ds            (io_pads_gpio_20_o_ds),\n    .io_pads_gpio_21_i_ival          (io_pads_gpio_21_i_ival),\n    .io_pads_gpio_21_o_oval          (io_pads_gpio_21_o_oval),\n    .io_pads_gpio_21_o_oe            (io_pads_gpio_21_o_oe),\n    .io_pads_gpio_21_o_ie            (io_pads_gpio_21_o_ie),\n    .io_pads_gpio_21_o_pue           (io_pads_gpio_21_o_pue),\n    .io_pads_gpio_21_o_ds            (io_pads_gpio_21_o_ds),\n    .io_pads_gpio_22_i_ival          (io_pads_gpio_22_i_ival),\n    .io_pads_gpio_22_o_oval          (io_pads_gpio_22_o_oval),\n    .io_pads_gpio_22_o_oe            (io_pads_gpio_22_o_oe),\n    .io_pads_gpio_22_o_ie            (io_pads_gpio_22_o_ie),\n    .io_pads_gpio_22_o_pue           (io_pads_gpio_22_o_pue),\n    .io_pads_gpio_22_o_ds            (io_pads_gpio_22_o_ds),\n    .io_pads_gpio_23_i_ival          (io_pads_gpio_23_i_ival),\n    .io_pads_gpio_23_o_oval          (io_pads_gpio_23_o_oval),\n    .io_pads_gpio_23_o_oe            (io_pads_gpio_23_o_oe),\n    .io_pads_gpio_23_o_ie            (io_pads_gpio_23_o_ie),\n    .io_pads_gpio_23_o_pue           (io_pads_gpio_23_o_pue),\n    .io_pads_gpio_23_o_ds            (io_pads_gpio_23_o_ds),\n    .io_pads_gpio_24_i_ival          (io_pads_gpio_24_i_ival),\n    .io_pads_gpio_24_o_oval          (io_pads_gpio_24_o_oval),\n    .io_pads_gpio_24_o_oe            (io_pads_gpio_24_o_oe),\n    .io_pads_gpio_24_o_ie            (io_pads_gpio_24_o_ie),\n    .io_pads_gpio_24_o_pue           (io_pads_gpio_24_o_pue),\n    .io_pads_gpio_24_o_ds            (io_pads_gpio_24_o_ds),\n    .io_pads_gpio_25_i_ival          (io_pads_gpio_25_i_ival),\n    .io_pads_gpio_25_o_oval          (io_pads_gpio_25_o_oval),\n    .io_pads_gpio_25_o_oe            (io_pads_gpio_25_o_oe),\n    .io_pads_gpio_25_o_ie            (io_pads_gpio_25_o_ie),\n    .io_pads_gpio_25_o_pue           (io_pads_gpio_25_o_pue),\n    .io_pads_gpio_25_o_ds            (io_pads_gpio_25_o_ds),\n    .io_pads_gpio_26_i_ival          (io_pads_gpio_26_i_ival),\n    .io_pads_gpio_26_o_oval          (io_pads_gpio_26_o_oval),\n    .io_pads_gpio_26_o_oe            (io_pads_gpio_26_o_oe),\n    .io_pads_gpio_26_o_ie            (io_pads_gpio_26_o_ie),\n    .io_pads_gpio_26_o_pue           (io_pads_gpio_26_o_pue),\n    .io_pads_gpio_26_o_ds            (io_pads_gpio_26_o_ds),\n    .io_pads_gpio_27_i_ival          (io_pads_gpio_27_i_ival),\n    .io_pads_gpio_27_o_oval          (io_pads_gpio_27_o_oval),\n    .io_pads_gpio_27_o_oe            (io_pads_gpio_27_o_oe),\n    .io_pads_gpio_27_o_ie            (io_pads_gpio_27_o_ie),\n    .io_pads_gpio_27_o_pue           (io_pads_gpio_27_o_pue),\n    .io_pads_gpio_27_o_ds            (io_pads_gpio_27_o_ds),\n    .io_pads_gpio_28_i_ival          (io_pads_gpio_28_i_ival),\n    .io_pads_gpio_28_o_oval          (io_pads_gpio_28_o_oval),\n    .io_pads_gpio_28_o_oe            (io_pads_gpio_28_o_oe),\n    .io_pads_gpio_28_o_ie            (io_pads_gpio_28_o_ie),\n    .io_pads_gpio_28_o_pue           (io_pads_gpio_28_o_pue),\n    .io_pads_gpio_28_o_ds            (io_pads_gpio_28_o_ds),\n    .io_pads_gpio_29_i_ival          (io_pads_gpio_29_i_ival),\n    .io_pads_gpio_29_o_oval          (io_pads_gpio_29_o_oval),\n    .io_pads_gpio_29_o_oe            (io_pads_gpio_29_o_oe),\n    .io_pads_gpio_29_o_ie            (io_pads_gpio_29_o_ie),\n    .io_pads_gpio_29_o_pue           (io_pads_gpio_29_o_pue),\n    .io_pads_gpio_29_o_ds            (io_pads_gpio_29_o_ds),\n    .io_pads_gpio_30_i_ival          (io_pads_gpio_30_i_ival),\n    .io_pads_gpio_30_o_oval          (io_pads_gpio_30_o_oval),\n    .io_pads_gpio_30_o_oe            (io_pads_gpio_30_o_oe),\n    .io_pads_gpio_30_o_ie            (io_pads_gpio_30_o_ie),\n    .io_pads_gpio_30_o_pue           (io_pads_gpio_30_o_pue),\n    .io_pads_gpio_30_o_ds            (io_pads_gpio_30_o_ds),\n    .io_pads_gpio_31_i_ival          (io_pads_gpio_31_i_ival),\n    .io_pads_gpio_31_o_oval          (io_pads_gpio_31_o_oval),\n    .io_pads_gpio_31_o_oe            (io_pads_gpio_31_o_oe),\n    .io_pads_gpio_31_o_ie            (io_pads_gpio_31_o_ie),\n    .io_pads_gpio_31_o_pue           (io_pads_gpio_31_o_pue),\n    .io_pads_gpio_31_o_ds            (io_pads_gpio_31_o_ds),\n\n    .io_pads_qspi_sck_i_ival    (io_pads_qspi_sck_i_ival    ),\n    .io_pads_qspi_sck_o_oval    (io_pads_qspi_sck_o_oval    ),\n    .io_pads_qspi_sck_o_oe      (io_pads_qspi_sck_o_oe      ),\n    .io_pads_qspi_sck_o_ie      (io_pads_qspi_sck_o_ie      ),\n    .io_pads_qspi_sck_o_pue     (io_pads_qspi_sck_o_pue     ),\n    .io_pads_qspi_sck_o_ds      (io_pads_qspi_sck_o_ds      ),\n    .io_pads_qspi_dq_0_i_ival   (io_pads_qspi_dq_0_i_ival   ),\n    .io_pads_qspi_dq_0_o_oval   (io_pads_qspi_dq_0_o_oval   ),\n    .io_pads_qspi_dq_0_o_oe     (io_pads_qspi_dq_0_o_oe     ),\n    .io_pads_qspi_dq_0_o_ie     (io_pads_qspi_dq_0_o_ie     ),\n    .io_pads_qspi_dq_0_o_pue    (io_pads_qspi_dq_0_o_pue    ),\n    .io_pads_qspi_dq_0_o_ds     (io_pads_qspi_dq_0_o_ds     ),\n    .io_pads_qspi_dq_1_i_ival   (io_pads_qspi_dq_1_i_ival   ),\n    .io_pads_qspi_dq_1_o_oval   (io_pads_qspi_dq_1_o_oval   ),\n    .io_pads_qspi_dq_1_o_oe     (io_pads_qspi_dq_1_o_oe     ),\n    .io_pads_qspi_dq_1_o_ie     (io_pads_qspi_dq_1_o_ie     ),\n    .io_pads_qspi_dq_1_o_pue    (io_pads_qspi_dq_1_o_pue    ),\n    .io_pads_qspi_dq_1_o_ds     (io_pads_qspi_dq_1_o_ds     ),\n    .io_pads_qspi_dq_2_i_ival   (io_pads_qspi_dq_2_i_ival   ),\n    .io_pads_qspi_dq_2_o_oval   (io_pads_qspi_dq_2_o_oval   ),\n    .io_pads_qspi_dq_2_o_oe     (io_pads_qspi_dq_2_o_oe     ),\n    .io_pads_qspi_dq_2_o_ie     (io_pads_qspi_dq_2_o_ie     ),\n    .io_pads_qspi_dq_2_o_pue    (io_pads_qspi_dq_2_o_pue    ),\n    .io_pads_qspi_dq_2_o_ds     (io_pads_qspi_dq_2_o_ds     ),\n    .io_pads_qspi_dq_3_i_ival   (io_pads_qspi_dq_3_i_ival   ),\n    .io_pads_qspi_dq_3_o_oval   (io_pads_qspi_dq_3_o_oval   ),\n    .io_pads_qspi_dq_3_o_oe     (io_pads_qspi_dq_3_o_oe     ),\n    .io_pads_qspi_dq_3_o_ie     (io_pads_qspi_dq_3_o_ie     ),\n    .io_pads_qspi_dq_3_o_pue    (io_pads_qspi_dq_3_o_pue    ),\n    .io_pads_qspi_dq_3_o_ds     (io_pads_qspi_dq_3_o_ds     ),\n    .io_pads_qspi_cs_0_i_ival   (io_pads_qspi_cs_0_i_ival   ),\n    .io_pads_qspi_cs_0_o_oval   (io_pads_qspi_cs_0_o_oval   ),\n    .io_pads_qspi_cs_0_o_oe     (io_pads_qspi_cs_0_o_oe     ),\n    .io_pads_qspi_cs_0_o_ie     (io_pads_qspi_cs_0_o_ie     ),\n    .io_pads_qspi_cs_0_o_pue    (io_pads_qspi_cs_0_o_pue    ),\n    .io_pads_qspi_cs_0_o_ds     (io_pads_qspi_cs_0_o_ds     ),\n\n  `ifdef E203_HAS_ITCM_EXTITF //{\n    .ext2itcm_icb_cmd_valid  (ext2itcm_icb_cmd_valid),\n    .ext2itcm_icb_cmd_ready  (ext2itcm_icb_cmd_ready),\n    .ext2itcm_icb_cmd_addr   (ext2itcm_icb_cmd_addr ),\n    .ext2itcm_icb_cmd_read   (ext2itcm_icb_cmd_read ),\n    .ext2itcm_icb_cmd_wdata  (ext2itcm_icb_cmd_wdata),\n    .ext2itcm_icb_cmd_wmask  (ext2itcm_icb_cmd_wmask),\n    \n    .ext2itcm_icb_rsp_valid  (ext2itcm_icb_rsp_valid),\n    .ext2itcm_icb_rsp_ready  (ext2itcm_icb_rsp_ready),\n    .ext2itcm_icb_rsp_err    (ext2itcm_icb_rsp_err  ),\n    .ext2itcm_icb_rsp_rdata  (ext2itcm_icb_rsp_rdata),\n  `endif//}\n\n  `ifdef E203_HAS_DTCM_EXTITF //{\n    .ext2dtcm_icb_cmd_valid  (ext2dtcm_icb_cmd_valid),\n    .ext2dtcm_icb_cmd_ready  (ext2dtcm_icb_cmd_ready),\n    .ext2dtcm_icb_cmd_addr   (ext2dtcm_icb_cmd_addr ),\n    .ext2dtcm_icb_cmd_read   (ext2dtcm_icb_cmd_read ),\n    .ext2dtcm_icb_cmd_wdata  (ext2dtcm_icb_cmd_wdata),\n    .ext2dtcm_icb_cmd_wmask  (ext2dtcm_icb_cmd_wmask),\n    \n    .ext2dtcm_icb_rsp_valid  (ext2dtcm_icb_rsp_valid),\n    .ext2dtcm_icb_rsp_ready  (ext2dtcm_icb_rsp_ready),\n    .ext2dtcm_icb_rsp_err    (ext2dtcm_icb_rsp_err  ),\n    .ext2dtcm_icb_rsp_rdata  (ext2dtcm_icb_rsp_rdata),\n  `endif//}\n\n\n    .sysper_icb_cmd_valid     (sysper_icb_cmd_valid),\n    .sysper_icb_cmd_ready     (sysper_icb_cmd_ready),\n    .sysper_icb_cmd_addr      (sysper_icb_cmd_addr ),\n    .sysper_icb_cmd_read      (sysper_icb_cmd_read ),\n    .sysper_icb_cmd_wdata     (sysper_icb_cmd_wdata),\n    .sysper_icb_cmd_wmask     (sysper_icb_cmd_wmask),\n    \n    .sysper_icb_rsp_valid     (sysper_icb_rsp_valid),\n    .sysper_icb_rsp_ready     (sysper_icb_rsp_ready),\n    .sysper_icb_rsp_err       (sysper_icb_rsp_err  ),\n    .sysper_icb_rsp_rdata     (sysper_icb_rsp_rdata),\n\n    .sysfio_icb_cmd_valid     (sysfio_icb_cmd_valid),\n    .sysfio_icb_cmd_ready     (sysfio_icb_cmd_ready),\n    .sysfio_icb_cmd_addr      (sysfio_icb_cmd_addr ),\n    .sysfio_icb_cmd_read      (sysfio_icb_cmd_read ),\n    .sysfio_icb_cmd_wdata     (sysfio_icb_cmd_wdata),\n    .sysfio_icb_cmd_wmask     (sysfio_icb_cmd_wmask),\n    \n    .sysfio_icb_rsp_valid     (sysfio_icb_rsp_valid),\n    .sysfio_icb_rsp_ready     (sysfio_icb_rsp_ready),\n    .sysfio_icb_rsp_err       (sysfio_icb_rsp_err  ),\n    .sysfio_icb_rsp_rdata     (sysfio_icb_rsp_rdata),\n\n\n\n    .sysmem_icb_cmd_valid  (sysmem_icb_cmd_valid),\n    .sysmem_icb_cmd_ready  (sysmem_icb_cmd_ready),\n    .sysmem_icb_cmd_addr   (sysmem_icb_cmd_addr ),\n    .sysmem_icb_cmd_read   (sysmem_icb_cmd_read ),\n    .sysmem_icb_cmd_wdata  (sysmem_icb_cmd_wdata),\n    .sysmem_icb_cmd_wmask  (sysmem_icb_cmd_wmask),\n    \n    .sysmem_icb_rsp_valid  (sysmem_icb_rsp_valid),\n    .sysmem_icb_rsp_ready  (sysmem_icb_rsp_ready),\n    .sysmem_icb_rsp_err    (sysmem_icb_rsp_err  ),\n    .sysmem_icb_rsp_rdata  (sysmem_icb_rsp_rdata),\n\n    .test_mode     (test_mode), \n    .hfclk           (hfclk   ),\n    .hfclkrst        (hfclkrst),\n    .corerst       (corerst)\n  );\n\n\n\n  sirv_debug_module # (\n    `ifdef E203_DEBUG_HAS_JTAG //{\n      .SUPPORT_JTAG_DTM (1),\n    `else//}{\n      .SUPPORT_JTAG_DTM (0),\n    `endif//}\n      .ASYNC_FF_LEVELS (`E203_ASYNC_FF_LEVELS),\n      .HART_NUM (`E203_HART_NUM),\n      .PC_SIZE  (`E203_PC_SIZE),\n      .HART_ID_W(`E203_HART_ID_W) \n    ) u_sirv_debug_module(\n    .inspect_jtag_clk    (inspect_jtag_clk),\n\n    .test_mode       (test_mode ),\n    .core_csr_clk    (core_csr_clk),\n\n    .dbg_irq_r       (dbg_irq_r      ),\n\n    .cmt_dpc         (cmt_dpc        ),\n    .cmt_dpc_ena     (cmt_dpc_ena    ),\n    .cmt_dcause      (cmt_dcause     ),\n    .cmt_dcause_ena  (cmt_dcause_ena ),\n\n    .wr_dcsr_ena     (wr_dcsr_ena    ),\n    .wr_dpc_ena      (wr_dpc_ena     ),\n    .wr_dscratch_ena (wr_dscratch_ena),\n                                     \n    .wr_csr_nxt      (wr_csr_nxt     ),\n                                     \n\n    .dcsr_r          (dcsr_r         ),\n    .dpc_r           (dpc_r          ),\n    .dscratch_r      (dscratch_r     ),\n\n    .dbg_mode        (dbg_mode),\n    .dbg_halt_r      (dbg_halt_r),\n    .dbg_step_r      (dbg_step_r),\n    .dbg_ebreakm_r   (dbg_ebreakm_r),\n    .dbg_stopcycle   (dbg_stopcycle),\n\n    .io_pads_jtag_TCK_i_ival     (io_pads_jtag_TCK_i_ival    ),\n    .io_pads_jtag_TCK_o_oval     (io_pads_jtag_TCK_o_oval    ),\n    .io_pads_jtag_TCK_o_oe       (io_pads_jtag_TCK_o_oe      ),\n    .io_pads_jtag_TCK_o_ie       (io_pads_jtag_TCK_o_ie      ),\n    .io_pads_jtag_TCK_o_pue      (io_pads_jtag_TCK_o_pue     ),\n    .io_pads_jtag_TCK_o_ds       (io_pads_jtag_TCK_o_ds      ),\n    .io_pads_jtag_TMS_i_ival     (io_pads_jtag_TMS_i_ival    ),\n    .io_pads_jtag_TMS_o_oval     (io_pads_jtag_TMS_o_oval    ),\n    .io_pads_jtag_TMS_o_oe       (io_pads_jtag_TMS_o_oe      ),\n    .io_pads_jtag_TMS_o_ie       (io_pads_jtag_TMS_o_ie      ),\n    .io_pads_jtag_TMS_o_pue      (io_pads_jtag_TMS_o_pue     ),\n    .io_pads_jtag_TMS_o_ds       (io_pads_jtag_TMS_o_ds      ),\n    .io_pads_jtag_TDI_i_ival     (io_pads_jtag_TDI_i_ival    ),\n    .io_pads_jtag_TDI_o_oval     (io_pads_jtag_TDI_o_oval    ),\n    .io_pads_jtag_TDI_o_oe       (io_pads_jtag_TDI_o_oe      ),\n    .io_pads_jtag_TDI_o_ie       (io_pads_jtag_TDI_o_ie      ),\n    .io_pads_jtag_TDI_o_pue      (io_pads_jtag_TDI_o_pue     ),\n    .io_pads_jtag_TDI_o_ds       (io_pads_jtag_TDI_o_ds      ),\n    .io_pads_jtag_TDO_i_ival     (io_pads_jtag_TDO_i_ival    ),\n    .io_pads_jtag_TDO_o_oval     (io_pads_jtag_TDO_o_oval    ),\n    .io_pads_jtag_TDO_o_oe       (io_pads_jtag_TDO_o_oe      ),\n    .io_pads_jtag_TDO_o_ie       (io_pads_jtag_TDO_o_ie      ),\n    .io_pads_jtag_TDO_o_pue      (io_pads_jtag_TDO_o_pue     ),\n    .io_pads_jtag_TDO_o_ds       (io_pads_jtag_TDO_o_ds      ),\n    .io_pads_jtag_TRST_n_i_ival  (io_pads_jtag_TRST_n_i_ival ),\n    .io_pads_jtag_TRST_n_o_oval  (io_pads_jtag_TRST_n_o_oval ),\n    .io_pads_jtag_TRST_n_o_oe    (io_pads_jtag_TRST_n_o_oe   ),\n    .io_pads_jtag_TRST_n_o_ie    (io_pads_jtag_TRST_n_o_ie   ),\n    .io_pads_jtag_TRST_n_o_pue   (io_pads_jtag_TRST_n_o_pue  ),\n    .io_"}
{"text": "pads_jtag_TRST_n_o_ds    (io_pads_jtag_TRST_n_o_ds   ),\n\n    .i_icb_cmd_valid         (dm_icb_cmd_valid),\n    .i_icb_cmd_ready         (dm_icb_cmd_ready),\n    .i_icb_cmd_addr          (dm_icb_cmd_addr[11:0] ),\n    .i_icb_cmd_read          (dm_icb_cmd_read ),\n    .i_icb_cmd_wdata         (dm_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid         (dm_icb_rsp_valid),\n    .i_icb_rsp_ready         (dm_icb_rsp_ready),\n    .i_icb_rsp_rdata         (dm_icb_rsp_rdata),\n\n    .o_dbg_irq               (dbg_irq),\n    .o_ndreset               (),\n    .o_fullreset             (),\n\n    .hfclk           (hfclk),\n    .corerst         (corerst) \n  );\n\n\n  sirv_aon_top u_sirv_aon_top(\n    .pc_rtvec                (pc_rtvec),\n\n    .jtagpwd_iso             (),// Currently not used\n    .inspect_mode            (inspect_mode     ), \n    .inspect_pc_29b          (inspect_pc_29b   ), \n    .inspect_por_rst         (inspect_por_rst  ), \n    .inspect_32k_clk         (inspect_32k_clk  ), \n    .inspect_dbg_irq         (inspect_dbg_irq  ),\n\n    .i_icb_cmd_valid         (aon_icb_cmd_valid),\n    .i_icb_cmd_ready         (aon_icb_cmd_ready),\n    .i_icb_cmd_addr          (aon_icb_cmd_addr ),\n    .i_icb_cmd_read          (aon_icb_cmd_read ),\n    .i_icb_cmd_wdata         (aon_icb_cmd_wdata),\n    \n    .i_icb_rsp_valid         (aon_icb_rsp_valid),\n    .i_icb_rsp_ready         (aon_icb_rsp_ready),\n    .i_icb_rsp_rdata         (aon_icb_rsp_rdata),\n\n    .aon_wdg_irq             (aon_wdg_irq_a     ),      \n    .aon_rtc_irq             (aon_rtc_irq_a     ),\n    .aon_rtcToggle           (aon_rtcToggle_a   ),\n\n    .test_mode               (test_mode           ),\n    .test_iso_override       (test_iso_override   ),\n\n    .lfextclk        (lfextclk),\n    .lfxoscen        (lfxoscen),\n\n    .io_pads_aon_erst_n_i_ival        (io_pads_aon_erst_n_i_ival       ), \n    .io_pads_aon_erst_n_o_oval        (io_pads_aon_erst_n_o_oval       ),\n    .io_pads_aon_erst_n_o_oe          (io_pads_aon_erst_n_o_oe         ),\n    .io_pads_aon_erst_n_o_ie          (io_pads_aon_erst_n_o_ie         ),\n    .io_pads_aon_erst_n_o_pue         (io_pads_aon_erst_n_o_pue        ),\n    .io_pads_aon_erst_n_o_ds          (io_pads_aon_erst_n_o_ds         ),\n    .io_pads_aon_pmu_vddpaden_i_ival  (io_pads_aon_pmu_vddpaden_i_ival ),\n    .io_pads_aon_pmu_vddpaden_o_oval  (io_pads_aon_pmu_vddpaden_o_oval ),\n    .io_pads_aon_pmu_vddpaden_o_oe    (io_pads_aon_pmu_vddpaden_o_oe   ),\n    .io_pads_aon_pmu_vddpaden_o_ie    (io_pads_aon_pmu_vddpaden_o_ie   ),\n    .io_pads_aon_pmu_vddpaden_o_pue   (io_pads_aon_pmu_vddpaden_o_pue  ),\n    .io_pads_aon_pmu_vddpaden_o_ds    (io_pads_aon_pmu_vddpaden_o_ds   ),\n    .io_pads_aon_pmu_dwakeup_n_i_ival (io_pads_aon_pmu_dwakeup_n_i_ival),\n    .io_pads_aon_pmu_dwakeup_n_o_oval (io_pads_aon_pmu_dwakeup_n_o_oval),\n    .io_pads_aon_pmu_dwakeup_n_o_oe   (io_pads_aon_pmu_dwakeup_n_o_oe  ),\n    .io_pads_aon_pmu_dwakeup_n_o_ie   (io_pads_aon_pmu_dwakeup_n_o_ie  ),\n    .io_pads_aon_pmu_dwakeup_n_o_pue  (io_pads_aon_pmu_dwakeup_n_o_pue ),\n    .io_pads_aon_pmu_dwakeup_n_o_ds   (io_pads_aon_pmu_dwakeup_n_o_ds  ),\n\n    .io_pads_aon_pmu_padrst_i_ival    (io_pads_aon_pmu_padrst_i_ival ),\n    .io_pads_aon_pmu_padrst_o_oval    (io_pads_aon_pmu_padrst_o_oval ),\n    .io_pads_aon_pmu_padrst_o_oe      (io_pads_aon_pmu_padrst_o_oe   ),\n    .io_pads_aon_pmu_padrst_o_ie      (io_pads_aon_pmu_padrst_o_ie   ),\n    .io_pads_aon_pmu_padrst_o_pue     (io_pads_aon_pmu_padrst_o_pue  ),\n    .io_pads_aon_pmu_padrst_o_ds      (io_pads_aon_pmu_padrst_o_ds   ),\n\n    .io_pads_jtagpwd_n_i_ival       (1'b1),// Currently not used\n    .io_pads_jtagpwd_n_o_oval       (),\n    .io_pads_jtagpwd_n_o_oe         (),\n    .io_pads_jtagpwd_n_o_ie         (),\n    .io_pads_jtagpwd_n_o_pue        (),\n    .io_pads_jtagpwd_n_o_ds         (),\n\n    .io_pads_bootrom_n_i_ival       (io_pads_bootrom_n_i_ival),\n    .io_pads_bootrom_n_o_oval       (io_pads_bootrom_n_o_oval),\n    .io_pads_bootrom_n_o_oe         (io_pads_bootrom_n_o_oe  ),\n    .io_pads_bootrom_n_o_ie         (io_pads_bootrom_n_o_ie  ),\n    .io_pads_bootrom_n_o_pue        (io_pads_bootrom_n_o_pue ),\n    .io_pads_bootrom_n_o_ds         (io_pads_bootrom_n_o_ds  ),\n\n    .io_pads_dbgmode0_n_i_ival       (io_pads_dbgmode0_n_i_ival),\n    .io_pads_dbgmode1_n_i_ival       (io_pads_dbgmode1_n_i_ival),\n    .io_pads_dbgmode2_n_i_ival       (io_pads_dbgmode2_n_i_ival),\n\n    .hfclkrst      (hfclkrst),\n    .corerst       (corerst)\n  );\n\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n/////////////////////////////////////////////////////////////////////\n////                                                             ////\n////  WISHBONE rev.B2 compliant I2C Master bit-controller        ////\n////                                                             ////\n////                                                             ////\n////  Author: Richard Herveille                                  ////\n////          richard@asics.ws                                   ////\n////          www.asics.ws                                       ////\n////                                                             ////\n////  Downloaded from: http://www.opencores.org/projects/i2c/    ////\n////                                                             ////\n/////////////////////////////////////////////////////////////////////\n////                                                             ////\n//// Copyright (C) 2001 Richard Herveille                        ////\n////                    richard@asics.ws                         ////\n////                                                             ////\n//// This source file may be used and distributed without        ////\n//// restriction provided that this copyright statement is not   ////\n//// removed from the file and that any derivative work contains ////\n//// the original copyright notice and the associated disclaimer.////\n////                                                             ////\n////     THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY     ////\n//// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   ////\n//// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS   ////\n//// FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL THE AUTHOR      ////\n//// OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,         ////\n//// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES    ////\n//// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE   ////\n//// GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR        ////\n//// BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF  ////\n//// LIABILITY, WHETHER IN  CONTRACT, STRICT LIABILITY, OR TORT  ////\n//// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  ////\n//// OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE         ////\n//// POSSIBILITY OF SUCH DAMAGE.                                 ////\n////                                                             ////\n/////////////////////////////////////////////////////////////////////\n\n//  CVS Log\n//\n//  $Id: i2c_master_bit_ctrl.v,v 1.11 2004/05/07 11:02:26 rherveille Exp $\n//\n//  $Date: 2004/05/07 11:02:26 $\n//  $Revision: 1.11 $\n//  $Author: rherveille $\n//  $Locker:  $\n//  $State: Exp $\n//\n// Change History:\n//               $Log: i2c_master_bit_ctrl.v,v $\n//               Revision 1.11  2004/05/07 11:02:26  rherveille\n//               Fixed a bug where the core would signal an arbitration lost (AL bit set), when another master controls the bus and the other master generates a STOP bit.\n//\n//               Revision 1.10  2003/08/09 07:01:33  rherveille\n//               Fixed a bug in the Arbitration Lost generation caused by delay on the (external) sda line.\n//               Fixed a potential bug in the byte controller's host-acknowledge generation.\n//\n//               Revision 1.9  2003/03/10 14:26:37  rherveille\n//               Fixed cmd_ack generation item (no bug).\n//\n//               Revision 1.8  2003/02/05 00:06:10  rherveille\n//               Fixed a bug where the core would trigger an erroneous 'arbitration lost' interrupt after being reset, when the reset pulse width < 3 clk cycles.\n//\n//               Revision 1.7  2002/12/26 16:05:12  rherveille\n//               Small code simplifications\n//\n//               Revision 1.6  2002/12/26 15:02:32  rherveille\n//               Core is now a Multimaster I2C controller\n//\n//               Revision 1.5  2002/11/30 22:24:40  rherveille\n//               Cleaned up code\n//\n//               Revision 1.4  2002/10/30 18:10:07  rherveille\n//               Fixed some reported minor start/stop generation timing issuess.\n//\n//               Revision 1.3  2002/06/15 07:37:03  rherveille\n//               Fixed a small timing bug in the bit controller.\\nAdded verilog simulation environment.\n//\n//               Revision 1.2  2001/11/05 11:59:25  rherveille\n//               Fixed wb_ack_o generation bug.\n//               Fixed bug in the byte_controller statemachine.\n//               Added headers.\n//\n\n//\n/////////////////////////////////////\n// Bit controller section\n/////////////////////////////////////\n//\n// Translate simple commands into SCL/SDA transitions\n// Each command has 5 states, A/B/C/D/idle\n//\n// start:\tSCL\t~~~~~~~~~~\\____\n//\tSDA\t~~~~~~~~\\______\n//\t\t x | A | B | C | D | i\n//\n// repstart\tSCL\t____/~~~~\\___\n//\tSDA\t__/~~~\\______\n//\t\t x | A | B | C | D | i\n//\n// stop\tSCL\t____/~~~~~~~~\n//\tSDA\t==\\____/~~~~~\n//\t\t x | A | B | C | D | i\n//\n//- write\tSCL\t____/~~~~\\____\n//\tSDA\t==X=========X=\n//\t\t x | A | B | C | D | i\n//\n//- read\tSCL\t____/~~~~\\____\n//\tSDA\tXXXX=====XXXX\n//\t\t x | A | B | C | D | i\n//\n\n// Timing:     Normal mode      Fast mode\n///////////////////////////////////////////////////////////////////////\n// Fscl        100KHz           400KHz\n// Th_scl      4.0us            0.6us   High period of SCL\n// Tl_scl      4.7us            1.3us   Low period of SCL\n// Tsu:sta     4.7us            0.6us   setup time for a repeated start condition\n// Tsu:sto     4.0us            0.6us   setup time for a stop conditon\n// Tbuf        4.7us            1.3us   Bus free time between a stop and start condition\n//\n\n// synopsys translate_off\n//`include \"timescale.v\"\n// synopsys translate_on\n\n`include \"i2c_master_defines.v\"\n\nmodule i2c_master_bit_ctrl(\n    clk, rst, nReset, \n    clk_cnt, ena, cmd, cmd_ack, busy, al, din, dout,\n    scl_i, scl_o, scl_oen, sda_i, sda_o, sda_oen\n    );\n\n    //\n    // inputs & outputs\n    //\n    input clk;\n    input rst;\n    input nReset;\n    input ena;            // core enable signal\n\n    input [15:0] clk_cnt; // clock prescale value\n\n    input  [3:0] cmd;\n    output       cmd_ack; // command complete acknowledge\n    reg cmd_ack;\n    output       busy;    // i2c bus busy\n    reg busy;\n    output       al;      // i2c bus arbitration lost\n    reg al;\n\n    input  din;\n    output dout;\n    reg dout;\n\n    // I2C lines\n    input  scl_i;         // i2c clock line input\n    output scl_o;         // i2c clock line output\n    output scl_oen;       // i2c clock line output enable (active low)\n    reg scl_oen;\n    input  sda_i;         // i2c data line input\n    output sda_o;         // i2c data line output\n    output sda_oen;       // i2c data line output enable (active low)\n    reg sda_oen;\n\n\n    //\n    // variable declarations\n    //\n\n    reg sSCL, sSDA;             // synchronized SCL and SDA inputs\n    reg dscl_oen;               // delayed scl_oen\n    reg sda_chk;                // check SDA output (Multi-master arbitration)\n    reg clk_en;                 // clock generation signals\n    wire slave_wait;\n//    reg [15:0] cnt = clk_cnt;   // clock divider counter (simulation)\n    reg [15:0] cnt;             // clock divider counter (synthesis)\n\n    // state machine variable\n    reg [16:0] c_state; \n\n    //\n    // module body\n    //\n\n    // whenever the slave is not ready it can delay the cycle by pulling SCL low\n    // delay scl_oen\n    always @(posedge clk)\n      dscl_oen <= #1 scl_oen;\n\n    assign slave_wait = dscl_oen && !sSCL;\n\n\n    // generate clk enable signal\n    always @(posedge clk or negedge nReset)\n      if(~nReset)\n        begin\n            cnt    <= #1 16'h0;\n            clk_en <= #1 1'b1;\n        end\n      else if (rst)\n        begin\n            cnt    <= #1 16'h0;\n            clk_en <= #1 1'b1;\n        end\n      else if ( ~|cnt || ~ena)\n        if (~slave_wait)\n          begin\n              cnt    <= #1 clk_cnt;\n              clk_en <= #1 1'b1;\n          end\n        else\n          begin\n              cnt    <= #1 cnt;\n              clk_en <= #1 1'b0;\n          end\n      else\n        begin\n                cnt    <= #1 cnt - 16'h1;\n            clk_en <= #1 1'b0;\n        end\n\n\n    // generate bus status controller\n    reg dSCL, dSDA;\n    reg sta_condition;\n    reg sto_condition;\n\n    // synchronize SCL and SDA inputs\n    // reduce metastability risc\n    always @(posedge clk or negedge nReset)\n      if (~nReset)\n        begin\n            sSCL <= #1 1'b1;\n            sSDA <= #1 1'b1;\n\n            dSCL <= #1 1'b1;\n            dSDA <= #1 1'b1;\n        end\n      else if (rst)\n        begin\n            sSCL <= #1 1'b1;\n            sSDA <= #1 1'b1;\n\n            dSCL <= #1 1'b1;\n            dSDA <= #1 1'b1;\n        end\n      else\n        begin\n            sSCL <= #1 scl_i;\n            sSDA <= #1 sda_i;\n\n            dSCL <= #1 sSCL;\n            dSDA <= #1 sSDA;\n        end\n\n    // detect start condition => detect falling edge on SDA while SCL is high\n    // detect stop condition => detect rising edge on SDA while SCL is high\n    always @(posedge clk or negedge nReset)\n      if (~nReset)\n        begin\n            sta_condition <= #1 1'b0;\n            sto_condition <= #1 1'b0;\n        end\n      else if (rst)\n        begin\n            sta_condition <= #1 1'b0;\n            sto_condition <= #1 1'b0;\n        end\n      else\n        begin\n            sta_condition <= #1 ~sSDA &  dSDA & sSCL;\n            sto_condition <= #1  sSDA & ~dSDA & sSCL;\n        end\n\n    // generate i2c bus busy signal\n    always @(posedge clk or negedge nReset)\n      if(!nReset)\n        busy <= #1 1'b0;\n      else if (rst)\n        busy <= #1 1'b0;\n      else\n        busy <= #1 (sta_condition | busy) & ~sto_condition;\n\n    // generate arbitration lost signal\n    // aribitration lost when:\n    // 1) master drives SDA high, but the i2c bus is low\n    // 2) stop detected while not requested\n    reg cmd_stop;\n    always @(posedge clk or negedge nReset)\n      if (~nReset)\n        cmd_stop <= #1 1'b0;\n      else if (rst)\n        cmd_stop <= #1 1'b0;\n      else if (clk_en)\n        cmd_stop <= #1 cmd == `I2C_CMD_STOP;\n\n    always @(posedge clk or negedge nReset)\n      if (~nReset)\n        al <= #1 1'b0;\n      else if (rst)\n        al <= #1 1'b0;\n      else\n        al <= #1 (sda_chk & ~sSDA & sda_oen) | (|c_state & sto_condition & ~cmd_stop);\n\n\n    // generate dout signal (store SDA on rising edge of SCL)\n    always @(posedge clk)\n      if(sSCL & ~dSCL)\n        dout <= #1 sSDA;\n\n    // generate statemachine\n\n    // nxt_state decoder\n    parameter [16:0] idle    = 17'b0_0000_0000_0000_0000;\n    parameter [16:0] start_a = 17'b0_0000_0000_0000_0001;\n    parameter [16:0] start_b = 17'b0_0000_0000_0000_0010;\n    parameter [16:0] start_c = 17'b0_0000_0000_0000_0100;\n    parameter [16:0] start_d = 17'b0_0000_0000_0000_1000;\n    parameter [16:0] start_e = 17'b0_0000_0000_0001_0000;\n    parameter [16:0] stop_a  = 17'b0_0000_0000_0010_0000;\n    parameter [16:0] stop_b  = 17'b0_0000_0000_0100_0000;\n    parameter [16:0] stop_c  = 17'b0_0000_0000_1000_0000;\n    parameter [16:0] stop_d  = 17'b0_0000_0001_0000_0000;\n    parameter [16:0] rd_a    = 17'b0_0000_0010_0000_0000;\n    parameter [16:0] rd_b    = 17'b0_0000_0100_0000_0000;\n    parameter [16:0] rd_c    = 17'b0_0000_1000_0000_0000;\n    parameter [16:0] rd_d    = 17'b0_0001_0000_0000_0000;\n    parameter [16:0] wr_a    = 17'b0_0010_0000_0000_0000;\n    parameter [16:0] wr_b    = 17'b0_0100_0000_0000_0000;\n    parameter [16:0] wr_c    = 17'b0_1000_0000_0000_0000;\n    parameter [16:0] wr_d    = 17'b1_0000_0000_0000_0000;\n\n    always @(posedge clk or negedge nReset)\n      if (!nReset)\n        begin\n            c_state <= #1 idle;\n            cmd_ack <= #1 1'b0;\n            scl_oen <= #1 1'b1;\n            sda_oen <= #1 1'b1;\n            sda_chk <= #1 1'b0;\n        end\n      else if (rst | al)\n        begin\n            c_state <= #1 idle;\n            cmd_ack <= #1 1'b0;\n            scl_oen <= #1 1'b1;\n            sda_oen <= #1 1'b1;\n            sda_chk <= #1 1'b0;\n        end\n      else\n        begin\n            cmd_ack   <= #1 1'b0; // default no command acknowledge + assert cmd_ack only 1clk cycle\n\n            if (clk_en)\n              case (c_state) // synopsys full_case parallel_case\n                // idle state\n                idle:\n                begin\n                    case (cmd) // synopsys full_case parallel_case\n                      `I2C_CMD_START:\n                         c_state <= #1 start_a;\n\n                      `I2C_CMD_STOP:\n                         c_state <= #1 stop_a;\n\n                      `I2C_CMD_WRITE:\n                         c_state <= #1 wr_a;\n\n                      `I2C_CMD_READ:\n                         c_state <= #1 rd_a;\n\n                      default:\n                        c_state <= #1 idle;\n                    endcase\n\n                    scl_oen <= #1 scl_oen; // keep SCL in same state\n                    sda_oen <= #1 sda_oen; // keep SDA in same state\n                    sda_chk <= #1 1'b0;    // don't check SDA output\n                end\n\n                // start\n                start_a:\n                begin\n                    c_state <= #1 start_b;\n                    scl_oen <= #1 scl_oen; // keep SCL in same state\n                    sda_oen <= #1 1'b1;    // set SDA high\n                    sda_chk <= #1 1'b0;    // don't check SDA output\n                end\n\n                start_b:\n                begin\n                    c_state <= #1 start_c;\n                    scl_oen <= #1 1'b1; // set SCL high\n                    sda_oen <= #1 1'b1; // keep SDA high\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                start_c:\n                begin\n                    c_state <= #1 start_d;\n                    scl_oen <= #1 1'b1; // keep SCL high\n                    sda_oen <= #1 1'b0; // set SDA low\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                start_d:\n                begin\n                    c_state <= #1 start_e;\n                    scl_oen <= #1 1'b1; // keep SCL high\n                    sda_oen <= #1 1'b0; // keep SDA low\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                start_e:\n                begin\n                    c_state <= #1 idle;\n                    cmd_ack <= #1 1'b1;\n                    scl_oen <= #1 1'b0; // set SCL low\n                    sda_oen <= #1 1'b0; // keep SDA low\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                // stop\n                stop_a:\n                begin\n                    c_state <= #1 stop_b;\n                    scl_oen <= #1 1'b0; // keep SCL low\n                    sda_oen <= #1 1'b0; // set SDA low\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                stop_b:\n                begin\n                    c_state <= #1 stop_c;\n                    scl_oen <= #1 1'b1; // set SCL high\n                    sda_oen <= #1 1'b0; // keep SDA low\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                stop_c:\n                begin\n                    c_state <= #1 stop_d;\n                    scl_oen <= #1 1'b1; // keep SCL high\n                    sda_oen <= #1 1'b0; // keep SDA low\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                stop_d:\n                begin\n                    c_state <= #1 idle;\n                    cmd_ack <= #1 1'b1;\n                    scl_oen <= #1 1'b1; // keep SCL high\n                    sda_oen <= #1 1'b1; // set SDA high\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                // read\n                rd_a:\n                begin\n                    c_state <= #1 rd_b;\n                    scl_oen <= #1 1'b0; // keep SCL low\n                    sda_oen <= #1 1'b1; // tri-state SDA\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                rd_b:\n                begin\n                    c_state <= #1 rd_c;\n                    scl_oen <= #1 1'b1; // set SCL high\n                    sda_oen <= #1 1'b1; // keep SDA tri-stated\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                rd_c:\n                begin\n                    c_state <= #1 rd_d;\n                    scl_oen <= #1 1'b1; // keep SCL high\n                    sda_oen <= #1 1'b1; // keep SDA tri-stated\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                rd_d:\n                begin\n                    c_state <= #1 idle;\n                    cmd_ack <= #1 1'b1;\n                    scl_oen <= #1 1'b0; // set SCL low\n                    sda_oen <= #1 1'b1; // keep SDA tri-stated\n                    sda_chk <= #1 1'b0; // don't check SDA output\n                end\n\n                // write\n                wr_a:\n                begin\n                    c_state <= #1 wr_b;\n                    scl_oen <= #1 1'b0; // keep SCL low\n                    sda_oen <= #1 din;  // set SDA\n                    sda_chk <= #1 1'b0; // don't check SDA output (SCL low)\n                end\n\n                wr_b:\n                begin\n                    c_state <= #1 wr_c;\n                    scl_oen <= #1 1'b1; // set SCL high\n                    sda_oen <= #1 din;  // keep SDA\n                    sda_chk <= #1 1'b1; // check SDA output\n                end\n\n                wr_c:\n                begin\n                    c_state <= #1 wr_d;\n                    scl_oen <= #1 1'b1; // keep SCL high\n                    sda_oen <= #1 din;\n                    sda_chk <= #1 1'b1; // check SDA output\n                end\n\n                wr_d:\n                begin\n                    c_state <= #1 idle;\n                    cmd_ack <= #1 1'b1;\n                    scl_oen <= #1 1'b0; // set SCL low\n                    sda_oen <= #1 din;\n                    sda_chk <= #1 1'b0; // don't check SDA output (SCL low)\n                end\n\n              endcase\n        end\n\n\n    // assign scl and sda output (always gnd)\n    assign scl_o = 1'b0;\n    assign sda_o = 1'b0;\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n/////////////////////////////////////////////////////////////////////\n////                                                             ////\n////  WISHBONE rev.B2 compliant I2C Master byte-controller       ////\n////                                                             ////\n////                                                             ////\n////  Author: Richard Herveille                                  ////\n////          richard@asics.ws                                   ////\n////          www.asics.ws                                       ////\n////                                                             ////\n////  Downloaded from: http://www.opencores.org/projects/i2c/    ////\n////                                                             ////\n/////////////////////////////////////////////////////////////////////\n////                                                             ////\n//// Copyright (C) 2001 Richard Herveille                        ////\n////                    richard@asics.ws                         ////\n////                                                             ////\n//// This source file may be used and distributed without        ////\n//// restriction provided that this copyright statement is not   ////\n//// removed from the file and that any derivative work contains ////\n//// the original copyright notice and the associated disclaimer.////\n////                                                             ////\n////     THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY     ////\n//// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   ////\n//// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS   ////\n//// FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL THE AUTHOR      ////\n//// OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,         ////\n//// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES    ////\n//// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE   ////\n//// GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR        ////\n//// BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF  ////\n//// LIABILITY, WHETHER IN  CONTRACT, STRICT LIABILITY, OR TORT  ////\n//// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  ////\n//// OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE         ////\n//// POSSIBILITY OF SUCH DAMAGE.                                 ////\n////                                                             ////\n/////////////////////////////////////////////////////////////////////\n\n//  CVS Log\n//\n//  $Id: i2c_master_byte_ctrl.v,v 1.7 2004/02/18 11:40:46 rherveille Exp $\n//\n//  $Date: 2004/02/18 11:40:46 $\n//  $Revision: 1.7 $\n//  $Author: rherveille $\n//  $Locker:  $\n//  $State: Exp $\n//\n// Change History:\n//               $Log: i2c_master_byte_ctrl.v,v $\n//               Revision 1.7  2004/02/18 11:40:46  rherveille\n//               Fixed a potential bug in the statemachine. During a 'stop' 2 cmd_ack signals were generated. Possibly canceling a new start command.\n//\n//               Revision 1.6  2003/08/09 07:01:33  rherveille\n//               Fixed a bug in the Arbitration Lost generation caused by delay on the (external) sda line.\n//               Fixed a potential bug in the byte controller's host-acknowledge generation.\n//\n//               Revision 1.5  2002/12/26 15:02:32  rherveille\n//               Core is now a Multimaster I2C controller\n//\n//               Revision 1.4  2002/11/30 22:24:40  rherveille\n//               Cleaned up code\n//\n//               Revision 1.3  2001/11/05 11:59:25  rherveille\n//               Fixed wb_ack_o generation bug.\n//               Fixed bug in the byte_controller statemachine.\n//               Added headers.\n//\n\n// synopsys translate_off\n//`include \"timescale.v\"\n// synopsys translate_on\n\n`include \"i2c_master_defines.v\"\n\nmodule i2c_master_byte_ctrl (\n    clk, rst, nReset, ena, clk_cnt, start, stop, read, write, ack_in, din,\n    cmd_ack, ack_out, dout, i2c_busy, i2c_al, scl_i, scl_o, scl_oen, sda_i, sda_o, sda_oen );\n\n    //\n    // inputs & outputs\n    //\n    input clk;     // master clock\n    input rst;     // synchronous active high reset\n    input nReset;  // asynchronous active low reset\n    input ena;     // core enable signal\n\n    input [15:0] clk_cnt; // 4x SCL\n\n    // control inputs\n    input       start;\n    input       stop;\n    input       read;\n    input       write;\n    input       ack_in;\n    input [7:0] din;\n\n    // status outputs\n    output       cmd_ack;\n    reg cmd_ack;\n    output       ack_out;\n    reg ack_out;\n    output       i2c_busy;\n    output       i2c_al;\n    output [7:0] dout;\n\n    // I2C signals\n    input  scl_i;\n    output scl_o;\n    output scl_oen;\n    input  sda_i;\n    output sda_o;\n    output sda_oen;\n\n\n    //\n    // Variable declarations\n    //\n\n    // statemachine\n    parameter [4:0] ST_IDLE  = 5'b0_0000;\n    parameter [4:0] ST_START = 5'b0_0001;\n    parameter [4:0] ST_READ  = 5'b0_0010;\n    parameter [4:0] ST_WRITE = 5'b0_0100;\n    parameter [4:0] ST_ACK   = 5'b0_1000;\n    parameter [4:0] ST_STOP  = 5'b1_0000;\n\n    // signals for bit_controller\n    reg  [3:0] core_cmd;\n    reg        core_txd;\n    wire       core_ack, core_rxd;\n\n    // signals for shift register\n    reg [7:0] sr; //8bit shift register\n    reg       shift, ld;\n\n    // signals for state machine\n    wire       go;\n    reg  [2:0] dcnt;\n    wire       cnt_done;\n\n    //\n    // Module body\n    //\n\n    // hookup bit_controller\n    i2c_master_bit_ctrl bit_controller (\n        .clk     ( clk      ),\n        .rst     ( rst      ),\n        .nReset  ( nReset   ),\n        .ena     ( ena      ),\n        .clk_cnt ( clk_cnt  ),\n        .cmd     ( core_cmd ),\n        .cmd_ack ( core_ack ),\n        .busy    ( i2c_busy ),\n        .al      ( i2c_al   ),\n        .din     ( core_txd ),\n        .dout    ( core_rxd ),\n        .scl_i   ( scl_i    ),\n        .scl_o   ( scl_o    ),\n        .scl_oen ( scl_oen  ),\n        .sda_i   ( sda_i    ),\n        .sda_o   ( sda_o    ),\n        .sda_oen ( sda_oen  )\n    );\n\n    // generate go-signal\n    assign go = (read | write | stop) & ~cmd_ack;\n\n    // assign dout output to shift-register\n    assign dout = sr;\n\n    // generate shift register\n    always @(posedge clk or negedge nReset)\n      if (!nReset)\n        sr <= #1 8'h0;\n      else if (rst)\n        sr <= #1 8'h0;\n      else if (ld)\n        sr <= #1 din;\n      else if (shift)\n        sr <= #1 {sr[6:0], core_rxd};\n\n    // generate counter\n    always @(posedge clk or negedge nReset)\n      if (!nReset)\n        dcnt <= #1 3'h0;\n      else if (rst)\n        dcnt <= #1 3'h0;\n      else if (ld)\n        dcnt <= #1 3'h7;\n      else if (shift)\n        dcnt <= #1 dcnt - 3'h1;\n\n    assign cnt_done = ~(|dcnt);\n\n    //\n    // state machine\n    //\n    reg [4:0] c_state; // synopsis enum_state\n\n    always @(posedge clk or negedge nReset)\n      if (!nReset)\n        begin\n            core_cmd <= #1 `I2C_CMD_NOP;\n            core_txd <= #1 1'b0;\n            shift    <= #1 1'b0;\n            ld       <= #1 1'b0;\n            cmd_ack  <= #1 1'b0;\n            c_state  <= #1 ST_IDLE;\n            ack_out  <= #1 1'b0;\n        end\n      else if (rst | i2c_al)\n       begin\n           core_cmd <= #1 `I2C_CMD_NOP;\n           core_txd <= #1 1'b0;\n           shift    <= #1 1'b0;\n           ld       <= #1 1'b0;\n           cmd_ack  <= #1 1'b0;\n           c_state  <= #1 ST_IDLE;\n           ack_out  <= #1 1'b0;\n       end\n    else\n      begin\n          // initially reset all signals\n          core_txd <= #1 sr[7];\n          shift    <= #1 1'b0;\n          ld       <= #1 1'b0;\n          cmd_ack  <= #1 1'b0;\n\n          case (c_state) // synopsys full_case parallel_case\n            ST_IDLE:\n              if (go)\n                begin\n                    if (start)\n                      begin\n                          c_state  <= #1 ST_START;\n                          core_cmd <= #1 `I2C_CMD_START;\n                      end\n                    else if (read)\n                      begin\n                          c_state  <= #1 ST_READ;\n                          core_cmd <= #1 `I2C_CMD_READ;\n                      end\n                    else if (write)\n                      begin\n                          c_state  <= #1 ST_WRITE;\n                          core_cmd <= #1 `I2C_CMD_WRITE;\n                      end\n                    else // stop\n                      begin\n                          c_state  <= #1 ST_STOP;\n                          core_cmd <= #1 `I2C_CMD_STOP;\n                      end\n\n                    ld <= #1 1'b1;\n                end\n\n            ST_START:\n              if (core_ack)\n                begin\n                    if (read)\n                      begin\n                          c_state  <= #1 ST_READ;\n                          core_cmd <= #1 `I2C_CMD_READ;\n                      end\n                    else\n                      begin\n                          c_state  <= #1 ST_WRITE;\n                          core_cmd <= #1 `I2C_CMD_WRITE;\n                      end\n\n                    ld <= #1 1'b1;\n                end\n\n            ST_WRITE:\n              if (core_ack)\n                if (cnt_done)\n                  begin\n                      c_state  <= #1 ST_ACK;\n                      core_cmd <= #1 `I2C_CMD_READ;\n                  end\n                else\n                  begin\n                      c_state  <= #1 ST_WRITE;       // stay in same state\n                      core_cmd <= #1 `I2C_CMD_WRITE; // write next bit\n                      shift    <= #1 1'b1;\n                  end\n\n            ST_READ:\n              if (core_ack)\n                begin\n                    if (cnt_done)\n                      begin\n                          c_state  <= #1 ST_ACK;\n                          core_cmd <= #1 `I2C_CMD_WRITE;\n                      end\n                    else\n                      begin\n                          c_state  <= #1 ST_READ;       // stay in same state\n                          core_cmd <= #1 `I2C_CMD_READ; // read next bit\n                      end\n\n                    shift    <= #1 1'b1;\n                    core_txd <= #1 ack_in;\n                end\n\n            ST_ACK:\n              if (core_ack)\n                begin\n                   if (stop)\n                     begin\n                         c_state  <= #1 ST_STOP;\n                         core_cmd <= #1 `I2C_CMD_STOP;\n                     end\n                   else\n                     begin\n                         c_state  <= #1 ST_IDLE;\n                         core_cmd <= #1 `I2C_CMD_NOP;\n\n                         // generate command acknowledge signal\n                         cmd_ack  <= #1 1'b1;\n                     end\n\n                     // assign ack_out output to bit_controller_rxd (contains last received bit)\n                     ack_out <= #1 core_rxd;\n\n                     core_txd <= #1 1'b1;\n                 end\n               else\n                 core_txd <= #1 ack_in;\n\n            ST_STOP:\n              if (core_ack)\n                begin\n                    c_state  <= #1 ST_IDLE;\n                    core_cmd <= #1 `I2C_CMD_NOP;\n\n                    // generate command acknowledge signal\n                    cmd_ack  <= #1 1'b1;\n                end\n\n          endcase\n      end\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n/////////////////////////////////////////////////////////////////////\n////                                                             ////\n////  WISHBONE rev.B2 compliant I2C Master controller defines    ////\n////                                                             ////\n////                                                             ////\n////  Author: Richard Herveille                                  ////\n////          richard@asics.ws                                   ////\n////          www.asics.ws                                       ////\n////                                                             ////\n////  Downloaded from: http://www.opencores.org/projects/i2c/    ////\n////                                                             ////\n/////////////////////////////////////////////////////////////////////\n////                                                             ////\n//// Copyright (C) 2001 Richard Herveille                        ////\n////                    richard@asics.ws                         ////\n////                                                             ////\n//// This source file may be used and distributed without        ////\n//// restriction provided that this copyright statement is not   ////\n//// removed from the file and that any derivative work contains ////\n//// the original copyright notice and the associated disclaimer.////\n////                                                             ////\n////     THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY     ////\n//// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   ////\n//// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS   ////\n//// FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL THE AUTHOR      ////\n//// OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,         ////\n//// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES    ////\n//// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE   ////\n//// GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR        ////\n//// BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF  ////\n//// LIABILITY, WHETHER IN  CONTRACT, STRICT LIABILITY, OR TORT  ////\n//// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  ////\n//// OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE         ////\n//// POSSIBILITY OF SUCH DAMAGE.                                 ////\n////                                                             ////\n/////////////////////////////////////////////////////////////////////\n\n//  CVS Log\n//\n//  $Id: i2c_master_defines.v,v 1.3 2001/11/05 11:59:25 rherveille Exp $\n//\n//  $Date: 2001/11/05 11:59:25 $\n//  $Revision: 1.3 $\n//  $Author: rherveille $\n//  $Locker:  $\n//  $State: Exp $\n//\n// Change History:\n//               $Log: i2c_master_defines.v,v $\n//               Revision 1.3  2001/11/05 11:59:25  rherveille\n//               Fixed wb_ack_o generation bug.\n//               Fixed bug in the byte_controller statemachine.\n//               Added headers.\n//\n\n\n// I2C registers wishbone addresses\n\n// bitcontroller states\n`define I2C_CMD_NOP   4'b0000\n`define I2C_CMD_START 4'b0001\n`define I2C_CMD_STOP  4'b0010\n`define I2C_CMD_WRITE 4'b0100\n`define I2C_CMD_READ  4'b1000"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n/////////////////////////////////////////////////////////////////////\n////                                                             ////\n////  WISHBONE revB.2 compliant I2C Master controller Top-level  ////\n////                                                             ////\n////                                                             ////\n////  Author: Richard Herveille                                  ////\n////          richard@asics.ws                                   ////\n////          www.asics.ws                                       ////\n////                                                             ////\n////  Downloaded from: http://www.opencores.org/projects/i2c/    ////\n////                                                             ////\n/////////////////////////////////////////////////////////////////////\n////                                                             ////\n//// Copyright (C) 2001 Richard Herveille                        ////\n////                    richard@asics.ws                         ////\n////                                                             ////\n//// This source file may be used and distributed without        ////\n//// restriction provided that this copyright statement is not   ////\n//// removed from the file and that any derivative work contains ////\n//// the original copyright notice and the associated disclaimer.////\n////                                                             ////\n////     THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY     ////\n//// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   ////\n//// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS   ////\n//// FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL THE AUTHOR      ////\n//// OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,         ////\n//// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES    ////\n//// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE   ////\n//// GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR        ////\n//// BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF  ////\n//// LIABILITY, WHETHER IN  CONTRACT, STRICT LIABILITY, OR TORT  ////\n//// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  ////\n//// OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE         ////\n//// POSSIBILITY OF SUCH DAMAGE.                                 ////\n////                                                             ////\n/////////////////////////////////////////////////////////////////////\n\n//  CVS Log\n//\n//  $Id: i2c_master_top.v,v 1.11 2005/02/27 09:26:24 rherveille Exp $\n//\n//  $Date: 2005/02/27 09:26:24 $\n//  $Revision: 1.11 $\n//  $Author: rherveille $\n//  $Locker:  $\n//  $State: Exp $\n//\n// Change History:\n//               $Log: i2c_master_top.v,v $\n//               Revision 1.11  2005/02/27 09:26:24  rherveille\n//               Fixed register overwrite issue.\n//               Removed full_case pragma, replaced it by a default statement.\n//\n//               Revision 1.10  2003/09/01 10:34:38  rherveille\n//               Fix a blocking vs. non-blocking error in the wb_dat output mux.\n//\n//               Revision 1.9  2003/01/09 16:44:45  rherveille\n//               Fixed a bug in the Command Register declaration.\n//\n//               Revision 1.8  2002/12/26 16:05:12  rherveille\n//               Small code simplifications\n//\n//               Revision 1.7  2002/12/26 15:02:32  rherveille\n//               Core is now a Multimaster I2C controller\n//\n//               Revision 1.6  2002/11/30 22:24:40  rherveille\n//               Cleaned up code\n//\n//               Revision 1.5  2001/11/10 10:52:55  rherveille\n//               Changed PRER reset value from 0x0000 to 0xffff, conform specs.\n//\n\n// synopsys translate_off\n//`include \"timescale.v\"\n// synopsys translate_on\n\n`include \"i2c_master_defines.v\"\n\nmodule i2c_master_top(\n    wb_clk_i, wb_rst_i, arst_i, wb_adr_i, wb_dat_i, wb_dat_o,\n    wb_we_i, wb_stb_i, wb_cyc_i, wb_ack_o, wb_inta_o,\n    scl_pad_i, scl_pad_o, scl_padoen_o, sda_pad_i, sda_pad_o, sda_padoen_o );\n\n    // parameters\n    parameter ARST_LVL = 1'b0; // asynchronous reset level\n\n    //\n    // inputs & outputs\n    //\n\n    // wishbone signals\n    input        wb_clk_i;     // master clock input\n    input        wb_rst_i;     // synchronous active high reset\n    input        arst_i;       // asynchronous reset\n    input  [2:0] wb_adr_i;     // lower address bits\n    input  [7:0] wb_dat_i;     // databus input\n    output [7:0] wb_dat_o;     // databus output\n    input        wb_we_i;      // write enable input\n    input        wb_stb_i;     // stobe/core select signal\n    input        wb_cyc_i;     // valid bus cycle input\n    output       wb_ack_o;     // bus cycle acknowledge output\n    output       wb_inta_o;    // interrupt request signal output\n\n    reg [7:0] wb_dat_o;\n    reg wb_ack_o;\n    reg wb_inta_o;\n\n    // I2C signals\n    // i2c clock line\n    input  scl_pad_i;       // SCL-line input\n    output scl_pad_o;       // SCL-line output (always 1'b0)\n    output scl_padoen_o;    // SCL-line output enable (active low)\n\n    // i2c data line\n    input  sda_pad_i;       // SDA-line input\n    output sda_pad_o;       // SDA-line output (always 1'b0)\n    output sda_padoen_o;    // SDA-line output enable (active low)\n\n\n    //\n    // variable declarations\n    //\n\n    // registers\n    reg  [15:0] prer; // clock prescale register\n    reg  [ 7:0] ctr;  // control register\n    reg  [ 7:0] txr;  // transmit register\n    wire [ 7:0] rxr;  // receive register\n    reg  [ 7:0] cr;   // command register\n    wire [ 7:0] sr;   // status register\n\n    // done signal: command completed, clear command register\n    wire done;\n\n    // core enable signal\n    wire core_en;\n    wire ien;\n\n    // status register signals\n    wire irxack;\n    reg  rxack;       // received aknowledge from slave\n    reg  tip;         // transfer in progress\n    reg  irq_flag;    // interrupt pending flag\n    wire i2c_busy;    // bus busy (start signal detected)\n    wire i2c_al;      // i2c bus arbitration lost\n    reg  al;          // status register arbitration lost bit\n\n    //\n    // module body\n    //\n\n    // generate internal reset\n    wire rst_i = arst_i ^ ARST_LVL;\n\n    // generate wishbone signals\n    wire wb_wacc = wb_cyc_i & wb_stb_i & wb_we_i;\n\n    // generate acknowledge output signal\n    always @(posedge wb_clk_i or negedge rst_i)\n    //always @(posedge wb_clk_i)//Bob: Here the ack is X by default, so add the rst here\n      if (!rst_i)\n        wb_ack_o <= #1 1'b0;\n      else\n        wb_ack_o <= #1 wb_cyc_i & wb_stb_i & ~wb_ack_o; // because timing is always honored\n\n    // assign DAT_O\n    always @(posedge wb_clk_i)\n    begin\n      case (wb_adr_i) // synopsis parallel_case\n        3'b000: wb_dat_o <= #1 prer[ 7:0];\n        3'b001: wb_dat_o <= #1 prer[15:8];\n        3'b010: wb_dat_o <= #1 ctr;\n        3'b011: wb_dat_o <= #1 rxr; // write is transmit register (txr)\n        3'b100: wb_dat_o <= #1 sr;  // write is command register (cr)\n        3'b101: wb_dat_o <= #1 txr;\n        3'b110: wb_dat_o <= #1 cr;\n        3'b111: wb_dat_o <= #1 0;   // reserved\n      endcase\n    end\n\n    // generate registers\n    always @(posedge wb_clk_i or negedge rst_i)\n      if (!rst_i)\n        begin\n            prer <= #1 16'hffff;\n            ctr  <= #1  8'h0;\n            txr  <= #1  8'h0;\n        end\n      else if (wb_rst_i)\n        begin\n            prer <= #1 16'hffff;\n            ctr  <= #1  8'h0;\n            txr  <= #1  8'h0;\n        end\n      else\n        if (wb_wacc)\n          case (wb_adr_i) // synopsis parallel_case\n             3'b000 : prer [ 7:0] <= #1 wb_dat_i;\n             3'b001 : prer [15:8] <= #1 wb_dat_i;\n             3'b010 : ctr         <= #1 wb_dat_i;\n             3'b011 : txr         <= #1 wb_dat_i;\n             //default: ; //Bob: here have a lint warning, so commented it out\n          endcase\n\n    // generate command register (special case)\n    always @(posedge wb_clk_i or negedge rst_i)\n      if (~rst_i)\n        cr <= #1 8'h0;\n      else if (wb_rst_i)\n        cr <= #1 8'h0;\n      else if (wb_wacc)\n        begin\n            if (core_en & (wb_adr_i == 3'b100) )\n              cr <= #1 wb_dat_i;\n        end\n      else\n        begin\n            if (done | i2c_al)\n              cr[7:4] <= #1 4'h0;           // clear command bits when done\n                                            // or when aribitration lost\n            cr[2:1] <= #1 2'b0;             // reserved bits\n            cr[0]   <= #1 2'b0;             // clear IRQ_ACK bit\n        end\n\n\n    // decode command register\n    wire sta  = cr[7];\n    wire sto  = cr[6];\n    wire rd   = cr[5];\n    wire wr   = cr[4];\n    wire ack  = cr[3];\n    wire iack = cr[0];\n\n    // decode control register\n    assign core_en = ctr[7];\n    assign ien = ctr[6];\n\n    // hookup byte controller block\n    i2c_master_byte_ctrl byte_controller (\n        .clk      ( wb_clk_i     ),\n        .rst      ( wb_rst_i     ),\n        .nReset   ( rst_i        ),\n        .ena      ( core_en      ),\n        .clk_cnt  ( prer         ),\n        .start    ( sta          ),\n        .stop     ( sto          ),\n        .read     ( rd           ),\n        .write    ( wr           ),\n        .ack_in   ( ack          ),\n        .din      ( txr          ),\n        .cmd_ack  ( done         ),\n        .ack_out  ( irxack       ),\n        .dout     ( rxr          ),\n        .i2c_busy ( i2c_busy     ),\n        .i2c_al   ( i2c_al       ),\n        .scl_i    ( scl_pad_i    ),\n        .scl_o    ( scl_pad_o    ),\n        .scl_oen  ( scl_padoen_o ),\n        .sda_i    ( sda_pad_i    ),\n        .sda_o    ( sda_pad_o    ),\n        .sda_oen  ( sda_padoen_o )\n    );\n\n    // status register block + interrupt request signal\n    always @(posedge wb_clk_i or negedge rst_i)\n      if (!rst_i)\n        begin\n            al       <= #1 1'b0;\n            rxack    <= #1 1'b0;\n            tip      <= #1 1'b0;\n            irq_flag <= #1 1'b0;\n        end\n      else if (wb_rst_i)\n        begin\n            al       <= #1 1'b0;\n            rxack    <= #1 1'b0;\n            tip      <= #1 1'b0;\n            irq_flag <= #1 1'b0;\n        end\n      else\n        begin\n            al       <= #1 i2c_al | (al & ~sta);\n            rxack    <= #1 irxack;\n            tip      <= #1 (rd | wr);\n            irq_flag <= #1 (done | i2c_al | irq_flag) & ~iack; // interrupt request flag is always generated\n        end\n\n    // generate interrupt request signals\n    always @(posedge wb_clk_i or negedge rst_i)\n      if (!rst_i)\n        wb_inta_o <= #1 1'b0;\n      else if (wb_rst_i)\n        wb_inta_o <= #1 1'b0;\n      else\n        wb_inta_o <= #1 irq_flag && ien; // interrupt signal is only generated when IEN (interrupt enable bit is set)\n\n    // assign status register bits\n    assign sr[7]   = rxack;\n    assign sr[6]   = i2c_busy;\n    assign sr[5]   = al;\n    assign sr[4:2] = 3'h0; // reserved\n    assign sr[1]   = tip;\n    assign sr[0]   = irq_flag;\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_aon(\n  input   clock,\n  input   reset,\n  input   erst,\n  input   test_mode,\n  output  io_interrupts_0_0,\n  output  io_interrupts_0_1,\n  output  io_in_0_a_ready,\n  input   io_in_0_a_valid,\n  input  [2:0] io_in_0_a_bits_opcode,\n  input  [2:0] io_in_0_a_bits_param,\n  input  [2:0] io_in_0_a_bits_size,\n  input  [4:0] io_in_0_a_bits_source,\n  input  [28:0] io_in_0_a_bits_address,\n  input  [3:0] io_in_0_a_bits_mask,\n  input  [31:0] io_in_0_a_bits_data,\n  input   io_in_0_b_ready,\n  output  io_in_0_b_valid,\n  output [2:0] io_in_0_b_bits_opcode,\n  output [1:0] io_in_0_b_bits_param,\n  output [2:0] io_in_0_b_bits_size,\n  output [4:0] io_in_0_b_bits_source,\n  output [28:0] io_in_0_b_bits_address,\n  output [3:0] io_in_0_b_bits_mask,\n  output [31:0] io_in_0_b_bits_data,\n  output  io_in_0_c_ready,\n  input   io_in_0_c_valid,\n  input  [2:0] io_in_0_c_bits_opcode,\n  input  [2:0] io_in_0_c_bits_param,\n  input  [2:0] io_in_0_c_bits_size,\n  input  [4:0] io_in_0_c_bits_source,\n  input  [28:0] io_in_0_c_bits_address,\n  input  [31:0] io_in_0_c_bits_data,\n  input   io_in_0_c_bits_error,\n  input   io_in_0_d_ready,\n  output  io_in_0_d_valid,\n  output [2:0] io_in_0_d_bits_opcode,\n  output [1:0] io_in_0_d_bits_param,\n  output [2:0] io_in_0_d_bits_size,\n  output [4:0] io_in_0_d_bits_source,\n  output  io_in_0_d_bits_sink,\n  output [1:0] io_in_0_d_bits_addr_lo,\n  output [31:0] io_in_0_d_bits_data,\n  output  io_in_0_d_bits_error,\n  output  io_in_0_e_ready,\n  input   io_in_0_e_valid,\n  input   io_in_0_e_bits_sink,\n  output  io_moff_hfclkrst,\n  output  io_moff_corerst,\n  output  io_wdog_rst,\n  output  io_lfclk,\n  output  io_pmu_vddpaden,\n  output  io_pmu_padrst,\n  input   io_pmu_dwakeup,\n  input   io_lfextclk,\n  input   io_resetCauses_wdogrst,\n  input   io_resetCauses_erst,\n  input   io_resetCauses_porrst\n);\n  wire  rtc_clock;\n  wire  rtc_reset;\n  wire  rtc_io_regs_cfg_write_valid;\n  wire [31:0] rtc_io_regs_cfg_write_bits;\n  wire [31:0] rtc_io_regs_cfg_read;\n  wire  rtc_io_regs_countLo_write_valid;\n  wire [31:0] rtc_io_regs_countLo_write_bits;\n  wire [31:0] rtc_io_regs_countLo_read;\n  wire  rtc_io_regs_countHi_write_valid;\n  wire [31:0] rtc_io_regs_countHi_write_bits;\n  wire [31:0] rtc_io_regs_countHi_read;\n  wire  rtc_io_regs_s_write_valid;\n  wire [31:0] rtc_io_regs_s_write_bits;\n  wire [31:0] rtc_io_regs_s_read;\n  wire  rtc_io_regs_cmp_0_write_valid;\n  wire [31:0] rtc_io_regs_cmp_0_write_bits;\n  wire [31:0] rtc_io_regs_cmp_0_read;\n  wire  rtc_io_regs_feed_write_valid;\n  wire [31:0] rtc_io_regs_feed_write_bits;\n  wire [31:0] rtc_io_regs_feed_read;\n  wire  rtc_io_regs_key_write_valid;\n  wire [31:0] rtc_io_regs_key_write_bits;\n  wire [31:0] rtc_io_regs_key_read;\n  wire  rtc_io_ip_0;\n  wire  pmu_clock;\n  wire  pmu_reset;\n  wire  pmu_io_wakeup_awakeup;\n  wire  pmu_io_wakeup_dwakeup;\n  wire  pmu_io_wakeup_rtc;\n  wire  pmu_io_wakeup_reset;\n  wire  pmu_io_control_hfclkrst;\n  wire  pmu_io_control_corerst;\n  wire  pmu_io_control_reserved1;\n  wire  pmu_io_control_vddpaden;\n  wire  pmu_io_control_reserved0;\n  wire  pmu_io_regs_ie_write_valid;\n  wire [3:0] pmu_io_regs_ie_write_bits;\n  wire [3:0] pmu_io_regs_ie_read;\n  wire  pmu_io_regs_cause_write_valid;\n  wire [31:0] pmu_io_regs_cause_write_bits;\n  wire [31:0] pmu_io_regs_cause_read;\n  wire  pmu_io_regs_sleep_write_valid;\n  wire [31:0] pmu_io_regs_sleep_write_bits;\n  wire [31:0] pmu_io_regs_sleep_read;\n  wire  pmu_io_regs_key_write_valid;\n  wire [31:0] pmu_io_regs_key_write_bits;\n  wire [31:0] pmu_io_regs_key_read;\n  wire  pmu_io_regs_wakeupProgram_0_write_valid;\n  wire [31:0] pmu_io_regs_wakeupProgram_0_write_bits;\n  wire [31:0] pmu_io_regs_wakeupProgram_0_read;\n  wire  pmu_io_regs_wakeupProgram_1_write_valid;\n  wire [31:0] pmu_io_regs_wakeupProgram_1_write_bits;\n  wire [31:0] pmu_io_regs_wakeupProgram_1_read;\n  wire  pmu_io_regs_wakeupProgram_2_write_valid;\n  wire [31:0] pmu_io_regs_wakeupProgram_2_write_bits;\n  wire [31:0] pmu_io_regs_wakeupProgram_2_read;\n  wire  pmu_io_regs_wakeupProgram_3_write_valid;\n  wire [31:0] pmu_io_regs_wakeupProgram_3_write_bits;\n  wire [31:0] pmu_io_regs_wakeupProgram_3_read;\n  wire  pmu_io_regs_wakeupProgram_4_write_valid;\n  wire [31:0] pmu_io_regs_wakeupProgram_4_write_bits;\n  wire [31:0] pmu_io_regs_wakeupProgram_4_read;\n  wire  pmu_io_regs_wakeupProgram_5_write_valid;\n  wire [31:0] pmu_io_regs_wakeupProgram_5_write_bits;\n  wire [31:0] pmu_io_regs_wakeupProgram_5_read;\n  wire  pmu_io_regs_wakeupProgram_6_write_valid;\n  wire [31:0] pmu_io_regs_wakeupProgram_6_write_bits;\n  wire [31:0] pmu_io_regs_wakeupProgram_6_read;\n  wire  pmu_io_regs_wakeupProgram_7_write_valid;\n  wire [31:0] pmu_io_regs_wakeupProgram_7_write_bits;\n  wire [31:0] pmu_io_regs_wakeupProgram_7_read;\n  wire  pmu_io_regs_sleepProgram_0_write_valid;\n  wire [31:0] pmu_io_regs_sleepProgram_0_write_bits;\n  wire [31:0] pmu_io_regs_sleepProgram_0_read;\n  wire  pmu_io_regs_sleepProgram_1_write_valid;\n  wire [31:0] pmu_io_regs_sleepProgram_1_write_bits;\n  wire [31:0] pmu_io_regs_sleepProgram_1_read;\n  wire  pmu_io_regs_sleepProgram_2_write_valid;\n  wire [31:0] pmu_io_regs_sleepProgram_2_write_bits;\n  wire [31:0] pmu_io_regs_sleepProgram_2_read;\n  wire  pmu_io_regs_sleepProgram_3_write_valid;\n  wire [31:0] pmu_io_regs_sleepProgram_3_write_bits;\n  wire [31:0] pmu_io_regs_sleepProgram_3_read;\n  wire  pmu_io_regs_sleepProgram_4_write_valid;\n  wire [31:0] pmu_io_regs_sleepProgram_4_write_bits;\n  wire [31:0] pmu_io_regs_sleepProgram_4_read;\n  wire  pmu_io_regs_sleepProgram_5_write_valid;\n  wire [31:0] pmu_io_regs_sleepProgram_5_write_bits;\n  wire [31:0] pmu_io_regs_sleepProgram_5_read;\n  wire  pmu_io_regs_sleepProgram_6_write_valid;\n  wire [31:0] pmu_io_regs_sleepProgram_6_write_bits;\n  wire [31:0] pmu_io_regs_sleepProgram_6_read;\n  wire  pmu_io_regs_sleepProgram_7_write_valid;\n  wire [31:0] pmu_io_regs_sleepProgram_7_write_bits;\n  wire [31:0] pmu_io_regs_sleepProgram_7_read;\n  wire  pmu_io_resetCauses_wdogrst;\n  wire  pmu_io_resetCauses_erst;\n  wire  pmu_io_resetCauses_porrst;\n  wire  wdog_clock;\n  wire  wdog_reset;\n  wire  wdog_io_regs_cfg_write_valid;\n  wire [31:0] wdog_io_regs_cfg_write_bits;\n  wire [31:0] wdog_io_regs_cfg_read;\n  wire  wdog_io_regs_countLo_write_valid;\n  wire [31:0] wdog_io_regs_countLo_write_bits;\n  wire [31:0] wdog_io_regs_countLo_read;\n  wire  wdog_io_regs_countHi_write_valid;\n  wire [31:0] wdog_io_regs_countHi_write_bits;\n  wire [31:0] wdog_io_regs_countHi_read;\n  wire  wdog_io_regs_s_write_valid;\n  wire [15:0] wdog_io_regs_s_write_bits;\n  wire [15:0] wdog_io_regs_s_read;\n  wire  wdog_io_regs_cmp_0_write_valid;\n  wire [15:0] wdog_io_regs_cmp_0_write_bits;\n  wire [15:0] wdog_io_regs_cmp_0_read;\n  wire  wdog_io_regs_feed_write_valid;\n  wire [31:0] wdog_io_regs_feed_write_bits;\n  wire [31:0] wdog_io_regs_feed_read;\n  wire  wdog_io_regs_key_write_valid;\n  wire [31:0] wdog_io_regs_key_write_bits;\n  wire [31:0] wdog_io_regs_key_read;\n  wire  wdog_io_ip_0;\n  wire  wdog_io_corerst;\n  wire  wdog_io_rst;\n  reg [31:0] backupRegs_0;\n  reg [31:0] GEN_792;\n  reg [31:0] backupRegs_1;\n  reg [31:0] GEN_793;\n  reg [31:0] backupRegs_2;\n  reg [31:0] GEN_794;\n  reg [31:0] backupRegs_3;\n  reg [31:0] GEN_795;\n  reg [31:0] backupRegs_4;\n  reg [31:0] GEN_796;\n  reg [31:0] backupRegs_5;\n  reg [31:0] GEN_797;\n  reg [31:0] backupRegs_6;\n  reg [31:0] GEN_798;\n  reg [31:0] backupRegs_7;\n  reg [31:0] GEN_799;\n  reg [31:0] backupRegs_8;\n  reg [31:0] GEN_800;\n  reg [31:0] backupRegs_9;\n  reg [31:0] GEN_801;\n  reg [31:0] backupRegs_10;\n  reg [31:0] GEN_802;\n  reg [31:0] backupRegs_11;\n  reg [31:0] GEN_803;\n  reg [31:0] backupRegs_12;\n  reg [31:0] GEN_804;\n  reg [31:0] backupRegs_13;\n  reg [31:0] GEN_805;\n  reg [31:0] backupRegs_14;\n  reg [31:0] GEN_806;\n  reg [31:0] backupRegs_15;\n  reg [31:0] GEN_807;\n  wire  T_953_ready;\n  wire  T_953_valid;\n  wire  T_953_bits_read;\n  wire [9:0] T_953_bits_index;\n  wire [31:0] T_953_bits_data;\n  wire [3:0] T_953_bits_mask;\n  wire [9:0] T_953_bits_extra;\n  wire  T_970;\n  wire [26:0] T_971;\n  wire [1:0] T_972;\n  wire [6:0] T_973;\n  wire [9:0] T_974;\n  wire  T_992_ready;\n  wire  T_992_valid;\n  wire  T_992_bits_read;\n  wire [31:0] T_992_bits_data;\n  wire [9:0] T_992_bits_extra;\n  wire  T_1028_ready;\n  wire  T_1028_valid;\n  wire  T_1028_bits_read;\n  wire [9:0] T_1028_bits_index;\n  wire [31:0] T_1028_bits_data;\n  wire [3:0] T_1028_bits_mask;\n  wire [9:0] T_1028_bits_extra;\n  wire  Queue_1_clock;\n  wire  Queue_1_reset;\n  wire  Queue_1_io_enq_ready;\n  wire  Queue_1_io_enq_valid;\n  wire  Queue_1_io_enq_bits_read;\n  wire [9:0] Queue_1_io_enq_bits_index;\n  wire [31:0] Queue_1_io_enq_bits_data;\n  wire [3:0] Queue_1_io_enq_bits_mask;\n  wire [9:0] Queue_1_io_enq_bits_extra;\n  wire  Queue_1_io_deq_ready;\n  wire  Queue_1_io_deq_valid;\n  wire  Queue_1_io_deq_bits_read;\n  wire [9:0] Queue_1_io_deq_bits_index;\n  wire [31:0] Queue_1_io_deq_bits_data;\n  wire [3:0] Queue_1_io_deq_bits_mask;\n  wire [9:0] Queue_1_io_deq_bits_extra;\n  wire  Queue_1_io_count;\n  wire [9:0] T_1310;\n  wire [9:0] T_1311;\n  wire  T_1313;\n  wire [9:0] T_1314;\n  wire [9:0] T_1315;\n  wire  T_1317;\n  wire [9:0] T_1320;\n  wire  T_1322;\n  wire [9:0] T_1323;\n  wire [9:0] T_1324;\n  wire  T_1326;\n  wire [9:0] T_1328;\n  wire [9:0] T_1329;\n  wire  T_1331;\n  wire [9:0] T_1332;\n  wire [9:0] T_1333;\n  wire  T_1335;\n  wire [9:0] T_1337;\n  wire [9:0] T_1338;\n  wire  T_1340;\n  wire [9:0] T_1341;\n  wire [9:0] T_1342;\n  wire  T_1344;\n  wire [9:0] T_1346;\n  wire [9:0] T_1347;\n  wire  T_1349;\n  wire [9:0] T_1350;\n  wire [9:0] T_1351;\n  wire  T_1353;\n  wire [9:0] T_1355;\n  wire [9:0] T_1356;\n  wire  T_1358;\n  wire [9:0] T_1359;\n  wire [9:0] T_1360;\n  wire  T_1362;\n  wire [9:0] T_1364;\n  wire [9:0] T_1365;\n  wire  T_1367;\n  wire [9:0] T_1368;\n  wire [9:0] T_1369;\n  wire  T_1371;\n  wire [9:0] T_1373;\n  wire [9:0] T_1374;\n  wire  T_1376;\n  wire [9:0] T_1377;\n  wire [9:0] T_1378;\n  wire  T_1380;\n  wire [9:0] T_1382;\n  wire [9:0] T_1383;\n  wire  T_1385;\n  wire [9:0] T_1386;\n  wire [9:0] T_1387;\n  wire  T_1389;\n  wire [9:0] T_1391;\n  wire [9:0] T_1392;\n  wire  T_1394;\n  wire [9:0] T_1395;\n  wire [9:0] T_1396;\n  wire  T_1398;\n  wire [9:0] T_1400;\n  wire [9:0] T_1401;\n  wire  T_1403;\n  wire [9:0] T_1404;\n  wire [9:0] T_1405;\n  wire  T_1407;\n  wire [9:0] T_1409;\n  wire [9:0] T_1410;\n  wire  T_1412;\n  wire [9:0] T_1413;\n  wire [9:0] T_1414;\n  wire  T_1416;\n  wire [9:0] T_1418;\n  wire [9:0] T_1419;\n  wire  T_1421;\n  wire [9:0] T_1422;\n  wire [9:0] T_1423;\n  wire  T_1425;\n  wire [9:0] T_1427;\n  wire [9:0] T_1428;\n  wire  T_1430;\n  wire [9:0] T_1431;\n  wire [9:0] T_1432;\n  wire  T_1434;\n  wire [9:0] T_1436;\n  wire [9:0] T_1437;\n  wire  T_1439;\n  wire [9:0] T_1440;\n  wire [9:0] T_1441;\n  wire  T_1443;\n  wire [9:0] T_1445;\n  wire [9:0] T_1446;\n  wire  T_1448;\n  wire [9:0] T_1449;\n  wire [9:0] T_1450;\n  wire  T_1452;\n  wire [9:0] T_1454;\n  wire [9:0] T_1455;\n  wire  T_1457;\n  wire [9:0] T_1458;\n  wire [9:0] T_1459;\n  wire  T_1461;\n  wire [9:0] T_1463;\n  wire [9:0] T_1464;\n  wire  T_1466;\n  wire [9:0] T_1467;\n  wire [9:0] T_1468;\n  wire  T_1470;\n  wire [9:0] T_1472;\n  wire [9:0] T_1473;\n  wire  T_1475;\n  wire [9:0] T_1476;\n  wire [9:0] T_1477;\n  wire  T_1479;\n  wire [9:0] T_1481;\n  wire [9:0] T_1482;\n  wire  T_1484;\n  wire [9:0] T_1485;\n  wire [9:0] T_1486;\n  wire  T_1488;\n  wire [9:0] T_1490;\n  wire [9:0] T_1491;\n  wire  T_1493;\n  wire [9:0] T_1494;\n  wire [9:0] T_1495;\n  wire  T_1497;\n  wire [9:0] T_1499;\n  wire [9:0] T_1500;\n  wire  T_1502;\n  wire [9:0] T_1503;\n  wire [9:0] T_1504;\n  wire  T_1506;\n  wire [9:0] T_1508;\n  wire [9:0] T_1509;\n  wire  T_1511;\n  wire [9:0] T_1512;\n  wire [9:0] T_1513;\n  wire  T_1515;\n  wire [9:0] T_1517;\n  wire [9:0] T_1518;\n  wire  T_1520;\n  wire [9:0] T_1521;\n  wire [9:0] T_1522;\n  wire  T_1524;\n  wire [9:0] T_1526;\n  wire [9:0] T_1527;\n  wire  T_1529;\n  wire [9:0] T_1530;\n  wire [9:0] T_1531;\n  wire  T_1533;\n  wire [9:0] T_1535;\n  wire [9:0] T_1536;\n  wire  T_1538;\n  wire [9:0] T_1539;\n  wire [9:0] T_1540;\n  wire  T_1542;\n  wire [9:0] T_1544;\n  wire [9:0] T_1545;\n  wire  T_1547;\n  wire [9:0] T_1548;\n  wire [9:0] T_1549;\n  wire  T_1551;\n  wire [9:0] T_1553;\n  wire [9:0] T_1554;\n  wire  T_1556;\n  wire [9:0] T_1557;\n  wire [9:0] T_1558;\n  wire  T_1560;\n  wire [9:0] T_1562;\n  wire [9:0] T_1563;\n  wire  T_1565;\n  wire [9:0] T_1566;\n  wire [9:0] T_1567;\n  wire  T_1569;\n  wire [9:0] T_1571;\n  wire [9:0] T_1572;\n  wire  T_1574;\n  wire [9:0] T_1575;\n  wire [9:0] T_1576;\n  wire  T_1578;\n  wire [9:0] T_1580;\n  wire [9:0] T_1581;\n  wire  T_1583;\n  wire [9:0] T_1584;\n  wire [9:0] T_1585;\n  wire  T_1587;\n  wire [9:0] T_1589;\n  wire [9:0] T_1590;\n  wire  T_1592;\n  wire [9:0] T_1593;\n  wire [9:0] T_1594;\n  wire  T_1596;\n  wire [9:0] T_1598;\n  wire [9:0] T_1599;\n  wire  T_1601;\n  wire [9:0] T_1602;\n  wire [9:0] T_1603;\n  wire  T_1605;\n  wire [9:0] T_1607;\n  wire [9:0] T_1608;\n  wire  T_1610;\n  wire [9:0] T_1611;\n  wire [9:0] T_1612;\n  wire  T_1614;\n  wire [9:0] T_1616;\n  wire [9:0] T_1617;\n  wire  T_1619;\n  wire [9:0] T_1620;\n  wire [9:0] T_1621;\n  wire  T_1623;\n  wire [9:0] T_1625;\n  wire [9:0] T_1626;\n  wire  T_1628;\n  wire [9:0] T_1629;\n  wire [9:0] T_1630;\n  wire  T_1632;\n  wire [9:0] T_1634;\n  wire [9:0] T_1635;\n  wire  T_1637;\n  wire [9:0] T_1638;\n  wire [9:0] T_1639;\n  wire  T_1641;\n  wire [9:0] T_1643;\n  wire [9:0] T_1644;\n  wire  T_1646;\n  wire [9:0] T_1647;\n  wire [9:0] T_1648;\n  wire  T_1650;\n  wire [9:0] T_1652;\n  wire [9:0] T_1653;\n  wire  T_1655;\n  wire [9:0] T_1656;\n  wire [9:0] T_1657;\n  wire  T_1659;\n  wire [9:0] T_1661;\n  wire [9:0] T_1662;\n  wire  T_1664;\n  wire [9:0] T_1665;\n  wire [9:0] T_1666;\n  wire  T_1668;\n  wire [9:0] T_1670;\n  wire [9:0] T_1671;\n  wire  T_1673;\n  wire [9:0] T_1674;\n  wire [9:0] T_1675;\n  wire  T_1677;\n  wire [9:0] T_1679;\n  wire [9:0] T_1680;\n  wire  T_1682;\n  wire [9:0] T_1683;\n  wire [9:0] T_1684;\n  wire  T_1686;\n  wire [9:0] T_1688;\n  wire [9:0] T_1689;\n  wire  T_1691;\n  wire [9:0] T_1692;\n  wire [9:0] T_1693;\n  wire  T_1695;\n  wire [9:0] T_1697;\n  wire [9:0] T_1698;\n  wire  T_1700;\n  wire [9:0] T_1701;\n  wire [9:0] T_1702;\n  wire  T_1704;\n  wire [9:0] T_1706;\n  wire [9:0] T_1707;\n  wire  T_1709;\n  wire [9:0] T_1710;\n  wire [9:0] T_1711;\n  wire  T_1713;\n  wire [9:0] T_1715;\n  wire [9:0] T_1716;\n  wire  T_1718;\n  wire [9:0] T_1719;\n  wire [9:0] T_1720;\n  wire  T_1722;\n  wire [9:0] T_1724;\n  wire [9:0] T_1725;\n  wire  T_1727;\n  wire [9:0] T_1728;\n  wire [9:0] T_1729;\n  wire  T_1731;\n  wire [9:0] T_1733;\n  wire [9:0] T_1734;\n  wire  T_1736;\n  wire [9:0] T_1737;\n  wire [9:0] T_1738;\n  wire  T_1740;\n  wire [9:0] T_1742;\n  wire [9:0] T_1743;\n  wire  T_1745;\n  wire [9:0] T_1746;\n  wire [9:0] T_1747;\n  wire  T_1749;\n  wire [9:0] T_1751;\n  wire [9:0] T_1752;\n  wire  T_1754;\n  wire [9:0] T_1755;\n  wire [9:0] T_1756;\n  wire  T_1758;\n  wire  T_1762_0;\n  wire  T_1762_1;\n  wire  T_1762_2;\n  wire  T_1762_3;\n  wire  T_1762_4;\n  wire  T_1762_5;\n  wire  T_1762_6;\n  wire  T_1762_7;\n  wire  T_1762_8;\n  wire  T_1762_9;\n  wire  T_1762_10;\n  wire  T_1762_11;\n  wire  T_1762_12;\n  wire  T_1762_13;\n  wire  T_1762_14;\n  wire  T_1762_15;\n  wire  T_1762_16;\n  wire  T_1762_17;\n  wire  T_1762_18;\n  wire  T_1762_19;\n  wire  T_1762_20;\n  wire  T_1762_21;\n  wire  T_1762_22;\n  wire  T_1762_23;\n  wire  T_1762_24;\n  wire  T_1762_25;\n  wire  T_1762_26;\n  wire  T_1762_27;\n  wire  T_1762_28;\n  wire  T_1762_29;\n  wire  T_1762_30;\n  wire  T_1762_31;\n  wire  T_1762_32;\n  wire  T_1762_33;\n  wire  T_1762_34;\n  wire  T_1762_35;\n  wire  T_1762_36;\n  wire  T_1762_37;\n  wire  T_1762_38;\n  wire  T_1762_39;\n  wire  T_1762_40;\n  wire  T_1762_41;\n  wire  T_1762_42;\n  wire  T_1762_43;\n  wire  T_1762_44;\n  wire  T_1762_45;\n  wire  T_1762_46;\n  wire  T_1762_47;\n  wire  T_1762_48;\n  wire  T_1762_49;\n  wire  T_1767_0;\n  wire  T_1767_1;\n  wire  T_1767_2;\n  wire  T_1767_3;\n  wire  T_1767_4;\n  wire  T_1767_5;\n  wire  T_1767_6;\n  wire  T_1767_7;\n  wire  T_1767_8;\n  wire  T_1767_9;\n  wire  T_1767_10;\n  wire  T_1767_11;\n  wire  T_1767_12;\n  wire  T_1767_13;\n  wire  T_1767_14;\n  wire  T_1767_15;\n  wire  T_1767_16;\n  wire  T_1767_17;\n  wire  T_1767_18;\n  wire  T_1767_19;\n  wire  T_1767_20;\n  wire  T_1767_21;\n  wire  T_1767_22;\n  wire  T_1767_23;\n  wire  T_1767_24;\n  wire  T_1767_25;\n  wire  T_1767_26;\n  wire  T_1767_27;\n  wire  T_1767_28;\n  wire  T_1767_29;\n  wire  T_1767_30;\n  wire  T_1767_31;\n  wire  T_1767_32;\n  wire  T_1767_33;\n  wire  T_1767_34;\n  wire  T_1767_35;\n  wire  T_1767_36;\n  wire  T_1767_37;\n  wire  T_1767_38;\n  wire  T_1767_39;\n  wire  T_1767_40;\n  wire  T_1767_41;\n  wire  T_1767_42;\n  wire  T_1767_43;\n  wire  T_1767_44;\n  wire  T_1767_45;\n  wire  T_1767_46;\n  wire  T_1767_47;\n  wire  T_1767_48;\n  wire  T_1767_49;\n  wire  T_1772_0;\n  wire  T_1772_1;\n  wire  T_1772_2;\n  wire  T_1772_3;\n  wire  T_1772_4;\n  wire  T_1772_5;\n  wire  T_1772_6;\n  wire  T_1772_7;\n  wire  T_1772_8;\n  wire  T_1772_9;\n  wire  T_1772_10;\n  wire  T_1772_11;\n  wire  T_1772_12;\n  wire  T_1772_13;\n  wire  T_1772_14;\n  wire  T_1772_15;\n  wire  T_1772_16;\n  wire  T_1772_17;\n  wire  T_1772_18;\n  wire  T_1772_19;\n  wire  T_1772_20;\n  wire  T_1772_21;\n  wire  T_1772_22;\n  wire  T_1772_23;\n  wire  T_1772_24;\n  wire  T_1772_25;\n  wire  T_1772_26;\n  wire  T_1772_27;\n  wire  T_1772_28;\n  wire  T_1772_29;\n  wire  T_1772_30;\n  wire  T_1772_31;\n  wire  T_1772_32;\n  wire  T_1772_33;\n  wire  T_1772_34;\n  wire  T_1772_35;\n  wire  T_1772_36;\n  wire  T_1772_37;\n  wire  T_1772_38;\n  wire  T_1772_39;\n  wire  T_1772_40;\n  wire  T_1772_41;\n  wire  T_1772_42;\n  wire  T_1772_43;\n  wire  T_1772_44;\n  wire  T_1772_45;\n  wire  T_1772_46;\n  wire  T_1772_47;\n  wire  T_1772_48;\n  wire  T_1772_49;\n  wire  T_1777_0;\n  wire  T_1777_1;\n  wire  T_1777_2;\n  wire  T_1777_3;\n  wire  T_1777_4;\n  wire  T_1777_5;\n  wire  T_1777_6;\n  wire  T_1777_7;\n  wire  T_1777_8;\n  wire  T_1777_9;\n  wire  T_1777_10;\n  wire  T_1777_11;\n  wire  T_1777_12;\n  wire  T_1777_13;\n  wire  T_1777_14;\n  wire  T_1777_15;\n  wire  T_1777_16;\n  wire  T_1777_17;\n  wire  T_1777_18;\n  wire  T_1777_19;\n  wire  T_1777_20;\n  wire  T_1777_21;\n  wire  T_1777_22;\n  wire  T_1777_23;\n  wire  T_1777_24;\n  wire  T_1777_25;\n  wire  T_1777_26;\n  wire  T_1777_27;\n  wire  T_1777_28;\n  wire  T_1777_29;\n  wire  T_1777_30;\n  wire  T_1777_31;\n  wire  T_1777_32;\n  wire  T_1777_33;\n  wire  T_1777_34;\n  wire  T_1777_35;\n  wire  T_1777_36;\n  wire  T_1777_37;\n  wire  T_1777_38;\n  wire  T_1777_39;\n  wire  T_1777_40;\n  wire  T_1777_41;\n  wire  T_1777_42;\n  wire  T_1777_43;\n  wire  T_1777_44;\n  wire  T_1777_45;\n  wire  T_1777_46;\n  wire  T_1777_47;\n  wire  T_1777_48;\n  wire  T_1777_49;\n  wire  T_1782_0;\n  wire  T_1782_1;\n  wire  T_1782_2;\n  wire  T_1782_3;\n  wire  T_1782_4;\n  wire  T_1782_5;\n  wire  T_1782_6;\n  wire  T_1782_7;\n  wire  T_1782_8;\n  wire  T_1782_9;\n  wire  T_1782_10;\n  wire "}
{"text": " T_1782_11;\n  wire  T_1782_12;\n  wire  T_1782_13;\n  wire  T_1782_14;\n  wire  T_1782_15;\n  wire  T_1782_16;\n  wire  T_1782_17;\n  wire  T_1782_18;\n  wire  T_1782_19;\n  wire  T_1782_20;\n  wire  T_1782_21;\n  wire  T_1782_22;\n  wire  T_1782_23;\n  wire  T_1782_24;\n  wire  T_1782_25;\n  wire  T_1782_26;\n  wire  T_1782_27;\n  wire  T_1782_28;\n  wire  T_1782_29;\n  wire  T_1782_30;\n  wire  T_1782_31;\n  wire  T_1782_32;\n  wire  T_1782_33;\n  wire  T_1782_34;\n  wire  T_1782_35;\n  wire  T_1782_36;\n  wire  T_1782_37;\n  wire  T_1782_38;\n  wire  T_1782_39;\n  wire  T_1782_40;\n  wire  T_1782_41;\n  wire  T_1782_42;\n  wire  T_1782_43;\n  wire  T_1782_44;\n  wire  T_1782_45;\n  wire  T_1782_46;\n  wire  T_1782_47;\n  wire  T_1782_48;\n  wire  T_1782_49;\n  wire  T_1787_0;\n  wire  T_1787_1;\n  wire  T_1787_2;\n  wire  T_1787_3;\n  wire  T_1787_4;\n  wire  T_1787_5;\n  wire  T_1787_6;\n  wire  T_1787_7;\n  wire  T_1787_8;\n  wire  T_1787_9;\n  wire  T_1787_10;\n  wire  T_1787_11;\n  wire  T_1787_12;\n  wire  T_1787_13;\n  wire  T_1787_14;\n  wire  T_1787_15;\n  wire  T_1787_16;\n  wire  T_1787_17;\n  wire  T_1787_18;\n  wire  T_1787_19;\n  wire  T_1787_20;\n  wire  T_1787_21;\n  wire  T_1787_22;\n  wire  T_1787_23;\n  wire  T_1787_24;\n  wire  T_1787_25;\n  wire  T_1787_26;\n  wire  T_1787_27;\n  wire  T_1787_28;\n  wire  T_1787_29;\n  wire  T_1787_30;\n  wire  T_1787_31;\n  wire  T_1787_32;\n  wire  T_1787_33;\n  wire  T_1787_34;\n  wire  T_1787_35;\n  wire  T_1787_36;\n  wire  T_1787_37;\n  wire  T_1787_38;\n  wire  T_1787_39;\n  wire  T_1787_40;\n  wire  T_1787_41;\n  wire  T_1787_42;\n  wire  T_1787_43;\n  wire  T_1787_44;\n  wire  T_1787_45;\n  wire  T_1787_46;\n  wire  T_1787_47;\n  wire  T_1787_48;\n  wire  T_1787_49;\n  wire  T_1792_0;\n  wire  T_1792_1;\n  wire  T_1792_2;\n  wire  T_1792_3;\n  wire  T_1792_4;\n  wire  T_1792_5;\n  wire  T_1792_6;\n  wire  T_1792_7;\n  wire  T_1792_8;\n  wire  T_1792_9;\n  wire  T_1792_10;\n  wire  T_1792_11;\n  wire  T_1792_12;\n  wire  T_1792_13;\n  wire  T_1792_14;\n  wire  T_1792_15;\n  wire  T_1792_16;\n  wire  T_1792_17;\n  wire  T_1792_18;\n  wire  T_1792_19;\n  wire  T_1792_20;\n  wire  T_1792_21;\n  wire  T_1792_22;\n  wire  T_1792_23;\n  wire  T_1792_24;\n  wire  T_1792_25;\n  wire  T_1792_26;\n  wire  T_1792_27;\n  wire  T_1792_28;\n  wire  T_1792_29;\n  wire  T_1792_30;\n  wire  T_1792_31;\n  wire  T_1792_32;\n  wire  T_1792_33;\n  wire  T_1792_34;\n  wire  T_1792_35;\n  wire  T_1792_36;\n  wire  T_1792_37;\n  wire  T_1792_38;\n  wire  T_1792_39;\n  wire  T_1792_40;\n  wire  T_1792_41;\n  wire  T_1792_42;\n  wire  T_1792_43;\n  wire  T_1792_44;\n  wire  T_1792_45;\n  wire  T_1792_46;\n  wire  T_1792_47;\n  wire  T_1792_48;\n  wire  T_1792_49;\n  wire  T_1797_0;\n  wire  T_1797_1;\n  wire  T_1797_2;\n  wire  T_1797_3;\n  wire  T_1797_4;\n  wire  T_1797_5;\n  wire  T_1797_6;\n  wire  T_1797_7;\n  wire  T_1797_8;\n  wire  T_1797_9;\n  wire  T_1797_10;\n  wire  T_1797_11;\n  wire  T_1797_12;\n  wire  T_1797_13;\n  wire  T_1797_14;\n  wire  T_1797_15;\n  wire  T_1797_16;\n  wire  T_1797_17;\n  wire  T_1797_18;\n  wire  T_1797_19;\n  wire  T_1797_20;\n  wire  T_1797_21;\n  wire  T_1797_22;\n  wire  T_1797_23;\n  wire  T_1797_24;\n  wire  T_1797_25;\n  wire  T_1797_26;\n  wire  T_1797_27;\n  wire  T_1797_28;\n  wire  T_1797_29;\n  wire  T_1797_30;\n  wire  T_1797_31;\n  wire  T_1797_32;\n  wire  T_1797_33;\n  wire  T_1797_34;\n  wire  T_1797_35;\n  wire  T_1797_36;\n  wire  T_1797_37;\n  wire  T_1797_38;\n  wire  T_1797_39;\n  wire  T_1797_40;\n  wire  T_1797_41;\n  wire  T_1797_42;\n  wire  T_1797_43;\n  wire  T_1797_44;\n  wire  T_1797_45;\n  wire  T_1797_46;\n  wire  T_1797_47;\n  wire  T_1797_48;\n  wire  T_1797_49;\n  wire  T_2462;\n  wire  T_2463;\n  wire  T_2464;\n  wire  T_2465;\n  wire [7:0] T_2469;\n  wire [7:0] T_2473;\n  wire [7:0] T_2477;\n  wire [7:0] T_2481;\n  wire [15:0] T_2482;\n  wire [15:0] T_2483;\n  wire [31:0] T_2484;\n  wire [31:0] T_2496;\n  wire  T_2498;\n  wire  T_2504;\n  wire [31:0] T_2505;\n  wire [31:0] T_2520;\n  wire  T_2544;\n  wire [31:0] T_2560;\n  wire  T_2584;\n  wire [31:0] GEN_6;\n  wire  T_2624;\n  wire [31:0] T_2640;\n  wire  T_2664;\n  wire [31:0] GEN_7;\n  wire  T_2704;\n  wire [31:0] T_2720;\n  wire  T_2744;\n  wire [31:0] GEN_8;\n  wire  T_2784;\n  wire [31:0] T_2800;\n  wire  T_2824;\n  wire [31:0] T_2840;\n  wire  T_2864;\n  wire [31:0] T_2880;\n  wire  T_2904;\n  wire [31:0] GEN_9;\n  wire  T_2944;\n  wire [31:0] T_2960;\n  wire  T_2984;\n  wire [31:0] GEN_10;\n  wire  T_3024;\n  wire [31:0] T_3040;\n  wire  T_3064;\n  wire [31:0] T_3080;\n  wire  T_3104;\n  wire [31:0] GEN_11;\n  wire  T_3144;\n  wire [31:0] T_3160;\n  wire  T_3184;\n  wire [31:0] T_3200;\n  wire  T_3224;\n  wire [31:0] GEN_12;\n  wire  T_3264;\n  wire [31:0] GEN_13;\n  wire  T_3304;\n  wire [31:0] GEN_14;\n  wire  T_3344;\n  wire [31:0] T_3360;\n  wire  T_3384;\n  wire [31:0] T_3400;\n  wire  T_3424;\n  wire [31:0] GEN_15;\n  wire  T_3464;\n  wire [31:0] T_3480;\n  wire  T_3504;\n  wire [31:0] T_3520;\n  wire  T_3544;\n  wire [31:0] T_3560;\n  wire  T_3584;\n  wire [31:0] T_3600;\n  wire  T_3624;\n  wire [31:0] GEN_16;\n  wire  T_3664;\n  wire [31:0] T_3680;\n  wire  T_3704;\n  wire [31:0] T_3720;\n  wire [3:0] T_3732;\n  wire [3:0] T_3736;\n  wire  T_3738;\n  wire  T_3744;\n  wire [3:0] T_3745;\n  wire [3:0] T_3760;\n  wire  T_3784;\n  wire [31:0] GEN_17;\n  wire  T_3824;\n  wire [31:0] T_3840;\n  wire  T_3864;\n  wire [31:0] T_3880;\n  wire  T_3904;\n  wire [31:0] T_3920;\n  wire  T_3944;\n  wire [31:0] T_3960;\n  wire  T_3984;\n  wire [31:0] GEN_18;\n  wire  T_4024;\n  wire [31:0] GEN_19;\n  wire  T_4064;\n  wire [31:0] T_4080;\n  wire [15:0] T_4092;\n  wire [15:0] T_4096;\n  wire  T_4098;\n  wire  T_4104;\n  wire [15:0] T_4105;\n  wire [15:0] T_4120;\n  wire  T_4144;\n  wire [31:0] T_4160;\n  wire  T_4184;\n  wire [31:0] T_4200;\n  wire  T_4224;\n  wire [31:0] GEN_20;\n  wire  T_4264;\n  wire [31:0] T_4280;\n  wire  T_4304;\n  wire [15:0] T_4320;\n  wire  T_4344;\n  wire [31:0] T_4360;\n  wire  T_4384;\n  wire [31:0] GEN_21;\n  wire  T_4424;\n  wire [31:0] T_4440;\n  wire  T_4464;\n  wire [31:0] T_4480;\n  wire  T_4486;\n  wire  T_4488;\n  wire  T_4493;\n  wire  T_4495;\n  wire  T_4497;\n  wire  T_4499;\n  wire  T_4501;\n  wire  T_4503;\n  wire  T_4508;\n  wire  T_4510;\n  wire  T_4512;\n  wire  T_4514;\n  wire  T_4516;\n  wire  T_4518;\n  wire  T_4541;\n  wire  T_4543;\n  wire  T_4548;\n  wire  T_4550;\n  wire  T_4552;\n  wire  T_4554;\n  wire  T_4556;\n  wire  T_4558;\n  wire  T_4563;\n  wire  T_4565;\n  wire  T_4567;\n  wire  T_4569;\n  wire  T_4571;\n  wire  T_4573;\n  wire  T_4596;\n  wire  T_4598;\n  wire  T_4600;\n  wire  T_4602;\n  wire  T_4604;\n  wire  T_4606;\n  wire  T_4608;\n  wire  T_4610;\n  wire  T_4612;\n  wire  T_4614;\n  wire  T_4616;\n  wire  T_4618;\n  wire  T_4620;\n  wire  T_4622;\n  wire  T_4624;\n  wire  T_4626;\n  wire  T_4628;\n  wire  T_4630;\n  wire  T_4632;\n  wire  T_4634;\n  wire  T_4636;\n  wire  T_4638;\n  wire  T_4640;\n  wire  T_4642;\n  wire  T_4644;\n  wire  T_4646;\n  wire  T_4648;\n  wire  T_4650;\n  wire  T_4652;\n  wire  T_4654;\n  wire  T_4656;\n  wire  T_4658;\n  wire  T_4708;\n  wire  T_4710;\n  wire  T_4712;\n  wire  T_4714;\n  wire  T_4716;\n  wire  T_4718;\n  wire  T_4720;\n  wire  T_4722;\n  wire  T_4724;\n  wire  T_4726;\n  wire  T_4728;\n  wire  T_4730;\n  wire  T_4732;\n  wire  T_4734;\n  wire  T_4736;\n  wire  T_4738;\n  wire  T_4740;\n  wire  T_4742;\n  wire  T_4744;\n  wire  T_4746;\n  wire  T_4748;\n  wire  T_4750;\n  wire  T_4752;\n  wire  T_4754;\n  wire  T_4756;\n  wire  T_4758;\n  wire  T_4760;\n  wire  T_4762;\n  wire  T_4764;\n  wire  T_4766;\n  wire  T_4768;\n  wire  T_4770;\n  wire  T_4772;\n  wire  T_4774;\n  wire  T_4776;\n  wire  T_4778;\n  wire  T_4780;\n  wire  T_4782;\n  wire  T_4784;\n  wire  T_4786;\n  wire  T_5050_0;\n  wire  T_5050_1;\n  wire  T_5050_2;\n  wire  T_5050_3;\n  wire  T_5050_4;\n  wire  T_5050_5;\n  wire  T_5050_6;\n  wire  T_5050_7;\n  wire  T_5050_8;\n  wire  T_5050_9;\n  wire  T_5050_10;\n  wire  T_5050_11;\n  wire  T_5050_12;\n  wire  T_5050_13;\n  wire  T_5050_14;\n  wire  T_5050_15;\n  wire  T_5050_16;\n  wire  T_5050_17;\n  wire  T_5050_18;\n  wire  T_5050_19;\n  wire  T_5050_20;\n  wire  T_5050_21;\n  wire  T_5050_22;\n  wire  T_5050_23;\n  wire  T_5050_24;\n  wire  T_5050_25;\n  wire  T_5050_26;\n  wire  T_5050_27;\n  wire  T_5050_28;\n  wire  T_5050_29;\n  wire  T_5050_30;\n  wire  T_5050_31;\n  wire  T_5050_32;\n  wire  T_5050_33;\n  wire  T_5050_34;\n  wire  T_5050_35;\n  wire  T_5050_36;\n  wire  T_5050_37;\n  wire  T_5050_38;\n  wire  T_5050_39;\n  wire  T_5050_40;\n  wire  T_5050_41;\n  wire  T_5050_42;\n  wire  T_5050_43;\n  wire  T_5050_44;\n  wire  T_5050_45;\n  wire  T_5050_46;\n  wire  T_5050_47;\n  wire  T_5050_48;\n  wire  T_5050_49;\n  wire  T_5050_50;\n  wire  T_5050_51;\n  wire  T_5050_52;\n  wire  T_5050_53;\n  wire  T_5050_54;\n  wire  T_5050_55;\n  wire  T_5050_56;\n  wire  T_5050_57;\n  wire  T_5050_58;\n  wire  T_5050_59;\n  wire  T_5050_60;\n  wire  T_5050_61;\n  wire  T_5050_62;\n  wire  T_5050_63;\n  wire  T_5050_64;\n  wire  T_5050_65;\n  wire  T_5050_66;\n  wire  T_5050_67;\n  wire  T_5050_68;\n  wire  T_5050_69;\n  wire  T_5050_70;\n  wire  T_5050_71;\n  wire  T_5050_72;\n  wire  T_5050_73;\n  wire  T_5050_74;\n  wire  T_5050_75;\n  wire  T_5050_76;\n  wire  T_5050_77;\n  wire  T_5050_78;\n  wire  T_5050_79;\n  wire  T_5050_80;\n  wire  T_5050_81;\n  wire  T_5050_82;\n  wire  T_5050_83;\n  wire  T_5050_84;\n  wire  T_5050_85;\n  wire  T_5050_86;\n  wire  T_5050_87;\n  wire  T_5050_88;\n  wire  T_5050_89;\n  wire  T_5050_90;\n  wire  T_5050_91;\n  wire  T_5050_92;\n  wire  T_5050_93;\n  wire  T_5050_94;\n  wire  T_5050_95;\n  wire  T_5050_96;\n  wire  T_5050_97;\n  wire  T_5050_98;\n  wire  T_5050_99;\n  wire  T_5050_100;\n  wire  T_5050_101;\n  wire  T_5050_102;\n  wire  T_5050_103;\n  wire  T_5050_104;\n  wire  T_5050_105;\n  wire  T_5050_106;\n  wire  T_5050_107;\n  wire  T_5050_108;\n  wire  T_5050_109;\n  wire  T_5050_110;\n  wire  T_5050_111;\n  wire  T_5050_112;\n  wire  T_5050_113;\n  wire  T_5050_114;\n  wire  T_5050_115;\n  wire  T_5050_116;\n  wire  T_5050_117;\n  wire  T_5050_118;\n  wire  T_5050_119;\n  wire  T_5050_120;\n  wire  T_5050_121;\n  wire  T_5050_122;\n  wire  T_5050_123;\n  wire  T_5050_124;\n  wire  T_5050_125;\n  wire  T_5050_126;\n  wire  T_5050_127;\n  wire  T_5184;\n  wire  T_5191;\n  wire  T_5195;\n  wire  T_5199;\n  wire  T_5206;\n  wire  T_5210;\n  wire  T_5214;\n  wire  T_5239;\n  wire  T_5246;\n  wire  T_5250;\n  wire  T_5254;\n  wire  T_5261;\n  wire  T_5265;\n  wire  T_5269;\n  wire  T_5294;\n  wire  T_5298;\n  wire  T_5302;\n  wire  T_5306;\n  wire  T_5310;\n  wire  T_5314;\n  wire  T_5318;\n  wire  T_5322;\n  wire  T_5326;\n  wire  T_5330;\n  wire  T_5334;\n  wire  T_5338;\n  wire  T_5342;\n  wire  T_5346;\n  wire  T_5350;\n  wire  T_5354;\n  wire  T_5406;\n  wire  T_5410;\n  wire  T_5414;\n  wire  T_5418;\n  wire  T_5422;\n  wire  T_5426;\n  wire  T_5430;\n  wire  T_5434;\n  wire  T_5438;\n  wire  T_5442;\n  wire  T_5446;\n  wire  T_5450;\n  wire  T_5454;\n  wire  T_5458;\n  wire  T_5462;\n  wire  T_5466;\n  wire  T_5470;\n  wire  T_5474;\n  wire  T_5478;\n  wire  T_5482;\n  wire  T_5746_0;\n  wire  T_5746_1;\n  wire  T_5746_2;\n  wire  T_5746_3;\n  wire  T_5746_4;\n  wire  T_5746_5;\n  wire  T_5746_6;\n  wire  T_5746_7;\n  wire  T_5746_8;\n  wire  T_5746_9;\n  wire  T_5746_10;\n  wire  T_5746_11;\n  wire  T_5746_12;\n  wire  T_5746_13;\n  wire  T_5746_14;\n  wire  T_5746_15;\n  wire  T_5746_16;\n  wire  T_5746_17;\n  wire  T_5746_18;\n  wire  T_5746_19;\n  wire  T_5746_20;\n  wire  T_5746_21;\n  wire  T_5746_22;\n  wire  T_5746_23;\n  wire  T_5746_24;\n  wire  T_5746_25;\n  wire  T_5746_26;\n  wire  T_5746_27;\n  wire  T_5746_28;\n  wire  T_5746_29;\n  wire  T_5746_30;\n  wire  T_5746_31;\n  wire  T_5746_32;\n  wire  T_5746_33;\n  wire  T_5746_34;\n  wire  T_5746_35;\n  wire  T_5746_36;\n  wire  T_5746_37;\n  wire  T_5746_38;\n  wire  T_5746_39;\n  wire  T_5746_40;\n  wire  T_5746_41;\n  wire  T_5746_42;\n  wire  T_5746_43;\n  wire  T_5746_44;\n  wire  T_5746_45;\n  wire  T_5746_46;\n  wire  T_5746_47;\n  wire  T_5746_48;\n  wire  T_5746_49;\n  wire  T_5746_50;\n  wire  T_5746_51;\n  wire  T_5746_52;\n  wire  T_5746_53;\n  wire  T_5746_54;\n  wire  T_5746_55;\n  wire  T_5746_56;\n  wire  T_5746_57;\n  wire  T_5746_58;\n  wire  T_5746_59;\n  wire  T_5746_60;\n  wire  T_5746_61;\n  wire  T_5746_62;\n  wire  T_5746_63;\n  wire  T_5746_64;\n  wire  T_5746_65;\n  wire  T_5746_66;\n  wire  T_5746_67;\n  wire  T_5746_68;\n  wire  T_5746_69;\n  wire  T_5746_70;\n  wire  T_5746_71;\n  wire  T_5746_72;\n  wire  T_5746_73;\n  wire  T_5746_74;\n  wire  T_5746_75;\n  wire  T_5746_76;\n  wire  T_5746_77;\n  wire  T_5746_78;\n  wire  T_5746_79;\n  wire  T_5746_80;\n  wire  T_5746_81;\n  wire  T_5746_82;\n  wire  T_5746_83;\n  wire  T_5746_84;\n  wire  T_5746_85;\n  wire  T_5746_86;\n  wire  T_5746_87;\n  wire  T_5746_88;\n  wire  T_5746_89;\n  wire  T_5746_90;\n  wire  T_5746_91;\n  wire  T_5746_92;\n  wire  T_5746_93;\n  wire  T_5746_94;\n  wire  T_5746_95;\n  wire  T_5746_96;\n  wire  T_5746_97;\n  wire  T_5746_98;\n  wire  T_5746_99;\n  wire  T_5746_100;\n  wire  T_5746_101;\n  wire  T_5746_102;\n  wire  T_5746_103;\n  wire  T_5746_104;\n  wire  T_5746_105;\n  wire  T_5746_106;\n  wire  T_5746_107;\n  wire  T_5746_108;\n  wire  T_5746_109;\n  wire  T_5746_110;\n  wire  T_5746_111;\n  wire  T_5746_112;\n  wire  T_5746_113;\n  wire  T_5746_114;\n  wire  T_5746_115;\n  wire  T_5746_116;\n  wire  T_5746_117;\n  wire  T_5746_118;\n  wire  T_5746_119;\n  wire  T_5746_120;\n  wire  T_5746_121;\n  wire  T_5746_122;\n  wire  T_5746_123;\n  wire  T_5746_124;\n  wire  T_5746_125;\n  wire  T_5746_126;\n  wire  T_5746_127;\n  wire  T_5878;\n  wire  T_5880;\n  wire  T_5885;\n  wire  T_5887;\n  wire  T_5889;\n  wire  T_5891;\n  wire  T_5893;\n  wire  T_5895;\n  wire  T_5900;\n  wire  T_5902;\n  wire  T_5904;\n  wire  T_5906;\n  wire  T_5908;\n  wire  T_5910;\n  wire  T_5933;\n  wire  T_5935;\n  wire  T_5940;\n  wire  T_5942;\n  wire  T_5944;\n  wire  T_5946;\n  wire  T_5948;\n  wire  T_5950;\n  wire  T_5955;\n  wire  T_5957;\n  wire  T_5959;\n  wire  T_5961;\n  wire  T_5963;\n  wire  T_5965;\n  wire  T_5988;\n  wire  T_5990;\n  wire  T_5992;\n  wire  T_5994;\n  wire  T_5996;\n  wire  T_5998;\n  wire  T_6000;\n  wire  T_6002;\n  wire  T_6004;\n  wire  T_6006;\n  wire  T_6008;\n  wire  T_6010;\n  wire  T_6012;\n  wire  T_6014;\n  wire  T_6016;\n  wire  T_6018;\n  wire  T_6020;\n  wire  T_6022;\n  wire  T_6024;\n  wire  T_6026;\n  wire  T_6028;\n  wire  T_6030;\n  wire  T_6032;\n  wire  T_6034;\n  wire  T_6036;\n  wire  T_6038;\n  wire  T_6040;\n  wire  T_6042;\n  wire  T_6044;\n  wire  T_6046;\n  wire  T_6048;\n  wire  T_6050;\n  wire  T_6100;\n  wire  T_6102;\n  wire  T_6104;\n  wire  T_6106;\n  wire  T_6108;\n  wire  T_6110;\n  wire  T_6112;\n  wire  T_6114;\n  wire  T_6116;\n  wire  T_6118;\n  wire  T_6120;\n  wire  T_6122;\n  wire  T_6124;\n  wire  T_6126;\n  wire  T_6128;\n  wire  T_6130;\n  wire  T_6132;\n  wire  T_6134;\n  wire  T_6136;\n  wire  T_6138;\n  wire  T_6140;\n  wire  T_6142;\n  wire  T_6144;\n  wire  T_6146;\n  wire  T_6148;\n  wire  T_6150;\n  wire  T_6152;\n  wire  T_6154;\n  wire  T_6156;\n  wire  T_6158;\n  wire  T_6160;\n  wire  T_6162;\n  wire  T_6164;\n  wire  T_6166;\n  wire  T_6168;\n  wire  T_6170;\n  wire  T_6172;\n  wire  T_6174;\n  wire  T_6176;\n  wire  T_6178;\n  wire  T_6442_0;\n  wire  T_6442_1;\n  wire  T_6442_2;\n  wire  T_6442_3;\n  wire  T_6442_4;\n  wire  T_6442_5;\n  wire  T_6442_6;\n  wire  T_6442_7;\n  wire  T_6442_8;\n  wire  T_6442_9;\n  wire  T_6442_10;\n  wire  T_6442_11;\n  wire  T_6442_12;\n  wire  T_6442_13;\n  wire  T_6442_14;\n  wire  T_6442_15;\n  wire  T_6442_16;\n  wire  T_6442_17;\n  wire  T_6442_18;\n  wire  T_6442_19;\n  wire  T_6442_20;\n  wire  T_6442_21;\n  wire  T_6442_22;\n  wire  T_6442_23;\n  wire  T_6442_24;\n  wire  T_6442_25;\n  wire  T_6442_26;\n  wire  T_6442_27;\n  wire  T_6442_28;\n  wire  T_6442_29;\n  wire  T_6442_30;\n  wire  T_6442_31;\n  wire  T_6442_32;\n  wire  T_6442_33;\n  wire  T_6442_34;\n  wire  T_6442_35;\n  wire  T_6442_36;\n  wire  T_6442_37;\n  wire  T_6442_38;\n  wire  T_6442_39;\n  wire  T_6442_40;\n  wire  T_6442_41;\n  wire  T_6442_42;\n  wire  T_6442_43;\n  wire  T_6442_44;\n  wire  T_6442_45;\n  wire  T_6442_46;\n  wire  T_6442_47;\n  wire  T_6442_48;\n  wire  T_6442_49;\n  wire  T_6442_50;\n  wire  T_6442_51;\n  wire  T_6442_52;\n  wire  T_6442_53;\n  wire  T_6442_54;\n  wire  T_6442_55;\n  wire  T_6442_56;\n  wire  T_6442_57;\n  wire  T_6442_58;\n  wire  T_6442_59;\n  wire  T_6442_60;\n  wire  T_6442_61;\n  wire  T_6442_62;\n  wire  T_6442_63;\n  wire  T_6442_64;\n  wire  T_6442_65;\n  wire  T_6442_66;\n  wire  T_6442_67;\n  wire  T_6442_68;\n  wire  T_6442_69;\n  wire  T_6442_70;\n  wire  T_6442_71;\n  wire  T_6442_72;\n  wire  T_6442_73;\n  wire  T_6442_74;\n  wire  T_6442_75;\n  wire  T_6442_76;\n  wire  T_6442_77;\n  wire  T_6442_78;\n  wire  T_6442_79;\n  wire  T_6442_80;\n  wire  T_6442_81;\n  wire  T_6442_82;\n  wire  T_6442_83;\n  wire  T_6442_84;\n  wire  T_6442_85;\n  wire  T_6442_86;\n  wire  T_6442_87;\n  wire  T_6442_88;\n  wire  T_6442_89;\n  wire  T_6442_90;\n  wire  T_6442_91;\n  wire  T_6442_92;\n  wire  T_6442_93;\n  wire  T_6442_94;\n  wire  T_6442_95;\n  wire  T_6442_96;\n  wire  T_6442_97;\n  wire  T_6442_98;\n  wire  T_6442_99;\n  wire  T_6442_100;\n  wire  T_6442_101;\n  wire  T_6442_102;\n  wire  T_6442_103;\n  wire  T_6442_104;\n  wire  T_6442_105;\n  wire  T_6442_106;\n  wire  T_6442_107;\n  wire  T_6442_108;\n  wire  T_6442_109;\n  wire  T_6442_110;\n  wire  T_6442_111;\n  wire  T_6442_112;\n  wire  T_6442_113;\n  wire  T_6442_114;\n  wire  T_6442_115;\n  wire  T_6442_116;\n  wire  T_6442_117;\n  wire  T_6442_118;\n  wire  T_6442_119;\n  wire  T_6442_120;\n  wire  T_6442_121;\n  wire  T_6442_122;\n  wire  T_6442_123;\n  wire  T_6442_124;\n  wire  T_6442_125;\n  wire  T_6442_126;\n  wire  T_6442_127;\n  wire  T_6576;\n  wire  T_6583;\n  wire  T_6587;\n  wire  T_6591;\n  wire  T_6598;\n  wire  T_6602;\n  wire  T_6606;\n  wire  T_6631;\n  wire  T_6638;\n  wire  T_6642;\n  wire  T_6646;\n  wire  T_6653;\n  wire  T_6657;\n  wire  T_6661;\n  wire  T_6686;\n  wire  T_6690;\n  wire  T_6694;\n  wire  T_6698;\n  wire  T_6702;\n  wire  T_6706;\n  wire  T_6710;\n  wire  T_6714;\n  wire  T_6718;\n  wire  T_6722;\n  wire  T_6726;\n  wire  T_6730;\n  wire  T_6734;\n  wire  T_6738;\n  wire  T_6742;\n  wire  T_6746;\n  wire  T_6798;\n  wire  T_6802;\n  wire  T_6806;\n  wire  T_6810;\n  wire  T_6814;\n  wire  T_6818;\n  wire  T_6822;\n  wire  T_6826;\n  wire  T_6830;\n  wire  T_6834;\n  wire  T_6838;\n  wire  T_6842;\n  wire  T_6846;\n  wire  T_6850;\n  wire  T_6854;\n  wire  T_6858;\n  wire  T_6862;\n  wire  T_6866;\n  wire  T_6870;\n  wire  T_6874;\n  wire  T_7138_0;\n  wire  T_7138_1;\n  wire  T_7138_2;\n  wire  T_7138_3;\n  wire  T_7138_4;\n  wire  T_7138_5;\n  wire  T_7138_6;\n  wire  T_7138_7;\n  wire  T_7138_8;\n  wire  T_7138_9;\n  wire  T_7138_10;\n  wire  T_7138_11;\n  wire  T_7138_12;\n  wire  T_7138_13;\n  wire  T_7138_14;\n  wire  T_7138_15;\n  wire  T_7138_16;\n  wire  T_7138_17;\n  wire  T_7138_18;\n  wire  T_7138_19;\n  wire  T_7138_20;\n  wire  T_7138_21;\n  wire  T_7138_22;\n  wire  T_7138_23;\n  wire  T_7138_24;\n  wire  T_7138_25;\n  wire  T_7138_26;\n  wire  T_7138_27;\n  wire  T_7138_28;\n  wire  T_7138_29;\n  wire  T_7138_30;\n  wire  T_7138_31;\n  wire  T_7138_32;\n  wire  T_7138_33;\n  wire  T_7138_34;\n  wire  T_7138_35;\n  wire  T_7138_36;\n  wire  T_7138_37;\n  wire  T_7138_38;\n  wire  T_7138_39;\n  wire  T_7138_40;\n  wire  T_7138_41;\n  wire  T_7138_42;\n  wire  T_7138_43;\n  wire  T_7138_44;\n  wire  T_7138_45;\n  wire  T_7138_46;\n  wire  T_7138_47;\n  wire  T_7138_48;\n  wire  T_7138_49;\n  wire  T_7138_50;\n  wire  T_7138_51;\n  wire  T_7138_52;\n  wire  T_7138_53;\n  wire  T_7138_54;\n  wire  T_7138_55;\n  wire  T_7138_56;\n  wire  T_7138_57;\n  wire  T_7138_58;\n  wire  T_7138_59;\n  wire  T_7138_60;\n  wire  T_7138_61;\n  wire  T_7138_62;\n  wire  T_7138_63;\n  wire  T_7138_64;\n  wire  T_7138_65;\n  wire  T_7138_66;\n  wire  T_7138_67;\n  wire  T_7138_68;\n  wire  T_7138_69;\n  wire  T_7138_70;\n  wire  T_7138_71;\n  wire  T_7138_72;\n  wire  T_7138_73;\n  wire  T_7138_74;\n  wire  T_7138_75;\n  wire  T_7138_76;\n  wire  T_7138_77;\n  wire  T_7138_78;\n  wire  T_7138_79;\n  wire  T_7138_80;\n  wire  T_7138_81;\n  wire  T_7138_82;\n  wire  T_7138_83;\n  wire  T_7138_84;\n  wire  T_7138_85;\n  wire  T_7138_86;\n  wire  T_7138_87;\n  wire  T_7138_88;\n  wire  T_7138_89;\n  wire  T_7138_90;\n  wire  T_7138_91;\n  wire  T_7138_92;\n  wire  T_7138_93;\n  wire  T_7138_94;\n  wire  T_7138_95;\n  wire  T_7138_96;\n  wire  T_7138_97;\n  wire  T_7138_98;\n  wire  T_7138_99;\n  wire  T_7138_100;\n  wire  T_7138_101;\n  wire  T_7138_102;\n  wire  T_7138_1"}
{"text": "03;\n  wire  T_7138_104;\n  wire  T_7138_105;\n  wire  T_7138_106;\n  wire  T_7138_107;\n  wire  T_7138_108;\n  wire  T_7138_109;\n  wire  T_7138_110;\n  wire  T_7138_111;\n  wire  T_7138_112;\n  wire  T_7138_113;\n  wire  T_7138_114;\n  wire  T_7138_115;\n  wire  T_7138_116;\n  wire  T_7138_117;\n  wire  T_7138_118;\n  wire  T_7138_119;\n  wire  T_7138_120;\n  wire  T_7138_121;\n  wire  T_7138_122;\n  wire  T_7138_123;\n  wire  T_7138_124;\n  wire  T_7138_125;\n  wire  T_7138_126;\n  wire  T_7138_127;\n  wire  T_7269;\n  wire  T_7270;\n  wire  T_7271;\n  wire  T_7272;\n  wire  T_7273;\n  wire  T_7274;\n  wire  T_7275;\n  wire [1:0] T_7279;\n  wire [2:0] T_7280;\n  wire [1:0] T_7281;\n  wire [1:0] T_7282;\n  wire [3:0] T_7283;\n  wire [6:0] T_7284;\n  wire  T_7285;\n  wire  T_7286;\n  wire  T_7287;\n  wire  T_7288;\n  wire  T_7289;\n  wire  T_7290;\n  wire  T_7291;\n  wire [1:0] T_7295;\n  wire [2:0] T_7296;\n  wire [1:0] T_7297;\n  wire [1:0] T_7298;\n  wire [3:0] T_7299;\n  wire [6:0] T_7300;\n  wire  GEN_0;\n  wire  GEN_22;\n  wire  GEN_23;\n  wire  GEN_24;\n  wire  GEN_25;\n  wire  GEN_26;\n  wire  GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_31;\n  wire  GEN_32;\n  wire  GEN_33;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  GEN_36;\n  wire  GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire  GEN_40;\n  wire  GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire  GEN_48;\n  wire  GEN_49;\n  wire  GEN_50;\n  wire  GEN_51;\n  wire  GEN_52;\n  wire  GEN_53;\n  wire  GEN_54;\n  wire  GEN_55;\n  wire  GEN_56;\n  wire  GEN_57;\n  wire  GEN_58;\n  wire  GEN_59;\n  wire  GEN_60;\n  wire  GEN_61;\n  wire  GEN_62;\n  wire  GEN_63;\n  wire  GEN_64;\n  wire  GEN_65;\n  wire  GEN_66;\n  wire  GEN_67;\n  wire  GEN_68;\n  wire  GEN_69;\n  wire  GEN_70;\n  wire  GEN_71;\n  wire  GEN_72;\n  wire  GEN_73;\n  wire  GEN_74;\n  wire  GEN_75;\n  wire  GEN_76;\n  wire  GEN_77;\n  wire  GEN_78;\n  wire  GEN_79;\n  wire  GEN_80;\n  wire  GEN_81;\n  wire  GEN_82;\n  wire  GEN_83;\n  wire  GEN_84;\n  wire  GEN_85;\n  wire  GEN_86;\n  wire  GEN_87;\n  wire  GEN_88;\n  wire  GEN_89;\n  wire  GEN_90;\n  wire  GEN_91;\n  wire  GEN_92;\n  wire  GEN_93;\n  wire  GEN_94;\n  wire  GEN_95;\n  wire  GEN_96;\n  wire  GEN_97;\n  wire  GEN_98;\n  wire  GEN_99;\n  wire  GEN_100;\n  wire  GEN_101;\n  wire  GEN_102;\n  wire  GEN_103;\n  wire  GEN_104;\n  wire  GEN_105;\n  wire  GEN_106;\n  wire  GEN_107;\n  wire  GEN_108;\n  wire  GEN_109;\n  wire  GEN_110;\n  wire  GEN_111;\n  wire  GEN_112;\n  wire  GEN_113;\n  wire  GEN_114;\n  wire  GEN_115;\n  wire  GEN_116;\n  wire  GEN_117;\n  wire  GEN_118;\n  wire  GEN_119;\n  wire  GEN_120;\n  wire  GEN_121;\n  wire  GEN_122;\n  wire  GEN_123;\n  wire  GEN_124;\n  wire  GEN_125;\n  wire  GEN_126;\n  wire  GEN_127;\n  wire  GEN_128;\n  wire  GEN_129;\n  wire  GEN_130;\n  wire  GEN_131;\n  wire  GEN_132;\n  wire  GEN_133;\n  wire  GEN_134;\n  wire  GEN_135;\n  wire  GEN_136;\n  wire  GEN_137;\n  wire  GEN_138;\n  wire  GEN_139;\n  wire  GEN_140;\n  wire  GEN_141;\n  wire  GEN_142;\n  wire  GEN_143;\n  wire  GEN_144;\n  wire  GEN_145;\n  wire  GEN_146;\n  wire  GEN_147;\n  wire  GEN_148;\n  wire  GEN_1;\n  wire  GEN_149;\n  wire  GEN_150;\n  wire  GEN_151;\n  wire  GEN_152;\n  wire  GEN_153;\n  wire  GEN_154;\n  wire  GEN_155;\n  wire  GEN_156;\n  wire  GEN_157;\n  wire  GEN_158;\n  wire  GEN_159;\n  wire  GEN_160;\n  wire  GEN_161;\n  wire  GEN_162;\n  wire  GEN_163;\n  wire  GEN_164;\n  wire  GEN_165;\n  wire  GEN_166;\n  wire  GEN_167;\n  wire  GEN_168;\n  wire  GEN_169;\n  wire  GEN_170;\n  wire  GEN_171;\n  wire  GEN_172;\n  wire  GEN_173;\n  wire  GEN_174;\n  wire  GEN_175;\n  wire  GEN_176;\n  wire  GEN_177;\n  wire  GEN_178;\n  wire  GEN_179;\n  wire  GEN_180;\n  wire  GEN_181;\n  wire  GEN_182;\n  wire  GEN_183;\n  wire  GEN_184;\n  wire  GEN_185;\n  wire  GEN_186;\n  wire  GEN_187;\n  wire  GEN_188;\n  wire  GEN_189;\n  wire  GEN_190;\n  wire  GEN_191;\n  wire  GEN_192;\n  wire  GEN_193;\n  wire  GEN_194;\n  wire  GEN_195;\n  wire  GEN_196;\n  wire  GEN_197;\n  wire  GEN_198;\n  wire  GEN_199;\n  wire  GEN_200;\n  wire  GEN_201;\n  wire  GEN_202;\n  wire  GEN_203;\n  wire  GEN_204;\n  wire  GEN_205;\n  wire  GEN_206;\n  wire  GEN_207;\n  wire  GEN_208;\n  wire  GEN_209;\n  wire  GEN_210;\n  wire  GEN_211;\n  wire  GEN_212;\n  wire  GEN_213;\n  wire  GEN_214;\n  wire  GEN_215;\n  wire  GEN_216;\n  wire  GEN_217;\n  wire  GEN_218;\n  wire  GEN_219;\n  wire  GEN_220;\n  wire  GEN_221;\n  wire  GEN_222;\n  wire  GEN_223;\n  wire  GEN_224;\n  wire  GEN_225;\n  wire  GEN_226;\n  wire  GEN_227;\n  wire  GEN_228;\n  wire  GEN_229;\n  wire  GEN_230;\n  wire  GEN_231;\n  wire  GEN_232;\n  wire  GEN_233;\n  wire  GEN_234;\n  wire  GEN_235;\n  wire  GEN_236;\n  wire  GEN_237;\n  wire  GEN_238;\n  wire  GEN_239;\n  wire  GEN_240;\n  wire  GEN_241;\n  wire  GEN_242;\n  wire  GEN_243;\n  wire  GEN_244;\n  wire  GEN_245;\n  wire  GEN_246;\n  wire  GEN_247;\n  wire  GEN_248;\n  wire  GEN_249;\n  wire  GEN_250;\n  wire  GEN_251;\n  wire  GEN_252;\n  wire  GEN_253;\n  wire  GEN_254;\n  wire  GEN_255;\n  wire  GEN_256;\n  wire  GEN_257;\n  wire  GEN_258;\n  wire  GEN_259;\n  wire  GEN_260;\n  wire  GEN_261;\n  wire  GEN_262;\n  wire  GEN_263;\n  wire  GEN_264;\n  wire  GEN_265;\n  wire  GEN_266;\n  wire  GEN_267;\n  wire  GEN_268;\n  wire  GEN_269;\n  wire  GEN_270;\n  wire  GEN_271;\n  wire  GEN_272;\n  wire  GEN_273;\n  wire  GEN_274;\n  wire  GEN_275;\n  wire  T_7303;\n  wire  GEN_2;\n  wire  GEN_276;\n  wire  GEN_277;\n  wire  GEN_278;\n  wire  GEN_279;\n  wire  GEN_280;\n  wire  GEN_281;\n  wire  GEN_282;\n  wire  GEN_283;\n  wire  GEN_284;\n  wire  GEN_285;\n  wire  GEN_286;\n  wire  GEN_287;\n  wire  GEN_288;\n  wire  GEN_289;\n  wire  GEN_290;\n  wire  GEN_291;\n  wire  GEN_292;\n  wire  GEN_293;\n  wire  GEN_294;\n  wire  GEN_295;\n  wire  GEN_296;\n  wire  GEN_297;\n  wire  GEN_298;\n  wire  GEN_299;\n  wire  GEN_300;\n  wire  GEN_301;\n  wire  GEN_302;\n  wire  GEN_303;\n  wire  GEN_304;\n  wire  GEN_305;\n  wire  GEN_306;\n  wire  GEN_307;\n  wire  GEN_308;\n  wire  GEN_309;\n  wire  GEN_310;\n  wire  GEN_311;\n  wire  GEN_312;\n  wire  GEN_313;\n  wire  GEN_314;\n  wire  GEN_315;\n  wire  GEN_316;\n  wire  GEN_317;\n  wire  GEN_318;\n  wire  GEN_319;\n  wire  GEN_320;\n  wire  GEN_321;\n  wire  GEN_322;\n  wire  GEN_323;\n  wire  GEN_324;\n  wire  GEN_325;\n  wire  GEN_326;\n  wire  GEN_327;\n  wire  GEN_328;\n  wire  GEN_329;\n  wire  GEN_330;\n  wire  GEN_331;\n  wire  GEN_332;\n  wire  GEN_333;\n  wire  GEN_334;\n  wire  GEN_335;\n  wire  GEN_336;\n  wire  GEN_337;\n  wire  GEN_338;\n  wire  GEN_339;\n  wire  GEN_340;\n  wire  GEN_341;\n  wire  GEN_342;\n  wire  GEN_343;\n  wire  GEN_344;\n  wire  GEN_345;\n  wire  GEN_346;\n  wire  GEN_347;\n  wire  GEN_348;\n  wire  GEN_349;\n  wire  GEN_350;\n  wire  GEN_351;\n  wire  GEN_352;\n  wire  GEN_353;\n  wire  GEN_354;\n  wire  GEN_355;\n  wire  GEN_356;\n  wire  GEN_357;\n  wire  GEN_358;\n  wire  GEN_359;\n  wire  GEN_360;\n  wire  GEN_361;\n  wire  GEN_362;\n  wire  GEN_363;\n  wire  GEN_364;\n  wire  GEN_365;\n  wire  GEN_366;\n  wire  GEN_367;\n  wire  GEN_368;\n  wire  GEN_369;\n  wire  GEN_370;\n  wire  GEN_371;\n  wire  GEN_372;\n  wire  GEN_373;\n  wire  GEN_374;\n  wire  GEN_375;\n  wire  GEN_376;\n  wire  GEN_377;\n  wire  GEN_378;\n  wire  GEN_379;\n  wire  GEN_380;\n  wire  GEN_381;\n  wire  GEN_382;\n  wire  GEN_383;\n  wire  GEN_384;\n  wire  GEN_385;\n  wire  GEN_386;\n  wire  GEN_387;\n  wire  GEN_388;\n  wire  GEN_389;\n  wire  GEN_390;\n  wire  GEN_391;\n  wire  GEN_392;\n  wire  GEN_393;\n  wire  GEN_394;\n  wire  GEN_395;\n  wire  GEN_396;\n  wire  GEN_397;\n  wire  GEN_398;\n  wire  GEN_399;\n  wire  GEN_400;\n  wire  GEN_401;\n  wire  GEN_402;\n  wire  GEN_3;\n  wire  GEN_403;\n  wire  GEN_404;\n  wire  GEN_405;\n  wire  GEN_406;\n  wire  GEN_407;\n  wire  GEN_408;\n  wire  GEN_409;\n  wire  GEN_410;\n  wire  GEN_411;\n  wire  GEN_412;\n  wire  GEN_413;\n  wire  GEN_414;\n  wire  GEN_415;\n  wire  GEN_416;\n  wire  GEN_417;\n  wire  GEN_418;\n  wire  GEN_419;\n  wire  GEN_420;\n  wire  GEN_421;\n  wire  GEN_422;\n  wire  GEN_423;\n  wire  GEN_424;\n  wire  GEN_425;\n  wire  GEN_426;\n  wire  GEN_427;\n  wire  GEN_428;\n  wire  GEN_429;\n  wire  GEN_430;\n  wire  GEN_431;\n  wire  GEN_432;\n  wire  GEN_433;\n  wire  GEN_434;\n  wire  GEN_435;\n  wire  GEN_436;\n  wire  GEN_437;\n  wire  GEN_438;\n  wire  GEN_439;\n  wire  GEN_440;\n  wire  GEN_441;\n  wire  GEN_442;\n  wire  GEN_443;\n  wire  GEN_444;\n  wire  GEN_445;\n  wire  GEN_446;\n  wire  GEN_447;\n  wire  GEN_448;\n  wire  GEN_449;\n  wire  GEN_450;\n  wire  GEN_451;\n  wire  GEN_452;\n  wire  GEN_453;\n  wire  GEN_454;\n  wire  GEN_455;\n  wire  GEN_456;\n  wire  GEN_457;\n  wire  GEN_458;\n  wire  GEN_459;\n  wire  GEN_460;\n  wire  GEN_461;\n  wire  GEN_462;\n  wire  GEN_463;\n  wire  GEN_464;\n  wire  GEN_465;\n  wire  GEN_466;\n  wire  GEN_467;\n  wire  GEN_468;\n  wire  GEN_469;\n  wire  GEN_470;\n  wire  GEN_471;\n  wire  GEN_472;\n  wire  GEN_473;\n  wire  GEN_474;\n  wire  GEN_475;\n  wire  GEN_476;\n  wire  GEN_477;\n  wire  GEN_478;\n  wire  GEN_479;\n  wire  GEN_480;\n  wire  GEN_481;\n  wire  GEN_482;\n  wire  GEN_483;\n  wire  GEN_484;\n  wire  GEN_485;\n  wire  GEN_486;\n  wire  GEN_487;\n  wire  GEN_488;\n  wire  GEN_489;\n  wire  GEN_490;\n  wire  GEN_491;\n  wire  GEN_492;\n  wire  GEN_493;\n  wire  GEN_494;\n  wire  GEN_495;\n  wire  GEN_496;\n  wire  GEN_497;\n  wire  GEN_498;\n  wire  GEN_499;\n  wire  GEN_500;\n  wire  GEN_501;\n  wire  GEN_502;\n  wire  GEN_503;\n  wire  GEN_504;\n  wire  GEN_505;\n  wire  GEN_506;\n  wire  GEN_507;\n  wire  GEN_508;\n  wire  GEN_509;\n  wire  GEN_510;\n  wire  GEN_511;\n  wire  GEN_512;\n  wire  GEN_513;\n  wire  GEN_514;\n  wire  GEN_515;\n  wire  GEN_516;\n  wire  GEN_517;\n  wire  GEN_518;\n  wire  GEN_519;\n  wire  GEN_520;\n  wire  GEN_521;\n  wire  GEN_522;\n  wire  GEN_523;\n  wire  GEN_524;\n  wire  GEN_525;\n  wire  GEN_526;\n  wire  GEN_527;\n  wire  GEN_528;\n  wire  GEN_529;\n  wire  T_7306;\n  wire  T_7307;\n  wire  T_7308;\n  wire  T_7309;\n  wire  T_7310;\n  wire [127:0] T_7312;\n  wire [1:0] T_7313;\n  wire [1:0] T_7314;\n  wire [3:0] T_7315;\n  wire [1:0] T_7316;\n  wire [1:0] T_7317;\n  wire [3:0] T_7318;\n  wire [7:0] T_7319;\n  wire [1:0] T_7320;\n  wire [3:0] T_7322;\n  wire [7:0] T_7326;\n  wire [15:0] T_7327;\n  wire [1:0] T_7328;\n  wire [1:0] T_7329;\n  wire [3:0] T_7330;\n  wire [1:0] T_7331;\n  wire [1:0] T_7332;\n  wire [3:0] T_7333;\n  wire [7:0] T_7334;\n  wire [1:0] T_7335;\n  wire [3:0] T_7337;\n  wire [7:0] T_7341;\n  wire [15:0] T_7342;\n  wire [31:0] T_7343;\n  wire [1:0] T_7344;\n  wire [1:0] T_7345;\n  wire [3:0] T_7346;\n  wire [1:0] T_7347;\n  wire [1:0] T_7348;\n  wire [3:0] T_7349;\n  wire [7:0] T_7350;\n  wire [1:0] T_7351;\n  wire [1:0] T_7352;\n  wire [3:0] T_7353;\n  wire [1:0] T_7354;\n  wire [1:0] T_7355;\n  wire [3:0] T_7356;\n  wire [7:0] T_7357;\n  wire [15:0] T_7358;\n  wire [31:0] T_7374;\n  wire [63:0] T_7375;\n  wire [1:0] T_7376;\n  wire [1:0] T_7377;\n  wire [3:0] T_7378;\n  wire [1:0] T_7379;\n  wire [1:0] T_7380;\n  wire [3:0] T_7381;\n  wire [7:0] T_7382;\n  wire [1:0] T_7383;\n  wire [1:0] T_7384;\n  wire [3:0] T_7385;\n  wire [1:0] T_7386;\n  wire [1:0] T_7387;\n  wire [3:0] T_7388;\n  wire [7:0] T_7389;\n  wire [15:0] T_7390;\n  wire [1:0] T_7391;\n  wire [1:0] T_7392;\n  wire [3:0] T_7393;\n  wire [7:0] T_7397;\n  wire [15:0] T_7405;\n  wire [31:0] T_7406;\n  wire [63:0] T_7438;\n  wire [127:0] T_7439;\n  wire [127:0] T_7440;\n  wire [127:0] T_7442;\n  wire [1:0] T_7443;\n  wire [1:0] T_7444;\n  wire [3:0] T_7445;\n  wire [1:0] T_7446;\n  wire [1:0] T_7447;\n  wire [3:0] T_7448;\n  wire [7:0] T_7449;\n  wire [1:0] T_7450;\n  wire [3:0] T_7452;\n  wire [7:0] T_7456;\n  wire [15:0] T_7457;\n  wire [1:0] T_7458;\n  wire [1:0] T_7459;\n  wire [3:0] T_7460;\n  wire [1:0] T_7461;\n  wire [1:0] T_7462;\n  wire [3:0] T_7463;\n  wire [7:0] T_7464;\n  wire [1:0] T_7465;\n  wire [3:0] T_7467;\n  wire [7:0] T_7471;\n  wire [15:0] T_7472;\n  wire [31:0] T_7473;\n  wire [1:0] T_7474;\n  wire [1:0] T_7475;\n  wire [3:0] T_7476;\n  wire [1:0] T_7477;\n  wire [1:0] T_7478;\n  wire [3:0] T_7479;\n  wire [7:0] T_7480;\n  wire [1:0] T_7481;\n  wire [1:0] T_7482;\n  wire [3:0] T_7483;\n  wire [1:0] T_7484;\n  wire [1:0] T_7485;\n  wire [3:0] T_7486;\n  wire [7:0] T_7487;\n  wire [15:0] T_7488;\n  wire [31:0] T_7504;\n  wire [63:0] T_7505;\n  wire [1:0] T_7506;\n  wire [1:0] T_7507;\n  wire [3:0] T_7508;\n  wire [1:0] T_7509;\n  wire [1:0] T_7510;\n  wire [3:0] T_7511;\n  wire [7:0] T_7512;\n  wire [1:0] T_7513;\n  wire [1:0] T_7514;\n  wire [3:0] T_7515;\n  wire [1:0] T_7516;\n  wire [1:0] T_7517;\n  wire [3:0] T_7518;\n  wire [7:0] T_7519;\n  wire [15:0] T_7520;\n  wire [1:0] T_7521;\n  wire [1:0] T_7522;\n  wire [3:0] T_7523;\n  wire [7:0] T_7527;\n  wire [15:0] T_7535;\n  wire [31:0] T_7536;\n  wire [63:0] T_7568;\n  wire [127:0] T_7569;\n  wire [127:0] T_7570;\n  wire  T_7571;\n  wire  T_7572;\n  wire  T_7573;\n  wire  T_7574;\n  wire  T_7577;\n  wire  T_7578;\n  wire  T_7580;\n  wire  T_7581;\n  wire  T_7582;\n  wire  T_7583;\n  wire  T_7584;\n  wire  T_7587;\n  wire  T_7588;\n  wire  T_7590;\n  wire  T_7613;\n  wire  T_7614;\n  wire  T_7620;\n  wire  T_7623;\n  wire  T_7624;\n  wire  T_7630;\n  wire  T_7633;\n  wire  T_7634;\n  wire  T_7640;\n  wire  T_7643;\n  wire  T_7644;\n  wire  T_7650;\n  wire  T_7653;\n  wire  T_7654;\n  wire  T_7660;\n  wire  T_7663;\n  wire  T_7664;\n  wire  T_7670;\n  wire  T_7693;\n  wire  T_7694;\n  wire  T_7700;\n  wire  T_7703;\n  wire  T_7704;\n  wire  T_7710;\n  wire  T_7713;\n  wire  T_7714;\n  wire  T_7720;\n  wire  T_7723;\n  wire  T_7724;\n  wire  T_7730;\n  wire  T_7733;\n  wire  T_7734;\n  wire  T_7740;\n  wire  T_7743;\n  wire  T_7744;\n  wire  T_7750;\n  wire  T_7893;\n  wire  T_7894;\n  wire  T_7900;\n  wire  T_7903;\n  wire  T_7904;\n  wire  T_7910;\n  wire  T_7933;\n  wire  T_7934;\n  wire  T_7940;\n  wire  T_7943;\n  wire  T_7944;\n  wire  T_7950;\n  wire  T_7953;\n  wire  T_7954;\n  wire  T_7960;\n  wire  T_7963;\n  wire  T_7964;\n  wire  T_7970;\n  wire  T_7973;\n  wire  T_7974;\n  wire  T_7980;\n  wire  T_7983;\n  wire  T_7984;\n  wire  T_7990;\n  wire  T_8013;\n  wire  T_8014;\n  wire  T_8020;\n  wire  T_8023;\n  wire  T_8024;\n  wire  T_8030;\n  wire  T_8033;\n  wire  T_8034;\n  wire  T_8040;\n  wire  T_8043;\n  wire  T_8044;\n  wire  T_8050;\n  wire  T_8053;\n  wire  T_8054;\n  wire  T_8060;\n  wire  T_8063;\n  wire  T_8064;\n  wire  T_8070;\n  wire  T_8213;\n  wire  T_8214;\n  wire  T_8220;\n  wire  T_8223;\n  wire  T_8224;\n  wire  T_8230;\n  wire  T_8233;\n  wire  T_8234;\n  wire  T_8240;\n  wire  T_8243;\n  wire  T_8244;\n  wire  T_8250;\n  wire  T_8253;\n  wire  T_8254;\n  wire  T_8260;\n  wire  T_8263;\n  wire  T_8264;\n  wire  T_8270;\n  wire  T_8273;\n  wire  T_8274;\n  wire  T_8280;\n  wire  T_8283;\n  wire  T_8284;\n  wire  T_8290;\n  wire  T_8293;\n  wire  T_8294;\n  wire  T_8300;\n  wire  T_8303;\n  wire  T_8304;\n  wire  T_8310;\n  wire  T_8313;\n  wire  T_8314;\n  wire  T_8320;\n  wire  T_8323;\n  wire  T_8324;\n  wire  T_8330;\n  wire  T_8333;\n  wire  T_8334;\n  wire  T_8340;\n  wire  T_8343;\n  wire  T_8344;\n  wire  T_8350;\n  wire  T_8353;\n  wire  T_8354;\n  wire  T_8360;\n  wire  T_8363;\n  wire  T_8364;\n  wire  T_8370;\n  wire  T_8373;\n  wire  T_8374;\n  wire  T_8380;\n  wire  T_8383;\n  wire  T_8384;\n  wire  T_8390;\n  wire  T_8393;\n  wire  T_8394;\n  wire  T_8400;\n  wire  T_8403;\n  wire  T_8404;\n  wire  T_8410;\n  wire  T_8413;\n  wire  T_8414;\n  wire  T_8420;\n  wire  T_8423;\n  wire  T_8424;\n  wire  T_8430;\n  wire  T_8433;\n  wire  T_8434;\n  wire  T_8440;\n  wire  T_8443;\n  wire  T_8444;\n  wire  T_8450;\n  wire  T_8453;\n  wire  T_8454;\n  wire  T_8460;\n  wire  T_8463;\n  wire  T_8464;\n  wire  T_8470;\n  wire  T_8473;\n  wire  T_8474;\n  wire  T_8480;\n  wire  T_8483;\n  wire  T_8484;\n  wire  T_8490;\n  wire  T_8493;\n  wire  T_8494;\n  wire  T_8500;\n  wire  T_8503;\n  wire  T_8504;\n  wire  T_8510;\n  wire  T_8513;\n  wire  T_8514;\n  wire  T_8520;\n  wire  T_8523;\n  wire  T_8524;\n  wire  T_8530;\n  wire  T_8853;\n  wire  T_8854;\n  wire  T_8860;\n  wire  T_8863;\n  wire  T_8864;\n  wire  T_8870;\n  wire  T_8873;\n  wire  T_8874;\n  wire  T_8880;\n  wire  T_8883;\n  wire  T_8884;\n  wire  T_8890;\n  wire  T_8893;\n  wire  T_8894;\n  wire  T_8900;\n  wire  T_8903;\n  wire  T_8904;\n  wire  T_8910;\n  wire  T_8913;\n  wire  T_8914;\n  wire  T_8920;\n  wire  T_8923;\n  wire  T_8924;\n  wire  T_8930;\n  wire  T_8933;\n  wire  T_8934;\n  wire  T_8940;\n  wire  T_8943;\n  wire  T_8944;\n  wire  T_8950;\n  wire  T_8953;\n  wire  T_8954;\n  wire  T_8960;\n  wire  T_8963;\n  wire  T_8964;\n  wire  T_8970;\n  wire  T_8973;\n  wire  T_8974;\n  wire  T_8980;\n  wire  T_8983;\n  wire  T_8984;\n  wire  T_8990;\n  wire  T_8993;\n  wire  T_8994;\n  wire  T_9000;\n  wire  T_9003;\n  wire  T_9004;\n  wire  T_9010;\n  wire  T_9013;\n  wire  T_9014;\n  wire  T_9020;\n  wire  T_9023;\n  wire  T_9024;\n  wire  T_9030;\n  wire  T_9033;\n  wire  T_9034;\n  wire  T_9040;\n  wire  T_9043;\n  wire  T_9044;\n  wire  T_9050;\n  wire  T_9053;\n  wire  T_9054;\n  wire  T_9060;\n  wire  T_9063;\n  wire  T_9064;\n  wire  T_9070;\n  wire  T_9073;\n  wire  T_9074;\n  wire  T_9080;\n  wire  T_9083;\n  wire  T_9084;\n  wire  T_9090;\n  wire  T_9093;\n  wire  T_9094;\n  wire  T_9100;\n  wire  T_9103;\n  wire  T_9104;\n  wire  T_9110;\n  wire  T_9113;\n  wire  T_9114;\n  wire  T_9120;\n  wire  T_9123;\n  wire  T_9124;\n  wire  T_9130;\n  wire  T_9133;\n  wire  T_9134;\n  wire  T_9140;\n  wire  T_9143;\n  wire  T_9144;\n  wire  T_9150;\n  wire  T_9153;\n  wire  T_9154;\n  wire  T_9160;\n  wire  T_9163;\n  wire  T_9164;\n  wire  T_9170;\n  wire  T_9173;\n  wire  T_9174;\n  wire  T_9180;\n  wire  T_9183;\n  wire  T_9184;\n  wire  T_9190;\n  wire  T_9193;\n  wire  T_9194;\n  wire  T_9200;\n  wire  T_9203;\n  wire  T_9204;\n  wire  T_9210;\n  wire  T_9213;\n  wire  T_9214;\n  wire  T_9220;\n  wire  T_9223;\n  wire  T_9224;\n  wire  T_9230;\n  wire  T_9233;\n  wire  T_9234;\n  wire  T_9240;\n  wire  T_9243;\n  wire  T_9244;\n  wire  T_9250;\n  wire  T_10462_0;\n  wire  T_10462_1;\n  wire  T_10462_2;\n  wire  T_10462_3;\n  wire  T_10462_4;\n  wire  T_10462_5;\n  wire  T_10462_6;\n  wire  T_10462_7;\n  wire  T_10462_8;\n  wire  T_10462_9;\n  wire  T_10462_10;\n  wire  T_10462_11;\n  wire  T_10462_12;\n  wire  T_10462_13;\n  wire  T_10462_14;\n  wire  T_10462_15;\n  wire  T_10462_16;\n  wire  T_10462_17;\n  wire  T_10462_18;\n  wire  T_10462_19;\n  wire  T_10462_20;\n  wire  T_10462_21;\n  wire  T_10462_22;\n  wire  T_10462_23;\n  wire  T_10462_24;\n  wire  T_10462_25;\n  wire  T_10462_26;\n  wire  T_10462_27;\n  wire  T_10462_28;\n  wire  T_10462_29;\n  wire  T_10462_30;\n  wire  T_10462_31;\n  wire  T_10462_32;\n  wire  T_10462_33;\n  wire  T_10462_34;\n  wire  T_10462_35;\n  wire  T_10462_36;\n  wire  T_10462_37;\n  wire  T_10462_38;\n  wire  T_10462_39;\n  wire  T_10462_40;\n  wire  T_10462_41;\n  wire  T_10462_42;\n  wire  T_10462_43;\n  wire  T_10462_44;\n  wire  T_10462_45;\n  wire  T_10462_46;\n  wire  T_10462_47;\n  wire  T_10462_48;\n  wire  T_10462_49;\n  wire  T_10462_50;\n  wire  T_10462_51;\n  wire  T_10462_52;\n  wire  T_10462_53;\n  wire  T_10462_54;\n  wire  T_10462_55;\n  wire  T_10462_56;\n  wire  T_10462_57;\n  wire  T_10462_58;\n  wire  T_10462_59;\n  wire  T_10462_60;\n  wire  T_10462_61;\n  wire  T_10462_62;\n  wire  T_10462_63;\n  wire  T_10462_64;\n  wire  T_10462_65;\n  wire  T_10462_66;\n  wire  T_10462_67;\n  wire  T_10462_68;\n  wire  T_10462_69;\n  wire  T_10462_70;\n  wire  T_10462_71;\n  wire  T_10462_72;\n  wire  T_10462_73;\n  wire  T_10462_74;\n  wire  T_10462_75;\n  wire  T_10462_76;\n  wire  T_10462_77;\n  wire  T_10462_78;\n  wire  T_10462_79;\n  wire  T_10462_80;\n  wire  T_10462_81;\n  wire  T_10462_82;\n  wire  T_10462_83;\n  wire  T_10462_84;\n  wire  T_10462_85;\n  wire  T_10462_86;\n  wire  T_10462_87;\n  wire  T_10462_88;\n  wire  T_10462_89;\n  wire  T_10462_90;\n  wire  T_10462_91;\n  wire  T_10462_92;\n  wire  T_10462_93;\n  wire  T_10462_94;\n  wire  T_10462_95;\n  wire  T_10462_96;\n  wire  T_10462_97;\n  wire  T_10462_98;\n  wire  T_10462_99;\n  wire  T_10462_100;\n  wire  T_10462_101;\n  wire  T_10462_102;\n  wire  T_10462_103;\n  wire  T_10462_104;\n  wire  T_10462_105;\n  wire  T_10462_106;\n  wire  T_10462_107;\n  wire  T_10462_108;\n  wire  T_10462_109;\n  wire  T_10462_110;\n  wire  T_10462_111;\n  wire  T_10462_112;\n  wire  T_10462_113;\n  wire  T_10462_114;\n  wire  T_10462_115;\n  wire  T_10462_116;\n  wire  T_10462_117;\n  wire  T_10462_118;\n  wire  T_10462_119;\n  wire  T_10462_120;\n  wire  T_10462_121;\n  wire  T_10462_122;\n  wire  T_10462_123;\n  wire  T_10462_124;\n  wire  T_10462_125;\n  wire  T_10462_126;\n  wire  T_10462_127;\n  wire [31:0] T_10725_0;\n  wire [31:0] T_10725_1;\n  wire ["}
{"text": "31:0] T_10725_2;\n  wire [31:0] T_10725_3;\n  wire [31:0] T_10725_4;\n  wire [31:0] T_10725_5;\n  wire [31:0] T_10725_6;\n  wire [31:0] T_10725_7;\n  wire [31:0] T_10725_8;\n  wire [31:0] T_10725_9;\n  wire [31:0] T_10725_10;\n  wire [31:0] T_10725_11;\n  wire [31:0] T_10725_12;\n  wire [31:0] T_10725_13;\n  wire [31:0] T_10725_14;\n  wire [31:0] T_10725_15;\n  wire [31:0] T_10725_16;\n  wire [31:0] T_10725_17;\n  wire [31:0] T_10725_18;\n  wire [31:0] T_10725_19;\n  wire [31:0] T_10725_20;\n  wire [31:0] T_10725_21;\n  wire [31:0] T_10725_22;\n  wire [31:0] T_10725_23;\n  wire [31:0] T_10725_24;\n  wire [31:0] T_10725_25;\n  wire [31:0] T_10725_26;\n  wire [31:0] T_10725_27;\n  wire [31:0] T_10725_28;\n  wire [31:0] T_10725_29;\n  wire [31:0] T_10725_30;\n  wire [31:0] T_10725_31;\n  wire [31:0] T_10725_32;\n  wire [31:0] T_10725_33;\n  wire [31:0] T_10725_34;\n  wire [31:0] T_10725_35;\n  wire [31:0] T_10725_36;\n  wire [31:0] T_10725_37;\n  wire [31:0] T_10725_38;\n  wire [31:0] T_10725_39;\n  wire [31:0] T_10725_40;\n  wire [31:0] T_10725_41;\n  wire [31:0] T_10725_42;\n  wire [31:0] T_10725_43;\n  wire [31:0] T_10725_44;\n  wire [31:0] T_10725_45;\n  wire [31:0] T_10725_46;\n  wire [31:0] T_10725_47;\n  wire [31:0] T_10725_48;\n  wire [31:0] T_10725_49;\n  wire [31:0] T_10725_50;\n  wire [31:0] T_10725_51;\n  wire [31:0] T_10725_52;\n  wire [31:0] T_10725_53;\n  wire [31:0] T_10725_54;\n  wire [31:0] T_10725_55;\n  wire [31:0] T_10725_56;\n  wire [31:0] T_10725_57;\n  wire [31:0] T_10725_58;\n  wire [31:0] T_10725_59;\n  wire [31:0] T_10725_60;\n  wire [31:0] T_10725_61;\n  wire [31:0] T_10725_62;\n  wire [31:0] T_10725_63;\n  wire [31:0] T_10725_64;\n  wire [31:0] T_10725_65;\n  wire [31:0] T_10725_66;\n  wire [31:0] T_10725_67;\n  wire [31:0] T_10725_68;\n  wire [31:0] T_10725_69;\n  wire [31:0] T_10725_70;\n  wire [31:0] T_10725_71;\n  wire [31:0] T_10725_72;\n  wire [31:0] T_10725_73;\n  wire [31:0] T_10725_74;\n  wire [31:0] T_10725_75;\n  wire [31:0] T_10725_76;\n  wire [31:0] T_10725_77;\n  wire [31:0] T_10725_78;\n  wire [31:0] T_10725_79;\n  wire [31:0] T_10725_80;\n  wire [31:0] T_10725_81;\n  wire [31:0] T_10725_82;\n  wire [31:0] T_10725_83;\n  wire [31:0] T_10725_84;\n  wire [31:0] T_10725_85;\n  wire [31:0] T_10725_86;\n  wire [31:0] T_10725_87;\n  wire [31:0] T_10725_88;\n  wire [31:0] T_10725_89;\n  wire [31:0] T_10725_90;\n  wire [31:0] T_10725_91;\n  wire [31:0] T_10725_92;\n  wire [31:0] T_10725_93;\n  wire [31:0] T_10725_94;\n  wire [31:0] T_10725_95;\n  wire [31:0] T_10725_96;\n  wire [31:0] T_10725_97;\n  wire [31:0] T_10725_98;\n  wire [31:0] T_10725_99;\n  wire [31:0] T_10725_100;\n  wire [31:0] T_10725_101;\n  wire [31:0] T_10725_102;\n  wire [31:0] T_10725_103;\n  wire [31:0] T_10725_104;\n  wire [31:0] T_10725_105;\n  wire [31:0] T_10725_106;\n  wire [31:0] T_10725_107;\n  wire [31:0] T_10725_108;\n  wire [31:0] T_10725_109;\n  wire [31:0] T_10725_110;\n  wire [31:0] T_10725_111;\n  wire [31:0] T_10725_112;\n  wire [31:0] T_10725_113;\n  wire [31:0] T_10725_114;\n  wire [31:0] T_10725_115;\n  wire [31:0] T_10725_116;\n  wire [31:0] T_10725_117;\n  wire [31:0] T_10725_118;\n  wire [31:0] T_10725_119;\n  wire [31:0] T_10725_120;\n  wire [31:0] T_10725_121;\n  wire [31:0] T_10725_122;\n  wire [31:0] T_10725_123;\n  wire [31:0] T_10725_124;\n  wire [31:0] T_10725_125;\n  wire [31:0] T_10725_126;\n  wire [31:0] T_10725_127;\n  wire  GEN_4;\n  wire  GEN_530;\n  wire  GEN_531;\n  wire  GEN_532;\n  wire  GEN_533;\n  wire  GEN_534;\n  wire  GEN_535;\n  wire  GEN_536;\n  wire  GEN_537;\n  wire  GEN_538;\n  wire  GEN_539;\n  wire  GEN_540;\n  wire  GEN_541;\n  wire  GEN_542;\n  wire  GEN_543;\n  wire  GEN_544;\n  wire  GEN_545;\n  wire  GEN_546;\n  wire  GEN_547;\n  wire  GEN_548;\n  wire  GEN_549;\n  wire  GEN_550;\n  wire  GEN_551;\n  wire  GEN_552;\n  wire  GEN_553;\n  wire  GEN_554;\n  wire  GEN_555;\n  wire  GEN_556;\n  wire  GEN_557;\n  wire  GEN_558;\n  wire  GEN_559;\n  wire  GEN_560;\n  wire  GEN_561;\n  wire  GEN_562;\n  wire  GEN_563;\n  wire  GEN_564;\n  wire  GEN_565;\n  wire  GEN_566;\n  wire  GEN_567;\n  wire  GEN_568;\n  wire  GEN_569;\n  wire  GEN_570;\n  wire  GEN_571;\n  wire  GEN_572;\n  wire  GEN_573;\n  wire  GEN_574;\n  wire  GEN_575;\n  wire  GEN_576;\n  wire  GEN_577;\n  wire  GEN_578;\n  wire  GEN_579;\n  wire  GEN_580;\n  wire  GEN_581;\n  wire  GEN_582;\n  wire  GEN_583;\n  wire  GEN_584;\n  wire  GEN_585;\n  wire  GEN_586;\n  wire  GEN_587;\n  wire  GEN_588;\n  wire  GEN_589;\n  wire  GEN_590;\n  wire  GEN_591;\n  wire  GEN_592;\n  wire  GEN_593;\n  wire  GEN_594;\n  wire  GEN_595;\n  wire  GEN_596;\n  wire  GEN_597;\n  wire  GEN_598;\n  wire  GEN_599;\n  wire  GEN_600;\n  wire  GEN_601;\n  wire  GEN_602;\n  wire  GEN_603;\n  wire  GEN_604;\n  wire  GEN_605;\n  wire  GEN_606;\n  wire  GEN_607;\n  wire  GEN_608;\n  wire  GEN_609;\n  wire  GEN_610;\n  wire  GEN_611;\n  wire  GEN_612;\n  wire  GEN_613;\n  wire  GEN_614;\n  wire  GEN_615;\n  wire  GEN_616;\n  wire  GEN_617;\n  wire  GEN_618;\n  wire  GEN_619;\n  wire  GEN_620;\n  wire  GEN_621;\n  wire  GEN_622;\n  wire  GEN_623;\n  wire  GEN_624;\n  wire  GEN_625;\n  wire  GEN_626;\n  wire  GEN_627;\n  wire  GEN_628;\n  wire  GEN_629;\n  wire  GEN_630;\n  wire  GEN_631;\n  wire  GEN_632;\n  wire  GEN_633;\n  wire  GEN_634;\n  wire  GEN_635;\n  wire  GEN_636;\n  wire  GEN_637;\n  wire  GEN_638;\n  wire  GEN_639;\n  wire  GEN_640;\n  wire  GEN_641;\n  wire  GEN_642;\n  wire  GEN_643;\n  wire  GEN_644;\n  wire  GEN_645;\n  wire  GEN_646;\n  wire  GEN_647;\n  wire  GEN_648;\n  wire  GEN_649;\n  wire  GEN_650;\n  wire  GEN_651;\n  wire  GEN_652;\n  wire  GEN_653;\n  wire  GEN_654;\n  wire  GEN_655;\n  wire  GEN_656;\n  wire [31:0] GEN_5;\n  wire [31:0] GEN_657;\n  wire [31:0] GEN_658;\n  wire [31:0] GEN_659;\n  wire [31:0] GEN_660;\n  wire [31:0] GEN_661;\n  wire [31:0] GEN_662;\n  wire [31:0] GEN_663;\n  wire [31:0] GEN_664;\n  wire [31:0] GEN_665;\n  wire [31:0] GEN_666;\n  wire [31:0] GEN_667;\n  wire [31:0] GEN_668;\n  wire [31:0] GEN_669;\n  wire [31:0] GEN_670;\n  wire [31:0] GEN_671;\n  wire [31:0] GEN_672;\n  wire [31:0] GEN_673;\n  wire [31:0] GEN_674;\n  wire [31:0] GEN_675;\n  wire [31:0] GEN_676;\n  wire [31:0] GEN_677;\n  wire [31:0] GEN_678;\n  wire [31:0] GEN_679;\n  wire [31:0] GEN_680;\n  wire [31:0] GEN_681;\n  wire [31:0] GEN_682;\n  wire [31:0] GEN_683;\n  wire [31:0] GEN_684;\n  wire [31:0] GEN_685;\n  wire [31:0] GEN_686;\n  wire [31:0] GEN_687;\n  wire [31:0] GEN_688;\n  wire [31:0] GEN_689;\n  wire [31:0] GEN_690;\n  wire [31:0] GEN_691;\n  wire [31:0] GEN_692;\n  wire [31:0] GEN_693;\n  wire [31:0] GEN_694;\n  wire [31:0] GEN_695;\n  wire [31:0] GEN_696;\n  wire [31:0] GEN_697;\n  wire [31:0] GEN_698;\n  wire [31:0] GEN_699;\n  wire [31:0] GEN_700;\n  wire [31:0] GEN_701;\n  wire [31:0] GEN_702;\n  wire [31:0] GEN_703;\n  wire [31:0] GEN_704;\n  wire [31:0] GEN_705;\n  wire [31:0] GEN_706;\n  wire [31:0] GEN_707;\n  wire [31:0] GEN_708;\n  wire [31:0] GEN_709;\n  wire [31:0] GEN_710;\n  wire [31:0] GEN_711;\n  wire [31:0] GEN_712;\n  wire [31:0] GEN_713;\n  wire [31:0] GEN_714;\n  wire [31:0] GEN_715;\n  wire [31:0] GEN_716;\n  wire [31:0] GEN_717;\n  wire [31:0] GEN_718;\n  wire [31:0] GEN_719;\n  wire [31:0] GEN_720;\n  wire [31:0] GEN_721;\n  wire [31:0] GEN_722;\n  wire [31:0] GEN_723;\n  wire [31:0] GEN_724;\n  wire [31:0] GEN_725;\n  wire [31:0] GEN_726;\n  wire [31:0] GEN_727;\n  wire [31:0] GEN_728;\n  wire [31:0] GEN_729;\n  wire [31:0] GEN_730;\n  wire [31:0] GEN_731;\n  wire [31:0] GEN_732;\n  wire [31:0] GEN_733;\n  wire [31:0] GEN_734;\n  wire [31:0] GEN_735;\n  wire [31:0] GEN_736;\n  wire [31:0] GEN_737;\n  wire [31:0] GEN_738;\n  wire [31:0] GEN_739;\n  wire [31:0] GEN_740;\n  wire [31:0] GEN_741;\n  wire [31:0] GEN_742;\n  wire [31:0] GEN_743;\n  wire [31:0] GEN_744;\n  wire [31:0] GEN_745;\n  wire [31:0] GEN_746;\n  wire [31:0] GEN_747;\n  wire [31:0] GEN_748;\n  wire [31:0] GEN_749;\n  wire [31:0] GEN_750;\n  wire [31:0] GEN_751;\n  wire [31:0] GEN_752;\n  wire [31:0] GEN_753;\n  wire [31:0] GEN_754;\n  wire [31:0] GEN_755;\n  wire [31:0] GEN_756;\n  wire [31:0] GEN_757;\n  wire [31:0] GEN_758;\n  wire [31:0] GEN_759;\n  wire [31:0] GEN_760;\n  wire [31:0] GEN_761;\n  wire [31:0] GEN_762;\n  wire [31:0] GEN_763;\n  wire [31:0] GEN_764;\n  wire [31:0] GEN_765;\n  wire [31:0] GEN_766;\n  wire [31:0] GEN_767;\n  wire [31:0] GEN_768;\n  wire [31:0] GEN_769;\n  wire [31:0] GEN_770;\n  wire [31:0] GEN_771;\n  wire [31:0] GEN_772;\n  wire [31:0] GEN_773;\n  wire [31:0] GEN_774;\n  wire [31:0] GEN_775;\n  wire [31:0] GEN_776;\n  wire [31:0] GEN_777;\n  wire [31:0] GEN_778;\n  wire [31:0] GEN_779;\n  wire [31:0] GEN_780;\n  wire [31:0] GEN_781;\n  wire [31:0] GEN_782;\n  wire [31:0] GEN_783;\n  wire [31:0] T_10858;\n  wire [1:0] T_10859;\n  wire [4:0] T_10861;\n  wire [2:0] T_10862;\n  wire [2:0] T_10873_opcode;\n  wire [1:0] T_10873_param;\n  wire [2:0] T_10873_size;\n  wire [4:0] T_10873_source;\n  wire  T_10873_sink;\n  wire [1:0] T_10873_addr_lo;\n  wire [31:0] T_10873_data;\n  wire  T_10873_error;\n  wire [2:0] GEN_784 = 3'b0;\n  reg [31:0] GEN_808;\n  wire [1:0] GEN_785 = 2'b0;\n  reg [31:0] GEN_809;\n  wire [2:0] GEN_786 = 3'b0;\n  reg [31:0] GEN_810;\n  wire [4:0] GEN_787 = 5'b0;\n  reg [31:0] GEN_811;\n  wire [28:0] GEN_788 = 29'b0;\n  reg [31:0] GEN_812;\n  wire [3:0] GEN_789 = 4'b0;\n  reg [31:0] GEN_813;\n  wire [31:0] GEN_790 = 32'b0;\n  reg [31:0] GEN_814;\n  wire  GEN_791 = 1'b0;\n  reg [31:0] GEN_815;\n  sirv_rtc rtc (\n    .clock(rtc_clock),\n    .reset(rtc_reset),\n    .io_regs_cfg_write_valid(rtc_io_regs_cfg_write_valid),\n    .io_regs_cfg_write_bits(rtc_io_regs_cfg_write_bits),\n    .io_regs_cfg_read(rtc_io_regs_cfg_read),\n    .io_regs_countLo_write_valid(rtc_io_regs_countLo_write_valid),\n    .io_regs_countLo_write_bits(rtc_io_regs_countLo_write_bits),\n    .io_regs_countLo_read(rtc_io_regs_countLo_read),\n    .io_regs_countHi_write_valid(rtc_io_regs_countHi_write_valid),\n    .io_regs_countHi_write_bits(rtc_io_regs_countHi_write_bits),\n    .io_regs_countHi_read(rtc_io_regs_countHi_read),\n    .io_regs_s_write_valid(rtc_io_regs_s_write_valid),\n    .io_regs_s_write_bits(rtc_io_regs_s_write_bits),\n    .io_regs_s_read(rtc_io_regs_s_read),\n    .io_regs_cmp_0_write_valid(rtc_io_regs_cmp_0_write_valid),\n    .io_regs_cmp_0_write_bits(rtc_io_regs_cmp_0_write_bits),\n    .io_regs_cmp_0_read(rtc_io_regs_cmp_0_read),\n    .io_regs_feed_write_valid(rtc_io_regs_feed_write_valid),\n    .io_regs_feed_write_bits(rtc_io_regs_feed_write_bits),\n    .io_regs_feed_read(rtc_io_regs_feed_read),\n    .io_regs_key_write_valid(rtc_io_regs_key_write_valid),\n    .io_regs_key_write_bits(rtc_io_regs_key_write_bits),\n    .io_regs_key_read(rtc_io_regs_key_read),\n    .io_ip_0(rtc_io_ip_0)\n  );\n  sirv_pmu u_sirv_pmu (\n    .clock(pmu_clock),\n    .reset(pmu_reset),\n    .io_wakeup_awakeup(pmu_io_wakeup_awakeup),\n    .io_wakeup_dwakeup(pmu_io_wakeup_dwakeup),\n    .io_wakeup_rtc(pmu_io_wakeup_rtc),\n    .io_wakeup_reset(pmu_io_wakeup_reset),\n    .io_control_hfclkrst(pmu_io_control_hfclkrst),\n    .io_control_corerst(pmu_io_control_corerst),\n    .io_control_reserved1(pmu_io_control_reserved1),\n    .io_control_vddpaden(pmu_io_control_vddpaden),\n    .io_control_reserved0(pmu_io_control_reserved0),\n    .io_regs_ie_write_valid(pmu_io_regs_ie_write_valid),\n    .io_regs_ie_write_bits(pmu_io_regs_ie_write_bits),\n    .io_regs_ie_read(pmu_io_regs_ie_read),\n    .io_regs_cause_write_valid(pmu_io_regs_cause_write_valid),\n    .io_regs_cause_write_bits(pmu_io_regs_cause_write_bits),\n    .io_regs_cause_read(pmu_io_regs_cause_read),\n    .io_regs_sleep_write_valid(pmu_io_regs_sleep_write_valid),\n    .io_regs_sleep_write_bits(pmu_io_regs_sleep_write_bits),\n    .io_regs_sleep_read(pmu_io_regs_sleep_read),\n    .io_regs_key_write_valid(pmu_io_regs_key_write_valid),\n    .io_regs_key_write_bits(pmu_io_regs_key_write_bits),\n    .io_regs_key_read(pmu_io_regs_key_read),\n    .io_regs_wakeupProgram_0_write_valid(pmu_io_regs_wakeupProgram_0_write_valid),\n    .io_regs_wakeupProgram_0_write_bits(pmu_io_regs_wakeupProgram_0_write_bits),\n    .io_regs_wakeupProgram_0_read(pmu_io_regs_wakeupProgram_0_read),\n    .io_regs_wakeupProgram_1_write_valid(pmu_io_regs_wakeupProgram_1_write_valid),\n    .io_regs_wakeupProgram_1_write_bits(pmu_io_regs_wakeupProgram_1_write_bits),\n    .io_regs_wakeupProgram_1_read(pmu_io_regs_wakeupProgram_1_read),\n    .io_regs_wakeupProgram_2_write_valid(pmu_io_regs_wakeupProgram_2_write_valid),\n    .io_regs_wakeupProgram_2_write_bits(pmu_io_regs_wakeupProgram_2_write_bits),\n    .io_regs_wakeupProgram_2_read(pmu_io_regs_wakeupProgram_2_read),\n    .io_regs_wakeupProgram_3_write_valid(pmu_io_regs_wakeupProgram_3_write_valid),\n    .io_regs_wakeupProgram_3_write_bits(pmu_io_regs_wakeupProgram_3_write_bits),\n    .io_regs_wakeupProgram_3_read(pmu_io_regs_wakeupProgram_3_read),\n    .io_regs_wakeupProgram_4_write_valid(pmu_io_regs_wakeupProgram_4_write_valid),\n    .io_regs_wakeupProgram_4_write_bits(pmu_io_regs_wakeupProgram_4_write_bits),\n    .io_regs_wakeupProgram_4_read(pmu_io_regs_wakeupProgram_4_read),\n    .io_regs_wakeupProgram_5_write_valid(pmu_io_regs_wakeupProgram_5_write_valid),\n    .io_regs_wakeupProgram_5_write_bits(pmu_io_regs_wakeupProgram_5_write_bits),\n    .io_regs_wakeupProgram_5_read(pmu_io_regs_wakeupProgram_5_read),\n    .io_regs_wakeupProgram_6_write_valid(pmu_io_regs_wakeupProgram_6_write_valid),\n    .io_regs_wakeupProgram_6_write_bits(pmu_io_regs_wakeupProgram_6_write_bits),\n    .io_regs_wakeupProgram_6_read(pmu_io_regs_wakeupProgram_6_read),\n    .io_regs_wakeupProgram_7_write_valid(pmu_io_regs_wakeupProgram_7_write_valid),\n    .io_regs_wakeupProgram_7_write_bits(pmu_io_regs_wakeupProgram_7_write_bits),\n    .io_regs_wakeupProgram_7_read(pmu_io_regs_wakeupProgram_7_read),\n    .io_regs_sleepProgram_0_write_valid(pmu_io_regs_sleepProgram_0_write_valid),\n    .io_regs_sleepProgram_0_write_bits(pmu_io_regs_sleepProgram_0_write_bits),\n    .io_regs_sleepProgram_0_read(pmu_io_regs_sleepProgram_0_read),\n    .io_regs_sleepProgram_1_write_valid(pmu_io_regs_sleepProgram_1_write_valid),\n    .io_regs_sleepProgram_1_write_bits(pmu_io_regs_sleepProgram_1_write_bits),\n    .io_regs_sleepProgram_1_read(pmu_io_regs_sleepProgram_1_read),\n    .io_regs_sleepProgram_2_write_valid(pmu_io_regs_sleepProgram_2_write_valid),\n    .io_regs_sleepProgram_2_write_bits(pmu_io_regs_sleepProgram_2_write_bits),\n    .io_regs_sleepProgram_2_read(pmu_io_regs_sleepProgram_2_read),\n    .io_regs_sleepProgram_3_write_valid(pmu_io_regs_sleepProgram_3_write_valid),\n    .io_regs_sleepProgram_3_write_bits(pmu_io_regs_sleepProgram_3_write_bits),\n    .io_regs_sleepProgram_3_read(pmu_io_regs_sleepProgram_3_read),\n    .io_regs_sleepProgram_4_write_valid(pmu_io_regs_sleepProgram_4_write_valid),\n    .io_regs_sleepProgram_4_write_bits(pmu_io_regs_sleepProgram_4_write_bits),\n    .io_regs_sleepProgram_4_read(pmu_io_regs_sleepProgram_4_read),\n    .io_regs_sleepProgram_5_write_valid(pmu_io_regs_sleepProgram_5_write_valid),\n    .io_regs_sleepProgram_5_write_bits(pmu_io_regs_sleepProgram_5_write_bits),\n    .io_regs_sleepProgram_5_read(pmu_io_regs_sleepProgram_5_read),\n    .io_regs_sleepProgram_6_write_valid(pmu_io_regs_sleepProgram_6_write_valid),\n    .io_regs_sleepProgram_6_write_bits(pmu_io_regs_sleepProgram_6_write_bits),\n    .io_regs_sleepProgram_6_read(pmu_io_regs_sleepProgram_6_read),\n    .io_regs_sleepProgram_7_write_valid(pmu_io_regs_sleepProgram_7_write_valid),\n    .io_regs_sleepProgram_7_write_bits(pmu_io_regs_sleepProgram_7_write_bits),\n    .io_regs_sleepProgram_7_read(pmu_io_regs_sleepProgram_7_read),\n    .io_resetCauses_wdogrst(pmu_io_resetCauses_wdogrst),\n    .io_resetCauses_erst(pmu_io_resetCauses_erst),\n    .io_resetCauses_porrst(pmu_io_resetCauses_porrst)\n  );\n  sirv_wdog wdog (\n    .clock(wdog_clock),\n    .reset(wdog_reset),\n    .io_regs_cfg_write_valid(wdog_io_regs_cfg_write_valid),\n    .io_regs_cfg_write_bits(wdog_io_regs_cfg_write_bits),\n    .io_regs_cfg_read(wdog_io_regs_cfg_read),\n    .io_regs_countLo_write_valid(wdog_io_regs_countLo_write_valid),\n    .io_regs_countLo_write_bits(wdog_io_regs_countLo_write_bits),\n    .io_regs_countLo_read(wdog_io_regs_countLo_read),\n    .io_regs_countHi_write_valid(wdog_io_regs_countHi_write_valid),\n    .io_regs_countHi_write_bits(wdog_io_regs_countHi_write_bits),\n    .io_regs_countHi_read(wdog_io_regs_countHi_read),\n    .io_regs_s_write_valid(wdog_io_regs_s_write_valid),\n    .io_regs_s_write_bits(wdog_io_regs_s_write_bits),\n    .io_regs_s_read(wdog_io_regs_s_read),\n    .io_regs_cmp_0_write_valid(wdog_io_regs_cmp_0_write_valid),\n    .io_regs_cmp_0_write_bits(wdog_io_regs_cmp_0_write_bits),\n    .io_regs_cmp_0_read(wdog_io_regs_cmp_0_read),\n    .io_regs_feed_write_valid(wdog_io_regs_feed_write_valid),\n    .io_regs_feed_write_bits(wdog_io_regs_feed_write_bits),\n    .io_regs_feed_read(wdog_io_regs_feed_read),\n    .io_regs_key_write_valid(wdog_io_regs_key_write_valid),\n    .io_regs_key_write_bits(wdog_io_regs_key_write_bits),\n    .io_regs_key_read(wdog_io_regs_key_read),\n    .io_ip_0(wdog_io_ip_0),\n    .io_corerst(wdog_io_corerst),\n    .io_rst(wdog_io_rst)\n  );\n  sirv_queue u_queue_1 (\n    .clock(Queue_1_clock),\n    .reset(Queue_1_reset),\n    .io_enq_ready(Queue_1_io_enq_ready),\n    .io_enq_valid(Queue_1_io_enq_valid),\n    .io_enq_bits_read(Queue_1_io_enq_bits_read),\n    .io_enq_bits_index(Queue_1_io_enq_bits_index),\n    .io_enq_bits_data(Queue_1_io_enq_bits_data),\n    .io_enq_bits_mask(Queue_1_io_enq_bits_mask),\n    .io_enq_bits_extra(Queue_1_io_enq_bits_extra),\n    .io_deq_ready(Queue_1_io_deq_ready),\n    .io_deq_valid(Queue_1_io_deq_valid),\n    .io_deq_bits_read(Queue_1_io_deq_bits_read),\n    .io_deq_bits_index(Queue_1_io_deq_bits_index),\n    .io_deq_bits_data(Queue_1_io_deq_bits_data),\n    .io_deq_bits_mask(Queue_1_io_deq_bits_mask),\n    .io_deq_bits_extra(Queue_1_io_deq_bits_extra),\n    .io_count(Queue_1_io_count)\n  );\n  assign io_interrupts_0_0 = wdog_io_ip_0;\n  assign io_interrupts_0_1 = rtc_io_ip_0;\n  assign io_in_0_a_ready = T_953_ready;\n  assign io_in_0_b_valid = 1'h0;\n  assign io_in_0_b_bits_opcode = GEN_784;\n  assign io_in_0_b_bits_param = GEN_785;\n  assign io_in_0_b_bits_size = GEN_786;\n  assign io_in_0_b_bits_source = GEN_787;\n  assign io_in_0_b_bits_address = GEN_788;\n  assign io_in_0_b_bits_mask = GEN_789;\n  assign io_in_0_b_bits_data = GEN_790;\n  assign io_in_0_c_ready = 1'h1;\n  assign io_in_0_d_valid = T_992_valid;\n  assign io_in_0_d_bits_opcode = {{2'd0}, T_992_bits_read};\n  assign io_in_0_d_bits_param = T_10873_param;\n  assign io_in_0_d_bits_size = T_10873_size;\n  assign io_in_0_d_bits_source = T_10873_source;\n  assign io_in_0_d_bits_sink = T_10873_sink;\n  assign io_in_0_d_bits_addr_lo = T_10873_addr_lo;\n  assign io_in_0_d_bits_data = T_992_bits_data;\n  assign io_in_0_d_bits_error = T_10873_error;\n  assign io_in_0_e_ready = 1'h1;\n  assign io_lfclk = io_lfextclk;\n\n  // In DFT mode the internal generated reset siganls should be disabled\n  assign io_moff_hfclkrst = test_mode ? erst : pmu_io_control_hfclkrst;\n  assign io_moff_corerst  = test_mode ? erst : pmu_io_control_corerst;\n  assign io_wdog_rst      = test_mode ? erst : wdog_io_rst;\n\n        //Bob: This reserved1 signal is actually the padrst signal used in hifive board\n  assign io_pmu_padrst = test_mode ? 1'b1 : pmu_io_control_reserved1;\n\n  // In DFT mode the power control siganls should be disabled\n  assign io_pmu_vddpaden  = test_mode ? 1'b1 : pmu_io_control_vddpaden;\n\n  assign rtc_clock = clock;\n  assign rtc_reset = reset;\n  assign rtc_io_regs_cfg_write_valid = T_3904;\n  assign rtc_io_regs_cfg_write_bits = T_2505;\n  assign rtc_io_regs_countLo_write_valid = T_3824;\n  assign rtc_io_regs_countLo_write_bits = T_2505;\n  assign rtc_io_regs_countHi_write_valid = T_4264;\n  assign rtc_io_regs_countHi_write_bits = T_2505;\n  assign rtc_io_regs_s_write_valid = T_2704;\n  assign rtc_io_regs_s_write_bits = T_2505;\n  assign rtc_io_regs_cmp_0_write_valid = T_2624;\n  assign rtc_io_regs_cmp_0_write_bits = T_2505;\n  assign rtc_io_regs_feed_write_valid = T_3384;\n  assign rtc_io_regs_feed_write_bits = T_2505;\n  assign rtc_io_regs_key_write_valid = T_4064;\n  assign rtc_io_regs_key_write_bits = T_2505;\n  assign pmu_clock = clock;\n  assign pmu_reset = reset;\n  assign pmu_io_wakeup_awakeup = 1'h0;\n  assign pmu_io_wakeup_dwakeup = io_pmu_dwakeup;\n  assign pmu_io_wakeup_rtc = rtc_io_ip_0"}
{"text": ";\n  assign pmu_io_wakeup_reset = GEN_791;\n  assign pmu_io_regs_ie_write_valid = T_3744;\n  assign pmu_io_regs_ie_write_bits = T_3745;\n  assign pmu_io_regs_cause_write_valid = T_3504;\n  assign pmu_io_regs_cause_write_bits = T_2505;\n  assign pmu_io_regs_sleep_write_valid = T_4184;\n  assign pmu_io_regs_sleep_write_bits = T_2505;\n  assign pmu_io_regs_key_write_valid = T_4464;\n  assign pmu_io_regs_key_write_bits = T_2505;\n  assign pmu_io_regs_wakeupProgram_0_write_valid = T_3344;\n  assign pmu_io_regs_wakeupProgram_0_write_bits = T_2505;\n  assign pmu_io_regs_wakeupProgram_1_write_valid = T_3024;\n  assign pmu_io_regs_wakeupProgram_1_write_bits = T_2505;\n  assign pmu_io_regs_wakeupProgram_2_write_valid = T_3664;\n  assign pmu_io_regs_wakeupProgram_2_write_bits = T_2505;\n  assign pmu_io_regs_wakeupProgram_3_write_valid = T_3864;\n  assign pmu_io_regs_wakeupProgram_3_write_bits = T_2505;\n  assign pmu_io_regs_wakeupProgram_4_write_valid = T_4424;\n  assign pmu_io_regs_wakeupProgram_4_write_bits = T_2505;\n  assign pmu_io_regs_wakeupProgram_5_write_valid = T_2504;\n  assign pmu_io_regs_wakeupProgram_5_write_bits = T_2505;\n  assign pmu_io_regs_wakeupProgram_6_write_valid = T_2944;\n  assign pmu_io_regs_wakeupProgram_6_write_bits = T_2505;\n  assign pmu_io_regs_wakeupProgram_7_write_valid = T_3464;\n  assign pmu_io_regs_wakeupProgram_7_write_bits = T_2505;\n  assign pmu_io_regs_sleepProgram_0_write_valid = T_3944;\n  assign pmu_io_regs_sleepProgram_0_write_bits = T_2505;\n  assign pmu_io_regs_sleepProgram_1_write_valid = T_3144;\n  assign pmu_io_regs_sleepProgram_1_write_bits = T_2505;\n  assign pmu_io_regs_sleepProgram_2_write_valid = T_2824;\n  assign pmu_io_regs_sleepProgram_2_write_bits = T_2505;\n  assign pmu_io_regs_sleepProgram_3_write_valid = T_4144;\n  assign pmu_io_regs_sleepProgram_3_write_bits = T_2505;\n  assign pmu_io_regs_sleepProgram_4_write_valid = T_3544;\n  assign pmu_io_regs_sleepProgram_4_write_bits = T_2505;\n  assign pmu_io_regs_sleepProgram_5_write_valid = T_3064;\n  assign pmu_io_regs_sleepProgram_5_write_bits = T_2505;\n  assign pmu_io_regs_sleepProgram_6_write_valid = T_2784;\n  assign pmu_io_regs_sleepProgram_6_write_bits = T_2505;\n  assign pmu_io_regs_sleepProgram_7_write_valid = T_4344;\n  assign pmu_io_regs_sleepProgram_7_write_bits = T_2505;\n  assign pmu_io_resetCauses_wdogrst = io_resetCauses_wdogrst;\n  assign pmu_io_resetCauses_erst = io_resetCauses_erst;\n  assign pmu_io_resetCauses_porrst = io_resetCauses_porrst;\n  assign wdog_clock = clock;\n  assign wdog_reset = reset;\n  assign wdog_io_regs_cfg_write_valid = T_2544;\n  assign wdog_io_regs_cfg_write_bits = T_2505;\n  assign wdog_io_regs_countLo_write_valid = T_3184;\n  assign wdog_io_regs_countLo_write_bits = T_2505;\n  assign wdog_io_regs_countHi_write_valid = T_3704;\n  assign wdog_io_regs_countHi_write_bits = T_2505;\n  assign wdog_io_regs_s_write_valid = T_4304;\n  assign wdog_io_regs_s_write_bits = T_4105;\n  assign wdog_io_regs_cmp_0_write_valid = T_4104;\n  assign wdog_io_regs_cmp_0_write_bits = T_4105;\n  assign wdog_io_regs_feed_write_valid = T_2864;\n  assign wdog_io_regs_feed_write_bits = T_2505;\n  assign wdog_io_regs_key_write_valid = T_3584;\n  assign wdog_io_regs_key_write_bits = T_2505;\n  assign wdog_io_corerst = pmu_io_control_corerst;\n  assign T_953_ready = T_7307;\n  assign T_953_valid = io_in_0_a_valid;\n  assign T_953_bits_read = T_970;\n  assign T_953_bits_index = T_971[9:0];\n  assign T_953_bits_data = io_in_0_a_bits_data;\n  assign T_953_bits_mask = io_in_0_a_bits_mask;\n  assign T_953_bits_extra = T_974;\n  assign T_970 = io_in_0_a_bits_opcode == 3'h4;\n  assign T_971 = io_in_0_a_bits_address[28:2];\n  assign T_972 = io_in_0_a_bits_address[1:0];\n  assign T_973 = {T_972,io_in_0_a_bits_source};\n  assign T_974 = {T_973,io_in_0_a_bits_size};\n  assign T_992_ready = io_in_0_d_ready;\n  assign T_992_valid = T_7310;\n  assign T_992_bits_read = Queue_1_io_deq_bits_read;\n  assign T_992_bits_data = T_10858;\n  assign T_992_bits_extra = Queue_1_io_deq_bits_extra;\n  assign T_1028_ready = Queue_1_io_enq_ready;\n  assign T_1028_valid = T_7308;\n  assign T_1028_bits_read = T_953_bits_read;\n  assign T_1028_bits_index = T_953_bits_index;\n  assign T_1028_bits_data = T_953_bits_data;\n  assign T_1028_bits_mask = T_953_bits_mask;\n  assign T_1028_bits_extra = T_953_bits_extra;\n  assign Queue_1_clock = clock;\n  assign Queue_1_reset = reset;\n  assign Queue_1_io_enq_valid = T_1028_valid;\n  assign Queue_1_io_enq_bits_read = T_1028_bits_read;\n  assign Queue_1_io_enq_bits_index = T_1028_bits_index;\n  assign Queue_1_io_enq_bits_data = T_1028_bits_data;\n  assign Queue_1_io_enq_bits_mask = T_1028_bits_mask;\n  assign Queue_1_io_enq_bits_extra = T_1028_bits_extra;\n  assign Queue_1_io_deq_ready = T_7309;\n  assign T_1310 = T_1028_bits_index ^ 10'h45;\n  assign T_1311 = T_1310 & 10'h380;\n  assign T_1313 = T_1311 == 10'h0;\n  assign T_1314 = Queue_1_io_deq_bits_index ^ 10'h45;\n  assign T_1315 = T_1314 & 10'h380;\n  assign T_1317 = T_1315 == 10'h0;\n  assign T_1320 = T_1028_bits_index & 10'h380;\n  assign T_1322 = T_1320 == 10'h0;\n  assign T_1323 = Queue_1_io_deq_bits_index;\n  assign T_1324 = T_1323 & 10'h380;\n  assign T_1326 = T_1324 == 10'h0;\n  assign T_1328 = T_1028_bits_index ^ 10'h2a;\n  assign T_1329 = T_1328 & 10'h380;\n  assign T_1331 = T_1329 == 10'h0;\n  assign T_1332 = Queue_1_io_deq_bits_index ^ 10'h2a;\n  assign T_1333 = T_1332 & 10'h380;\n  assign T_1335 = T_1333 == 10'h0;\n  assign T_1337 = T_1028_bits_index ^ 10'h18;\n  assign T_1338 = T_1337 & 10'h380;\n  assign T_1340 = T_1338 == 10'h0;\n  assign T_1341 = Queue_1_io_deq_bits_index ^ 10'h18;\n  assign T_1342 = T_1341 & 10'h380;\n  assign T_1344 = T_1342 == 10'h0;\n  assign T_1346 = T_1028_bits_index ^ 10'h25;\n  assign T_1347 = T_1346 & 10'h380;\n  assign T_1349 = T_1347 == 10'h0;\n  assign T_1350 = Queue_1_io_deq_bits_index ^ 10'h25;\n  assign T_1351 = T_1350 & 10'h380;\n  assign T_1353 = T_1351 == 10'h0;\n  assign T_1355 = T_1028_bits_index ^ 10'h14;\n  assign T_1356 = T_1355 & 10'h380;\n  assign T_1358 = T_1356 == 10'h0;\n  assign T_1359 = Queue_1_io_deq_bits_index ^ 10'h14;\n  assign T_1360 = T_1359 & 10'h380;\n  assign T_1362 = T_1360 == 10'h0;\n  assign T_1364 = T_1028_bits_index ^ 10'h2e;\n  assign T_1365 = T_1364 & 10'h380;\n  assign T_1367 = T_1365 == 10'h0;\n  assign T_1368 = Queue_1_io_deq_bits_index ^ 10'h2e;\n  assign T_1369 = T_1368 & 10'h380;\n  assign T_1371 = T_1369 == 10'h0;\n  assign T_1373 = T_1028_bits_index ^ 10'h4e;\n  assign T_1374 = T_1373 & 10'h380;\n  assign T_1376 = T_1374 == 10'h0;\n  assign T_1377 = Queue_1_io_deq_bits_index ^ 10'h4e;\n  assign T_1378 = T_1377 & 10'h380;\n  assign T_1380 = T_1378 == 10'h0;\n  assign T_1382 = T_1028_bits_index ^ 10'h4a;\n  assign T_1383 = T_1382 & 10'h380;\n  assign T_1385 = T_1383 == 10'h0;\n  assign T_1386 = Queue_1_io_deq_bits_index ^ 10'h4a;\n  assign T_1387 = T_1386 & 10'h380;\n  assign T_1389 = T_1387 == 10'h0;\n  assign T_1391 = T_1028_bits_index ^ 10'h6;\n  assign T_1392 = T_1391 & 10'h380;\n  assign T_1394 = T_1392 == 10'h0;\n  assign T_1395 = Queue_1_io_deq_bits_index ^ 10'h6;\n  assign T_1396 = T_1395 & 10'h380;\n  assign T_1398 = T_1396 == 10'h0;\n  assign T_1400 = T_1028_bits_index ^ 10'h26;\n  assign T_1401 = T_1400 & 10'h380;\n  assign T_1403 = T_1401 == 10'h0;\n  assign T_1404 = Queue_1_io_deq_bits_index ^ 10'h26;\n  assign T_1405 = T_1404 & 10'h380;\n  assign T_1407 = T_1405 == 10'h0;\n  assign T_1409 = T_1028_bits_index ^ 10'h46;\n  assign T_1410 = T_1409 & 10'h380;\n  assign T_1412 = T_1410 == 10'h0;\n  assign T_1413 = Queue_1_io_deq_bits_index ^ 10'h46;\n  assign T_1414 = T_1413 & 10'h380;\n  assign T_1416 = T_1414 == 10'h0;\n  assign T_1418 = T_1028_bits_index ^ 10'h21;\n  assign T_1419 = T_1418 & 10'h380;\n  assign T_1421 = T_1419 == 10'h0;\n  assign T_1422 = Queue_1_io_deq_bits_index ^ 10'h21;\n  assign T_1423 = T_1422 & 10'h380;\n  assign T_1425 = T_1423 == 10'h0;\n  assign T_1427 = T_1028_bits_index ^ 10'h41;\n  assign T_1428 = T_1427 & 10'h380;\n  assign T_1430 = T_1428 == 10'h0;\n  assign T_1431 = Queue_1_io_deq_bits_index ^ 10'h41;\n  assign T_1432 = T_1431 & 10'h380;\n  assign T_1434 = T_1432 == 10'h0;\n  assign T_1436 = T_1028_bits_index ^ 10'h4d;\n  assign T_1437 = T_1436 & 10'h380;\n  assign T_1439 = T_1437 == 10'h0;\n  assign T_1440 = Queue_1_io_deq_bits_index ^ 10'h4d;\n  assign T_1441 = T_1440 & 10'h380;\n  assign T_1443 = T_1441 == 10'h0;\n  assign T_1445 = T_1028_bits_index ^ 10'h29;\n  assign T_1446 = T_1445 & 10'h380;\n  assign T_1448 = T_1446 == 10'h0;\n  assign T_1449 = Queue_1_io_deq_bits_index ^ 10'h29;\n  assign T_1450 = T_1449 & 10'h380;\n  assign T_1452 = T_1450 == 10'h0;\n  assign T_1454 = T_1028_bits_index ^ 10'h49;\n  assign T_1455 = T_1454 & 10'h380;\n  assign T_1457 = T_1455 == 10'h0;\n  assign T_1458 = Queue_1_io_deq_bits_index ^ 10'h49;\n  assign T_1459 = T_1458 & 10'h380;\n  assign T_1461 = T_1459 == 10'h0;\n  assign T_1463 = T_1028_bits_index ^ 10'h2;\n  assign T_1464 = T_1463 & 10'h380;\n  assign T_1466 = T_1464 == 10'h0;\n  assign T_1467 = Queue_1_io_deq_bits_index ^ 10'h2;\n  assign T_1468 = T_1467 & 10'h380;\n  assign T_1470 = T_1468 == 10'h0;\n  assign T_1472 = T_1028_bits_index ^ 10'h20;\n  assign T_1473 = T_1472 & 10'h380;\n  assign T_1475 = T_1473 == 10'h0;\n  assign T_1476 = Queue_1_io_deq_bits_index ^ 10'h20;\n  assign T_1477 = T_1476 & 10'h380;\n  assign T_1479 = T_1477 == 10'h0;\n  assign T_1481 = T_1028_bits_index ^ 10'h22;\n  assign T_1482 = T_1481 & 10'h380;\n  assign T_1484 = T_1482 == 10'h0;\n  assign T_1485 = Queue_1_io_deq_bits_index ^ 10'h22;\n  assign T_1486 = T_1485 & 10'h380;\n  assign T_1488 = T_1486 == 10'h0;\n  assign T_1490 = T_1028_bits_index ^ 10'h2d;\n  assign T_1491 = T_1490 & 10'h380;\n  assign T_1493 = T_1491 == 10'h0;\n  assign T_1494 = Queue_1_io_deq_bits_index ^ 10'h2d;\n  assign T_1495 = T_1494 & 10'h380;\n  assign T_1497 = T_1495 == 10'h0;\n  assign T_1499 = T_1028_bits_index ^ 10'h40;\n  assign T_1500 = T_1499 & 10'h380;\n  assign T_1502 = T_1500 == 10'h0;\n  assign T_1503 = Queue_1_io_deq_bits_index ^ 10'h40;\n  assign T_1504 = T_1503 & 10'h380;\n  assign T_1506 = T_1504 == 10'h0;\n  assign T_1508 = T_1028_bits_index ^ 10'h16;\n  assign T_1509 = T_1508 & 10'h380;\n  assign T_1511 = T_1509 == 10'h0;\n  assign T_1512 = Queue_1_io_deq_bits_index ^ 10'h16;\n  assign T_1513 = T_1512 & 10'h380;\n  assign T_1515 = T_1513 == 10'h0;\n  assign T_1517 = T_1028_bits_index ^ 10'h2c;\n  assign T_1518 = T_1517 & 10'h380;\n  assign T_1520 = T_1518 == 10'h0;\n  assign T_1521 = Queue_1_io_deq_bits_index ^ 10'h2c;\n  assign T_1522 = T_1521 & 10'h380;\n  assign T_1524 = T_1522 == 10'h0;\n  assign T_1526 = T_1028_bits_index ^ 10'h47;\n  assign T_1527 = T_1526 & 10'h380;\n  assign T_1529 = T_1527 == 10'h0;\n  assign T_1530 = Queue_1_io_deq_bits_index ^ 10'h47;\n  assign T_1531 = T_1530 & 10'h380;\n  assign T_1533 = T_1531 == 10'h0;\n  assign T_1535 = T_1028_bits_index ^ 10'h51;\n  assign T_1536 = T_1535 & 10'h380;\n  assign T_1538 = T_1536 == 10'h0;\n  assign T_1539 = Queue_1_io_deq_bits_index ^ 10'h51;\n  assign T_1540 = T_1539 & 10'h380;\n  assign T_1542 = T_1540 == 10'h0;\n  assign T_1544 = T_1028_bits_index ^ 10'h4c;\n  assign T_1545 = T_1544 & 10'h380;\n  assign T_1547 = T_1545 == 10'h0;\n  assign T_1548 = Queue_1_io_deq_bits_index ^ 10'h4c;\n  assign T_1549 = T_1548 & 10'h380;\n  assign T_1551 = T_1549 == 10'h0;\n  assign T_1553 = T_1028_bits_index ^ 10'h7;\n  assign T_1554 = T_1553 & 10'h380;\n  assign T_1556 = T_1554 == 10'h0;\n  assign T_1557 = Queue_1_io_deq_bits_index ^ 10'h7;\n  assign T_1558 = T_1557 & 10'h380;\n  assign T_1560 = T_1558 == 10'h0;\n  assign T_1562 = T_1028_bits_index ^ 10'h27;\n  assign T_1563 = T_1562 & 10'h380;\n  assign T_1565 = T_1563 == 10'h0;\n  assign T_1566 = Queue_1_io_deq_bits_index ^ 10'h27;\n  assign T_1567 = T_1566 & 10'h380;\n  assign T_1569 = T_1567 == 10'h0;\n  assign T_1571 = T_1028_bits_index ^ 10'h42;\n  assign T_1572 = T_1571 & 10'h380;\n  assign T_1574 = T_1572 == 10'h0;\n  assign T_1575 = Queue_1_io_deq_bits_index ^ 10'h42;\n  assign T_1576 = T_1575 & 10'h380;\n  assign T_1578 = T_1576 == 10'h0;\n  assign T_1580 = T_1028_bits_index ^ 10'h3;\n  assign T_1581 = T_1580 & 10'h380;\n  assign T_1583 = T_1581 == 10'h0;\n  assign T_1584 = Queue_1_io_deq_bits_index ^ 10'h3;\n  assign T_1585 = T_1584 & 10'h380;\n  assign T_1587 = T_1585 == 10'h0;\n  assign T_1589 = T_1028_bits_index ^ 10'h50;\n  assign T_1590 = T_1589 & 10'h380;\n  assign T_1592 = T_1590 == 10'h0;\n  assign T_1593 = Queue_1_io_deq_bits_index ^ 10'h50;\n  assign T_1594 = T_1593 & 10'h380;\n  assign T_1596 = T_1594 == 10'h0;\n  assign T_1598 = T_1028_bits_index ^ 10'h23;\n  assign T_1599 = T_1598 & 10'h380;\n  assign T_1601 = T_1599 == 10'h0;\n  assign T_1602 = Queue_1_io_deq_bits_index ^ 10'h23;\n  assign T_1603 = T_1602 & 10'h380;\n  assign T_1605 = T_1603 == 10'h0;\n  assign T_1607 = T_1028_bits_index ^ 10'h12;\n  assign T_1608 = T_1607 & 10'h380;\n  assign T_1610 = T_1608 == 10'h0;\n  assign T_1611 = Queue_1_io_deq_bits_index ^ 10'h12;\n  assign T_1612 = T_1611 & 10'h380;\n  assign T_1614 = T_1612 == 10'h0;\n  assign T_1616 = T_1028_bits_index ^ 10'h43;\n  assign T_1617 = T_1616 & 10'h380;\n  assign T_1619 = T_1617 == 10'h0;\n  assign T_1620 = Queue_1_io_deq_bits_index ^ 10'h43;\n  assign T_1621 = T_1620 & 10'h380;\n  assign T_1623 = T_1621 == 10'h0;\n  assign T_1625 = T_1028_bits_index ^ 10'h10;\n  assign T_1626 = T_1625 & 10'h380;\n  assign T_1628 = T_1626 == 10'h0;\n  assign T_1629 = Queue_1_io_deq_bits_index ^ 10'h10;\n  assign T_1630 = T_1629 & 10'h380;\n  assign T_1632 = T_1630 == 10'h0;\n  assign T_1634 = T_1028_bits_index ^ 10'h48;\n  assign T_1635 = T_1634 & 10'h380;\n  assign T_1637 = T_1635 == 10'h0;\n  assign T_1638 = Queue_1_io_deq_bits_index ^ 10'h48;\n  assign T_1639 = T_1638 & 10'h380;\n  assign T_1641 = T_1639 == 10'h0;\n  assign T_1643 = T_1028_bits_index ^ 10'h2b;\n  assign T_1644 = T_1643 & 10'h380;\n  assign T_1646 = T_1644 == 10'h0;\n  assign T_1647 = Queue_1_io_deq_bits_index ^ 10'h2b;\n  assign T_1648 = T_1647 & 10'h380;\n  assign T_1650 = T_1648 == 10'h0;\n  assign T_1652 = T_1028_bits_index ^ 10'h28;\n  assign T_1653 = T_1652 & 10'h380;\n  assign T_1655 = T_1653 == 10'h0;\n  assign T_1656 = Queue_1_io_deq_bits_index ^ 10'h28;\n  assign T_1657 = T_1656 & 10'h380;\n  assign T_1659 = T_1657 == 10'h0;\n  assign T_1661 = T_1028_bits_index ^ 10'h17;\n  assign T_1662 = T_1661 & 10'h380;\n  assign T_1664 = T_1662 == 10'h0;\n  assign T_1665 = Queue_1_io_deq_bits_index ^ 10'h17;\n  assign T_1666 = T_1665 & 10'h380;\n  assign T_1668 = T_1666 == 10'h0;\n  assign T_1670 = T_1028_bits_index ^ 10'h8;\n  assign T_1671 = T_1670 & 10'h380;\n  assign T_1673 = T_1671 == 10'h0;\n  assign T_1674 = Queue_1_io_deq_bits_index ^ 10'h8;\n  assign T_1675 = T_1674 & 10'h380;\n  assign T_1677 = T_1675 == 10'h0;\n  assign T_1679 = T_1028_bits_index ^ 10'h4b;\n  assign T_1680 = T_1679 & 10'h380;\n  assign T_1682 = T_1680 == 10'h0;\n  assign T_1683 = Queue_1_io_deq_bits_index ^ 10'h4b;\n  assign T_1684 = T_1683 & 10'h380;\n  assign T_1686 = T_1684 == 10'h0;\n  assign T_1688 = T_1028_bits_index ^ 10'h52;\n  assign T_1689 = T_1688 & 10'h380;\n  assign T_1691 = T_1689 == 10'h0;\n  assign T_1692 = Queue_1_io_deq_bits_index ^ 10'h52;\n  assign T_1693 = T_1692 & 10'h380;\n  assign T_1695 = T_1693 == 10'h0;\n  assign T_1697 = T_1028_bits_index ^ 10'h24;\n  assign T_1698 = T_1697 & 10'h380;\n  assign T_1700 = T_1698 == 10'h0;\n  assign T_1701 = Queue_1_io_deq_bits_index ^ 10'h24;\n  assign T_1702 = T_1701 & 10'h380;\n  assign T_1704 = T_1702 == 10'h0;\n  assign T_1706 = T_1028_bits_index ^ 10'h13;\n  assign T_1707 = T_1706 & 10'h380;\n  assign T_1709 = T_1707 == 10'h0;\n  assign T_1710 = Queue_1_io_deq_bits_index ^ 10'h13;\n  assign T_1711 = T_1710 & 10'h380;\n  assign T_1713 = T_1711 == 10'h0;\n  assign T_1715 = T_1028_bits_index ^ 10'h4;\n  assign T_1716 = T_1715 & 10'h380;\n  assign T_1718 = T_1716 == 10'h0;\n  assign T_1719 = Queue_1_io_deq_bits_index ^ 10'h4;\n  assign T_1720 = T_1719 & 10'h380;\n  assign T_1722 = T_1720 == 10'h0;\n  assign T_1724 = T_1028_bits_index ^ 10'h4f;\n  assign T_1725 = T_1724 & 10'h380;\n  assign T_1727 = T_1725 == 10'h0;\n  assign T_1728 = Queue_1_io_deq_bits_index ^ 10'h4f;\n  assign T_1729 = T_1728 & 10'h380;\n  assign T_1731 = T_1729 == 10'h0;\n  assign T_1733 = T_1028_bits_index ^ 10'h2f;\n  assign T_1734 = T_1733 & 10'h380;\n  assign T_1736 = T_1734 == 10'h0;\n  assign T_1737 = Queue_1_io_deq_bits_index ^ 10'h2f;\n  assign T_1738 = T_1737 & 10'h380;\n  assign T_1740 = T_1738 == 10'h0;\n  assign T_1742 = T_1028_bits_index ^ 10'h44;\n  assign T_1743 = T_1742 & 10'h380;\n  assign T_1745 = T_1743 == 10'h0;\n  assign T_1746 = Queue_1_io_deq_bits_index ^ 10'h44;\n  assign T_1747 = T_1746 & 10'h380;\n  assign T_1749 = T_1747 == 10'h0;\n  assign T_1751 = T_1028_bits_index ^ 10'h53;\n  assign T_1752 = T_1751 & 10'h380;\n  assign T_1754 = T_1752 == 10'h0;\n  assign T_1755 = Queue_1_io_deq_bits_index ^ 10'h53;\n  assign T_1756 = T_1755 & 10'h380;\n  assign T_1758 = T_1756 == 10'h0;\n  assign T_1762_0 = T_8954;\n  assign T_1762_1 = T_7574;\n  assign T_1762_2 = T_8414;\n  assign T_1762_3 = T_8054;\n  assign T_1762_4 = T_8314;\n  assign T_1762_5 = T_7974;\n  assign T_1762_6 = T_8494;\n  assign T_1762_7 = T_9134;\n  assign T_1762_8 = T_9054;\n  assign T_1762_9 = T_7694;\n  assign T_1762_10 = T_8334;\n  assign T_1762_11 = T_8974;\n  assign T_1762_12 = T_8234;\n  assign T_1762_13 = T_8874;\n  assign T_1762_14 = T_9114;\n  assign T_1762_15 = T_8394;\n  assign T_1762_16 = T_9034;\n  assign T_1762_17 = T_7614;\n  assign T_1762_18 = T_8214;\n  assign T_1762_19 = T_8254;\n  assign T_1762_20 = T_8474;\n  assign T_1762_21 = T_8854;\n  assign T_1762_22 = T_8014;\n  assign T_1762_23 = T_8454;\n  assign T_1762_24 = T_8994;\n  assign T_1762_25 = T_9194;\n  assign T_1762_26 = T_9094;\n  assign T_1762_27 = T_7714;\n  assign T_1762_28 = T_8354;\n  assign T_1762_29 = T_8894;\n  assign T_1762_30 = T_7634;\n  assign T_1762_31 = T_9174;\n  assign T_1762_32 = T_8274;\n  assign T_1762_33 = T_7934;\n  assign T_1762_34 = T_8914;\n  assign T_1762_35 = T_7894;\n  assign T_1762_36 = T_9014;\n  assign T_1762_37 = T_8434;\n  assign T_1762_38 = T_8374;\n  assign T_1762_39 = T_8034;\n  assign T_1762_40 = T_7734;\n  assign T_1762_41 = T_9074;\n  assign T_1762_42 = T_9214;\n  assign T_1762_43 = T_8294;\n  assign T_1762_44 = T_7954;\n  assign T_1762_45 = T_7654;\n  assign T_1762_46 = T_9154;\n  assign T_1762_47 = T_8514;\n  assign T_1762_48 = T_8934;\n  assign T_1762_49 = T_9234;\n  assign T_1767_0 = T_8960;\n  assign T_1767_1 = T_7580;\n  assign T_1767_2 = T_8420;\n  assign T_1767_3 = T_8060;\n  assign T_1767_4 = T_8320;\n  assign T_1767_5 = T_7980;\n  assign T_1767_6 = T_8500;\n  assign T_1767_7 = T_9140;\n  assign T_1767_8 = T_9060;\n  assign T_1767_9 = T_7700;\n  assign T_1767_10 = T_8340;\n  assign T_1767_11 = T_8980;\n  assign T_1767_12 = T_8240;\n  assign T_1767_13 = T_8880;\n  assign T_1767_14 = T_9120;\n  assign T_1767_15 = T_8400;\n  assign T_1767_16 = T_9040;\n  assign T_1767_17 = T_7620;\n  assign T_1767_18 = T_8220;\n  assign T_1767_19 = T_8260;\n  assign T_1767_20 = T_8480;\n  assign T_1767_21 = T_8860;\n  assign T_1767_22 = T_8020;\n  assign T_1767_23 = T_8460;\n  assign T_1767_24 = T_9000;\n  assign T_1767_25 = T_9200;\n  assign T_1767_26 = T_9100;\n  assign T_1767_27 = T_7720;\n  assign T_1767_28 = T_8360;\n  assign T_1767_29 = T_8900;\n  assign T_1767_30 = T_7640;\n  assign T_1767_31 = T_9180;\n  assign T_1767_32 = T_8280;\n  assign T_1767_33 = T_7940;\n  assign T_1767_34 = T_8920;\n  assign T_1767_35 = T_7900;\n  assign T_1767_36 = T_9020;\n  assign T_1767_37 = T_8440;\n  assign T_1767_38 = T_8380;\n  assign T_1767_39 = T_8040;\n  assign T_1767_40 = T_7740;\n  assign T_1767_41 = T_9080;\n  assign T_1767_42 = T_9220;\n  assign T_1767_43 = T_8300;\n  assign T_1767_44 = T_7960;\n  assign T_1767_45 = T_7660;\n  assign T_1767_46 = T_9160;\n  assign T_1767_47 = T_8520;\n  assign T_1767_48 = T_8940;\n  assign T_1767_49 = T_9240;\n  assign T_1772_0 = 1'h1;\n  assign T_1772_1 = 1'h1;\n  assign T_1772_2 = 1'h1;\n  assign T_1772_3 = 1'h1;\n  assign T_1772_4 = 1'h1;\n  assign T_1772_5 = 1'h1;\n  assign T_1772_6 = 1'h1;\n  assign T_1772_7 = 1'h1;\n  assign T_1772_8 = 1'h1;\n  assign T_1772_9 = 1'h1;\n  assign T_1772_10 = 1'h1;\n  assign T_1772_11 = 1'h1;\n  assign T_1772_12 = 1'h1;\n  assign T_1772_13 = 1'h1;\n  ass"}
{"text": "ign T_1772_14 = 1'h1;\n  assign T_1772_15 = 1'h1;\n  assign T_1772_16 = 1'h1;\n  assign T_1772_17 = 1'h1;\n  assign T_1772_18 = 1'h1;\n  assign T_1772_19 = 1'h1;\n  assign T_1772_20 = 1'h1;\n  assign T_1772_21 = 1'h1;\n  assign T_1772_22 = 1'h1;\n  assign T_1772_23 = 1'h1;\n  assign T_1772_24 = 1'h1;\n  assign T_1772_25 = 1'h1;\n  assign T_1772_26 = 1'h1;\n  assign T_1772_27 = 1'h1;\n  assign T_1772_28 = 1'h1;\n  assign T_1772_29 = 1'h1;\n  assign T_1772_30 = 1'h1;\n  assign T_1772_31 = 1'h1;\n  assign T_1772_32 = 1'h1;\n  assign T_1772_33 = 1'h1;\n  assign T_1772_34 = 1'h1;\n  assign T_1772_35 = 1'h1;\n  assign T_1772_36 = 1'h1;\n  assign T_1772_37 = 1'h1;\n  assign T_1772_38 = 1'h1;\n  assign T_1772_39 = 1'h1;\n  assign T_1772_40 = 1'h1;\n  assign T_1772_41 = 1'h1;\n  assign T_1772_42 = 1'h1;\n  assign T_1772_43 = 1'h1;\n  assign T_1772_44 = 1'h1;\n  assign T_1772_45 = 1'h1;\n  assign T_1772_46 = 1'h1;\n  assign T_1772_47 = 1'h1;\n  assign T_1772_48 = 1'h1;\n  assign T_1772_49 = 1'h1;\n  assign T_1777_0 = 1'h1;\n  assign T_1777_1 = 1'h1;\n  assign T_1777_2 = 1'h1;\n  assign T_1777_3 = 1'h1;\n  assign T_1777_4 = 1'h1;\n  assign T_1777_5 = 1'h1;\n  assign T_1777_6 = 1'h1;\n  assign T_1777_7 = 1'h1;\n  assign T_1777_8 = 1'h1;\n  assign T_1777_9 = 1'h1;\n  assign T_1777_10 = 1'h1;\n  assign T_1777_11 = 1'h1;\n  assign T_1777_12 = 1'h1;\n  assign T_1777_13 = 1'h1;\n  assign T_1777_14 = 1'h1;\n  assign T_1777_15 = 1'h1;\n  assign T_1777_16 = 1'h1;\n  assign T_1777_17 = 1'h1;\n  assign T_1777_18 = 1'h1;\n  assign T_1777_19 = 1'h1;\n  assign T_1777_20 = 1'h1;\n  assign T_1777_21 = 1'h1;\n  assign T_1777_22 = 1'h1;\n  assign T_1777_23 = 1'h1;\n  assign T_1777_24 = 1'h1;\n  assign T_1777_25 = 1'h1;\n  assign T_1777_26 = 1'h1;\n  assign T_1777_27 = 1'h1;\n  assign T_1777_28 = 1'h1;\n  assign T_1777_29 = 1'h1;\n  assign T_1777_30 = 1'h1;\n  assign T_1777_31 = 1'h1;\n  assign T_1777_32 = 1'h1;\n  assign T_1777_33 = 1'h1;\n  assign T_1777_34 = 1'h1;\n  assign T_1777_35 = 1'h1;\n  assign T_1777_36 = 1'h1;\n  assign T_1777_37 = 1'h1;\n  assign T_1777_38 = 1'h1;\n  assign T_1777_39 = 1'h1;\n  assign T_1777_40 = 1'h1;\n  assign T_1777_41 = 1'h1;\n  assign T_1777_42 = 1'h1;\n  assign T_1777_43 = 1'h1;\n  assign T_1777_44 = 1'h1;\n  assign T_1777_45 = 1'h1;\n  assign T_1777_46 = 1'h1;\n  assign T_1777_47 = 1'h1;\n  assign T_1777_48 = 1'h1;\n  assign T_1777_49 = 1'h1;\n  assign T_1782_0 = 1'h1;\n  assign T_1782_1 = 1'h1;\n  assign T_1782_2 = 1'h1;\n  assign T_1782_3 = 1'h1;\n  assign T_1782_4 = 1'h1;\n  assign T_1782_5 = 1'h1;\n  assign T_1782_6 = 1'h1;\n  assign T_1782_7 = 1'h1;\n  assign T_1782_8 = 1'h1;\n  assign T_1782_9 = 1'h1;\n  assign T_1782_10 = 1'h1;\n  assign T_1782_11 = 1'h1;\n  assign T_1782_12 = 1'h1;\n  assign T_1782_13 = 1'h1;\n  assign T_1782_14 = 1'h1;\n  assign T_1782_15 = 1'h1;\n  assign T_1782_16 = 1'h1;\n  assign T_1782_17 = 1'h1;\n  assign T_1782_18 = 1'h1;\n  assign T_1782_19 = 1'h1;\n  assign T_1782_20 = 1'h1;\n  assign T_1782_21 = 1'h1;\n  assign T_1782_22 = 1'h1;\n  assign T_1782_23 = 1'h1;\n  assign T_1782_24 = 1'h1;\n  assign T_1782_25 = 1'h1;\n  assign T_1782_26 = 1'h1;\n  assign T_1782_27 = 1'h1;\n  assign T_1782_28 = 1'h1;\n  assign T_1782_29 = 1'h1;\n  assign T_1782_30 = 1'h1;\n  assign T_1782_31 = 1'h1;\n  assign T_1782_32 = 1'h1;\n  assign T_1782_33 = 1'h1;\n  assign T_1782_34 = 1'h1;\n  assign T_1782_35 = 1'h1;\n  assign T_1782_36 = 1'h1;\n  assign T_1782_37 = 1'h1;\n  assign T_1782_38 = 1'h1;\n  assign T_1782_39 = 1'h1;\n  assign T_1782_40 = 1'h1;\n  assign T_1782_41 = 1'h1;\n  assign T_1782_42 = 1'h1;\n  assign T_1782_43 = 1'h1;\n  assign T_1782_44 = 1'h1;\n  assign T_1782_45 = 1'h1;\n  assign T_1782_46 = 1'h1;\n  assign T_1782_47 = 1'h1;\n  assign T_1782_48 = 1'h1;\n  assign T_1782_49 = 1'h1;\n  assign T_1787_0 = 1'h1;\n  assign T_1787_1 = 1'h1;\n  assign T_1787_2 = 1'h1;\n  assign T_1787_3 = 1'h1;\n  assign T_1787_4 = 1'h1;\n  assign T_1787_5 = 1'h1;\n  assign T_1787_6 = 1'h1;\n  assign T_1787_7 = 1'h1;\n  assign T_1787_8 = 1'h1;\n  assign T_1787_9 = 1'h1;\n  assign T_1787_10 = 1'h1;\n  assign T_1787_11 = 1'h1;\n  assign T_1787_12 = 1'h1;\n  assign T_1787_13 = 1'h1;\n  assign T_1787_14 = 1'h1;\n  assign T_1787_15 = 1'h1;\n  assign T_1787_16 = 1'h1;\n  assign T_1787_17 = 1'h1;\n  assign T_1787_18 = 1'h1;\n  assign T_1787_19 = 1'h1;\n  assign T_1787_20 = 1'h1;\n  assign T_1787_21 = 1'h1;\n  assign T_1787_22 = 1'h1;\n  assign T_1787_23 = 1'h1;\n  assign T_1787_24 = 1'h1;\n  assign T_1787_25 = 1'h1;\n  assign T_1787_26 = 1'h1;\n  assign T_1787_27 = 1'h1;\n  assign T_1787_28 = 1'h1;\n  assign T_1787_29 = 1'h1;\n  assign T_1787_30 = 1'h1;\n  assign T_1787_31 = 1'h1;\n  assign T_1787_32 = 1'h1;\n  assign T_1787_33 = 1'h1;\n  assign T_1787_34 = 1'h1;\n  assign T_1787_35 = 1'h1;\n  assign T_1787_36 = 1'h1;\n  assign T_1787_37 = 1'h1;\n  assign T_1787_38 = 1'h1;\n  assign T_1787_39 = 1'h1;\n  assign T_1787_40 = 1'h1;\n  assign T_1787_41 = 1'h1;\n  assign T_1787_42 = 1'h1;\n  assign T_1787_43 = 1'h1;\n  assign T_1787_44 = 1'h1;\n  assign T_1787_45 = 1'h1;\n  assign T_1787_46 = 1'h1;\n  assign T_1787_47 = 1'h1;\n  assign T_1787_48 = 1'h1;\n  assign T_1787_49 = 1'h1;\n  assign T_1792_0 = T_8964;\n  assign T_1792_1 = T_7584;\n  assign T_1792_2 = T_8424;\n  assign T_1792_3 = T_8064;\n  assign T_1792_4 = T_8324;\n  assign T_1792_5 = T_7984;\n  assign T_1792_6 = T_8504;\n  assign T_1792_7 = T_9144;\n  assign T_1792_8 = T_9064;\n  assign T_1792_9 = T_7704;\n  assign T_1792_10 = T_8344;\n  assign T_1792_11 = T_8984;\n  assign T_1792_12 = T_8244;\n  assign T_1792_13 = T_8884;\n  assign T_1792_14 = T_9124;\n  assign T_1792_15 = T_8404;\n  assign T_1792_16 = T_9044;\n  assign T_1792_17 = T_7624;\n  assign T_1792_18 = T_8224;\n  assign T_1792_19 = T_8264;\n  assign T_1792_20 = T_8484;\n  assign T_1792_21 = T_8864;\n  assign T_1792_22 = T_8024;\n  assign T_1792_23 = T_8464;\n  assign T_1792_24 = T_9004;\n  assign T_1792_25 = T_9204;\n  assign T_1792_26 = T_9104;\n  assign T_1792_27 = T_7724;\n  assign T_1792_28 = T_8364;\n  assign T_1792_29 = T_8904;\n  assign T_1792_30 = T_7644;\n  assign T_1792_31 = T_9184;\n  assign T_1792_32 = T_8284;\n  assign T_1792_33 = T_7944;\n  assign T_1792_34 = T_8924;\n  assign T_1792_35 = T_7904;\n  assign T_1792_36 = T_9024;\n  assign T_1792_37 = T_8444;\n  assign T_1792_38 = T_8384;\n  assign T_1792_39 = T_8044;\n  assign T_1792_40 = T_7744;\n  assign T_1792_41 = T_9084;\n  assign T_1792_42 = T_9224;\n  assign T_1792_43 = T_8304;\n  assign T_1792_44 = T_7964;\n  assign T_1792_45 = T_7664;\n  assign T_1792_46 = T_9164;\n  assign T_1792_47 = T_8524;\n  assign T_1792_48 = T_8944;\n  assign T_1792_49 = T_9244;\n  assign T_1797_0 = T_8970;\n  assign T_1797_1 = T_7590;\n  assign T_1797_2 = T_8430;\n  assign T_1797_3 = T_8070;\n  assign T_1797_4 = T_8330;\n  assign T_1797_5 = T_7990;\n  assign T_1797_6 = T_8510;\n  assign T_1797_7 = T_9150;\n  assign T_1797_8 = T_9070;\n  assign T_1797_9 = T_7710;\n  assign T_1797_10 = T_8350;\n  assign T_1797_11 = T_8990;\n  assign T_1797_12 = T_8250;\n  assign T_1797_13 = T_8890;\n  assign T_1797_14 = T_9130;\n  assign T_1797_15 = T_8410;\n  assign T_1797_16 = T_9050;\n  assign T_1797_17 = T_7630;\n  assign T_1797_18 = T_8230;\n  assign T_1797_19 = T_8270;\n  assign T_1797_20 = T_8490;\n  assign T_1797_21 = T_8870;\n  assign T_1797_22 = T_8030;\n  assign T_1797_23 = T_8470;\n  assign T_1797_24 = T_9010;\n  assign T_1797_25 = T_9210;\n  assign T_1797_26 = T_9110;\n  assign T_1797_27 = T_7730;\n  assign T_1797_28 = T_8370;\n  assign T_1797_29 = T_8910;\n  assign T_1797_30 = T_7650;\n  assign T_1797_31 = T_9190;\n  assign T_1797_32 = T_8290;\n  assign T_1797_33 = T_7950;\n  assign T_1797_34 = T_8930;\n  assign T_1797_35 = T_7910;\n  assign T_1797_36 = T_9030;\n  assign T_1797_37 = T_8450;\n  assign T_1797_38 = T_8390;\n  assign T_1797_39 = T_8050;\n  assign T_1797_40 = T_7750;\n  assign T_1797_41 = T_9090;\n  assign T_1797_42 = T_9230;\n  assign T_1797_43 = T_8310;\n  assign T_1797_44 = T_7970;\n  assign T_1797_45 = T_7670;\n  assign T_1797_46 = T_9170;\n  assign T_1797_47 = T_8530;\n  assign T_1797_48 = T_8950;\n  assign T_1797_49 = T_9250;\n  assign T_2462 = Queue_1_io_deq_bits_mask[0];\n  assign T_2463 = Queue_1_io_deq_bits_mask[1];\n  assign T_2464 = Queue_1_io_deq_bits_mask[2];\n  assign T_2465 = Queue_1_io_deq_bits_mask[3];\n  assign T_2469 = T_2462 ? 8'hff : 8'h0;\n  assign T_2473 = T_2463 ? 8'hff : 8'h0;\n  assign T_2477 = T_2464 ? 8'hff : 8'h0;\n  assign T_2481 = T_2465 ? 8'hff : 8'h0;\n  assign T_2482 = {T_2473,T_2469};\n  assign T_2483 = {T_2481,T_2477};\n  assign T_2484 = {T_2483,T_2482};\n  assign T_2496 = ~ T_2484;\n  assign T_2498 = T_2496 == 32'h0;\n  assign T_2504 = T_1797_0 & T_2498;\n  assign T_2505 = Queue_1_io_deq_bits_data;\n  assign T_2520 = pmu_io_regs_wakeupProgram_5_read;\n  assign T_2544 = T_1797_1 & T_2498;\n  assign T_2560 = wdog_io_regs_cfg_read;\n  assign T_2584 = T_1797_2 & T_2498;\n  assign GEN_6 = T_2584 ? T_2505 : backupRegs_10;\n  assign T_2624 = T_1797_3 & T_2498;\n  assign T_2640 = rtc_io_regs_cmp_0_read;\n  assign T_2664 = T_1797_4 & T_2498;\n  assign GEN_7 = T_2664 ? T_2505 : backupRegs_5;\n  assign T_2704 = T_1797_5 & T_2498;\n  assign T_2720 = rtc_io_regs_s_read;\n  assign T_2744 = T_1797_6 & T_2498;\n  assign GEN_8 = T_2744 ? T_2505 : backupRegs_14;\n  assign T_2784 = T_1797_7 & T_2498;\n  assign T_2800 = pmu_io_regs_sleepProgram_6_read;\n  assign T_2824 = T_1797_8 & T_2498;\n  assign T_2840 = pmu_io_regs_sleepProgram_2_read;\n  assign T_2864 = T_1797_9 & T_2498;\n  assign T_2880 = wdog_io_regs_feed_read;\n  assign T_2904 = T_1797_10 & T_2498;\n  assign GEN_9 = T_2904 ? T_2505 : backupRegs_6;\n  assign T_2944 = T_1797_11 & T_2498;\n  assign T_2960 = pmu_io_regs_wakeupProgram_6_read;\n  assign T_2984 = T_1797_12 & T_2498;\n  assign GEN_10 = T_2984 ? T_2505 : backupRegs_1;\n  assign T_3024 = T_1797_13 & T_2498;\n  assign T_3040 = pmu_io_regs_wakeupProgram_1_read;\n  assign T_3064 = T_1797_14 & T_2498;\n  assign T_3080 = pmu_io_regs_sleepProgram_5_read;\n  assign T_3104 = T_1797_15 & T_2498;\n  assign GEN_11 = T_3104 ? T_2505 : backupRegs_9;\n  assign T_3144 = T_1797_16 & T_2498;\n  assign T_3160 = pmu_io_regs_sleepProgram_1_read;\n  assign T_3184 = T_1797_17 & T_2498;\n  assign T_3200 = wdog_io_regs_countLo_read;\n  assign T_3224 = T_1797_18 & T_2498;\n  assign GEN_12 = T_3224 ? T_2505 : backupRegs_0;\n  assign T_3264 = T_1797_19 & T_2498;\n  assign GEN_13 = T_3264 ? T_2505 : backupRegs_2;\n  assign T_3304 = T_1797_20 & T_2498;\n  assign GEN_14 = T_3304 ? T_2505 : backupRegs_13;\n  assign T_3344 = T_1797_21 & T_2498;\n  assign T_3360 = pmu_io_regs_wakeupProgram_0_read;\n  assign T_3384 = T_1797_22 & T_2498;\n  assign T_3400 = rtc_io_regs_feed_read;\n  assign T_3424 = T_1797_23 & T_2498;\n  assign GEN_15 = T_3424 ? T_2505 : backupRegs_12;\n  assign T_3464 = T_1797_24 & T_2498;\n  assign T_3480 = pmu_io_regs_wakeupProgram_7_read;\n  assign T_3504 = T_1797_25 & T_2498;\n  assign T_3520 = pmu_io_regs_cause_read;\n  assign T_3544 = T_1797_26 & T_2498;\n  assign T_3560 = pmu_io_regs_sleepProgram_4_read;\n  assign T_3584 = T_1797_27 & T_2498;\n  assign T_3600 = wdog_io_regs_key_read;\n  assign T_3624 = T_1797_28 & T_2498;\n  assign GEN_16 = T_3624 ? T_2505 : backupRegs_7;\n  assign T_3664 = T_1797_29 & T_2498;\n  assign T_3680 = pmu_io_regs_wakeupProgram_2_read;\n  assign T_3704 = T_1797_30 & T_2498;\n  assign T_3720 = wdog_io_regs_countHi_read;\n  assign T_3732 = T_2484[3:0];\n  assign T_3736 = ~ T_3732;\n  assign T_3738 = T_3736 == 4'h0;\n  assign T_3744 = T_1797_31 & T_3738;\n  assign T_3745 = Queue_1_io_deq_bits_data[3:0];\n  assign T_3760 = pmu_io_regs_ie_read;\n  assign T_3784 = T_1797_32 & T_2498;\n  assign GEN_17 = T_3784 ? T_2505 : backupRegs_3;\n  assign T_3824 = T_1797_33 & T_2498;\n  assign T_3840 = rtc_io_regs_countLo_read;\n  assign T_3864 = T_1797_34 & T_2498;\n  assign T_3880 = pmu_io_regs_wakeupProgram_3_read;\n  assign T_3904 = T_1797_35 & T_2498;\n  assign T_3920 = rtc_io_regs_cfg_read;\n  assign T_3944 = T_1797_36 & T_2498;\n  assign T_3960 = pmu_io_regs_sleepProgram_0_read;\n  assign T_3984 = T_1797_37 & T_2498;\n  assign GEN_18 = T_3984 ? T_2505 : backupRegs_11;\n  assign T_4024 = T_1797_38 & T_2498;\n  assign GEN_19 = T_4024 ? T_2505 : backupRegs_8;\n  assign T_4064 = T_1797_39 & T_2498;\n  assign T_4080 = rtc_io_regs_key_read;\n  assign T_4092 = T_2484[15:0];\n  assign T_4096 = ~ T_4092;\n  assign T_4098 = T_4096 == 16'h0;\n  assign T_4104 = T_1797_40 & T_4098;\n  assign T_4105 = Queue_1_io_deq_bits_data[15:0];\n  assign T_4120 = wdog_io_regs_cmp_0_read;\n  assign T_4144 = T_1797_41 & T_2498;\n  assign T_4160 = pmu_io_regs_sleepProgram_3_read;\n  assign T_4184 = T_1797_42 & T_2498;\n  assign T_4200 = pmu_io_regs_sleep_read;\n  assign T_4224 = T_1797_43 & T_2498;\n  assign GEN_20 = T_4224 ? T_2505 : backupRegs_4;\n  assign T_4264 = T_1797_44 & T_2498;\n  assign T_4280 = rtc_io_regs_countHi_read;\n  assign T_4304 = T_1797_45 & T_4098;\n  assign T_4320 = wdog_io_regs_s_read;\n  assign T_4344 = T_1797_46 & T_2498;\n  assign T_4360 = pmu_io_regs_sleepProgram_7_read;\n  assign T_4384 = T_1797_47 & T_2498;\n  assign GEN_21 = T_4384 ? T_2505 : backupRegs_15;\n  assign T_4424 = T_1797_48 & T_2498;\n  assign T_4440 = pmu_io_regs_wakeupProgram_4_read;\n  assign T_4464 = T_1797_49 & T_2498;\n  assign T_4480 = pmu_io_regs_key_read;\n  assign T_4486 = T_1322 == 1'h0;\n  assign T_4488 = T_4486 | T_1772_1;\n  assign T_4493 = T_1466 == 1'h0;\n  assign T_4495 = T_4493 | T_1772_17;\n  assign T_4497 = T_1583 == 1'h0;\n  assign T_4499 = T_4497 | T_1772_30;\n  assign T_4501 = T_1718 == 1'h0;\n  assign T_4503 = T_4501 | T_1772_45;\n  assign T_4508 = T_1394 == 1'h0;\n  assign T_4510 = T_4508 | T_1772_9;\n  assign T_4512 = T_1556 == 1'h0;\n  assign T_4514 = T_4512 | T_1772_27;\n  assign T_4516 = T_1673 == 1'h0;\n  assign T_4518 = T_4516 | T_1772_40;\n  assign T_4541 = T_1628 == 1'h0;\n  assign T_4543 = T_4541 | T_1772_35;\n  assign T_4548 = T_1610 == 1'h0;\n  assign T_4550 = T_4548 | T_1772_33;\n  assign T_4552 = T_1709 == 1'h0;\n  assign T_4554 = T_4552 | T_1772_44;\n  assign T_4556 = T_1358 == 1'h0;\n  assign T_4558 = T_4556 | T_1772_5;\n  assign T_4563 = T_1511 == 1'h0;\n  assign T_4565 = T_4563 | T_1772_22;\n  assign T_4567 = T_1664 == 1'h0;\n  assign T_4569 = T_4567 | T_1772_39;\n  assign T_4571 = T_1340 == 1'h0;\n  assign T_4573 = T_4571 | T_1772_3;\n  assign T_4596 = T_1475 == 1'h0;\n  assign T_4598 = T_4596 | T_1772_18;\n  assign T_4600 = T_1421 == 1'h0;\n  assign T_4602 = T_4600 | T_1772_12;\n  assign T_4604 = T_1484 == 1'h0;\n  assign T_4606 = T_4604 | T_1772_19;\n  assign T_4608 = T_1601 == 1'h0;\n  assign T_4610 = T_4608 | T_1772_32;\n  assign T_4612 = T_1700 == 1'h0;\n  assign T_4614 = T_4612 | T_1772_43;\n  assign T_4616 = T_1349 == 1'h0;\n  assign T_4618 = T_4616 | T_1772_4;\n  assign T_4620 = T_1403 == 1'h0;\n  assign T_4622 = T_4620 | T_1772_10;\n  assign T_4624 = T_1565 == 1'h0;\n  assign T_4626 = T_4624 | T_1772_28;\n  assign T_4628 = T_1655 == 1'h0;\n  assign T_4630 = T_4628 | T_1772_38;\n  assign T_4632 = T_1448 == 1'h0;\n  assign T_4634 = T_4632 | T_1772_15;\n  assign T_4636 = T_1331 == 1'h0;\n  assign T_4638 = T_4636 | T_1772_2;\n  assign T_4640 = T_1646 == 1'h0;\n  assign T_4642 = T_4640 | T_1772_37;\n  assign T_4644 = T_1520 == 1'h0;\n  assign T_4646 = T_4644 | T_1772_23;\n  assign T_4648 = T_1493 == 1'h0;\n  assign T_4650 = T_4648 | T_1772_20;\n  assign T_4652 = T_1367 == 1'h0;\n  assign T_4654 = T_4652 | T_1772_6;\n  assign T_4656 = T_1736 == 1'h0;\n  assign T_4658 = T_4656 | T_1772_47;\n  assign T_4708 = T_1502 == 1'h0;\n  assign T_4710 = T_4708 | T_1772_21;\n  assign T_4712 = T_1430 == 1'h0;\n  assign T_4714 = T_4712 | T_1772_13;\n  assign T_4716 = T_1574 == 1'h0;\n  assign T_4718 = T_4716 | T_1772_29;\n  assign T_4720 = T_1619 == 1'h0;\n  assign T_4722 = T_4720 | T_1772_34;\n  assign T_4724 = T_1745 == 1'h0;\n  assign T_4726 = T_4724 | T_1772_48;\n  assign T_4728 = T_1313 == 1'h0;\n  assign T_4730 = T_4728 | T_1772_0;\n  assign T_4732 = T_1412 == 1'h0;\n  assign T_4734 = T_4732 | T_1772_11;\n  assign T_4736 = T_1529 == 1'h0;\n  assign T_4738 = T_4736 | T_1772_24;\n  assign T_4740 = T_1637 == 1'h0;\n  assign T_4742 = T_4740 | T_1772_36;\n  assign T_4744 = T_1457 == 1'h0;\n  assign T_4746 = T_4744 | T_1772_16;\n  assign T_4748 = T_1385 == 1'h0;\n  assign T_4750 = T_4748 | T_1772_8;\n  assign T_4752 = T_1682 == 1'h0;\n  assign T_4754 = T_4752 | T_1772_41;\n  assign T_4756 = T_1547 == 1'h0;\n  assign T_4758 = T_4756 | T_1772_26;\n  assign T_4760 = T_1439 == 1'h0;\n  assign T_4762 = T_4760 | T_1772_14;\n  assign T_4764 = T_1376 == 1'h0;\n  assign T_4766 = T_4764 | T_1772_7;\n  assign T_4768 = T_1727 == 1'h0;\n  assign T_4770 = T_4768 | T_1772_46;\n  assign T_4772 = T_1592 == 1'h0;\n  assign T_4774 = T_4772 | T_1772_31;\n  assign T_4776 = T_1538 == 1'h0;\n  assign T_4778 = T_4776 | T_1772_25;\n  assign T_4780 = T_1691 == 1'h0;\n  assign T_4782 = T_4780 | T_1772_42;\n  assign T_4784 = T_1754 == 1'h0;\n  assign T_4786 = T_4784 | T_1772_49;\n  assign T_5050_0 = T_4488;\n  assign T_5050_1 = 1'h1;\n  assign T_5050_2 = T_4495;\n  assign T_5050_3 = T_4499;\n  assign T_5050_4 = T_4503;\n  assign T_5050_5 = 1'h1;\n  assign T_5050_6 = T_4510;\n  assign T_5050_7 = T_4514;\n  assign T_5050_8 = T_4518;\n  assign T_5050_9 = 1'h1;\n  assign T_5050_10 = 1'h1;\n  assign T_5050_11 = 1'h1;\n  assign T_5050_12 = 1'h1;\n  assign T_5050_13 = 1'h1;\n  assign T_5050_14 = 1'h1;\n  assign T_5050_15 = 1'h1;\n  assign T_5050_16 = T_4543;\n  assign T_5050_17 = 1'h1;\n  assign T_5050_18 = T_4550;\n  assign T_5050_19 = T_4554;\n  assign T_5050_20 = T_4558;\n  assign T_5050_21 = 1'h1;\n  assign T_5050_22 = T_4565;\n  assign T_5050_23 = T_4569;\n  assign T_5050_24 = T_4573;\n  assign T_5050_25 = 1'h1;\n  assign T_5050_26 = 1'h1;\n  assign T_5050_27 = 1'h1;\n  assign T_5050_28 = 1'h1;\n  assign T_5050_29 = 1'h1;\n  assign T_5050_30 = 1'h1;\n  assign T_5050_31 = 1'h1;\n  assign T_5050_32 = T_4598;\n  assign T_5050_33 = T_4602;\n  assign T_5050_34 = T_4606;\n  assign T_5050_35 = T_4610;\n  assign T_5050_36 = T_4614;\n  assign T_5050_37 = T_4618;\n  assign T_5050_38 = T_4622;\n  assign T_5050_39 = T_4626;\n  assign T_5050_40 = T_4630;\n  assign T_5050_41 = T_4634;\n  assign T_5050_42 = T_4638;\n  assign T_5050_43 = T_4642;\n  assign T_5050_44 = T_4646;\n  assign T_5050_45 = T_4650;\n  assign T_5050_46 = T_4654;\n  assign T_5050_47 = T_4658;\n  assign T_5050_48 = 1'h1;\n  assign T_5050_49 = 1'h1;\n  assign T_5050_50 = 1'h1;\n  assign T_5050_51 = 1'h1;\n  assign T_5050_52 = 1'h1;\n  assign T_5050_53 = 1'h1;\n  assign T_5050_54 = 1'h1;\n  assign T_5050_55 = 1'h1;\n  assign T_5050_56 = 1'h1;\n  assign T_5050_57 = 1'h1;\n  assign T_5050_58 = 1'h1;\n  assign T_5050_59 = 1'h1;\n  assign T_5050_60 = 1'h1;\n  assign T_5050_61 = 1'h1;\n  assign T_5050_62 = 1'h1;\n  assign T_5050_63 = 1'h1;\n  assign T_5050_64 = T_4710;\n  assign T_5050_65 = T_4714;\n  assign T_5050_66 = T_4718;\n  assign T_5050_67 = T_4722;\n  assign T_5050_68 = T_4726;\n  assign T_5050_69 = T_4730;\n  assign T_5050_70 = T_4734;\n  assign T_5050_71 = T_4738;\n  assign T_5050_72 = T_4742;\n  assign T_5050_73 = T_4746;\n  assign T_5050_74 = T_4750;\n  assign T_5050_75 = T_4754;\n  assign T_5050_76 = T_4758;\n  assign T_5050_77 = T_4762;\n  assign T_5050_78 = T_4766;\n  assign T_5050_79 = T_4770;\n  assign T_5050_80 = T_4774;\n  assign T_5050_81 = T_4778;\n  assign T_5050_82 = T_4782;\n  assign T_5050_83 = T_4786;\n  assign T_5050_84 = 1'h1;\n  assign T_5050_85 = 1'h1;\n  assign T_5050_86 = 1'h1;\n  assign T_5050_87 = 1'h1;\n  assign T_5050_88 = 1'h1;\n  assign T_5050_89 = 1'h1;\n  assign T_5050_90 = 1'h1;\n  assign T_5050_91 = 1'h1;\n  assign T_5050_92 = 1'h1;\n  assign T_5050_93 = 1'h1;\n  assign T_5050_94 = 1'h1;\n  assign T_5050_95 = 1'h1;\n  assign T_5050_96 = 1'h1;\n  assign T_5050_97 = 1'h1;\n  assign T_5050_98 = 1'h1;\n  assign T_5050_99 = 1'h1;\n  assign T_5050_100 = 1'h1;\n  assign T_5050_101 = 1'h1;\n  assign T_5050_102 = 1'h1;\n  assign T_5050_103 = 1'h1;\n  assign T_5050_104 = 1'h1;\n  assign T_5050_105 = 1'h1;\n  assign T_5050_106 = 1'h1;\n  assign T_5050_107 = 1'h1;\n  assign T_5050_108 = 1'h1;\n  assign T_5050_109 = 1'h1;\n  assign T_5050_110 = 1'h1;\n  assign T_5050_111 = 1'h1;\n  assign T_5050_112 = 1'h1;\n  assign T_5050_113 = 1'h1;\n  assign T_5050_114 = 1'h1;\n  assign T_5050_115 = 1'h1;\n  assign T_5050_116 = 1'h1;\n  assign T_5050_117 = 1'h1;\n  assign T_5050_118 = 1'h1;\n  assign T_5050_119 = 1'h1;\n  assign T_5050_120 = 1'h1;\n  assign T_5050_121 = 1'h1;\n  assign T_5050_122 = "}
{"text": "1'h1;\n  assign T_5050_123 = 1'h1;\n  assign T_5050_124 = 1'h1;\n  assign T_5050_125 = 1'h1;\n  assign T_5050_126 = 1'h1;\n  assign T_5050_127 = 1'h1;\n  assign T_5184 = T_4486 | T_1777_1;\n  assign T_5191 = T_4493 | T_1777_17;\n  assign T_5195 = T_4497 | T_1777_30;\n  assign T_5199 = T_4501 | T_1777_45;\n  assign T_5206 = T_4508 | T_1777_9;\n  assign T_5210 = T_4512 | T_1777_27;\n  assign T_5214 = T_4516 | T_1777_40;\n  assign T_5239 = T_4541 | T_1777_35;\n  assign T_5246 = T_4548 | T_1777_33;\n  assign T_5250 = T_4552 | T_1777_44;\n  assign T_5254 = T_4556 | T_1777_5;\n  assign T_5261 = T_4563 | T_1777_22;\n  assign T_5265 = T_4567 | T_1777_39;\n  assign T_5269 = T_4571 | T_1777_3;\n  assign T_5294 = T_4596 | T_1777_18;\n  assign T_5298 = T_4600 | T_1777_12;\n  assign T_5302 = T_4604 | T_1777_19;\n  assign T_5306 = T_4608 | T_1777_32;\n  assign T_5310 = T_4612 | T_1777_43;\n  assign T_5314 = T_4616 | T_1777_4;\n  assign T_5318 = T_4620 | T_1777_10;\n  assign T_5322 = T_4624 | T_1777_28;\n  assign T_5326 = T_4628 | T_1777_38;\n  assign T_5330 = T_4632 | T_1777_15;\n  assign T_5334 = T_4636 | T_1777_2;\n  assign T_5338 = T_4640 | T_1777_37;\n  assign T_5342 = T_4644 | T_1777_23;\n  assign T_5346 = T_4648 | T_1777_20;\n  assign T_5350 = T_4652 | T_1777_6;\n  assign T_5354 = T_4656 | T_1777_47;\n  assign T_5406 = T_4708 | T_1777_21;\n  assign T_5410 = T_4712 | T_1777_13;\n  assign T_5414 = T_4716 | T_1777_29;\n  assign T_5418 = T_4720 | T_1777_34;\n  assign T_5422 = T_4724 | T_1777_48;\n  assign T_5426 = T_4728 | T_1777_0;\n  assign T_5430 = T_4732 | T_1777_11;\n  assign T_5434 = T_4736 | T_1777_24;\n  assign T_5438 = T_4740 | T_1777_36;\n  assign T_5442 = T_4744 | T_1777_16;\n  assign T_5446 = T_4748 | T_1777_8;\n  assign T_5450 = T_4752 | T_1777_41;\n  assign T_5454 = T_4756 | T_1777_26;\n  assign T_5458 = T_4760 | T_1777_14;\n  assign T_5462 = T_4764 | T_1777_7;\n  assign T_5466 = T_4768 | T_1777_46;\n  assign T_5470 = T_4772 | T_1777_31;\n  assign T_5474 = T_4776 | T_1777_25;\n  assign T_5478 = T_4780 | T_1777_42;\n  assign T_5482 = T_4784 | T_1777_49;\n  assign T_5746_0 = T_5184;\n  assign T_5746_1 = 1'h1;\n  assign T_5746_2 = T_5191;\n  assign T_5746_3 = T_5195;\n  assign T_5746_4 = T_5199;\n  assign T_5746_5 = 1'h1;\n  assign T_5746_6 = T_5206;\n  assign T_5746_7 = T_5210;\n  assign T_5746_8 = T_5214;\n  assign T_5746_9 = 1'h1;\n  assign T_5746_10 = 1'h1;\n  assign T_5746_11 = 1'h1;\n  assign T_5746_12 = 1'h1;\n  assign T_5746_13 = 1'h1;\n  assign T_5746_14 = 1'h1;\n  assign T_5746_15 = 1'h1;\n  assign T_5746_16 = T_5239;\n  assign T_5746_17 = 1'h1;\n  assign T_5746_18 = T_5246;\n  assign T_5746_19 = T_5250;\n  assign T_5746_20 = T_5254;\n  assign T_5746_21 = 1'h1;\n  assign T_5746_22 = T_5261;\n  assign T_5746_23 = T_5265;\n  assign T_5746_24 = T_5269;\n  assign T_5746_25 = 1'h1;\n  assign T_5746_26 = 1'h1;\n  assign T_5746_27 = 1'h1;\n  assign T_5746_28 = 1'h1;\n  assign T_5746_29 = 1'h1;\n  assign T_5746_30 = 1'h1;\n  assign T_5746_31 = 1'h1;\n  assign T_5746_32 = T_5294;\n  assign T_5746_33 = T_5298;\n  assign T_5746_34 = T_5302;\n  assign T_5746_35 = T_5306;\n  assign T_5746_36 = T_5310;\n  assign T_5746_37 = T_5314;\n  assign T_5746_38 = T_5318;\n  assign T_5746_39 = T_5322;\n  assign T_5746_40 = T_5326;\n  assign T_5746_41 = T_5330;\n  assign T_5746_42 = T_5334;\n  assign T_5746_43 = T_5338;\n  assign T_5746_44 = T_5342;\n  assign T_5746_45 = T_5346;\n  assign T_5746_46 = T_5350;\n  assign T_5746_47 = T_5354;\n  assign T_5746_48 = 1'h1;\n  assign T_5746_49 = 1'h1;\n  assign T_5746_50 = 1'h1;\n  assign T_5746_51 = 1'h1;\n  assign T_5746_52 = 1'h1;\n  assign T_5746_53 = 1'h1;\n  assign T_5746_54 = 1'h1;\n  assign T_5746_55 = 1'h1;\n  assign T_5746_56 = 1'h1;\n  assign T_5746_57 = 1'h1;\n  assign T_5746_58 = 1'h1;\n  assign T_5746_59 = 1'h1;\n  assign T_5746_60 = 1'h1;\n  assign T_5746_61 = 1'h1;\n  assign T_5746_62 = 1'h1;\n  assign T_5746_63 = 1'h1;\n  assign T_5746_64 = T_5406;\n  assign T_5746_65 = T_5410;\n  assign T_5746_66 = T_5414;\n  assign T_5746_67 = T_5418;\n  assign T_5746_68 = T_5422;\n  assign T_5746_69 = T_5426;\n  assign T_5746_70 = T_5430;\n  assign T_5746_71 = T_5434;\n  assign T_5746_72 = T_5438;\n  assign T_5746_73 = T_5442;\n  assign T_5746_74 = T_5446;\n  assign T_5746_75 = T_5450;\n  assign T_5746_76 = T_5454;\n  assign T_5746_77 = T_5458;\n  assign T_5746_78 = T_5462;\n  assign T_5746_79 = T_5466;\n  assign T_5746_80 = T_5470;\n  assign T_5746_81 = T_5474;\n  assign T_5746_82 = T_5478;\n  assign T_5746_83 = T_5482;\n  assign T_5746_84 = 1'h1;\n  assign T_5746_85 = 1'h1;\n  assign T_5746_86 = 1'h1;\n  assign T_5746_87 = 1'h1;\n  assign T_5746_88 = 1'h1;\n  assign T_5746_89 = 1'h1;\n  assign T_5746_90 = 1'h1;\n  assign T_5746_91 = 1'h1;\n  assign T_5746_92 = 1'h1;\n  assign T_5746_93 = 1'h1;\n  assign T_5746_94 = 1'h1;\n  assign T_5746_95 = 1'h1;\n  assign T_5746_96 = 1'h1;\n  assign T_5746_97 = 1'h1;\n  assign T_5746_98 = 1'h1;\n  assign T_5746_99 = 1'h1;\n  assign T_5746_100 = 1'h1;\n  assign T_5746_101 = 1'h1;\n  assign T_5746_102 = 1'h1;\n  assign T_5746_103 = 1'h1;\n  assign T_5746_104 = 1'h1;\n  assign T_5746_105 = 1'h1;\n  assign T_5746_106 = 1'h1;\n  assign T_5746_107 = 1'h1;\n  assign T_5746_108 = 1'h1;\n  assign T_5746_109 = 1'h1;\n  assign T_5746_110 = 1'h1;\n  assign T_5746_111 = 1'h1;\n  assign T_5746_112 = 1'h1;\n  assign T_5746_113 = 1'h1;\n  assign T_5746_114 = 1'h1;\n  assign T_5746_115 = 1'h1;\n  assign T_5746_116 = 1'h1;\n  assign T_5746_117 = 1'h1;\n  assign T_5746_118 = 1'h1;\n  assign T_5746_119 = 1'h1;\n  assign T_5746_120 = 1'h1;\n  assign T_5746_121 = 1'h1;\n  assign T_5746_122 = 1'h1;\n  assign T_5746_123 = 1'h1;\n  assign T_5746_124 = 1'h1;\n  assign T_5746_125 = 1'h1;\n  assign T_5746_126 = 1'h1;\n  assign T_5746_127 = 1'h1;\n  assign T_5878 = T_1326 == 1'h0;\n  assign T_5880 = T_5878 | T_1782_1;\n  assign T_5885 = T_1470 == 1'h0;\n  assign T_5887 = T_5885 | T_1782_17;\n  assign T_5889 = T_1587 == 1'h0;\n  assign T_5891 = T_5889 | T_1782_30;\n  assign T_5893 = T_1722 == 1'h0;\n  assign T_5895 = T_5893 | T_1782_45;\n  assign T_5900 = T_1398 == 1'h0;\n  assign T_5902 = T_5900 | T_1782_9;\n  assign T_5904 = T_1560 == 1'h0;\n  assign T_5906 = T_5904 | T_1782_27;\n  assign T_5908 = T_1677 == 1'h0;\n  assign T_5910 = T_5908 | T_1782_40;\n  assign T_5933 = T_1632 == 1'h0;\n  assign T_5935 = T_5933 | T_1782_35;\n  assign T_5940 = T_1614 == 1'h0;\n  assign T_5942 = T_5940 | T_1782_33;\n  assign T_5944 = T_1713 == 1'h0;\n  assign T_5946 = T_5944 | T_1782_44;\n  assign T_5948 = T_1362 == 1'h0;\n  assign T_5950 = T_5948 | T_1782_5;\n  assign T_5955 = T_1515 == 1'h0;\n  assign T_5957 = T_5955 | T_1782_22;\n  assign T_5959 = T_1668 == 1'h0;\n  assign T_5961 = T_5959 | T_1782_39;\n  assign T_5963 = T_1344 == 1'h0;\n  assign T_5965 = T_5963 | T_1782_3;\n  assign T_5988 = T_1479 == 1'h0;\n  assign T_5990 = T_5988 | T_1782_18;\n  assign T_5992 = T_1425 == 1'h0;\n  assign T_5994 = T_5992 | T_1782_12;\n  assign T_5996 = T_1488 == 1'h0;\n  assign T_5998 = T_5996 | T_1782_19;\n  assign T_6000 = T_1605 == 1'h0;\n  assign T_6002 = T_6000 | T_1782_32;\n  assign T_6004 = T_1704 == 1'h0;\n  assign T_6006 = T_6004 | T_1782_43;\n  assign T_6008 = T_1353 == 1'h0;\n  assign T_6010 = T_6008 | T_1782_4;\n  assign T_6012 = T_1407 == 1'h0;\n  assign T_6014 = T_6012 | T_1782_10;\n  assign T_6016 = T_1569 == 1'h0;\n  assign T_6018 = T_6016 | T_1782_28;\n  assign T_6020 = T_1659 == 1'h0;\n  assign T_6022 = T_6020 | T_1782_38;\n  assign T_6024 = T_1452 == 1'h0;\n  assign T_6026 = T_6024 | T_1782_15;\n  assign T_6028 = T_1335 == 1'h0;\n  assign T_6030 = T_6028 | T_1782_2;\n  assign T_6032 = T_1650 == 1'h0;\n  assign T_6034 = T_6032 | T_1782_37;\n  assign T_6036 = T_1524 == 1'h0;\n  assign T_6038 = T_6036 | T_1782_23;\n  assign T_6040 = T_1497 == 1'h0;\n  assign T_6042 = T_6040 | T_1782_20;\n  assign T_6044 = T_1371 == 1'h0;\n  assign T_6046 = T_6044 | T_1782_6;\n  assign T_6048 = T_1740 == 1'h0;\n  assign T_6050 = T_6048 | T_1782_47;\n  assign T_6100 = T_1506 == 1'h0;\n  assign T_6102 = T_6100 | T_1782_21;\n  assign T_6104 = T_1434 == 1'h0;\n  assign T_6106 = T_6104 | T_1782_13;\n  assign T_6108 = T_1578 == 1'h0;\n  assign T_6110 = T_6108 | T_1782_29;\n  assign T_6112 = T_1623 == 1'h0;\n  assign T_6114 = T_6112 | T_1782_34;\n  assign T_6116 = T_1749 == 1'h0;\n  assign T_6118 = T_6116 | T_1782_48;\n  assign T_6120 = T_1317 == 1'h0;\n  assign T_6122 = T_6120 | T_1782_0;\n  assign T_6124 = T_1416 == 1'h0;\n  assign T_6126 = T_6124 | T_1782_11;\n  assign T_6128 = T_1533 == 1'h0;\n  assign T_6130 = T_6128 | T_1782_24;\n  assign T_6132 = T_1641 == 1'h0;\n  assign T_6134 = T_6132 | T_1782_36;\n  assign T_6136 = T_1461 == 1'h0;\n  assign T_6138 = T_6136 | T_1782_16;\n  assign T_6140 = T_1389 == 1'h0;\n  assign T_6142 = T_6140 | T_1782_8;\n  assign T_6144 = T_1686 == 1'h0;\n  assign T_6146 = T_6144 | T_1782_41;\n  assign T_6148 = T_1551 == 1'h0;\n  assign T_6150 = T_6148 | T_1782_26;\n  assign T_6152 = T_1443 == 1'h0;\n  assign T_6154 = T_6152 | T_1782_14;\n  assign T_6156 = T_1380 == 1'h0;\n  assign T_6158 = T_6156 | T_1782_7;\n  assign T_6160 = T_1731 == 1'h0;\n  assign T_6162 = T_6160 | T_1782_46;\n  assign T_6164 = T_1596 == 1'h0;\n  assign T_6166 = T_6164 | T_1782_31;\n  assign T_6168 = T_1542 == 1'h0;\n  assign T_6170 = T_6168 | T_1782_25;\n  assign T_6172 = T_1695 == 1'h0;\n  assign T_6174 = T_6172 | T_1782_42;\n  assign T_6176 = T_1758 == 1'h0;\n  assign T_6178 = T_6176 | T_1782_49;\n  assign T_6442_0 = T_5880;\n  assign T_6442_1 = 1'h1;\n  assign T_6442_2 = T_5887;\n  assign T_6442_3 = T_5891;\n  assign T_6442_4 = T_5895;\n  assign T_6442_5 = 1'h1;\n  assign T_6442_6 = T_5902;\n  assign T_6442_7 = T_5906;\n  assign T_6442_8 = T_5910;\n  assign T_6442_9 = 1'h1;\n  assign T_6442_10 = 1'h1;\n  assign T_6442_11 = 1'h1;\n  assign T_6442_12 = 1'h1;\n  assign T_6442_13 = 1'h1;\n  assign T_6442_14 = 1'h1;\n  assign T_6442_15 = 1'h1;\n  assign T_6442_16 = T_5935;\n  assign T_6442_17 = 1'h1;\n  assign T_6442_18 = T_5942;\n  assign T_6442_19 = T_5946;\n  assign T_6442_20 = T_5950;\n  assign T_6442_21 = 1'h1;\n  assign T_6442_22 = T_5957;\n  assign T_6442_23 = T_5961;\n  assign T_6442_24 = T_5965;\n  assign T_6442_25 = 1'h1;\n  assign T_6442_26 = 1'h1;\n  assign T_6442_27 = 1'h1;\n  assign T_6442_28 = 1'h1;\n  assign T_6442_29 = 1'h1;\n  assign T_6442_30 = 1'h1;\n  assign T_6442_31 = 1'h1;\n  assign T_6442_32 = T_5990;\n  assign T_6442_33 = T_5994;\n  assign T_6442_34 = T_5998;\n  assign T_6442_35 = T_6002;\n  assign T_6442_36 = T_6006;\n  assign T_6442_37 = T_6010;\n  assign T_6442_38 = T_6014;\n  assign T_6442_39 = T_6018;\n  assign T_6442_40 = T_6022;\n  assign T_6442_41 = T_6026;\n  assign T_6442_42 = T_6030;\n  assign T_6442_43 = T_6034;\n  assign T_6442_44 = T_6038;\n  assign T_6442_45 = T_6042;\n  assign T_6442_46 = T_6046;\n  assign T_6442_47 = T_6050;\n  assign T_6442_48 = 1'h1;\n  assign T_6442_49 = 1'h1;\n  assign T_6442_50 = 1'h1;\n  assign T_6442_51 = 1'h1;\n  assign T_6442_52 = 1'h1;\n  assign T_6442_53 = 1'h1;\n  assign T_6442_54 = 1'h1;\n  assign T_6442_55 = 1'h1;\n  assign T_6442_56 = 1'h1;\n  assign T_6442_57 = 1'h1;\n  assign T_6442_58 = 1'h1;\n  assign T_6442_59 = 1'h1;\n  assign T_6442_60 = 1'h1;\n  assign T_6442_61 = 1'h1;\n  assign T_6442_62 = 1'h1;\n  assign T_6442_63 = 1'h1;\n  assign T_6442_64 = T_6102;\n  assign T_6442_65 = T_6106;\n  assign T_6442_66 = T_6110;\n  assign T_6442_67 = T_6114;\n  assign T_6442_68 = T_6118;\n  assign T_6442_69 = T_6122;\n  assign T_6442_70 = T_6126;\n  assign T_6442_71 = T_6130;\n  assign T_6442_72 = T_6134;\n  assign T_6442_73 = T_6138;\n  assign T_6442_74 = T_6142;\n  assign T_6442_75 = T_6146;\n  assign T_6442_76 = T_6150;\n  assign T_6442_77 = T_6154;\n  assign T_6442_78 = T_6158;\n  assign T_6442_79 = T_6162;\n  assign T_6442_80 = T_6166;\n  assign T_6442_81 = T_6170;\n  assign T_6442_82 = T_6174;\n  assign T_6442_83 = T_6178;\n  assign T_6442_84 = 1'h1;\n  assign T_6442_85 = 1'h1;\n  assign T_6442_86 = 1'h1;\n  assign T_6442_87 = 1'h1;\n  assign T_6442_88 = 1'h1;\n  assign T_6442_89 = 1'h1;\n  assign T_6442_90 = 1'h1;\n  assign T_6442_91 = 1'h1;\n  assign T_6442_92 = 1'h1;\n  assign T_6442_93 = 1'h1;\n  assign T_6442_94 = 1'h1;\n  assign T_6442_95 = 1'h1;\n  assign T_6442_96 = 1'h1;\n  assign T_6442_97 = 1'h1;\n  assign T_6442_98 = 1'h1;\n  assign T_6442_99 = 1'h1;\n  assign T_6442_100 = 1'h1;\n  assign T_6442_101 = 1'h1;\n  assign T_6442_102 = 1'h1;\n  assign T_6442_103 = 1'h1;\n  assign T_6442_104 = 1'h1;\n  assign T_6442_105 = 1'h1;\n  assign T_6442_106 = 1'h1;\n  assign T_6442_107 = 1'h1;\n  assign T_6442_108 = 1'h1;\n  assign T_6442_109 = 1'h1;\n  assign T_6442_110 = 1'h1;\n  assign T_6442_111 = 1'h1;\n  assign T_6442_112 = 1'h1;\n  assign T_6442_113 = 1'h1;\n  assign T_6442_114 = 1'h1;\n  assign T_6442_115 = 1'h1;\n  assign T_6442_116 = 1'h1;\n  assign T_6442_117 = 1'h1;\n  assign T_6442_118 = 1'h1;\n  assign T_6442_119 = 1'h1;\n  assign T_6442_120 = 1'h1;\n  assign T_6442_121 = 1'h1;\n  assign T_6442_122 = 1'h1;\n  assign T_6442_123 = 1'h1;\n  assign T_6442_124 = 1'h1;\n  assign T_6442_125 = 1'h1;\n  assign T_6442_126 = 1'h1;\n  assign T_6442_127 = 1'h1;\n  assign T_6576 = T_5878 | T_1787_1;\n  assign T_6583 = T_5885 | T_1787_17;\n  assign T_6587 = T_5889 | T_1787_30;\n  assign T_6591 = T_5893 | T_1787_45;\n  assign T_6598 = T_5900 | T_1787_9;\n  assign T_6602 = T_5904 | T_1787_27;\n  assign T_6606 = T_5908 | T_1787_40;\n  assign T_6631 = T_5933 | T_1787_35;\n  assign T_6638 = T_5940 | T_1787_33;\n  assign T_6642 = T_5944 | T_1787_44;\n  assign T_6646 = T_5948 | T_1787_5;\n  assign T_6653 = T_5955 | T_1787_22;\n  assign T_6657 = T_5959 | T_1787_39;\n  assign T_6661 = T_5963 | T_1787_3;\n  assign T_6686 = T_5988 | T_1787_18;\n  assign T_6690 = T_5992 | T_1787_12;\n  assign T_6694 = T_5996 | T_1787_19;\n  assign T_6698 = T_6000 | T_1787_32;\n  assign T_6702 = T_6004 | T_1787_43;\n  assign T_6706 = T_6008 | T_1787_4;\n  assign T_6710 = T_6012 | T_1787_10;\n  assign T_6714 = T_6016 | T_1787_28;\n  assign T_6718 = T_6020 | T_1787_38;\n  assign T_6722 = T_6024 | T_1787_15;\n  assign T_6726 = T_6028 | T_1787_2;\n  assign T_6730 = T_6032 | T_1787_37;\n  assign T_6734 = T_6036 | T_1787_23;\n  assign T_6738 = T_6040 | T_1787_20;\n  assign T_6742 = T_6044 | T_1787_6;\n  assign T_6746 = T_6048 | T_1787_47;\n  assign T_6798 = T_6100 | T_1787_21;\n  assign T_6802 = T_6104 | T_1787_13;\n  assign T_6806 = T_6108 | T_1787_29;\n  assign T_6810 = T_6112 | T_1787_34;\n  assign T_6814 = T_6116 | T_1787_48;\n  assign T_6818 = T_6120 | T_1787_0;\n  assign T_6822 = T_6124 | T_1787_11;\n  assign T_6826 = T_6128 | T_1787_24;\n  assign T_6830 = T_6132 | T_1787_36;\n  assign T_6834 = T_6136 | T_1787_16;\n  assign T_6838 = T_6140 | T_1787_8;\n  assign T_6842 = T_6144 | T_1787_41;\n  assign T_6846 = T_6148 | T_1787_26;\n  assign T_6850 = T_6152 | T_1787_14;\n  assign T_6854 = T_6156 | T_1787_7;\n  assign T_6858 = T_6160 | T_1787_46;\n  assign T_6862 = T_6164 | T_1787_31;\n  assign T_6866 = T_6168 | T_1787_25;\n  assign T_6870 = T_6172 | T_1787_42;\n  assign T_6874 = T_6176 | T_1787_49;\n  assign T_7138_0 = T_6576;\n  assign T_7138_1 = 1'h1;\n  assign T_7138_2 = T_6583;\n  assign T_7138_3 = T_6587;\n  assign T_7138_4 = T_6591;\n  assign T_7138_5 = 1'h1;\n  assign T_7138_6 = T_6598;\n  assign T_7138_7 = T_6602;\n  assign T_7138_8 = T_6606;\n  assign T_7138_9 = 1'h1;\n  assign T_7138_10 = 1'h1;\n  assign T_7138_11 = 1'h1;\n  assign T_7138_12 = 1'h1;\n  assign T_7138_13 = 1'h1;\n  assign T_7138_14 = 1'h1;\n  assign T_7138_15 = 1'h1;\n  assign T_7138_16 = T_6631;\n  assign T_7138_17 = 1'h1;\n  assign T_7138_18 = T_6638;\n  assign T_7138_19 = T_6642;\n  assign T_7138_20 = T_6646;\n  assign T_7138_21 = 1'h1;\n  assign T_7138_22 = T_6653;\n  assign T_7138_23 = T_6657;\n  assign T_7138_24 = T_6661;\n  assign T_7138_25 = 1'h1;\n  assign T_7138_26 = 1'h1;\n  assign T_7138_27 = 1'h1;\n  assign T_7138_28 = 1'h1;\n  assign T_7138_29 = 1'h1;\n  assign T_7138_30 = 1'h1;\n  assign T_7138_31 = 1'h1;\n  assign T_7138_32 = T_6686;\n  assign T_7138_33 = T_6690;\n  assign T_7138_34 = T_6694;\n  assign T_7138_35 = T_6698;\n  assign T_7138_36 = T_6702;\n  assign T_7138_37 = T_6706;\n  assign T_7138_38 = T_6710;\n  assign T_7138_39 = T_6714;\n  assign T_7138_40 = T_6718;\n  assign T_7138_41 = T_6722;\n  assign T_7138_42 = T_6726;\n  assign T_7138_43 = T_6730;\n  assign T_7138_44 = T_6734;\n  assign T_7138_45 = T_6738;\n  assign T_7138_46 = T_6742;\n  assign T_7138_47 = T_6746;\n  assign T_7138_48 = 1'h1;\n  assign T_7138_49 = 1'h1;\n  assign T_7138_50 = 1'h1;\n  assign T_7138_51 = 1'h1;\n  assign T_7138_52 = 1'h1;\n  assign T_7138_53 = 1'h1;\n  assign T_7138_54 = 1'h1;\n  assign T_7138_55 = 1'h1;\n  assign T_7138_56 = 1'h1;\n  assign T_7138_57 = 1'h1;\n  assign T_7138_58 = 1'h1;\n  assign T_7138_59 = 1'h1;\n  assign T_7138_60 = 1'h1;\n  assign T_7138_61 = 1'h1;\n  assign T_7138_62 = 1'h1;\n  assign T_7138_63 = 1'h1;\n  assign T_7138_64 = T_6798;\n  assign T_7138_65 = T_6802;\n  assign T_7138_66 = T_6806;\n  assign T_7138_67 = T_6810;\n  assign T_7138_68 = T_6814;\n  assign T_7138_69 = T_6818;\n  assign T_7138_70 = T_6822;\n  assign T_7138_71 = T_6826;\n  assign T_7138_72 = T_6830;\n  assign T_7138_73 = T_6834;\n  assign T_7138_74 = T_6838;\n  assign T_7138_75 = T_6842;\n  assign T_7138_76 = T_6846;\n  assign T_7138_77 = T_6850;\n  assign T_7138_78 = T_6854;\n  assign T_7138_79 = T_6858;\n  assign T_7138_80 = T_6862;\n  assign T_7138_81 = T_6866;\n  assign T_7138_82 = T_6870;\n  assign T_7138_83 = T_6874;\n  assign T_7138_84 = 1'h1;\n  assign T_7138_85 = 1'h1;\n  assign T_7138_86 = 1'h1;\n  assign T_7138_87 = 1'h1;\n  assign T_7138_88 = 1'h1;\n  assign T_7138_89 = 1'h1;\n  assign T_7138_90 = 1'h1;\n  assign T_7138_91 = 1'h1;\n  assign T_7138_92 = 1'h1;\n  assign T_7138_93 = 1'h1;\n  assign T_7138_94 = 1'h1;\n  assign T_7138_95 = 1'h1;\n  assign T_7138_96 = 1'h1;\n  assign T_7138_97 = 1'h1;\n  assign T_7138_98 = 1'h1;\n  assign T_7138_99 = 1'h1;\n  assign T_7138_100 = 1'h1;\n  assign T_7138_101 = 1'h1;\n  assign T_7138_102 = 1'h1;\n  assign T_7138_103 = 1'h1;\n  assign T_7138_104 = 1'h1;\n  assign T_7138_105 = 1'h1;\n  assign T_7138_106 = 1'h1;\n  assign T_7138_107 = 1'h1;\n  assign T_7138_108 = 1'h1;\n  assign T_7138_109 = 1'h1;\n  assign T_7138_110 = 1'h1;\n  assign T_7138_111 = 1'h1;\n  assign T_7138_112 = 1'h1;\n  assign T_7138_113 = 1'h1;\n  assign T_7138_114 = 1'h1;\n  assign T_7138_115 = 1'h1;\n  assign T_7138_116 = 1'h1;\n  assign T_7138_117 = 1'h1;\n  assign T_7138_118 = 1'h1;\n  assign T_7138_119 = 1'h1;\n  assign T_7138_120 = 1'h1;\n  assign T_7138_121 = 1'h1;\n  assign T_7138_122 = 1'h1;\n  assign T_7138_123 = 1'h1;\n  assign T_7138_124 = 1'h1;\n  assign T_7138_125 = 1'h1;\n  assign T_7138_126 = 1'h1;\n  assign T_7138_127 = 1'h1;\n  assign T_7269 = T_1028_bits_index[0];\n  assign T_7270 = T_1028_bits_index[1];\n  assign T_7271 = T_1028_bits_index[2];\n  assign T_7272 = T_1028_bits_index[3];\n  assign T_7273 = T_1028_bits_index[4];\n  assign T_7274 = T_1028_bits_index[5];\n  assign T_7275 = T_1028_bits_index[6];\n  assign T_7279 = {T_7271,T_7270};\n  assign T_7280 = {T_7279,T_7269};\n  assign T_7281 = {T_7273,T_7272};\n  assign T_7282 = {T_7275,T_7274};\n  assign T_7283 = {T_7282,T_7281};\n  assign T_7284 = {T_7283,T_7280};\n  assign T_7285 = Queue_1_io_deq_bits_index[0];\n  assign T_7286 = Queue_1_io_deq_bits_index[1];\n  assign T_7287 = Queue_1_io_deq_bits_index[2];\n  assign T_7288 = Queue_1_io_deq_bits_index[3];\n  assign T_7289 = Queue_1_io_deq_bits_index[4];\n  assign T_7290 = Queue_1_io_deq_bits_index[5];\n  assign T_7291 = Queue_1_io_deq_bits_index[6];\n  assign T_7295 = {T_7287,T_7286};\n  assign T_7296 = {T_7295,T_7285};\n  assign T_7297 = {T_7289,T_7288};\n  assign T_7298 = {T_7291,T_7290};\n  assign T_7299 = {T_7298,T_7297};\n  assign T_7300 = {T_7299,T_7296};\n  assign GEN_0 = GEN_148;\n  assign GEN_22 = 7'h1 == T_7284 ? T_5050_1 : T_5050_0;\n  assign GEN_23 = 7'h2 == T_7284 ? T_5050_2 : GEN_22;\n  assign GEN_24 = 7'h3 == T_7284 ? T_5050_3 : GEN_23;\n  assign GEN_25 = 7'h4 == T_7284 ? T_5050_4 : GEN_24;\n  assign GEN_26 = 7'h5 == T_7284 ? T_5050_5 : GEN_25;\n  assign GEN_27 = 7'h6 == T_7284 ? T_5050_6 : GEN_26;\n  assign GEN_28 = 7'h7 == T_7284 ? T_5050_7 : GEN_27;\n  assign GEN_29 = 7'h8 == T_7284 ? T_5050_8 : GEN_28;\n  assign GEN_30 = 7'h9 == T_7284 ? T_5050_9 : GEN_29;\n  assign GEN_31 = 7'ha == T_7284 ? T_5050_10 : GEN_30;\n  assign GEN_32 = 7'hb == T_7284 ? T_5050_11 : GEN_31;\n  assign GEN_33 = 7'hc == T_7284 ? T_5050_12 : GEN_32;\n  assign GEN_34 = 7'hd == T_7284 ? T_5050_13 : "}
{"text": "GEN_33;\n  assign GEN_35 = 7'he == T_7284 ? T_5050_14 : GEN_34;\n  assign GEN_36 = 7'hf == T_7284 ? T_5050_15 : GEN_35;\n  assign GEN_37 = 7'h10 == T_7284 ? T_5050_16 : GEN_36;\n  assign GEN_38 = 7'h11 == T_7284 ? T_5050_17 : GEN_37;\n  assign GEN_39 = 7'h12 == T_7284 ? T_5050_18 : GEN_38;\n  assign GEN_40 = 7'h13 == T_7284 ? T_5050_19 : GEN_39;\n  assign GEN_41 = 7'h14 == T_7284 ? T_5050_20 : GEN_40;\n  assign GEN_42 = 7'h15 == T_7284 ? T_5050_21 : GEN_41;\n  assign GEN_43 = 7'h16 == T_7284 ? T_5050_22 : GEN_42;\n  assign GEN_44 = 7'h17 == T_7284 ? T_5050_23 : GEN_43;\n  assign GEN_45 = 7'h18 == T_7284 ? T_5050_24 : GEN_44;\n  assign GEN_46 = 7'h19 == T_7284 ? T_5050_25 : GEN_45;\n  assign GEN_47 = 7'h1a == T_7284 ? T_5050_26 : GEN_46;\n  assign GEN_48 = 7'h1b == T_7284 ? T_5050_27 : GEN_47;\n  assign GEN_49 = 7'h1c == T_7284 ? T_5050_28 : GEN_48;\n  assign GEN_50 = 7'h1d == T_7284 ? T_5050_29 : GEN_49;\n  assign GEN_51 = 7'h1e == T_7284 ? T_5050_30 : GEN_50;\n  assign GEN_52 = 7'h1f == T_7284 ? T_5050_31 : GEN_51;\n  assign GEN_53 = 7'h20 == T_7284 ? T_5050_32 : GEN_52;\n  assign GEN_54 = 7'h21 == T_7284 ? T_5050_33 : GEN_53;\n  assign GEN_55 = 7'h22 == T_7284 ? T_5050_34 : GEN_54;\n  assign GEN_56 = 7'h23 == T_7284 ? T_5050_35 : GEN_55;\n  assign GEN_57 = 7'h24 == T_7284 ? T_5050_36 : GEN_56;\n  assign GEN_58 = 7'h25 == T_7284 ? T_5050_37 : GEN_57;\n  assign GEN_59 = 7'h26 == T_7284 ? T_5050_38 : GEN_58;\n  assign GEN_60 = 7'h27 == T_7284 ? T_5050_39 : GEN_59;\n  assign GEN_61 = 7'h28 == T_7284 ? T_5050_40 : GEN_60;\n  assign GEN_62 = 7'h29 == T_7284 ? T_5050_41 : GEN_61;\n  assign GEN_63 = 7'h2a == T_7284 ? T_5050_42 : GEN_62;\n  assign GEN_64 = 7'h2b == T_7284 ? T_5050_43 : GEN_63;\n  assign GEN_65 = 7'h2c == T_7284 ? T_5050_44 : GEN_64;\n  assign GEN_66 = 7'h2d == T_7284 ? T_5050_45 : GEN_65;\n  assign GEN_67 = 7'h2e == T_7284 ? T_5050_46 : GEN_66;\n  assign GEN_68 = 7'h2f == T_7284 ? T_5050_47 : GEN_67;\n  assign GEN_69 = 7'h30 == T_7284 ? T_5050_48 : GEN_68;\n  assign GEN_70 = 7'h31 == T_7284 ? T_5050_49 : GEN_69;\n  assign GEN_71 = 7'h32 == T_7284 ? T_5050_50 : GEN_70;\n  assign GEN_72 = 7'h33 == T_7284 ? T_5050_51 : GEN_71;\n  assign GEN_73 = 7'h34 == T_7284 ? T_5050_52 : GEN_72;\n  assign GEN_74 = 7'h35 == T_7284 ? T_5050_53 : GEN_73;\n  assign GEN_75 = 7'h36 == T_7284 ? T_5050_54 : GEN_74;\n  assign GEN_76 = 7'h37 == T_7284 ? T_5050_55 : GEN_75;\n  assign GEN_77 = 7'h38 == T_7284 ? T_5050_56 : GEN_76;\n  assign GEN_78 = 7'h39 == T_7284 ? T_5050_57 : GEN_77;\n  assign GEN_79 = 7'h3a == T_7284 ? T_5050_58 : GEN_78;\n  assign GEN_80 = 7'h3b == T_7284 ? T_5050_59 : GEN_79;\n  assign GEN_81 = 7'h3c == T_7284 ? T_5050_60 : GEN_80;\n  assign GEN_82 = 7'h3d == T_7284 ? T_5050_61 : GEN_81;\n  assign GEN_83 = 7'h3e == T_7284 ? T_5050_62 : GEN_82;\n  assign GEN_84 = 7'h3f == T_7284 ? T_5050_63 : GEN_83;\n  assign GEN_85 = 7'h40 == T_7284 ? T_5050_64 : GEN_84;\n  assign GEN_86 = 7'h41 == T_7284 ? T_5050_65 : GEN_85;\n  assign GEN_87 = 7'h42 == T_7284 ? T_5050_66 : GEN_86;\n  assign GEN_88 = 7'h43 == T_7284 ? T_5050_67 : GEN_87;\n  assign GEN_89 = 7'h44 == T_7284 ? T_5050_68 : GEN_88;\n  assign GEN_90 = 7'h45 == T_7284 ? T_5050_69 : GEN_89;\n  assign GEN_91 = 7'h46 == T_7284 ? T_5050_70 : GEN_90;\n  assign GEN_92 = 7'h47 == T_7284 ? T_5050_71 : GEN_91;\n  assign GEN_93 = 7'h48 == T_7284 ? T_5050_72 : GEN_92;\n  assign GEN_94 = 7'h49 == T_7284 ? T_5050_73 : GEN_93;\n  assign GEN_95 = 7'h4a == T_7284 ? T_5050_74 : GEN_94;\n  assign GEN_96 = 7'h4b == T_7284 ? T_5050_75 : GEN_95;\n  assign GEN_97 = 7'h4c == T_7284 ? T_5050_76 : GEN_96;\n  assign GEN_98 = 7'h4d == T_7284 ? T_5050_77 : GEN_97;\n  assign GEN_99 = 7'h4e == T_7284 ? T_5050_78 : GEN_98;\n  assign GEN_100 = 7'h4f == T_7284 ? T_5050_79 : GEN_99;\n  assign GEN_101 = 7'h50 == T_7284 ? T_5050_80 : GEN_100;\n  assign GEN_102 = 7'h51 == T_7284 ? T_5050_81 : GEN_101;\n  assign GEN_103 = 7'h52 == T_7284 ? T_5050_82 : GEN_102;\n  assign GEN_104 = 7'h53 == T_7284 ? T_5050_83 : GEN_103;\n  assign GEN_105 = 7'h54 == T_7284 ? T_5050_84 : GEN_104;\n  assign GEN_106 = 7'h55 == T_7284 ? T_5050_85 : GEN_105;\n  assign GEN_107 = 7'h56 == T_7284 ? T_5050_86 : GEN_106;\n  assign GEN_108 = 7'h57 == T_7284 ? T_5050_87 : GEN_107;\n  assign GEN_109 = 7'h58 == T_7284 ? T_5050_88 : GEN_108;\n  assign GEN_110 = 7'h59 == T_7284 ? T_5050_89 : GEN_109;\n  assign GEN_111 = 7'h5a == T_7284 ? T_5050_90 : GEN_110;\n  assign GEN_112 = 7'h5b == T_7284 ? T_5050_91 : GEN_111;\n  assign GEN_113 = 7'h5c == T_7284 ? T_5050_92 : GEN_112;\n  assign GEN_114 = 7'h5d == T_7284 ? T_5050_93 : GEN_113;\n  assign GEN_115 = 7'h5e == T_7284 ? T_5050_94 : GEN_114;\n  assign GEN_116 = 7'h5f == T_7284 ? T_5050_95 : GEN_115;\n  assign GEN_117 = 7'h60 == T_7284 ? T_5050_96 : GEN_116;\n  assign GEN_118 = 7'h61 == T_7284 ? T_5050_97 : GEN_117;\n  assign GEN_119 = 7'h62 == T_7284 ? T_5050_98 : GEN_118;\n  assign GEN_120 = 7'h63 == T_7284 ? T_5050_99 : GEN_119;\n  assign GEN_121 = 7'h64 == T_7284 ? T_5050_100 : GEN_120;\n  assign GEN_122 = 7'h65 == T_7284 ? T_5050_101 : GEN_121;\n  assign GEN_123 = 7'h66 == T_7284 ? T_5050_102 : GEN_122;\n  assign GEN_124 = 7'h67 == T_7284 ? T_5050_103 : GEN_123;\n  assign GEN_125 = 7'h68 == T_7284 ? T_5050_104 : GEN_124;\n  assign GEN_126 = 7'h69 == T_7284 ? T_5050_105 : GEN_125;\n  assign GEN_127 = 7'h6a == T_7284 ? T_5050_106 : GEN_126;\n  assign GEN_128 = 7'h6b == T_7284 ? T_5050_107 : GEN_127;\n  assign GEN_129 = 7'h6c == T_7284 ? T_5050_108 : GEN_128;\n  assign GEN_130 = 7'h6d == T_7284 ? T_5050_109 : GEN_129;\n  assign GEN_131 = 7'h6e == T_7284 ? T_5050_110 : GEN_130;\n  assign GEN_132 = 7'h6f == T_7284 ? T_5050_111 : GEN_131;\n  assign GEN_133 = 7'h70 == T_7284 ? T_5050_112 : GEN_132;\n  assign GEN_134 = 7'h71 == T_7284 ? T_5050_113 : GEN_133;\n  assign GEN_135 = 7'h72 == T_7284 ? T_5050_114 : GEN_134;\n  assign GEN_136 = 7'h73 == T_7284 ? T_5050_115 : GEN_135;\n  assign GEN_137 = 7'h74 == T_7284 ? T_5050_116 : GEN_136;\n  assign GEN_138 = 7'h75 == T_7284 ? T_5050_117 : GEN_137;\n  assign GEN_139 = 7'h76 == T_7284 ? T_5050_118 : GEN_138;\n  assign GEN_140 = 7'h77 == T_7284 ? T_5050_119 : GEN_139;\n  assign GEN_141 = 7'h78 == T_7284 ? T_5050_120 : GEN_140;\n  assign GEN_142 = 7'h79 == T_7284 ? T_5050_121 : GEN_141;\n  assign GEN_143 = 7'h7a == T_7284 ? T_5050_122 : GEN_142;\n  assign GEN_144 = 7'h7b == T_7284 ? T_5050_123 : GEN_143;\n  assign GEN_145 = 7'h7c == T_7284 ? T_5050_124 : GEN_144;\n  assign GEN_146 = 7'h7d == T_7284 ? T_5050_125 : GEN_145;\n  assign GEN_147 = 7'h7e == T_7284 ? T_5050_126 : GEN_146;\n  assign GEN_148 = 7'h7f == T_7284 ? T_5050_127 : GEN_147;\n  assign GEN_1 = GEN_275;\n  assign GEN_149 = 7'h1 == T_7284 ? T_5746_1 : T_5746_0;\n  assign GEN_150 = 7'h2 == T_7284 ? T_5746_2 : GEN_149;\n  assign GEN_151 = 7'h3 == T_7284 ? T_5746_3 : GEN_150;\n  assign GEN_152 = 7'h4 == T_7284 ? T_5746_4 : GEN_151;\n  assign GEN_153 = 7'h5 == T_7284 ? T_5746_5 : GEN_152;\n  assign GEN_154 = 7'h6 == T_7284 ? T_5746_6 : GEN_153;\n  assign GEN_155 = 7'h7 == T_7284 ? T_5746_7 : GEN_154;\n  assign GEN_156 = 7'h8 == T_7284 ? T_5746_8 : GEN_155;\n  assign GEN_157 = 7'h9 == T_7284 ? T_5746_9 : GEN_156;\n  assign GEN_158 = 7'ha == T_7284 ? T_5746_10 : GEN_157;\n  assign GEN_159 = 7'hb == T_7284 ? T_5746_11 : GEN_158;\n  assign GEN_160 = 7'hc == T_7284 ? T_5746_12 : GEN_159;\n  assign GEN_161 = 7'hd == T_7284 ? T_5746_13 : GEN_160;\n  assign GEN_162 = 7'he == T_7284 ? T_5746_14 : GEN_161;\n  assign GEN_163 = 7'hf == T_7284 ? T_5746_15 : GEN_162;\n  assign GEN_164 = 7'h10 == T_7284 ? T_5746_16 : GEN_163;\n  assign GEN_165 = 7'h11 == T_7284 ? T_5746_17 : GEN_164;\n  assign GEN_166 = 7'h12 == T_7284 ? T_5746_18 : GEN_165;\n  assign GEN_167 = 7'h13 == T_7284 ? T_5746_19 : GEN_166;\n  assign GEN_168 = 7'h14 == T_7284 ? T_5746_20 : GEN_167;\n  assign GEN_169 = 7'h15 == T_7284 ? T_5746_21 : GEN_168;\n  assign GEN_170 = 7'h16 == T_7284 ? T_5746_22 : GEN_169;\n  assign GEN_171 = 7'h17 == T_7284 ? T_5746_23 : GEN_170;\n  assign GEN_172 = 7'h18 == T_7284 ? T_5746_24 : GEN_171;\n  assign GEN_173 = 7'h19 == T_7284 ? T_5746_25 : GEN_172;\n  assign GEN_174 = 7'h1a == T_7284 ? T_5746_26 : GEN_173;\n  assign GEN_175 = 7'h1b == T_7284 ? T_5746_27 : GEN_174;\n  assign GEN_176 = 7'h1c == T_7284 ? T_5746_28 : GEN_175;\n  assign GEN_177 = 7'h1d == T_7284 ? T_5746_29 : GEN_176;\n  assign GEN_178 = 7'h1e == T_7284 ? T_5746_30 : GEN_177;\n  assign GEN_179 = 7'h1f == T_7284 ? T_5746_31 : GEN_178;\n  assign GEN_180 = 7'h20 == T_7284 ? T_5746_32 : GEN_179;\n  assign GEN_181 = 7'h21 == T_7284 ? T_5746_33 : GEN_180;\n  assign GEN_182 = 7'h22 == T_7284 ? T_5746_34 : GEN_181;\n  assign GEN_183 = 7'h23 == T_7284 ? T_5746_35 : GEN_182;\n  assign GEN_184 = 7'h24 == T_7284 ? T_5746_36 : GEN_183;\n  assign GEN_185 = 7'h25 == T_7284 ? T_5746_37 : GEN_184;\n  assign GEN_186 = 7'h26 == T_7284 ? T_5746_38 : GEN_185;\n  assign GEN_187 = 7'h27 == T_7284 ? T_5746_39 : GEN_186;\n  assign GEN_188 = 7'h28 == T_7284 ? T_5746_40 : GEN_187;\n  assign GEN_189 = 7'h29 == T_7284 ? T_5746_41 : GEN_188;\n  assign GEN_190 = 7'h2a == T_7284 ? T_5746_42 : GEN_189;\n  assign GEN_191 = 7'h2b == T_7284 ? T_5746_43 : GEN_190;\n  assign GEN_192 = 7'h2c == T_7284 ? T_5746_44 : GEN_191;\n  assign GEN_193 = 7'h2d == T_7284 ? T_5746_45 : GEN_192;\n  assign GEN_194 = 7'h2e == T_7284 ? T_5746_46 : GEN_193;\n  assign GEN_195 = 7'h2f == T_7284 ? T_5746_47 : GEN_194;\n  assign GEN_196 = 7'h30 == T_7284 ? T_5746_48 : GEN_195;\n  assign GEN_197 = 7'h31 == T_7284 ? T_5746_49 : GEN_196;\n  assign GEN_198 = 7'h32 == T_7284 ? T_5746_50 : GEN_197;\n  assign GEN_199 = 7'h33 == T_7284 ? T_5746_51 : GEN_198;\n  assign GEN_200 = 7'h34 == T_7284 ? T_5746_52 : GEN_199;\n  assign GEN_201 = 7'h35 == T_7284 ? T_5746_53 : GEN_200;\n  assign GEN_202 = 7'h36 == T_7284 ? T_5746_54 : GEN_201;\n  assign GEN_203 = 7'h37 == T_7284 ? T_5746_55 : GEN_202;\n  assign GEN_204 = 7'h38 == T_7284 ? T_5746_56 : GEN_203;\n  assign GEN_205 = 7'h39 == T_7284 ? T_5746_57 : GEN_204;\n  assign GEN_206 = 7'h3a == T_7284 ? T_5746_58 : GEN_205;\n  assign GEN_207 = 7'h3b == T_7284 ? T_5746_59 : GEN_206;\n  assign GEN_208 = 7'h3c == T_7284 ? T_5746_60 : GEN_207;\n  assign GEN_209 = 7'h3d == T_7284 ? T_5746_61 : GEN_208;\n  assign GEN_210 = 7'h3e == T_7284 ? T_5746_62 : GEN_209;\n  assign GEN_211 = 7'h3f == T_7284 ? T_5746_63 : GEN_210;\n  assign GEN_212 = 7'h40 == T_7284 ? T_5746_64 : GEN_211;\n  assign GEN_213 = 7'h41 == T_7284 ? T_5746_65 : GEN_212;\n  assign GEN_214 = 7'h42 == T_7284 ? T_5746_66 : GEN_213;\n  assign GEN_215 = 7'h43 == T_7284 ? T_5746_67 : GEN_214;\n  assign GEN_216 = 7'h44 == T_7284 ? T_5746_68 : GEN_215;\n  assign GEN_217 = 7'h45 == T_7284 ? T_5746_69 : GEN_216;\n  assign GEN_218 = 7'h46 == T_7284 ? T_5746_70 : GEN_217;\n  assign GEN_219 = 7'h47 == T_7284 ? T_5746_71 : GEN_218;\n  assign GEN_220 = 7'h48 == T_7284 ? T_5746_72 : GEN_219;\n  assign GEN_221 = 7'h49 == T_7284 ? T_5746_73 : GEN_220;\n  assign GEN_222 = 7'h4a == T_7284 ? T_5746_74 : GEN_221;\n  assign GEN_223 = 7'h4b == T_7284 ? T_5746_75 : GEN_222;\n  assign GEN_224 = 7'h4c == T_7284 ? T_5746_76 : GEN_223;\n  assign GEN_225 = 7'h4d == T_7284 ? T_5746_77 : GEN_224;\n  assign GEN_226 = 7'h4e == T_7284 ? T_5746_78 : GEN_225;\n  assign GEN_227 = 7'h4f == T_7284 ? T_5746_79 : GEN_226;\n  assign GEN_228 = 7'h50 == T_7284 ? T_5746_80 : GEN_227;\n  assign GEN_229 = 7'h51 == T_7284 ? T_5746_81 : GEN_228;\n  assign GEN_230 = 7'h52 == T_7284 ? T_5746_82 : GEN_229;\n  assign GEN_231 = 7'h53 == T_7284 ? T_5746_83 : GEN_230;\n  assign GEN_232 = 7'h54 == T_7284 ? T_5746_84 : GEN_231;\n  assign GEN_233 = 7'h55 == T_7284 ? T_5746_85 : GEN_232;\n  assign GEN_234 = 7'h56 == T_7284 ? T_5746_86 : GEN_233;\n  assign GEN_235 = 7'h57 == T_7284 ? T_5746_87 : GEN_234;\n  assign GEN_236 = 7'h58 == T_7284 ? T_5746_88 : GEN_235;\n  assign GEN_237 = 7'h59 == T_7284 ? T_5746_89 : GEN_236;\n  assign GEN_238 = 7'h5a == T_7284 ? T_5746_90 : GEN_237;\n  assign GEN_239 = 7'h5b == T_7284 ? T_5746_91 : GEN_238;\n  assign GEN_240 = 7'h5c == T_7284 ? T_5746_92 : GEN_239;\n  assign GEN_241 = 7'h5d == T_7284 ? T_5746_93 : GEN_240;\n  assign GEN_242 = 7'h5e == T_7284 ? T_5746_94 : GEN_241;\n  assign GEN_243 = 7'h5f == T_7284 ? T_5746_95 : GEN_242;\n  assign GEN_244 = 7'h60 == T_7284 ? T_5746_96 : GEN_243;\n  assign GEN_245 = 7'h61 == T_7284 ? T_5746_97 : GEN_244;\n  assign GEN_246 = 7'h62 == T_7284 ? T_5746_98 : GEN_245;\n  assign GEN_247 = 7'h63 == T_7284 ? T_5746_99 : GEN_246;\n  assign GEN_248 = 7'h64 == T_7284 ? T_5746_100 : GEN_247;\n  assign GEN_249 = 7'h65 == T_7284 ? T_5746_101 : GEN_248;\n  assign GEN_250 = 7'h66 == T_7284 ? T_5746_102 : GEN_249;\n  assign GEN_251 = 7'h67 == T_7284 ? T_5746_103 : GEN_250;\n  assign GEN_252 = 7'h68 == T_7284 ? T_5746_104 : GEN_251;\n  assign GEN_253 = 7'h69 == T_7284 ? T_5746_105 : GEN_252;\n  assign GEN_254 = 7'h6a == T_7284 ? T_5746_106 : GEN_253;\n  assign GEN_255 = 7'h6b == T_7284 ? T_5746_107 : GEN_254;\n  assign GEN_256 = 7'h6c == T_7284 ? T_5746_108 : GEN_255;\n  assign GEN_257 = 7'h6d == T_7284 ? T_5746_109 : GEN_256;\n  assign GEN_258 = 7'h6e == T_7284 ? T_5746_110 : GEN_257;\n  assign GEN_259 = 7'h6f == T_7284 ? T_5746_111 : GEN_258;\n  assign GEN_260 = 7'h70 == T_7284 ? T_5746_112 : GEN_259;\n  assign GEN_261 = 7'h71 == T_7284 ? T_5746_113 : GEN_260;\n  assign GEN_262 = 7'h72 == T_7284 ? T_5746_114 : GEN_261;\n  assign GEN_263 = 7'h73 == T_7284 ? T_5746_115 : GEN_262;\n  assign GEN_264 = 7'h74 == T_7284 ? T_5746_116 : GEN_263;\n  assign GEN_265 = 7'h75 == T_7284 ? T_5746_117 : GEN_264;\n  assign GEN_266 = 7'h76 == T_7284 ? T_5746_118 : GEN_265;\n  assign GEN_267 = 7'h77 == T_7284 ? T_5746_119 : GEN_266;\n  assign GEN_268 = 7'h78 == T_7284 ? T_5746_120 : GEN_267;\n  assign GEN_269 = 7'h79 == T_7284 ? T_5746_121 : GEN_268;\n  assign GEN_270 = 7'h7a == T_7284 ? T_5746_122 : GEN_269;\n  assign GEN_271 = 7'h7b == T_7284 ? T_5746_123 : GEN_270;\n  assign GEN_272 = 7'h7c == T_7284 ? T_5746_124 : GEN_271;\n  assign GEN_273 = 7'h7d == T_7284 ? T_5746_125 : GEN_272;\n  assign GEN_274 = 7'h7e == T_7284 ? T_5746_126 : GEN_273;\n  assign GEN_275 = 7'h7f == T_7284 ? T_5746_127 : GEN_274;\n  assign T_7303 = T_1028_bits_read ? GEN_0 : GEN_1;\n  assign GEN_2 = GEN_402;\n  assign GEN_276 = 7'h1 == T_7300 ? T_6442_1 : T_6442_0;\n  assign GEN_277 = 7'h2 == T_7300 ? T_6442_2 : GEN_276;\n  assign GEN_278 = 7'h3 == T_7300 ? T_6442_3 : GEN_277;\n  assign GEN_279 = 7'h4 == T_7300 ? T_6442_4 : GEN_278;\n  assign GEN_280 = 7'h5 == T_7300 ? T_6442_5 : GEN_279;\n  assign GEN_281 = 7'h6 == T_7300 ? T_6442_6 : GEN_280;\n  assign GEN_282 = 7'h7 == T_7300 ? T_6442_7 : GEN_281;\n  assign GEN_283 = 7'h8 == T_7300 ? T_6442_8 : GEN_282;\n  assign GEN_284 = 7'h9 == T_7300 ? T_6442_9 : GEN_283;\n  assign GEN_285 = 7'ha == T_7300 ? T_6442_10 : GEN_284;\n  assign GEN_286 = 7'hb == T_7300 ? T_6442_11 : GEN_285;\n  assign GEN_287 = 7'hc == T_7300 ? T_6442_12 : GEN_286;\n  assign GEN_288 = 7'hd == T_7300 ? T_6442_13 : GEN_287;\n  assign GEN_289 = 7'he == T_7300 ? T_6442_14 : GEN_288;\n  assign GEN_290 = 7'hf == T_7300 ? T_6442_15 : GEN_289;\n  assign GEN_291 = 7'h10 == T_7300 ? T_6442_16 : GEN_290;\n  assign GEN_292 = 7'h11 == T_7300 ? T_6442_17 : GEN_291;\n  assign GEN_293 = 7'h12 == T_7300 ? T_6442_18 : GEN_292;\n  assign GEN_294 = 7'h13 == T_7300 ? T_6442_19 : GEN_293;\n  assign GEN_295 = 7'h14 == T_7300 ? T_6442_20 : GEN_294;\n  assign GEN_296 = 7'h15 == T_7300 ? T_6442_21 : GEN_295;\n  assign GEN_297 = 7'h16 == T_7300 ? T_6442_22 : GEN_296;\n  assign GEN_298 = 7'h17 == T_7300 ? T_6442_23 : GEN_297;\n  assign GEN_299 = 7'h18 == T_7300 ? T_6442_24 : GEN_298;\n  assign GEN_300 = 7'h19 == T_7300 ? T_6442_25 : GEN_299;\n  assign GEN_301 = 7'h1a == T_7300 ? T_6442_26 : GEN_300;\n  assign GEN_302 = 7'h1b == T_7300 ? T_6442_27 : GEN_301;\n  assign GEN_303 = 7'h1c == T_7300 ? T_6442_28 : GEN_302;\n  assign GEN_304 = 7'h1d == T_7300 ? T_6442_29 : GEN_303;\n  assign GEN_305 = 7'h1e == T_7300 ? T_6442_30 : GEN_304;\n  assign GEN_306 = 7'h1f == T_7300 ? T_6442_31 : GEN_305;\n  assign GEN_307 = 7'h20 == T_7300 ? T_6442_32 : GEN_306;\n  assign GEN_308 = 7'h21 == T_7300 ? T_6442_33 : GEN_307;\n  assign GEN_309 = 7'h22 == T_7300 ? T_6442_34 : GEN_308;\n  assign GEN_310 = 7'h23 == T_7300 ? T_6442_35 : GEN_309;\n  assign GEN_311 = 7'h24 == T_7300 ? T_6442_36 : GEN_310;\n  assign GEN_312 = 7'h25 == T_7300 ? T_6442_37 : GEN_311;\n  assign GEN_313 = 7'h26 == T_7300 ? T_6442_38 : GEN_312;\n  assign GEN_314 = 7'h27 == T_7300 ? T_6442_39 : GEN_313;\n  assign GEN_315 = 7'h28 == T_7300 ? T_6442_40 : GEN_314;\n  assign GEN_316 = 7'h29 == T_7300 ? T_6442_41 : GEN_315;\n  assign GEN_317 = 7'h2a == T_7300 ? T_6442_42 : GEN_316;\n  assign GEN_318 = 7'h2b == T_7300 ? T_6442_43 : GEN_317;\n  assign GEN_319 = 7'h2c == T_7300 ? T_6442_44 : GEN_318;\n  assign GEN_320 = 7'h2d == T_7300 ? T_6442_45 : GEN_319;\n  assign GEN_321 = 7'h2e == T_7300 ? T_6442_46 : GEN_320;\n  assign GEN_322 = 7'h2f == T_7300 ? T_6442_47 : GEN_321;\n  assign GEN_323 = 7'h30 == T_7300 ? T_6442_48 : GEN_322;\n  assign GEN_324 = 7'h31 == T_7300 ? T_6442_49 : GEN_323;\n  assign GEN_325 = 7'h32 == T_7300 ? T_6442_50 : GEN_324;\n  assign GEN_326 = 7'h33 == T_7300 ? T_6442_51 : GEN_325;\n  assign GEN_327 = 7'h34 == T_7300 ? T_6442_52 : GEN_326;\n  assign GEN_328 = 7'h35 == T_7300 ? T_6442_53 : GEN_327;\n  assign GEN_329 = 7'h36 == T_7300 ? T_6442_54 : GEN_328;\n  assign GEN_330 = 7'h37 == T_7300 ? T_6442_55 : GEN_329;\n  assign GEN_331 = 7'h38 == T_7300 ? T_6442_56 : GEN_330;\n  assign GEN_332 = 7'h39 == T_7300 ? T_6442_57 : GEN_331;\n  assign GEN_333 = 7'h3a == T_7300 ? T_6442_58 : GEN_332;\n  assign GEN_334 = 7'h3b == T_7300 ? T_6442_59 : GEN_333;\n  assign GEN_335 = 7'h3c == T_7300 ? T_6442_60 : GEN_334;\n  assign GEN_336 = 7'h3d == T_7300 ? T_6442_61 : GEN_335;\n  assign GEN_337 = 7'h3e == T_7300 ? T_6442_62 : GEN_336;\n  assign GEN_338 = 7'h3f == T_7300 ? T_6442_63 : GEN_337;\n  assign GEN_339 = 7'h40 == T_7300 ? T_6442_64 : GEN_338;\n  assign GEN_340 = 7'h41 == T_7300 ? T_6442_65 : GEN_339;\n  assign GEN_341 = 7'h42 == T_7300 ? T_6442_66 : GEN_340;\n  assign GEN_342 = 7'h43 == T_7300 ? T_6442_67 : GEN_341;\n  assign GEN_343 = 7'h44 == T_7300 ? T_6442_68 : GEN_342;\n  assign GEN_344 = 7'h45 == T_7300 ? T_6442_69 : GEN_343;\n  assign GEN_345 = 7'h46 == T_7300 ? T_6442_70 : GEN_344;\n  assign GEN_346 = 7'h47 == T_7300 ? T_6442_71 : GEN_345;\n  assign GEN_347 = 7'h48 == T_7300 ? T_6442_72 : GEN_346;\n  assign GEN_348 = 7'h49 == T_7300 ? T_6442_73 : GEN_347;\n  assign GEN_349 = 7'h4a == T_7300 ? T_6442_74 : GEN_348;\n  assign GEN_350 = 7'h4b == T_7300 ? T_6442_75 : GEN_349;\n  assign GEN_351 = 7'h4c == T_7300 ? T_6442_76 : GEN_350;\n  assign GEN_352 = 7'h4d == T_7300 ? T_6442_77 : GEN_351;\n  assign GEN_353 = 7'h4e == T_7300 ? T_6442_78 : GEN_352;\n  assign GEN_354 = 7'h4f == T_7300 ? T_6442_79 : GEN_353;\n  assign GEN_355 = 7'h50 == T_7300 ? T_6442_80 : GEN_354;\n  assign GEN_356 = 7'h51 == T_7300 ? T_6442_81 : GEN_355;\n  assign GEN_357 = 7'h52 == T_7300 ? T_6442_82 : GEN_356;\n  assign GEN_358 = 7'h53 == T_7300 ? T_6442_83 : GEN_357;\n  assign GEN_359 = 7'h54 == T_7300 ? T_6442_84 : GEN_358;\n  assign GEN_360 = 7'h55 == T_7300 ? T_6442_85 : GEN_359;\n  assign GEN_361 = 7'h56 == T_7300 ? T_6442_86 : GEN_360;\n  assign GEN_362 = 7'h57 == T_7300 ? T_6442_87 : GEN_361;\n  assign GEN_363 = 7'h58 == T_7300 ? T_6442_88 : GEN_362;\n  assign GEN_364 = 7'h59 == T_7300 ? T_6442_89 : GEN_363;\n  assign GEN_365 = 7'h5a == T_7300 ? T_6442_90 : GEN_364;\n  assign GEN_366 = 7'h5b == T_7300 ? T_6442_91 : GEN_365;\n  assign GEN_367 = 7'h5c == T_7300 ? T_6442_92 : GEN_366;\n  assign GEN_368 = 7'h5d == T_7300 ? T_6442_93 : GEN_367;\n  assign GEN_369 = 7'h5e == T_7300 ? T_6442_94 : GEN_368;\n  assign GEN_370 = 7'h5f == T_7300 ? T_6442_95 : GEN_369;\n  assign GEN_371 = 7'h60 == T_7300 ? T_6442_96 : GEN_370;\n  assign GEN_372 = 7'h61 == T_7300 ? T_6442_97 : GEN_371;\n  assign GEN_373 = 7'h62 == T_7300 ? T_6442_98 : GEN_372;\n  assign GEN_374 = 7'h63 == T_7300 ? T_6442_99 : GEN_373;\n  assign GEN_375 = 7'h64 == T_7300 ? T_6442_100 : GEN_374;\n  assign GEN_376 = 7'h65 == T_7300 ? T_6442_101 : GEN_375;\n  assign GEN_377 = 7'h66 == T_7300 ? T_6442_102 : GEN_376;\n  assign GEN_378 = 7'h67 == T_7300 ? T_6442_103 : GEN_377;\n  assign GEN_379 = 7'h68 == T_7300 ? T_6442_104 : GEN_3"}
{"text": "78;\n  assign GEN_380 = 7'h69 == T_7300 ? T_6442_105 : GEN_379;\n  assign GEN_381 = 7'h6a == T_7300 ? T_6442_106 : GEN_380;\n  assign GEN_382 = 7'h6b == T_7300 ? T_6442_107 : GEN_381;\n  assign GEN_383 = 7'h6c == T_7300 ? T_6442_108 : GEN_382;\n  assign GEN_384 = 7'h6d == T_7300 ? T_6442_109 : GEN_383;\n  assign GEN_385 = 7'h6e == T_7300 ? T_6442_110 : GEN_384;\n  assign GEN_386 = 7'h6f == T_7300 ? T_6442_111 : GEN_385;\n  assign GEN_387 = 7'h70 == T_7300 ? T_6442_112 : GEN_386;\n  assign GEN_388 = 7'h71 == T_7300 ? T_6442_113 : GEN_387;\n  assign GEN_389 = 7'h72 == T_7300 ? T_6442_114 : GEN_388;\n  assign GEN_390 = 7'h73 == T_7300 ? T_6442_115 : GEN_389;\n  assign GEN_391 = 7'h74 == T_7300 ? T_6442_116 : GEN_390;\n  assign GEN_392 = 7'h75 == T_7300 ? T_6442_117 : GEN_391;\n  assign GEN_393 = 7'h76 == T_7300 ? T_6442_118 : GEN_392;\n  assign GEN_394 = 7'h77 == T_7300 ? T_6442_119 : GEN_393;\n  assign GEN_395 = 7'h78 == T_7300 ? T_6442_120 : GEN_394;\n  assign GEN_396 = 7'h79 == T_7300 ? T_6442_121 : GEN_395;\n  assign GEN_397 = 7'h7a == T_7300 ? T_6442_122 : GEN_396;\n  assign GEN_398 = 7'h7b == T_7300 ? T_6442_123 : GEN_397;\n  assign GEN_399 = 7'h7c == T_7300 ? T_6442_124 : GEN_398;\n  assign GEN_400 = 7'h7d == T_7300 ? T_6442_125 : GEN_399;\n  assign GEN_401 = 7'h7e == T_7300 ? T_6442_126 : GEN_400;\n  assign GEN_402 = 7'h7f == T_7300 ? T_6442_127 : GEN_401;\n  assign GEN_3 = GEN_529;\n  assign GEN_403 = 7'h1 == T_7300 ? T_7138_1 : T_7138_0;\n  assign GEN_404 = 7'h2 == T_7300 ? T_7138_2 : GEN_403;\n  assign GEN_405 = 7'h3 == T_7300 ? T_7138_3 : GEN_404;\n  assign GEN_406 = 7'h4 == T_7300 ? T_7138_4 : GEN_405;\n  assign GEN_407 = 7'h5 == T_7300 ? T_7138_5 : GEN_406;\n  assign GEN_408 = 7'h6 == T_7300 ? T_7138_6 : GEN_407;\n  assign GEN_409 = 7'h7 == T_7300 ? T_7138_7 : GEN_408;\n  assign GEN_410 = 7'h8 == T_7300 ? T_7138_8 : GEN_409;\n  assign GEN_411 = 7'h9 == T_7300 ? T_7138_9 : GEN_410;\n  assign GEN_412 = 7'ha == T_7300 ? T_7138_10 : GEN_411;\n  assign GEN_413 = 7'hb == T_7300 ? T_7138_11 : GEN_412;\n  assign GEN_414 = 7'hc == T_7300 ? T_7138_12 : GEN_413;\n  assign GEN_415 = 7'hd == T_7300 ? T_7138_13 : GEN_414;\n  assign GEN_416 = 7'he == T_7300 ? T_7138_14 : GEN_415;\n  assign GEN_417 = 7'hf == T_7300 ? T_7138_15 : GEN_416;\n  assign GEN_418 = 7'h10 == T_7300 ? T_7138_16 : GEN_417;\n  assign GEN_419 = 7'h11 == T_7300 ? T_7138_17 : GEN_418;\n  assign GEN_420 = 7'h12 == T_7300 ? T_7138_18 : GEN_419;\n  assign GEN_421 = 7'h13 == T_7300 ? T_7138_19 : GEN_420;\n  assign GEN_422 = 7'h14 == T_7300 ? T_7138_20 : GEN_421;\n  assign GEN_423 = 7'h15 == T_7300 ? T_7138_21 : GEN_422;\n  assign GEN_424 = 7'h16 == T_7300 ? T_7138_22 : GEN_423;\n  assign GEN_425 = 7'h17 == T_7300 ? T_7138_23 : GEN_424;\n  assign GEN_426 = 7'h18 == T_7300 ? T_7138_24 : GEN_425;\n  assign GEN_427 = 7'h19 == T_7300 ? T_7138_25 : GEN_426;\n  assign GEN_428 = 7'h1a == T_7300 ? T_7138_26 : GEN_427;\n  assign GEN_429 = 7'h1b == T_7300 ? T_7138_27 : GEN_428;\n  assign GEN_430 = 7'h1c == T_7300 ? T_7138_28 : GEN_429;\n  assign GEN_431 = 7'h1d == T_7300 ? T_7138_29 : GEN_430;\n  assign GEN_432 = 7'h1e == T_7300 ? T_7138_30 : GEN_431;\n  assign GEN_433 = 7'h1f == T_7300 ? T_7138_31 : GEN_432;\n  assign GEN_434 = 7'h20 == T_7300 ? T_7138_32 : GEN_433;\n  assign GEN_435 = 7'h21 == T_7300 ? T_7138_33 : GEN_434;\n  assign GEN_436 = 7'h22 == T_7300 ? T_7138_34 : GEN_435;\n  assign GEN_437 = 7'h23 == T_7300 ? T_7138_35 : GEN_436;\n  assign GEN_438 = 7'h24 == T_7300 ? T_7138_36 : GEN_437;\n  assign GEN_439 = 7'h25 == T_7300 ? T_7138_37 : GEN_438;\n  assign GEN_440 = 7'h26 == T_7300 ? T_7138_38 : GEN_439;\n  assign GEN_441 = 7'h27 == T_7300 ? T_7138_39 : GEN_440;\n  assign GEN_442 = 7'h28 == T_7300 ? T_7138_40 : GEN_441;\n  assign GEN_443 = 7'h29 == T_7300 ? T_7138_41 : GEN_442;\n  assign GEN_444 = 7'h2a == T_7300 ? T_7138_42 : GEN_443;\n  assign GEN_445 = 7'h2b == T_7300 ? T_7138_43 : GEN_444;\n  assign GEN_446 = 7'h2c == T_7300 ? T_7138_44 : GEN_445;\n  assign GEN_447 = 7'h2d == T_7300 ? T_7138_45 : GEN_446;\n  assign GEN_448 = 7'h2e == T_7300 ? T_7138_46 : GEN_447;\n  assign GEN_449 = 7'h2f == T_7300 ? T_7138_47 : GEN_448;\n  assign GEN_450 = 7'h30 == T_7300 ? T_7138_48 : GEN_449;\n  assign GEN_451 = 7'h31 == T_7300 ? T_7138_49 : GEN_450;\n  assign GEN_452 = 7'h32 == T_7300 ? T_7138_50 : GEN_451;\n  assign GEN_453 = 7'h33 == T_7300 ? T_7138_51 : GEN_452;\n  assign GEN_454 = 7'h34 == T_7300 ? T_7138_52 : GEN_453;\n  assign GEN_455 = 7'h35 == T_7300 ? T_7138_53 : GEN_454;\n  assign GEN_456 = 7'h36 == T_7300 ? T_7138_54 : GEN_455;\n  assign GEN_457 = 7'h37 == T_7300 ? T_7138_55 : GEN_456;\n  assign GEN_458 = 7'h38 == T_7300 ? T_7138_56 : GEN_457;\n  assign GEN_459 = 7'h39 == T_7300 ? T_7138_57 : GEN_458;\n  assign GEN_460 = 7'h3a == T_7300 ? T_7138_58 : GEN_459;\n  assign GEN_461 = 7'h3b == T_7300 ? T_7138_59 : GEN_460;\n  assign GEN_462 = 7'h3c == T_7300 ? T_7138_60 : GEN_461;\n  assign GEN_463 = 7'h3d == T_7300 ? T_7138_61 : GEN_462;\n  assign GEN_464 = 7'h3e == T_7300 ? T_7138_62 : GEN_463;\n  assign GEN_465 = 7'h3f == T_7300 ? T_7138_63 : GEN_464;\n  assign GEN_466 = 7'h40 == T_7300 ? T_7138_64 : GEN_465;\n  assign GEN_467 = 7'h41 == T_7300 ? T_7138_65 : GEN_466;\n  assign GEN_468 = 7'h42 == T_7300 ? T_7138_66 : GEN_467;\n  assign GEN_469 = 7'h43 == T_7300 ? T_7138_67 : GEN_468;\n  assign GEN_470 = 7'h44 == T_7300 ? T_7138_68 : GEN_469;\n  assign GEN_471 = 7'h45 == T_7300 ? T_7138_69 : GEN_470;\n  assign GEN_472 = 7'h46 == T_7300 ? T_7138_70 : GEN_471;\n  assign GEN_473 = 7'h47 == T_7300 ? T_7138_71 : GEN_472;\n  assign GEN_474 = 7'h48 == T_7300 ? T_7138_72 : GEN_473;\n  assign GEN_475 = 7'h49 == T_7300 ? T_7138_73 : GEN_474;\n  assign GEN_476 = 7'h4a == T_7300 ? T_7138_74 : GEN_475;\n  assign GEN_477 = 7'h4b == T_7300 ? T_7138_75 : GEN_476;\n  assign GEN_478 = 7'h4c == T_7300 ? T_7138_76 : GEN_477;\n  assign GEN_479 = 7'h4d == T_7300 ? T_7138_77 : GEN_478;\n  assign GEN_480 = 7'h4e == T_7300 ? T_7138_78 : GEN_479;\n  assign GEN_481 = 7'h4f == T_7300 ? T_7138_79 : GEN_480;\n  assign GEN_482 = 7'h50 == T_7300 ? T_7138_80 : GEN_481;\n  assign GEN_483 = 7'h51 == T_7300 ? T_7138_81 : GEN_482;\n  assign GEN_484 = 7'h52 == T_7300 ? T_7138_82 : GEN_483;\n  assign GEN_485 = 7'h53 == T_7300 ? T_7138_83 : GEN_484;\n  assign GEN_486 = 7'h54 == T_7300 ? T_7138_84 : GEN_485;\n  assign GEN_487 = 7'h55 == T_7300 ? T_7138_85 : GEN_486;\n  assign GEN_488 = 7'h56 == T_7300 ? T_7138_86 : GEN_487;\n  assign GEN_489 = 7'h57 == T_7300 ? T_7138_87 : GEN_488;\n  assign GEN_490 = 7'h58 == T_7300 ? T_7138_88 : GEN_489;\n  assign GEN_491 = 7'h59 == T_7300 ? T_7138_89 : GEN_490;\n  assign GEN_492 = 7'h5a == T_7300 ? T_7138_90 : GEN_491;\n  assign GEN_493 = 7'h5b == T_7300 ? T_7138_91 : GEN_492;\n  assign GEN_494 = 7'h5c == T_7300 ? T_7138_92 : GEN_493;\n  assign GEN_495 = 7'h5d == T_7300 ? T_7138_93 : GEN_494;\n  assign GEN_496 = 7'h5e == T_7300 ? T_7138_94 : GEN_495;\n  assign GEN_497 = 7'h5f == T_7300 ? T_7138_95 : GEN_496;\n  assign GEN_498 = 7'h60 == T_7300 ? T_7138_96 : GEN_497;\n  assign GEN_499 = 7'h61 == T_7300 ? T_7138_97 : GEN_498;\n  assign GEN_500 = 7'h62 == T_7300 ? T_7138_98 : GEN_499;\n  assign GEN_501 = 7'h63 == T_7300 ? T_7138_99 : GEN_500;\n  assign GEN_502 = 7'h64 == T_7300 ? T_7138_100 : GEN_501;\n  assign GEN_503 = 7'h65 == T_7300 ? T_7138_101 : GEN_502;\n  assign GEN_504 = 7'h66 == T_7300 ? T_7138_102 : GEN_503;\n  assign GEN_505 = 7'h67 == T_7300 ? T_7138_103 : GEN_504;\n  assign GEN_506 = 7'h68 == T_7300 ? T_7138_104 : GEN_505;\n  assign GEN_507 = 7'h69 == T_7300 ? T_7138_105 : GEN_506;\n  assign GEN_508 = 7'h6a == T_7300 ? T_7138_106 : GEN_507;\n  assign GEN_509 = 7'h6b == T_7300 ? T_7138_107 : GEN_508;\n  assign GEN_510 = 7'h6c == T_7300 ? T_7138_108 : GEN_509;\n  assign GEN_511 = 7'h6d == T_7300 ? T_7138_109 : GEN_510;\n  assign GEN_512 = 7'h6e == T_7300 ? T_7138_110 : GEN_511;\n  assign GEN_513 = 7'h6f == T_7300 ? T_7138_111 : GEN_512;\n  assign GEN_514 = 7'h70 == T_7300 ? T_7138_112 : GEN_513;\n  assign GEN_515 = 7'h71 == T_7300 ? T_7138_113 : GEN_514;\n  assign GEN_516 = 7'h72 == T_7300 ? T_7138_114 : GEN_515;\n  assign GEN_517 = 7'h73 == T_7300 ? T_7138_115 : GEN_516;\n  assign GEN_518 = 7'h74 == T_7300 ? T_7138_116 : GEN_517;\n  assign GEN_519 = 7'h75 == T_7300 ? T_7138_117 : GEN_518;\n  assign GEN_520 = 7'h76 == T_7300 ? T_7138_118 : GEN_519;\n  assign GEN_521 = 7'h77 == T_7300 ? T_7138_119 : GEN_520;\n  assign GEN_522 = 7'h78 == T_7300 ? T_7138_120 : GEN_521;\n  assign GEN_523 = 7'h79 == T_7300 ? T_7138_121 : GEN_522;\n  assign GEN_524 = 7'h7a == T_7300 ? T_7138_122 : GEN_523;\n  assign GEN_525 = 7'h7b == T_7300 ? T_7138_123 : GEN_524;\n  assign GEN_526 = 7'h7c == T_7300 ? T_7138_124 : GEN_525;\n  assign GEN_527 = 7'h7d == T_7300 ? T_7138_125 : GEN_526;\n  assign GEN_528 = 7'h7e == T_7300 ? T_7138_126 : GEN_527;\n  assign GEN_529 = 7'h7f == T_7300 ? T_7138_127 : GEN_528;\n  assign T_7306 = Queue_1_io_deq_bits_read ? GEN_2 : GEN_3;\n  assign T_7307 = T_1028_ready & T_7303;\n  assign T_7308 = T_953_valid & T_7303;\n  assign T_7309 = T_992_ready & T_7306;\n  assign T_7310 = Queue_1_io_deq_valid & T_7306;\n  assign T_7312 = 128'h1 << T_7284;\n  assign T_7313 = {1'h1,T_1322};\n  assign T_7314 = {T_1583,T_1466};\n  assign T_7315 = {T_7314,T_7313};\n  assign T_7316 = {1'h1,T_1718};\n  assign T_7317 = {T_1556,T_1394};\n  assign T_7318 = {T_7317,T_7316};\n  assign T_7319 = {T_7318,T_7315};\n  assign T_7320 = {1'h1,T_1673};\n  assign T_7322 = {2'h3,T_7320};\n  assign T_7326 = {4'hf,T_7322};\n  assign T_7327 = {T_7326,T_7319};\n  assign T_7328 = {1'h1,T_1628};\n  assign T_7329 = {T_1709,T_1610};\n  assign T_7330 = {T_7329,T_7328};\n  assign T_7331 = {1'h1,T_1358};\n  assign T_7332 = {T_1664,T_1511};\n  assign T_7333 = {T_7332,T_7331};\n  assign T_7334 = {T_7333,T_7330};\n  assign T_7335 = {1'h1,T_1340};\n  assign T_7337 = {2'h3,T_7335};\n  assign T_7341 = {4'hf,T_7337};\n  assign T_7342 = {T_7341,T_7334};\n  assign T_7343 = {T_7342,T_7327};\n  assign T_7344 = {T_1421,T_1475};\n  assign T_7345 = {T_1601,T_1484};\n  assign T_7346 = {T_7345,T_7344};\n  assign T_7347 = {T_1349,T_1700};\n  assign T_7348 = {T_1565,T_1403};\n  assign T_7349 = {T_7348,T_7347};\n  assign T_7350 = {T_7349,T_7346};\n  assign T_7351 = {T_1448,T_1655};\n  assign T_7352 = {T_1646,T_1331};\n  assign T_7353 = {T_7352,T_7351};\n  assign T_7354 = {T_1493,T_1520};\n  assign T_7355 = {T_1736,T_1367};\n  assign T_7356 = {T_7355,T_7354};\n  assign T_7357 = {T_7356,T_7353};\n  assign T_7358 = {T_7357,T_7350};\n  assign T_7374 = {16'hffff,T_7358};\n  assign T_7375 = {T_7374,T_7343};\n  assign T_7376 = {T_1430,T_1502};\n  assign T_7377 = {T_1619,T_1574};\n  assign T_7378 = {T_7377,T_7376};\n  assign T_7379 = {T_1313,T_1745};\n  assign T_7380 = {T_1529,T_1412};\n  assign T_7381 = {T_7380,T_7379};\n  assign T_7382 = {T_7381,T_7378};\n  assign T_7383 = {T_1457,T_1637};\n  assign T_7384 = {T_1682,T_1385};\n  assign T_7385 = {T_7384,T_7383};\n  assign T_7386 = {T_1439,T_1547};\n  assign T_7387 = {T_1727,T_1376};\n  assign T_7388 = {T_7387,T_7386};\n  assign T_7389 = {T_7388,T_7385};\n  assign T_7390 = {T_7389,T_7382};\n  assign T_7391 = {T_1538,T_1592};\n  assign T_7392 = {T_1754,T_1691};\n  assign T_7393 = {T_7392,T_7391};\n  assign T_7397 = {4'hf,T_7393};\n  assign T_7405 = {8'hff,T_7397};\n  assign T_7406 = {T_7405,T_7390};\n  assign T_7438 = {32'hffffffff,T_7406};\n  assign T_7439 = {T_7438,T_7375};\n  assign T_7440 = T_7312 & T_7439;\n  assign T_7442 = 128'h1 << T_7300;\n  assign T_7443 = {1'h1,T_1326};\n  assign T_7444 = {T_1587,T_1470};\n  assign T_7445 = {T_7444,T_7443};\n  assign T_7446 = {1'h1,T_1722};\n  assign T_7447 = {T_1560,T_1398};\n  assign T_7448 = {T_7447,T_7446};\n  assign T_7449 = {T_7448,T_7445};\n  assign T_7450 = {1'h1,T_1677};\n  assign T_7452 = {2'h3,T_7450};\n  assign T_7456 = {4'hf,T_7452};\n  assign T_7457 = {T_7456,T_7449};\n  assign T_7458 = {1'h1,T_1632};\n  assign T_7459 = {T_1713,T_1614};\n  assign T_7460 = {T_7459,T_7458};\n  assign T_7461 = {1'h1,T_1362};\n  assign T_7462 = {T_1668,T_1515};\n  assign T_7463 = {T_7462,T_7461};\n  assign T_7464 = {T_7463,T_7460};\n  assign T_7465 = {1'h1,T_1344};\n  assign T_7467 = {2'h3,T_7465};\n  assign T_7471 = {4'hf,T_7467};\n  assign T_7472 = {T_7471,T_7464};\n  assign T_7473 = {T_7472,T_7457};\n  assign T_7474 = {T_1425,T_1479};\n  assign T_7475 = {T_1605,T_1488};\n  assign T_7476 = {T_7475,T_7474};\n  assign T_7477 = {T_1353,T_1704};\n  assign T_7478 = {T_1569,T_1407};\n  assign T_7479 = {T_7478,T_7477};\n  assign T_7480 = {T_7479,T_7476};\n  assign T_7481 = {T_1452,T_1659};\n  assign T_7482 = {T_1650,T_1335};\n  assign T_7483 = {T_7482,T_7481};\n  assign T_7484 = {T_1497,T_1524};\n  assign T_7485 = {T_1740,T_1371};\n  assign T_7486 = {T_7485,T_7484};\n  assign T_7487 = {T_7486,T_7483};\n  assign T_7488 = {T_7487,T_7480};\n  assign T_7504 = {16'hffff,T_7488};\n  assign T_7505 = {T_7504,T_7473};\n  assign T_7506 = {T_1434,T_1506};\n  assign T_7507 = {T_1623,T_1578};\n  assign T_7508 = {T_7507,T_7506};\n  assign T_7509 = {T_1317,T_1749};\n  assign T_7510 = {T_1533,T_1416};\n  assign T_7511 = {T_7510,T_7509};\n  assign T_7512 = {T_7511,T_7508};\n  assign T_7513 = {T_1461,T_1641};\n  assign T_7514 = {T_1686,T_1389};\n  assign T_7515 = {T_7514,T_7513};\n  assign T_7516 = {T_1443,T_1551};\n  assign T_7517 = {T_1731,T_1380};\n  assign T_7518 = {T_7517,T_7516};\n  assign T_7519 = {T_7518,T_7515};\n  assign T_7520 = {T_7519,T_7512};\n  assign T_7521 = {T_1542,T_1596};\n  assign T_7522 = {T_1758,T_1695};\n  assign T_7523 = {T_7522,T_7521};\n  assign T_7527 = {4'hf,T_7523};\n  assign T_7535 = {8'hff,T_7527};\n  assign T_7536 = {T_7535,T_7520};\n  assign T_7568 = {32'hffffffff,T_7536};\n  assign T_7569 = {T_7568,T_7505};\n  assign T_7570 = T_7442 & T_7569;\n  assign T_7571 = T_953_valid & T_1028_ready;\n  assign T_7572 = T_7571 & T_1028_bits_read;\n  assign T_7573 = T_7440[0];\n  assign T_7574 = T_7572 & T_7573;\n  assign T_7577 = T_1028_bits_read == 1'h0;\n  assign T_7578 = T_7571 & T_7577;\n  assign T_7580 = T_7578 & T_7573;\n  assign T_7581 = Queue_1_io_deq_valid & T_992_ready;\n  assign T_7582 = T_7581 & Queue_1_io_deq_bits_read;\n  assign T_7583 = T_7570[0];\n  assign T_7584 = T_7582 & T_7583;\n  assign T_7587 = Queue_1_io_deq_bits_read == 1'h0;\n  assign T_7588 = T_7581 & T_7587;\n  assign T_7590 = T_7588 & T_7583;\n  assign T_7613 = T_7440[2];\n  assign T_7614 = T_7572 & T_7613;\n  assign T_7620 = T_7578 & T_7613;\n  assign T_7623 = T_7570[2];\n  assign T_7624 = T_7582 & T_7623;\n  assign T_7630 = T_7588 & T_7623;\n  assign T_7633 = T_7440[3];\n  assign T_7634 = T_7572 & T_7633;\n  assign T_7640 = T_7578 & T_7633;\n  assign T_7643 = T_7570[3];\n  assign T_7644 = T_7582 & T_7643;\n  assign T_7650 = T_7588 & T_7643;\n  assign T_7653 = T_7440[4];\n  assign T_7654 = T_7572 & T_7653;\n  assign T_7660 = T_7578 & T_7653;\n  assign T_7663 = T_7570[4];\n  assign T_7664 = T_7582 & T_7663;\n  assign T_7670 = T_7588 & T_7663;\n  assign T_7693 = T_7440[6];\n  assign T_7694 = T_7572 & T_7693;\n  assign T_7700 = T_7578 & T_7693;\n  assign T_7703 = T_7570[6];\n  assign T_7704 = T_7582 & T_7703;\n  assign T_7710 = T_7588 & T_7703;\n  assign T_7713 = T_7440[7];\n  assign T_7714 = T_7572 & T_7713;\n  assign T_7720 = T_7578 & T_7713;\n  assign T_7723 = T_7570[7];\n  assign T_7724 = T_7582 & T_7723;\n  assign T_7730 = T_7588 & T_7723;\n  assign T_7733 = T_7440[8];\n  assign T_7734 = T_7572 & T_7733;\n  assign T_7740 = T_7578 & T_7733;\n  assign T_7743 = T_7570[8];\n  assign T_7744 = T_7582 & T_7743;\n  assign T_7750 = T_7588 & T_7743;\n  assign T_7893 = T_7440[16];\n  assign T_7894 = T_7572 & T_7893;\n  assign T_7900 = T_7578 & T_7893;\n  assign T_7903 = T_7570[16];\n  assign T_7904 = T_7582 & T_7903;\n  assign T_7910 = T_7588 & T_7903;\n  assign T_7933 = T_7440[18];\n  assign T_7934 = T_7572 & T_7933;\n  assign T_7940 = T_7578 & T_7933;\n  assign T_7943 = T_7570[18];\n  assign T_7944 = T_7582 & T_7943;\n  assign T_7950 = T_7588 & T_7943;\n  assign T_7953 = T_7440[19];\n  assign T_7954 = T_7572 & T_7953;\n  assign T_7960 = T_7578 & T_7953;\n  assign T_7963 = T_7570[19];\n  assign T_7964 = T_7582 & T_7963;\n  assign T_7970 = T_7588 & T_7963;\n  assign T_7973 = T_7440[20];\n  assign T_7974 = T_7572 & T_7973;\n  assign T_7980 = T_7578 & T_7973;\n  assign T_7983 = T_7570[20];\n  assign T_7984 = T_7582 & T_7983;\n  assign T_7990 = T_7588 & T_7983;\n  assign T_8013 = T_7440[22];\n  assign T_8014 = T_7572 & T_8013;\n  assign T_8020 = T_7578 & T_8013;\n  assign T_8023 = T_7570[22];\n  assign T_8024 = T_7582 & T_8023;\n  assign T_8030 = T_7588 & T_8023;\n  assign T_8033 = T_7440[23];\n  assign T_8034 = T_7572 & T_8033;\n  assign T_8040 = T_7578 & T_8033;\n  assign T_8043 = T_7570[23];\n  assign T_8044 = T_7582 & T_8043;\n  assign T_8050 = T_7588 & T_8043;\n  assign T_8053 = T_7440[24];\n  assign T_8054 = T_7572 & T_8053;\n  assign T_8060 = T_7578 & T_8053;\n  assign T_8063 = T_7570[24];\n  assign T_8064 = T_7582 & T_8063;\n  assign T_8070 = T_7588 & T_8063;\n  assign T_8213 = T_7440[32];\n  assign T_8214 = T_7572 & T_8213;\n  assign T_8220 = T_7578 & T_8213;\n  assign T_8223 = T_7570[32];\n  assign T_8224 = T_7582 & T_8223;\n  assign T_8230 = T_7588 & T_8223;\n  assign T_8233 = T_7440[33];\n  assign T_8234 = T_7572 & T_8233;\n  assign T_8240 = T_7578 & T_8233;\n  assign T_8243 = T_7570[33];\n  assign T_8244 = T_7582 & T_8243;\n  assign T_8250 = T_7588 & T_8243;\n  assign T_8253 = T_7440[34];\n  assign T_8254 = T_7572 & T_8253;\n  assign T_8260 = T_7578 & T_8253;\n  assign T_8263 = T_7570[34];\n  assign T_8264 = T_7582 & T_8263;\n  assign T_8270 = T_7588 & T_8263;\n  assign T_8273 = T_7440[35];\n  assign T_8274 = T_7572 & T_8273;\n  assign T_8280 = T_7578 & T_8273;\n  assign T_8283 = T_7570[35];\n  assign T_8284 = T_7582 & T_8283;\n  assign T_8290 = T_7588 & T_8283;\n  assign T_8293 = T_7440[36];\n  assign T_8294 = T_7572 & T_8293;\n  assign T_8300 = T_7578 & T_8293;\n  assign T_8303 = T_7570[36];\n  assign T_8304 = T_7582 & T_8303;\n  assign T_8310 = T_7588 & T_8303;\n  assign T_8313 = T_7440[37];\n  assign T_8314 = T_7572 & T_8313;\n  assign T_8320 = T_7578 & T_8313;\n  assign T_8323 = T_7570[37];\n  assign T_8324 = T_7582 & T_8323;\n  assign T_8330 = T_7588 & T_8323;\n  assign T_8333 = T_7440[38];\n  assign T_8334 = T_7572 & T_8333;\n  assign T_8340 = T_7578 & T_8333;\n  assign T_8343 = T_7570[38];\n  assign T_8344 = T_7582 & T_8343;\n  assign T_8350 = T_7588 & T_8343;\n  assign T_8353 = T_7440[39];\n  assign T_8354 = T_7572 & T_8353;\n  assign T_8360 = T_7578 & T_8353;\n  assign T_8363 = T_7570[39];\n  assign T_8364 = T_7582 & T_8363;\n  assign T_8370 = T_7588 & T_8363;\n  assign T_8373 = T_7440[40];\n  assign T_8374 = T_7572 & T_8373;\n  assign T_8380 = T_7578 & T_8373;\n  assign T_8383 = T_7570[40];\n  assign T_8384 = T_7582 & T_8383;\n  assign T_8390 = T_7588 & T_8383;\n  assign T_8393 = T_7440[41];\n  assign T_8394 = T_7572 & T_8393;\n  assign T_8400 = T_7578 & T_8393;\n  assign T_8403 = T_7570[41];\n  assign T_8404 = T_7582 & T_8403;\n  assign T_8410 = T_7588 & T_8403;\n  assign T_8413 = T_7440[42];\n  assign T_8414 = T_7572 & T_8413;\n  assign T_8420 = T_7578 & T_8413;\n  assign T_8423 = T_7570[42];\n  assign T_8424 = T_7582 & T_8423;\n  assign T_8430 = T_7588 & T_8423;\n  assign T_8433 = T_7440[43];\n  assign T_8434 = T_7572 & T_8433;\n  assign T_8440 = T_7578 & T_8433;\n  assign T_8443 = T_7570[43];\n  assign T_8444 = T_7582 & T_8443;\n  assign T_8450 = T_7588 & T_8443;\n  assign T_8453 = T_7440[44];\n  assign T_8454 = T_7572 & T_8453;\n  assign T_8460 = T_7578 & T_8453;\n  assign T_8463 = T_7570[44];\n  assign T_8464 = T_7582 & T_8463;\n  assign T_8470 = T_7588 & T_8463;\n  assign T_8473 = T_7440[45];\n  assign T_8474 = T_7572 & T_8473;\n  assign T_8480 = T_7578 & T_8473;\n  assign T_8483 = T_7570[45];\n  assign T_8484 = T_7582 & T_8483;\n  assign T_8490 = T_7588 & T_8483;\n  assign T_8493 = T_7440[46];\n  assign T_8494 = T_7572 & T_8493;\n  assign T_8500 = T_7578 & T_8493;\n  assign T_8503 = T_7570[46];\n  assign T_8504 = T_7582 & T_8503;\n  assign T_8510 = T_7588 & T_8503;\n  assign T_8513 = T_7440[47];\n  assign T_8514 = T_7572 & T_8513;\n  assign T_8520 = T_7578 & T_8513;\n  assign T_8523 = T_7570[47];\n  assign T_8524 = T_7582 & T_8523;\n  assign T_8530 = T_7588 & T_8523;\n  assign T_8853 = T_7440[64];\n  assign T_8854 = T_7572 & T_8853;\n  assign T_8860 = T_7578 & T_8853;\n  assign T_8863 = T_7570[64];\n  assign T"}
{"text": "_8864 = T_7582 & T_8863;\n  assign T_8870 = T_7588 & T_8863;\n  assign T_8873 = T_7440[65];\n  assign T_8874 = T_7572 & T_8873;\n  assign T_8880 = T_7578 & T_8873;\n  assign T_8883 = T_7570[65];\n  assign T_8884 = T_7582 & T_8883;\n  assign T_8890 = T_7588 & T_8883;\n  assign T_8893 = T_7440[66];\n  assign T_8894 = T_7572 & T_8893;\n  assign T_8900 = T_7578 & T_8893;\n  assign T_8903 = T_7570[66];\n  assign T_8904 = T_7582 & T_8903;\n  assign T_8910 = T_7588 & T_8903;\n  assign T_8913 = T_7440[67];\n  assign T_8914 = T_7572 & T_8913;\n  assign T_8920 = T_7578 & T_8913;\n  assign T_8923 = T_7570[67];\n  assign T_8924 = T_7582 & T_8923;\n  assign T_8930 = T_7588 & T_8923;\n  assign T_8933 = T_7440[68];\n  assign T_8934 = T_7572 & T_8933;\n  assign T_8940 = T_7578 & T_8933;\n  assign T_8943 = T_7570[68];\n  assign T_8944 = T_7582 & T_8943;\n  assign T_8950 = T_7588 & T_8943;\n  assign T_8953 = T_7440[69];\n  assign T_8954 = T_7572 & T_8953;\n  assign T_8960 = T_7578 & T_8953;\n  assign T_8963 = T_7570[69];\n  assign T_8964 = T_7582 & T_8963;\n  assign T_8970 = T_7588 & T_8963;\n  assign T_8973 = T_7440[70];\n  assign T_8974 = T_7572 & T_8973;\n  assign T_8980 = T_7578 & T_8973;\n  assign T_8983 = T_7570[70];\n  assign T_8984 = T_7582 & T_8983;\n  assign T_8990 = T_7588 & T_8983;\n  assign T_8993 = T_7440[71];\n  assign T_8994 = T_7572 & T_8993;\n  assign T_9000 = T_7578 & T_8993;\n  assign T_9003 = T_7570[71];\n  assign T_9004 = T_7582 & T_9003;\n  assign T_9010 = T_7588 & T_9003;\n  assign T_9013 = T_7440[72];\n  assign T_9014 = T_7572 & T_9013;\n  assign T_9020 = T_7578 & T_9013;\n  assign T_9023 = T_7570[72];\n  assign T_9024 = T_7582 & T_9023;\n  assign T_9030 = T_7588 & T_9023;\n  assign T_9033 = T_7440[73];\n  assign T_9034 = T_7572 & T_9033;\n  assign T_9040 = T_7578 & T_9033;\n  assign T_9043 = T_7570[73];\n  assign T_9044 = T_7582 & T_9043;\n  assign T_9050 = T_7588 & T_9043;\n  assign T_9053 = T_7440[74];\n  assign T_9054 = T_7572 & T_9053;\n  assign T_9060 = T_7578 & T_9053;\n  assign T_9063 = T_7570[74];\n  assign T_9064 = T_7582 & T_9063;\n  assign T_9070 = T_7588 & T_9063;\n  assign T_9073 = T_7440[75];\n  assign T_9074 = T_7572 & T_9073;\n  assign T_9080 = T_7578 & T_9073;\n  assign T_9083 = T_7570[75];\n  assign T_9084 = T_7582 & T_9083;\n  assign T_9090 = T_7588 & T_9083;\n  assign T_9093 = T_7440[76];\n  assign T_9094 = T_7572 & T_9093;\n  assign T_9100 = T_7578 & T_9093;\n  assign T_9103 = T_7570[76];\n  assign T_9104 = T_7582 & T_9103;\n  assign T_9110 = T_7588 & T_9103;\n  assign T_9113 = T_7440[77];\n  assign T_9114 = T_7572 & T_9113;\n  assign T_9120 = T_7578 & T_9113;\n  assign T_9123 = T_7570[77];\n  assign T_9124 = T_7582 & T_9123;\n  assign T_9130 = T_7588 & T_9123;\n  assign T_9133 = T_7440[78];\n  assign T_9134 = T_7572 & T_9133;\n  assign T_9140 = T_7578 & T_9133;\n  assign T_9143 = T_7570[78];\n  assign T_9144 = T_7582 & T_9143;\n  assign T_9150 = T_7588 & T_9143;\n  assign T_9153 = T_7440[79];\n  assign T_9154 = T_7572 & T_9153;\n  assign T_9160 = T_7578 & T_9153;\n  assign T_9163 = T_7570[79];\n  assign T_9164 = T_7582 & T_9163;\n  assign T_9170 = T_7588 & T_9163;\n  assign T_9173 = T_7440[80];\n  assign T_9174 = T_7572 & T_9173;\n  assign T_9180 = T_7578 & T_9173;\n  assign T_9183 = T_7570[80];\n  assign T_9184 = T_7582 & T_9183;\n  assign T_9190 = T_7588 & T_9183;\n  assign T_9193 = T_7440[81];\n  assign T_9194 = T_7572 & T_9193;\n  assign T_9200 = T_7578 & T_9193;\n  assign T_9203 = T_7570[81];\n  assign T_9204 = T_7582 & T_9203;\n  assign T_9210 = T_7588 & T_9203;\n  assign T_9213 = T_7440[82];\n  assign T_9214 = T_7572 & T_9213;\n  assign T_9220 = T_7578 & T_9213;\n  assign T_9223 = T_7570[82];\n  assign T_9224 = T_7582 & T_9223;\n  assign T_9230 = T_7588 & T_9223;\n  assign T_9233 = T_7440[83];\n  assign T_9234 = T_7572 & T_9233;\n  assign T_9240 = T_7578 & T_9233;\n  assign T_9243 = T_7570[83];\n  assign T_9244 = T_7582 & T_9243;\n  assign T_9250 = T_7588 & T_9243;\n  assign T_10462_0 = T_1326;\n  assign T_10462_1 = 1'h1;\n  assign T_10462_2 = T_1470;\n  assign T_10462_3 = T_1587;\n  assign T_10462_4 = T_1722;\n  assign T_10462_5 = 1'h1;\n  assign T_10462_6 = T_1398;\n  assign T_10462_7 = T_1560;\n  assign T_10462_8 = T_1677;\n  assign T_10462_9 = 1'h1;\n  assign T_10462_10 = 1'h1;\n  assign T_10462_11 = 1'h1;\n  assign T_10462_12 = 1'h1;\n  assign T_10462_13 = 1'h1;\n  assign T_10462_14 = 1'h1;\n  assign T_10462_15 = 1'h1;\n  assign T_10462_16 = T_1632;\n  assign T_10462_17 = 1'h1;\n  assign T_10462_18 = T_1614;\n  assign T_10462_19 = T_1713;\n  assign T_10462_20 = T_1362;\n  assign T_10462_21 = 1'h1;\n  assign T_10462_22 = T_1515;\n  assign T_10462_23 = T_1668;\n  assign T_10462_24 = T_1344;\n  assign T_10462_25 = 1'h1;\n  assign T_10462_26 = 1'h1;\n  assign T_10462_27 = 1'h1;\n  assign T_10462_28 = 1'h1;\n  assign T_10462_29 = 1'h1;\n  assign T_10462_30 = 1'h1;\n  assign T_10462_31 = 1'h1;\n  assign T_10462_32 = T_1479;\n  assign T_10462_33 = T_1425;\n  assign T_10462_34 = T_1488;\n  assign T_10462_35 = T_1605;\n  assign T_10462_36 = T_1704;\n  assign T_10462_37 = T_1353;\n  assign T_10462_38 = T_1407;\n  assign T_10462_39 = T_1569;\n  assign T_10462_40 = T_1659;\n  assign T_10462_41 = T_1452;\n  assign T_10462_42 = T_1335;\n  assign T_10462_43 = T_1650;\n  assign T_10462_44 = T_1524;\n  assign T_10462_45 = T_1497;\n  assign T_10462_46 = T_1371;\n  assign T_10462_47 = T_1740;\n  assign T_10462_48 = 1'h1;\n  assign T_10462_49 = 1'h1;\n  assign T_10462_50 = 1'h1;\n  assign T_10462_51 = 1'h1;\n  assign T_10462_52 = 1'h1;\n  assign T_10462_53 = 1'h1;\n  assign T_10462_54 = 1'h1;\n  assign T_10462_55 = 1'h1;\n  assign T_10462_56 = 1'h1;\n  assign T_10462_57 = 1'h1;\n  assign T_10462_58 = 1'h1;\n  assign T_10462_59 = 1'h1;\n  assign T_10462_60 = 1'h1;\n  assign T_10462_61 = 1'h1;\n  assign T_10462_62 = 1'h1;\n  assign T_10462_63 = 1'h1;\n  assign T_10462_64 = T_1506;\n  assign T_10462_65 = T_1434;\n  assign T_10462_66 = T_1578;\n  assign T_10462_67 = T_1623;\n  assign T_10462_68 = T_1749;\n  assign T_10462_69 = T_1317;\n  assign T_10462_70 = T_1416;\n  assign T_10462_71 = T_1533;\n  assign T_10462_72 = T_1641;\n  assign T_10462_73 = T_1461;\n  assign T_10462_74 = T_1389;\n  assign T_10462_75 = T_1686;\n  assign T_10462_76 = T_1551;\n  assign T_10462_77 = T_1443;\n  assign T_10462_78 = T_1380;\n  assign T_10462_79 = T_1731;\n  assign T_10462_80 = T_1596;\n  assign T_10462_81 = T_1542;\n  assign T_10462_82 = T_1695;\n  assign T_10462_83 = T_1758;\n  assign T_10462_84 = 1'h1;\n  assign T_10462_85 = 1'h1;\n  assign T_10462_86 = 1'h1;\n  assign T_10462_87 = 1'h1;\n  assign T_10462_88 = 1'h1;\n  assign T_10462_89 = 1'h1;\n  assign T_10462_90 = 1'h1;\n  assign T_10462_91 = 1'h1;\n  assign T_10462_92 = 1'h1;\n  assign T_10462_93 = 1'h1;\n  assign T_10462_94 = 1'h1;\n  assign T_10462_95 = 1'h1;\n  assign T_10462_96 = 1'h1;\n  assign T_10462_97 = 1'h1;\n  assign T_10462_98 = 1'h1;\n  assign T_10462_99 = 1'h1;\n  assign T_10462_100 = 1'h1;\n  assign T_10462_101 = 1'h1;\n  assign T_10462_102 = 1'h1;\n  assign T_10462_103 = 1'h1;\n  assign T_10462_104 = 1'h1;\n  assign T_10462_105 = 1'h1;\n  assign T_10462_106 = 1'h1;\n  assign T_10462_107 = 1'h1;\n  assign T_10462_108 = 1'h1;\n  assign T_10462_109 = 1'h1;\n  assign T_10462_110 = 1'h1;\n  assign T_10462_111 = 1'h1;\n  assign T_10462_112 = 1'h1;\n  assign T_10462_113 = 1'h1;\n  assign T_10462_114 = 1'h1;\n  assign T_10462_115 = 1'h1;\n  assign T_10462_116 = 1'h1;\n  assign T_10462_117 = 1'h1;\n  assign T_10462_118 = 1'h1;\n  assign T_10462_119 = 1'h1;\n  assign T_10462_120 = 1'h1;\n  assign T_10462_121 = 1'h1;\n  assign T_10462_122 = 1'h1;\n  assign T_10462_123 = 1'h1;\n  assign T_10462_124 = 1'h1;\n  assign T_10462_125 = 1'h1;\n  assign T_10462_126 = 1'h1;\n  assign T_10462_127 = 1'h1;\n  assign T_10725_0 = T_2560;\n  assign T_10725_1 = 32'h0;\n  assign T_10725_2 = T_3200;\n  assign T_10725_3 = T_3720;\n  assign T_10725_4 = {{16'd0}, T_4320};\n  assign T_10725_5 = 32'h0;\n  assign T_10725_6 = T_2880;\n  assign T_10725_7 = T_3600;\n  assign T_10725_8 = {{16'd0}, T_4120};\n  assign T_10725_9 = 32'h0;\n  assign T_10725_10 = 32'h0;\n  assign T_10725_11 = 32'h0;\n  assign T_10725_12 = 32'h0;\n  assign T_10725_13 = 32'h0;\n  assign T_10725_14 = 32'h0;\n  assign T_10725_15 = 32'h0;\n  assign T_10725_16 = T_3920;\n  assign T_10725_17 = 32'h0;\n  assign T_10725_18 = T_3840;\n  assign T_10725_19 = T_4280;\n  assign T_10725_20 = T_2720;\n  assign T_10725_21 = 32'h0;\n  assign T_10725_22 = T_3400;\n  assign T_10725_23 = T_4080;\n  assign T_10725_24 = T_2640;\n  assign T_10725_25 = 32'h0;\n  assign T_10725_26 = 32'h0;\n  assign T_10725_27 = 32'h0;\n  assign T_10725_28 = 32'h0;\n  assign T_10725_29 = 32'h0;\n  assign T_10725_30 = 32'h0;\n  assign T_10725_31 = 32'h0;\n  assign T_10725_32 = backupRegs_0;\n  assign T_10725_33 = backupRegs_1;\n  assign T_10725_34 = backupRegs_2;\n  assign T_10725_35 = backupRegs_3;\n  assign T_10725_36 = backupRegs_4;\n  assign T_10725_37 = backupRegs_5;\n  assign T_10725_38 = backupRegs_6;\n  assign T_10725_39 = backupRegs_7;\n  assign T_10725_40 = backupRegs_8;\n  assign T_10725_41 = backupRegs_9;\n  assign T_10725_42 = backupRegs_10;\n  assign T_10725_43 = backupRegs_11;\n  assign T_10725_44 = backupRegs_12;\n  assign T_10725_45 = backupRegs_13;\n  assign T_10725_46 = backupRegs_14;\n  assign T_10725_47 = backupRegs_15;\n  assign T_10725_48 = 32'h0;\n  assign T_10725_49 = 32'h0;\n  assign T_10725_50 = 32'h0;\n  assign T_10725_51 = 32'h0;\n  assign T_10725_52 = 32'h0;\n  assign T_10725_53 = 32'h0;\n  assign T_10725_54 = 32'h0;\n  assign T_10725_55 = 32'h0;\n  assign T_10725_56 = 32'h0;\n  assign T_10725_57 = 32'h0;\n  assign T_10725_58 = 32'h0;\n  assign T_10725_59 = 32'h0;\n  assign T_10725_60 = 32'h0;\n  assign T_10725_61 = 32'h0;\n  assign T_10725_62 = 32'h0;\n  assign T_10725_63 = 32'h0;\n  assign T_10725_64 = T_3360;\n  assign T_10725_65 = T_3040;\n  assign T_10725_66 = T_3680;\n  assign T_10725_67 = T_3880;\n  assign T_10725_68 = T_4440;\n  assign T_10725_69 = T_2520;\n  assign T_10725_70 = T_2960;\n  assign T_10725_71 = T_3480;\n  assign T_10725_72 = T_3960;\n  assign T_10725_73 = T_3160;\n  assign T_10725_74 = T_2840;\n  assign T_10725_75 = T_4160;\n  assign T_10725_76 = T_3560;\n  assign T_10725_77 = T_3080;\n  assign T_10725_78 = T_2800;\n  assign T_10725_79 = T_4360;\n  assign T_10725_80 = {{28'd0}, T_3760};\n  assign T_10725_81 = T_3520;\n  assign T_10725_82 = T_4200;\n  assign T_10725_83 = T_4480;\n  assign T_10725_84 = 32'h0;\n  assign T_10725_85 = 32'h0;\n  assign T_10725_86 = 32'h0;\n  assign T_10725_87 = 32'h0;\n  assign T_10725_88 = 32'h0;\n  assign T_10725_89 = 32'h0;\n  assign T_10725_90 = 32'h0;\n  assign T_10725_91 = 32'h0;\n  assign T_10725_92 = 32'h0;\n  assign T_10725_93 = 32'h0;\n  assign T_10725_94 = 32'h0;\n  assign T_10725_95 = 32'h0;\n  assign T_10725_96 = 32'h0;\n  assign T_10725_97 = 32'h0;\n  assign T_10725_98 = 32'h0;\n  assign T_10725_99 = 32'h0;\n  assign T_10725_100 = 32'h0;\n  assign T_10725_101 = 32'h0;\n  assign T_10725_102 = 32'h0;\n  assign T_10725_103 = 32'h0;\n  assign T_10725_104 = 32'h0;\n  assign T_10725_105 = 32'h0;\n  assign T_10725_106 = 32'h0;\n  assign T_10725_107 = 32'h0;\n  assign T_10725_108 = 32'h0;\n  assign T_10725_109 = 32'h0;\n  assign T_10725_110 = 32'h0;\n  assign T_10725_111 = 32'h0;\n  assign T_10725_112 = 32'h0;\n  assign T_10725_113 = 32'h0;\n  assign T_10725_114 = 32'h0;\n  assign T_10725_115 = 32'h0;\n  assign T_10725_116 = 32'h0;\n  assign T_10725_117 = 32'h0;\n  assign T_10725_118 = 32'h0;\n  assign T_10725_119 = 32'h0;\n  assign T_10725_120 = 32'h0;\n  assign T_10725_121 = 32'h0;\n  assign T_10725_122 = 32'h0;\n  assign T_10725_123 = 32'h0;\n  assign T_10725_124 = 32'h0;\n  assign T_10725_125 = 32'h0;\n  assign T_10725_126 = 32'h0;\n  assign T_10725_127 = 32'h0;\n  assign GEN_4 = GEN_656;\n  assign GEN_530 = 7'h1 == T_7300 ? T_10462_1 : T_10462_0;\n  assign GEN_531 = 7'h2 == T_7300 ? T_10462_2 : GEN_530;\n  assign GEN_532 = 7'h3 == T_7300 ? T_10462_3 : GEN_531;\n  assign GEN_533 = 7'h4 == T_7300 ? T_10462_4 : GEN_532;\n  assign GEN_534 = 7'h5 == T_7300 ? T_10462_5 : GEN_533;\n  assign GEN_535 = 7'h6 == T_7300 ? T_10462_6 : GEN_534;\n  assign GEN_536 = 7'h7 == T_7300 ? T_10462_7 : GEN_535;\n  assign GEN_537 = 7'h8 == T_7300 ? T_10462_8 : GEN_536;\n  assign GEN_538 = 7'h9 == T_7300 ? T_10462_9 : GEN_537;\n  assign GEN_539 = 7'ha == T_7300 ? T_10462_10 : GEN_538;\n  assign GEN_540 = 7'hb == T_7300 ? T_10462_11 : GEN_539;\n  assign GEN_541 = 7'hc == T_7300 ? T_10462_12 : GEN_540;\n  assign GEN_542 = 7'hd == T_7300 ? T_10462_13 : GEN_541;\n  assign GEN_543 = 7'he == T_7300 ? T_10462_14 : GEN_542;\n  assign GEN_544 = 7'hf == T_7300 ? T_10462_15 : GEN_543;\n  assign GEN_545 = 7'h10 == T_7300 ? T_10462_16 : GEN_544;\n  assign GEN_546 = 7'h11 == T_7300 ? T_10462_17 : GEN_545;\n  assign GEN_547 = 7'h12 == T_7300 ? T_10462_18 : GEN_546;\n  assign GEN_548 = 7'h13 == T_7300 ? T_10462_19 : GEN_547;\n  assign GEN_549 = 7'h14 == T_7300 ? T_10462_20 : GEN_548;\n  assign GEN_550 = 7'h15 == T_7300 ? T_10462_21 : GEN_549;\n  assign GEN_551 = 7'h16 == T_7300 ? T_10462_22 : GEN_550;\n  assign GEN_552 = 7'h17 == T_7300 ? T_10462_23 : GEN_551;\n  assign GEN_553 = 7'h18 == T_7300 ? T_10462_24 : GEN_552;\n  assign GEN_554 = 7'h19 == T_7300 ? T_10462_25 : GEN_553;\n  assign GEN_555 = 7'h1a == T_7300 ? T_10462_26 : GEN_554;\n  assign GEN_556 = 7'h1b == T_7300 ? T_10462_27 : GEN_555;\n  assign GEN_557 = 7'h1c == T_7300 ? T_10462_28 : GEN_556;\n  assign GEN_558 = 7'h1d == T_7300 ? T_10462_29 : GEN_557;\n  assign GEN_559 = 7'h1e == T_7300 ? T_10462_30 : GEN_558;\n  assign GEN_560 = 7'h1f == T_7300 ? T_10462_31 : GEN_559;\n  assign GEN_561 = 7'h20 == T_7300 ? T_10462_32 : GEN_560;\n  assign GEN_562 = 7'h21 == T_7300 ? T_10462_33 : GEN_561;\n  assign GEN_563 = 7'h22 == T_7300 ? T_10462_34 : GEN_562;\n  assign GEN_564 = 7'h23 == T_7300 ? T_10462_35 : GEN_563;\n  assign GEN_565 = 7'h24 == T_7300 ? T_10462_36 : GEN_564;\n  assign GEN_566 = 7'h25 == T_7300 ? T_10462_37 : GEN_565;\n  assign GEN_567 = 7'h26 == T_7300 ? T_10462_38 : GEN_566;\n  assign GEN_568 = 7'h27 == T_7300 ? T_10462_39 : GEN_567;\n  assign GEN_569 = 7'h28 == T_7300 ? T_10462_40 : GEN_568;\n  assign GEN_570 = 7'h29 == T_7300 ? T_10462_41 : GEN_569;\n  assign GEN_571 = 7'h2a == T_7300 ? T_10462_42 : GEN_570;\n  assign GEN_572 = 7'h2b == T_7300 ? T_10462_43 : GEN_571;\n  assign GEN_573 = 7'h2c == T_7300 ? T_10462_44 : GEN_572;\n  assign GEN_574 = 7'h2d == T_7300 ? T_10462_45 : GEN_573;\n  assign GEN_575 = 7'h2e == T_7300 ? T_10462_46 : GEN_574;\n  assign GEN_576 = 7'h2f == T_7300 ? T_10462_47 : GEN_575;\n  assign GEN_577 = 7'h30 == T_7300 ? T_10462_48 : GEN_576;\n  assign GEN_578 = 7'h31 == T_7300 ? T_10462_49 : GEN_577;\n  assign GEN_579 = 7'h32 == T_7300 ? T_10462_50 : GEN_578;\n  assign GEN_580 = 7'h33 == T_7300 ? T_10462_51 : GEN_579;\n  assign GEN_581 = 7'h34 == T_7300 ? T_10462_52 : GEN_580;\n  assign GEN_582 = 7'h35 == T_7300 ? T_10462_53 : GEN_581;\n  assign GEN_583 = 7'h36 == T_7300 ? T_10462_54 : GEN_582;\n  assign GEN_584 = 7'h37 == T_7300 ? T_10462_55 : GEN_583;\n  assign GEN_585 = 7'h38 == T_7300 ? T_10462_56 : GEN_584;\n  assign GEN_586 = 7'h39 == T_7300 ? T_10462_57 : GEN_585;\n  assign GEN_587 = 7'h3a == T_7300 ? T_10462_58 : GEN_586;\n  assign GEN_588 = 7'h3b == T_7300 ? T_10462_59 : GEN_587;\n  assign GEN_589 = 7'h3c == T_7300 ? T_10462_60 : GEN_588;\n  assign GEN_590 = 7'h3d == T_7300 ? T_10462_61 : GEN_589;\n  assign GEN_591 = 7'h3e == T_7300 ? T_10462_62 : GEN_590;\n  assign GEN_592 = 7'h3f == T_7300 ? T_10462_63 : GEN_591;\n  assign GEN_593 = 7'h40 == T_7300 ? T_10462_64 : GEN_592;\n  assign GEN_594 = 7'h41 == T_7300 ? T_10462_65 : GEN_593;\n  assign GEN_595 = 7'h42 == T_7300 ? T_10462_66 : GEN_594;\n  assign GEN_596 = 7'h43 == T_7300 ? T_10462_67 : GEN_595;\n  assign GEN_597 = 7'h44 == T_7300 ? T_10462_68 : GEN_596;\n  assign GEN_598 = 7'h45 == T_7300 ? T_10462_69 : GEN_597;\n  assign GEN_599 = 7'h46 == T_7300 ? T_10462_70 : GEN_598;\n  assign GEN_600 = 7'h47 == T_7300 ? T_10462_71 : GEN_599;\n  assign GEN_601 = 7'h48 == T_7300 ? T_10462_72 : GEN_600;\n  assign GEN_602 = 7'h49 == T_7300 ? T_10462_73 : GEN_601;\n  assign GEN_603 = 7'h4a == T_7300 ? T_10462_74 : GEN_602;\n  assign GEN_604 = 7'h4b == T_7300 ? T_10462_75 : GEN_603;\n  assign GEN_605 = 7'h4c == T_7300 ? T_10462_76 : GEN_604;\n  assign GEN_606 = 7'h4d == T_7300 ? T_10462_77 : GEN_605;\n  assign GEN_607 = 7'h4e == T_7300 ? T_10462_78 : GEN_606;\n  assign GEN_608 = 7'h4f == T_7300 ? T_10462_79 : GEN_607;\n  assign GEN_609 = 7'h50 == T_7300 ? T_10462_80 : GEN_608;\n  assign GEN_610 = 7'h51 == T_7300 ? T_10462_81 : GEN_609;\n  assign GEN_611 = 7'h52 == T_7300 ? T_10462_82 : GEN_610;\n  assign GEN_612 = 7'h53 == T_7300 ? T_10462_83 : GEN_611;\n  assign GEN_613 = 7'h54 == T_7300 ? T_10462_84 : GEN_612;\n  assign GEN_614 = 7'h55 == T_7300 ? T_10462_85 : GEN_613;\n  assign GEN_615 = 7'h56 == T_7300 ? T_10462_86 : GEN_614;\n  assign GEN_616 = 7'h57 == T_7300 ? T_10462_87 : GEN_615;\n  assign GEN_617 = 7'h58 == T_7300 ? T_10462_88 : GEN_616;\n  assign GEN_618 = 7'h59 == T_7300 ? T_10462_89 : GEN_617;\n  assign GEN_619 = 7'h5a == T_7300 ? T_10462_90 : GEN_618;\n  assign GEN_620 = 7'h5b == T_7300 ? T_10462_91 : GEN_619;\n  assign GEN_621 = 7'h5c == T_7300 ? T_10462_92 : GEN_620;\n  assign GEN_622 = 7'h5d == T_7300 ? T_10462_93 : GEN_621;\n  assign GEN_623 = 7'h5e == T_7300 ? T_10462_94 : GEN_622;\n  assign GEN_624 = 7'h5f == T_7300 ? T_10462_95 : GEN_623;\n  assign GEN_625 = 7'h60 == T_7300 ? T_10462_96 : GEN_624;\n  assign GEN_626 = 7'h61 == T_7300 ? T_10462_97 : GEN_625;\n  assign GEN_627 = 7'h62 == T_7300 ? T_10462_98 : GEN_626;\n  assign GEN_628 = 7'h63 == T_7300 ? T_10462_99 : GEN_627;\n  assign GEN_629 = 7'h64 == T_7300 ? T_10462_100 : GEN_628;\n  assign GEN_630 = 7'h65 == T_7300 ? T_10462_101 : GEN_629;\n  assign GEN_631 = 7'h66 == T_7300 ? T_10462_102 : GEN_630;\n  assign GEN_632 = 7'h67 == T_7300 ? T_10462_103 : GEN_631;\n  assign GEN_633 = 7'h68 == T_7300 ? T_10462_104 : GEN_632;\n  assign GEN_634 = 7'h69 == T_7300 ? T_10462_105 : GEN_633;\n  assign GEN_635 = 7'h6a == T_7300 ? T_10462_106 : GEN_634;\n  assign GEN_636 = 7'h6b == T_7300 ? T_10462_107 : GEN_635;\n  assign GEN_637 = 7'h6c == T_7300 ? T_10462_108 : GEN_636;\n  assign GEN_638 = 7'h6d == T_7300 ? T_10462_109 : GEN_637;\n  assign GEN_639 = 7'h6e == T_7300 ? T_10462_110 : GEN_638;\n  assign GEN_640 = 7'h6f == T_7300 ? T_10462_111 : GEN_639;\n  assign GEN_641 = 7'h70 == T_7300 ? T_10462_112 : GEN_640;\n  assign GEN_642 = 7'h71 == T_7300 ? T_10462_113 : GEN_641;\n  assign GEN_643 = 7'h72 == T_7300 ? T_10462_114 : GEN_642;\n  assign GEN_644 = 7'h73 == T_7300 ? T_10462_115 : GEN_643;\n  assign GEN_645 = 7'h74 == T_7300 ? T_10462_116 : GEN_644;\n  assign GEN_646 = 7'h75 == T_7300 ? T_10462_117 : GEN_645;\n  assign GEN_647 = 7'h76 == T_7300 ? T_10462_118 : GEN_646;\n  assign GEN_648 = 7'h77 == T_7300 ? T_10462_119 : GEN_647;\n  assign GEN_649 = 7'h78 == T_7300 ? T_10462_120 : GEN_648;\n  assign GEN_650 = 7'h79 == T_7300 ? T_10462_121 : GEN_649;\n  assign GEN_651 = 7'h7a == T_7300 ? T_10462_122 : GEN_650;\n  assign GEN_652 = 7'h7b == T_7300 ? T_10462_123 : GEN_651;\n  assign GEN_653 = 7'h7c == T_7300 ? T_10462_124 : GEN_652;\n  assign GEN_654 = 7'h7d == T_7300 ? T_10462_125 : GEN_653;\n  assign GEN_655 = 7'h7e == T_7300 ? T_10462_126 : GEN_654;\n  assign GEN_656 = 7'h7f == T_7300 ? T_10462_127 : GEN_655;\n  assign GEN_5 = GEN_783;\n  assign GEN_657 = 7'h1 == T_7300 ? T_10725_1 : T_10725_0;\n  assign GEN_658 = 7'h2 == T_7300 ? T_10725_2 : GEN_657;\n  assign GEN_659 = 7'h3 == T_7300 ? T_10725_3 : GEN_658;\n  assign GEN_660 = 7'h4 == T_7300 ? T_10725_4 : GEN_659;\n  assign GEN_661 = 7'h5 == T_7300 ? T_10725_5 : GEN_660;\n  assign GEN_662 = 7'h6 == T_7300 ? T_10725_6 : GEN_661;\n  assign GEN_663 = 7'h7 == T_7300 ? T_10725_7 : GEN_662;\n  assign GEN_664 = 7'h8 == T_7300 ? T_10725_8 : GEN_663;\n  assign GEN_665 = 7'h9 == T_7300 ? T_10725_9 : GEN_664;\n  assign GEN_666 = 7'ha == T_7300 ? T_10725_10 : GEN_665;\n  assign GEN_667 = 7'hb == T_7300 ? T_10725_11 : GEN_666;\n  assign GEN_668 = 7'hc == T_7300 ? T_10725_12 : GEN_667;\n  assign GEN_669 = 7'hd == T_7300 ? T_10725_13 : GEN_668;\n  assign GEN_670 = 7'he == T_7300 ? T_10725_14 : GEN_669;\n  assign GEN_671 = 7'hf == T_7300 ? T_10725_15 : GEN_670;\n  assign GEN_672 = 7'h10 == T_7300 ? T_10725_16 : GEN_671;\n  assign GEN_673 = 7'h11 == T_7300 ? T_10725_17 : "}
{"text": "GEN_672;\n  assign GEN_674 = 7'h12 == T_7300 ? T_10725_18 : GEN_673;\n  assign GEN_675 = 7'h13 == T_7300 ? T_10725_19 : GEN_674;\n  assign GEN_676 = 7'h14 == T_7300 ? T_10725_20 : GEN_675;\n  assign GEN_677 = 7'h15 == T_7300 ? T_10725_21 : GEN_676;\n  assign GEN_678 = 7'h16 == T_7300 ? T_10725_22 : GEN_677;\n  assign GEN_679 = 7'h17 == T_7300 ? T_10725_23 : GEN_678;\n  assign GEN_680 = 7'h18 == T_7300 ? T_10725_24 : GEN_679;\n  assign GEN_681 = 7'h19 == T_7300 ? T_10725_25 : GEN_680;\n  assign GEN_682 = 7'h1a == T_7300 ? T_10725_26 : GEN_681;\n  assign GEN_683 = 7'h1b == T_7300 ? T_10725_27 : GEN_682;\n  assign GEN_684 = 7'h1c == T_7300 ? T_10725_28 : GEN_683;\n  assign GEN_685 = 7'h1d == T_7300 ? T_10725_29 : GEN_684;\n  assign GEN_686 = 7'h1e == T_7300 ? T_10725_30 : GEN_685;\n  assign GEN_687 = 7'h1f == T_7300 ? T_10725_31 : GEN_686;\n  assign GEN_688 = 7'h20 == T_7300 ? T_10725_32 : GEN_687;\n  assign GEN_689 = 7'h21 == T_7300 ? T_10725_33 : GEN_688;\n  assign GEN_690 = 7'h22 == T_7300 ? T_10725_34 : GEN_689;\n  assign GEN_691 = 7'h23 == T_7300 ? T_10725_35 : GEN_690;\n  assign GEN_692 = 7'h24 == T_7300 ? T_10725_36 : GEN_691;\n  assign GEN_693 = 7'h25 == T_7300 ? T_10725_37 : GEN_692;\n  assign GEN_694 = 7'h26 == T_7300 ? T_10725_38 : GEN_693;\n  assign GEN_695 = 7'h27 == T_7300 ? T_10725_39 : GEN_694;\n  assign GEN_696 = 7'h28 == T_7300 ? T_10725_40 : GEN_695;\n  assign GEN_697 = 7'h29 == T_7300 ? T_10725_41 : GEN_696;\n  assign GEN_698 = 7'h2a == T_7300 ? T_10725_42 : GEN_697;\n  assign GEN_699 = 7'h2b == T_7300 ? T_10725_43 : GEN_698;\n  assign GEN_700 = 7'h2c == T_7300 ? T_10725_44 : GEN_699;\n  assign GEN_701 = 7'h2d == T_7300 ? T_10725_45 : GEN_700;\n  assign GEN_702 = 7'h2e == T_7300 ? T_10725_46 : GEN_701;\n  assign GEN_703 = 7'h2f == T_7300 ? T_10725_47 : GEN_702;\n  assign GEN_704 = 7'h30 == T_7300 ? T_10725_48 : GEN_703;\n  assign GEN_705 = 7'h31 == T_7300 ? T_10725_49 : GEN_704;\n  assign GEN_706 = 7'h32 == T_7300 ? T_10725_50 : GEN_705;\n  assign GEN_707 = 7'h33 == T_7300 ? T_10725_51 : GEN_706;\n  assign GEN_708 = 7'h34 == T_7300 ? T_10725_52 : GEN_707;\n  assign GEN_709 = 7'h35 == T_7300 ? T_10725_53 : GEN_708;\n  assign GEN_710 = 7'h36 == T_7300 ? T_10725_54 : GEN_709;\n  assign GEN_711 = 7'h37 == T_7300 ? T_10725_55 : GEN_710;\n  assign GEN_712 = 7'h38 == T_7300 ? T_10725_56 : GEN_711;\n  assign GEN_713 = 7'h39 == T_7300 ? T_10725_57 : GEN_712;\n  assign GEN_714 = 7'h3a == T_7300 ? T_10725_58 : GEN_713;\n  assign GEN_715 = 7'h3b == T_7300 ? T_10725_59 : GEN_714;\n  assign GEN_716 = 7'h3c == T_7300 ? T_10725_60 : GEN_715;\n  assign GEN_717 = 7'h3d == T_7300 ? T_10725_61 : GEN_716;\n  assign GEN_718 = 7'h3e == T_7300 ? T_10725_62 : GEN_717;\n  assign GEN_719 = 7'h3f == T_7300 ? T_10725_63 : GEN_718;\n  assign GEN_720 = 7'h40 == T_7300 ? T_10725_64 : GEN_719;\n  assign GEN_721 = 7'h41 == T_7300 ? T_10725_65 : GEN_720;\n  assign GEN_722 = 7'h42 == T_7300 ? T_10725_66 : GEN_721;\n  assign GEN_723 = 7'h43 == T_7300 ? T_10725_67 : GEN_722;\n  assign GEN_724 = 7'h44 == T_7300 ? T_10725_68 : GEN_723;\n  assign GEN_725 = 7'h45 == T_7300 ? T_10725_69 : GEN_724;\n  assign GEN_726 = 7'h46 == T_7300 ? T_10725_70 : GEN_725;\n  assign GEN_727 = 7'h47 == T_7300 ? T_10725_71 : GEN_726;\n  assign GEN_728 = 7'h48 == T_7300 ? T_10725_72 : GEN_727;\n  assign GEN_729 = 7'h49 == T_7300 ? T_10725_73 : GEN_728;\n  assign GEN_730 = 7'h4a == T_7300 ? T_10725_74 : GEN_729;\n  assign GEN_731 = 7'h4b == T_7300 ? T_10725_75 : GEN_730;\n  assign GEN_732 = 7'h4c == T_7300 ? T_10725_76 : GEN_731;\n  assign GEN_733 = 7'h4d == T_7300 ? T_10725_77 : GEN_732;\n  assign GEN_734 = 7'h4e == T_7300 ? T_10725_78 : GEN_733;\n  assign GEN_735 = 7'h4f == T_7300 ? T_10725_79 : GEN_734;\n  assign GEN_736 = 7'h50 == T_7300 ? T_10725_80 : GEN_735;\n  assign GEN_737 = 7'h51 == T_7300 ? T_10725_81 : GEN_736;\n  assign GEN_738 = 7'h52 == T_7300 ? T_10725_82 : GEN_737;\n  assign GEN_739 = 7'h53 == T_7300 ? T_10725_83 : GEN_738;\n  assign GEN_740 = 7'h54 == T_7300 ? T_10725_84 : GEN_739;\n  assign GEN_741 = 7'h55 == T_7300 ? T_10725_85 : GEN_740;\n  assign GEN_742 = 7'h56 == T_7300 ? T_10725_86 : GEN_741;\n  assign GEN_743 = 7'h57 == T_7300 ? T_10725_87 : GEN_742;\n  assign GEN_744 = 7'h58 == T_7300 ? T_10725_88 : GEN_743;\n  assign GEN_745 = 7'h59 == T_7300 ? T_10725_89 : GEN_744;\n  assign GEN_746 = 7'h5a == T_7300 ? T_10725_90 : GEN_745;\n  assign GEN_747 = 7'h5b == T_7300 ? T_10725_91 : GEN_746;\n  assign GEN_748 = 7'h5c == T_7300 ? T_10725_92 : GEN_747;\n  assign GEN_749 = 7'h5d == T_7300 ? T_10725_93 : GEN_748;\n  assign GEN_750 = 7'h5e == T_7300 ? T_10725_94 : GEN_749;\n  assign GEN_751 = 7'h5f == T_7300 ? T_10725_95 : GEN_750;\n  assign GEN_752 = 7'h60 == T_7300 ? T_10725_96 : GEN_751;\n  assign GEN_753 = 7'h61 == T_7300 ? T_10725_97 : GEN_752;\n  assign GEN_754 = 7'h62 == T_7300 ? T_10725_98 : GEN_753;\n  assign GEN_755 = 7'h63 == T_7300 ? T_10725_99 : GEN_754;\n  assign GEN_756 = 7'h64 == T_7300 ? T_10725_100 : GEN_755;\n  assign GEN_757 = 7'h65 == T_7300 ? T_10725_101 : GEN_756;\n  assign GEN_758 = 7'h66 == T_7300 ? T_10725_102 : GEN_757;\n  assign GEN_759 = 7'h67 == T_7300 ? T_10725_103 : GEN_758;\n  assign GEN_760 = 7'h68 == T_7300 ? T_10725_104 : GEN_759;\n  assign GEN_761 = 7'h69 == T_7300 ? T_10725_105 : GEN_760;\n  assign GEN_762 = 7'h6a == T_7300 ? T_10725_106 : GEN_761;\n  assign GEN_763 = 7'h6b == T_7300 ? T_10725_107 : GEN_762;\n  assign GEN_764 = 7'h6c == T_7300 ? T_10725_108 : GEN_763;\n  assign GEN_765 = 7'h6d == T_7300 ? T_10725_109 : GEN_764;\n  assign GEN_766 = 7'h6e == T_7300 ? T_10725_110 : GEN_765;\n  assign GEN_767 = 7'h6f == T_7300 ? T_10725_111 : GEN_766;\n  assign GEN_768 = 7'h70 == T_7300 ? T_10725_112 : GEN_767;\n  assign GEN_769 = 7'h71 == T_7300 ? T_10725_113 : GEN_768;\n  assign GEN_770 = 7'h72 == T_7300 ? T_10725_114 : GEN_769;\n  assign GEN_771 = 7'h73 == T_7300 ? T_10725_115 : GEN_770;\n  assign GEN_772 = 7'h74 == T_7300 ? T_10725_116 : GEN_771;\n  assign GEN_773 = 7'h75 == T_7300 ? T_10725_117 : GEN_772;\n  assign GEN_774 = 7'h76 == T_7300 ? T_10725_118 : GEN_773;\n  assign GEN_775 = 7'h77 == T_7300 ? T_10725_119 : GEN_774;\n  assign GEN_776 = 7'h78 == T_7300 ? T_10725_120 : GEN_775;\n  assign GEN_777 = 7'h79 == T_7300 ? T_10725_121 : GEN_776;\n  assign GEN_778 = 7'h7a == T_7300 ? T_10725_122 : GEN_777;\n  assign GEN_779 = 7'h7b == T_7300 ? T_10725_123 : GEN_778;\n  assign GEN_780 = 7'h7c == T_7300 ? T_10725_124 : GEN_779;\n  assign GEN_781 = 7'h7d == T_7300 ? T_10725_125 : GEN_780;\n  assign GEN_782 = 7'h7e == T_7300 ? T_10725_126 : GEN_781;\n  assign GEN_783 = 7'h7f == T_7300 ? T_10725_127 : GEN_782;\n  assign T_10858 = GEN_4 ? GEN_5 : 32'h0;\n  assign T_10859 = T_992_bits_extra[9:8];\n  assign T_10861 = T_992_bits_extra[7:3];\n  assign T_10862 = T_992_bits_extra[2:0];\n  assign T_10873_opcode = 3'h0;\n  assign T_10873_param = 2'h0;\n  assign T_10873_size = T_10862;\n  assign T_10873_source = T_10861;\n  assign T_10873_sink = 1'h0;\n  assign T_10873_addr_lo = T_10859;\n  assign T_10873_data = 32'h0;\n  assign T_10873_error = 1'h0;\n\n  always @(posedge clock) begin // Backup register no need to be reset\n    if (T_3224) begin\n      backupRegs_0 <= T_2505;\n    end\n    if (T_2984) begin\n      backupRegs_1 <= T_2505;\n    end\n    if (T_3264) begin\n      backupRegs_2 <= T_2505;\n    end\n    if (T_3784) begin\n      backupRegs_3 <= T_2505;\n    end\n    if (T_4224) begin\n      backupRegs_4 <= T_2505;\n    end\n    if (T_2664) begin\n      backupRegs_5 <= T_2505;\n    end\n    if (T_2904) begin\n      backupRegs_6 <= T_2505;\n    end\n    if (T_3624) begin\n      backupRegs_7 <= T_2505;\n    end\n    if (T_4024) begin\n      backupRegs_8 <= T_2505;\n    end\n    if (T_3104) begin\n      backupRegs_9 <= T_2505;\n    end\n    if (T_2584) begin\n      backupRegs_10 <= T_2505;\n    end\n    if (T_3984) begin\n      backupRegs_11 <= T_2505;\n    end\n    if (T_3424) begin\n      backupRegs_12 <= T_2505;\n    end\n    if (T_3304) begin\n      backupRegs_13 <= T_2505;\n    end\n    if (T_2744) begin\n      backupRegs_14 <= T_2505;\n    end\n    if (T_4384) begin\n      backupRegs_15 <= T_2505;\n    end\n  end\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The programmiable regs for LCLKGEN\n//\n// ====================================================================\n\nmodule sirv_aon_lclkgen_regs(\n  input  clk,\n  input  rst_n,\n\n  output lfxoscen,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [8 -1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata\n);\n\n// Directly connect the command channel with response channel\n  assign i_icb_rsp_valid = i_icb_cmd_valid;\n  assign i_icb_cmd_ready = i_icb_rsp_ready;\n\n  wire icb_wr_en = i_icb_cmd_valid & i_icb_cmd_ready & (~i_icb_cmd_read);\n  wire [32-1:0]  icb_wdata = i_icb_cmd_wdata;\n\n  wire [32-1:0] lfxosccfg_r;\n\n  // Addr selection\n  wire sel_lfxosccfg = (i_icb_cmd_addr == 8'h00);\n\n  wire icb_wr_en_lfxosccfg = icb_wr_en & sel_lfxosccfg ;\n\n  assign i_icb_rsp_rdata = ({32{sel_lfxosccfg}} & lfxosccfg_r);\n\n  /////////////////////////////////////////////////////////////////////////////////////////\n  // LFXOSCCFG\n  wire lfxoscen_ena = icb_wr_en_lfxosccfg;\n    // The reset value is 1\n  sirv_gnrl_dfflrs #(1) lfxoscen_dfflrs (lfxoscen_ena, icb_wdata[30], lfxoscen, clk, rst_n);\n  assign lfxosccfg_r = {1'b0, lfxoscen, 30'b0};\n\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The PORRST circuit\n//\n// ====================================================================\n\nmodule sirv_aon_porrst(\n  output porrst_n\n);\n\n  `ifdef FPGA_SOURCE//{\n      // In FPGA, we have no PORRST circult\n      assign porrst_n = 1'b1;\n  `else //}{\n      assign porrst_n = 1'b1;\n\n  `endif//}\n\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top module of always on domain\n//\n// ====================================================================\nmodule sirv_aon_top #(\n    parameter ASYNC_FF_LEVELS = 2\n)(\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [32-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n  input   io_pads_aon_erst_n_i_ival,\n  output  io_pads_aon_erst_n_o_oval,\n  output  io_pads_aon_erst_n_o_oe,\n  output  io_pads_aon_erst_n_o_ie,\n  output  io_pads_aon_erst_n_o_pue,\n  output  io_pads_aon_erst_n_o_ds,\n  input   io_pads_aon_pmu_dwakeup_n_i_ival,\n  output  io_pads_aon_pmu_dwakeup_n_o_oval,\n  output  io_pads_aon_pmu_dwakeup_n_o_oe,\n  output  io_pads_aon_pmu_dwakeup_n_o_ie,\n  output  io_pads_aon_pmu_dwakeup_n_o_pue,\n  output  io_pads_aon_pmu_dwakeup_n_o_ds,\n  input   io_pads_aon_pmu_vddpaden_i_ival,\n  output  io_pads_aon_pmu_vddpaden_o_oval,\n  output  io_pads_aon_pmu_vddpaden_o_oe,\n  output  io_pads_aon_pmu_vddpaden_o_ie,\n  output  io_pads_aon_pmu_vddpaden_o_pue,\n  output  io_pads_aon_pmu_vddpaden_o_ds,\n  input   io_pads_aon_pmu_padrst_i_ival,\n  output  io_pads_aon_pmu_padrst_o_oval,\n  output  io_pads_aon_pmu_padrst_o_oe,\n  output  io_pads_aon_pmu_padrst_o_ie,\n  output  io_pads_aon_pmu_padrst_o_pue,\n  output  io_pads_aon_pmu_padrst_o_ds,\n\n  input   io_pads_dbgmode0_n_i_ival,\n  input   io_pads_dbgmode1_n_i_ival,\n  input   io_pads_dbgmode2_n_i_ival,\n  input   io_pads_bootrom_n_i_ival,\n  output  io_pads_bootrom_n_o_oval,\n  output  io_pads_bootrom_n_o_oe,\n  output  io_pads_bootrom_n_o_ie,\n  output  io_pads_bootrom_n_o_pue,\n  output  io_pads_bootrom_n_o_ds,\n  input   io_pads_jtagpwd_n_i_ival,\n  output  io_pads_jtagpwd_n_o_oval,\n  output  io_pads_jtagpwd_n_o_oe,\n  output  io_pads_jtagpwd_n_o_ie,\n  output  io_pads_jtagpwd_n_o_pue,\n  output  io_pads_jtagpwd_n_o_ds,\n\n  output  hfclkrst,\n  output  corerst,\n\n  output  jtagpwd_iso,\n\n\n  output inspect_mode,\n  output inspect_por_rst,\n  output inspect_32k_clk,\n  input  inspect_pc_29b, \n  input  inspect_dbg_irq,\n\n  output  [32-1:0] pc_rtvec,\n\n  output  aon_wdg_irq,\n  output  aon_rtc_irq,\n  output  aon_rtcToggle,\n\n  input   lfextclk,\n  output  lfxoscen,\n\n  input   test_mode,\n  input   test_iso_override\n);\n\n  // Since the Aon module need to handle the path from the MOFF domain, which\n  //   maybe powered down, so we need to have the isolation cells here\n  //   it can be handled by UPF flow, but we can also add them mannually here\n  // The inputs from MOFF to aon domain need to be isolated\n  // The outputs does not need to be isolated\n  wire          isl_icb_cmd_valid;\n  wire          isl_icb_cmd_ready;\n  wire [32-1:0] isl_icb_cmd_addr; \n  wire          isl_icb_cmd_read; \n  wire [32-1:0] isl_icb_cmd_wdata;\n  \n  wire          isl_icb_rsp_valid;\n  wire          isl_icb_rsp_ready;\n  wire [32-1:0] isl_icb_rsp_rdata;\n\n  wire aon_iso;\n\n  assign  isl_icb_cmd_valid = aon_iso ?  1'b0 : i_icb_cmd_valid;\n  assign  isl_icb_cmd_addr  = aon_iso ? 32'b0 : i_icb_cmd_addr ; \n  assign  isl_icb_cmd_read  = aon_iso ?  1'b0 : i_icb_cmd_read ; \n  assign  isl_icb_cmd_wdata = aon_iso ? 32'b0 : i_icb_cmd_wdata;\n  assign  isl_icb_rsp_ready = aon_iso ?  1'b0 : i_icb_rsp_ready;\n  \n  assign i_icb_rsp_valid = isl_icb_rsp_valid;\n  assign i_icb_cmd_ready = isl_icb_cmd_ready;\n  assign i_icb_rsp_rdata = isl_icb_rsp_rdata;\n\n  wire                     synced_icb_cmd_valid;\n  wire                     synced_icb_cmd_ready;\n  wire [32-1:0]            synced_icb_cmd_addr; \n  wire                     synced_icb_cmd_read; \n  wire [32-1:0]            synced_icb_cmd_wdata;\n  \n  wire                     synced_icb_rsp_valid;\n  wire                     synced_icb_rsp_ready;\n  wire [32-1:0]            synced_icb_rsp_rdata;\n\n  wire                     lclkgen_icb_cmd_valid;\n  wire                     lclkgen_icb_cmd_ready;\n  wire [15-1:0]            lclkgen_icb_cmd_addr; \n  wire                     lclkgen_icb_cmd_read; \n  wire [32-1:0]            lclkgen_icb_cmd_wdata;\n  \n  wire                     lclkgen_icb_rsp_valid;\n  wire                     lclkgen_icb_rsp_ready;\n  wire [32-1:0]            lclkgen_icb_rsp_rdata;\n\n  wire                     aon_icb_cmd_valid;\n  wire                     aon_icb_cmd_ready;\n  wire [15-1:0]            aon_icb_cmd_addr; \n  wire                     aon_icb_cmd_read; \n  wire [32-1:0]            aon_icb_cmd_wdata;\n  \n  wire                     aon_icb_rsp_valid;\n  wire                     aon_icb_rsp_ready;\n  wire [32-1:0]            aon_icb_rsp_rdata;\n\n  localparam CMD_PACK_W = 65;\n\n  wire [CMD_PACK_W-1:0] synced_icb_cmd_pack;\n  wire [CMD_PACK_W-1:0] isl_icb_cmd_pack;\n  \n  assign isl_icb_cmd_pack = {\n          isl_icb_cmd_addr, \n          isl_icb_cmd_read, \n          isl_icb_cmd_wdata};\n\n  assign {synced_icb_cmd_addr, \n          synced_icb_cmd_read, \n          synced_icb_cmd_wdata} = synced_icb_cmd_pack;\n\n  wire crossing_clock;\n  wire crossing_reset;\n\n  wire crossing_reset_n = ~crossing_reset;\n\n\n  sirv_gnrl_cdc_tx   \n   # (\n     .DW      (32),\n     .SYNC_DP (ASYNC_FF_LEVELS) \n   ) u_aon_icb_cdc_tx (\n     .o_vld  (isl_icb_rsp_valid ), \n     .o_rdy_a(isl_icb_rsp_ready ), \n     .o_dat  (isl_icb_rsp_rdata ),\n     .i_vld  (synced_icb_rsp_valid ),\n     .i_rdy  (synced_icb_rsp_ready ),\n     .i_dat  (synced_icb_rsp_rdata ),\n   \n     .clk    (crossing_clock),\n     .rst_n  (crossing_reset_n)\n   );\n     \n   sirv_gnrl_cdc_rx   \n      # (\n     .DW      (CMD_PACK_W),\n     .SYNC_DP (ASYNC_FF_LEVELS) \n   ) u_aon_icb_cdc_rx (\n     .i_vld_a(isl_icb_cmd_valid), \n     .i_rdy  (isl_icb_cmd_ready), \n     .i_dat  (isl_icb_cmd_pack),\n     .o_vld  (synced_icb_cmd_valid),\n     .o_rdy  (synced_icb_cmd_ready),\n     .o_dat  (synced_icb_cmd_pack),\n   \n     .clk    (crossing_clock),\n     .rst_n  (crossing_reset_n)\n   );\n\n\n\n  sirv_icb1to2_bus # (\n  .ICB_FIFO_DP        (0),//Pass through\n  .ICB_FIFO_CUT_READY (1),// \n\n  .AW                   (15),\n  .DW                   (32),\n  .SPLT_FIFO_OUTS_NUM   (1),// Allow 1 oustanding\n  .SPLT_FIFO_CUT_READY  (1),// Always cut ready\n  //  * LCLKGEN       : 0x200 -- 0x2FF\n  .O0_BASE_ADDR       (15'h200),       \n  .O0_BASE_REGION_LSB (8) \n  )u_aon_1to2_icb(\n\n    .i_icb_cmd_valid  (synced_icb_cmd_valid),\n    .i_icb_cmd_ready  (synced_icb_cmd_ready),\n    .i_icb_cmd_addr   (synced_icb_cmd_addr[14:0] ),\n    .i_icb_cmd_read   (synced_icb_cmd_read ),\n    .i_icb_cmd_wdata  (synced_icb_cmd_wdata),\n    .i_icb_cmd_wmask  (4'hF),\n    .i_icb_cmd_lock   (1'b0),\n    .i_icb_cmd_excl   (1'b0 ),\n    .i_icb_cmd_size   (2'b0 ),\n    .i_icb_cmd_burst  (2'b0 ),\n    .i_icb_cmd_beat   (2'b0 ),\n    \n    .i_icb_rsp_valid  (synced_icb_rsp_valid),\n    .i_icb_rsp_ready  (synced_icb_rsp_ready),\n    .i_icb_rsp_err    (),\n    .i_icb_rsp_excl_ok(),\n    .i_icb_rsp_rdata  (synced_icb_rsp_rdata),\n    \n  //  * LCLKGEN \n        //\n    .o0_icb_cmd_valid  (lclkgen_icb_cmd_valid),\n    .o0_icb_cmd_ready  (lclkgen_icb_cmd_ready),\n    .o0_icb_cmd_addr   (lclkgen_icb_cmd_addr ),\n    .o0_icb_cmd_read   (lclkgen_icb_cmd_read ),\n    .o0_icb_cmd_wdata  (lclkgen_icb_cmd_wdata),\n    .o0_icb_cmd_wmask  (),\n    .o0_icb_cmd_lock   (),\n    .o0_icb_cmd_excl   (),\n    .o0_icb_cmd_size   (),\n    .o0_icb_cmd_burst  (),\n    .o0_icb_cmd_beat   (),\n    \n    .o0_icb_rsp_valid  (lclkgen_icb_rsp_valid),\n    .o0_icb_rsp_ready  (lclkgen_icb_rsp_ready),\n    .o0_icb_rsp_err    (1'b0),\n    .o0_icb_rsp_excl_ok(1'b0  ),\n    .o0_icb_rsp_rdata  (lclkgen_icb_rsp_rdata),\n\n  //  * AON      \n    .o1_icb_cmd_valid  (aon_icb_cmd_valid),\n    .o1_icb_cmd_ready  (aon_icb_cmd_ready),\n    .o1_icb_cmd_addr   (aon_icb_cmd_addr ),\n    .o1_icb_cmd_read   (aon_icb_cmd_read ),\n    .o1_icb_cmd_wdata  (aon_icb_cmd_wdata),\n    .o1_icb_cmd_wmask  (),\n    .o1_icb_cmd_lock   (),\n    .o1_icb_cmd_excl   (),\n    .o1_icb_cmd_size   (),\n    .o1_icb_cmd_burst  (),\n    .o1_icb_cmd_beat   (),\n    \n    .o1_icb_rsp_valid  (aon_icb_rsp_valid),\n    .o1_icb_rsp_ready  (aon_icb_rsp_ready),\n    .o1_icb_rsp_err    (1'b0  ),\n    .o1_icb_rsp_excl_ok(1'b0  ),\n    .o1_icb_rsp_rdata  (aon_icb_rsp_rdata),\n\n    .clk         (crossing_clock),\n    .rst_n       (crossing_reset_n) \n  );\n\n  wire aon_reset;\n  wire aon_reset_n = ~aon_reset;\n\n  sirv_aon_lclkgen_regs u_aon_lclkgen_regs(\n    .clk         (crossing_clock),// Crossing clock is actually the aon_clk\n    .rst_n       (aon_reset_n),// Here we need to use the aon_rst rather than the crossing reset\n\n    .lfxoscen    (lfxoscen    ),\n\n    .i_icb_cmd_valid(lclkgen_icb_cmd_valid),\n    .i_icb_cmd_ready(lclkgen_icb_cmd_ready),\n    .i_icb_cmd_addr (lclkgen_icb_cmd_addr[7:0]), \n    .i_icb_cmd_read (lclkgen_icb_cmd_read ), \n    .i_icb_cmd_wdata(lclkgen_icb_cmd_wdata),\n                     \n    .i_icb_rsp_valid(lclkgen_icb_rsp_valid),\n    .i_icb_rsp_ready(lclkgen_icb_rsp_ready),\n    .i_icb_rsp_rdata(lclkgen_icb_rsp_rdata)\n  );\n\n\n  wire  io_tl_in_0_a_ready;\n  assign  aon_icb_cmd_ready  = io_tl_in_0_a_ready;\n  wire  io_tl_in_0_a_valid  = aon_icb_cmd_valid;\n  wire  [2:0] io_tl_in_0_a_bits_opcode  = aon_icb_cmd_read ? 3'h4 : 3'h0;\n  wire  [2:0] io_tl_in_0_a_bits_param  = 3'b0;\n  wire  [2:0] io_tl_in_0_a_bits_size = 3'd2;\n  wire  [4:0] io_tl_in_0_a_bits_source  = 5'b0;\n  wire  [28:0] io_tl_in_0_a_bits_address  = {14'b0,aon_icb_cmd_addr[14:0]};\n  wire  [3:0] io_tl_in_0_a_bits_mask  = 4'b1111;\n  wire  [31:0] io_tl_in_0_a_bits_data  = aon_icb_cmd_wdata;\n\n  \n  wire  io_tl_in_0_d_ready = aon_icb_rsp_ready;\n\n  wire  [2:0] io_tl_in_0_d_bits_opcode;\n  wire  [1:0] io_tl_in_0_d_bits_param;\n  wire  [2:0] io_tl_in_0_d_bits_size;\n  wire  [4:0] io_tl_in_0_d_bits_source;\n  wire  io_tl_in_0_d_bits_sink;\n  wire  [1:0] io_tl_in_0_d_bits_addr_lo;\n  wire  [31:0] io_tl_in_0_d_bits_data;\n  wire  io_tl_in_0_d_bits_error;\n  wire  io_tl_in_0_d_valid;\n\n  assign  aon_icb_rsp_valid = io_tl_in_0_d_valid;\n  assign  aon_icb_rsp_rdata = io_tl_in_0_d_bits_data;\n\n  // Not used\n  wire  io_tl_in_0_b_ready = 1'b0;\n  wire  io_tl_in_0_b_valid;\n  wire  [2:0] io_tl_in_0_b_bits_opcode;\n  wire  [1:0] io_tl_in_0_b_bits_param;\n  wire  [2:0] io_tl_in_0_b_bits_size;\n  wire  [4:0] io_tl_in_0_b_bits_source;\n  wire  [28:0] io_tl_in_0_b_bits_address;\n  wire  [3:0] io_tl_in_0_b_bits_mask;\n  wire  [31:0] io_tl_in_0_b_bits_data;\n\n  // Not used\n  wire  io_tl_in_0_c_ready;\n  wire  io_tl_in_0_c_valid = 1'b0;\n  wire  [2:0] io_tl_in_0_c_bits_opcode = 3'b0;\n  wire  [2:0] io_tl_in_0_c_bits_param = 3'b0;\n  wire  [2:0] io_tl_in_0_c_bits_size = 3'd2;\n  wire  [4:0] io_tl_in_0_c_bits_source = 5'b0;\n  wire  [28:0] io_tl_in_0_c_bits_address = 29'b0;\n  wire  [31:0] io_tl_in_0_c_bits_data = 32'b0;\n  wire  io_tl_in_0_c_bits_error = 1'b0;\n\n  // Not used\n  wire  io_tl_in_0_e_ready;\n  wire  io_tl_in_0_e_valid = 1'b0;\n  wire  io_tl_in_0_e_bits_sink = 1'b0;\n\n\nsirv_aon_wrapper u_sirv_aon_wrapper(\n\n  .aon_reset                        (aon_reset),\n  .aon_iso                          (aon_iso),\n  .jtagpwd_iso                      (jtagpwd_iso),\n  .crossing_clock                   (crossing_clock),\n  .crossing_reset                   (crossing_reset),\n\n  .io_in_0_a_ready                  (io_tl_in_0_a_ready                  ),\n  .io_in_0_a_valid                  (io_tl_in_0_a_valid                  ),\n  .io_in_0_a_bits_opcode            (io_tl_in_0_a_bits_opcode            ),\n  .io_in_0_a_bits_param             (io_tl_in_0_a_bits_param             ),\n  .io_in_0_a_bits_size              (io_tl_in_0_a_bits_size              ),\n  .io_in_0_a_bits_source            (io_tl_in_0_a_bits_source            ),\n  .io_in_0_a_bits_address           (io_tl_in_0_a_bits_address           ),\n  .io_in_0_a_bits_mask              (io_tl_in_0_a_bits_mask              ),\n  .io_in_0_a_bits_data              (io_tl_in_0_a_bits_data              ),\n  .io_in_0_b_ready                  (io_tl_in_0_b_ready                  ),\n  .io_in_0_b_valid                  (io_tl_in_0_b_valid                  ),\n  .io_in_0_b_bits_opcode            (io_tl_in_0_b_bits_opcode            ),\n  .io_in_0_b_bits_param             (io_tl_in_0_b_bits_param             ),\n  .io_in_0_b_bits_size              (io_tl_in_0_b_bits_size              ),\n  .io_in_0_b_bits_source            (io_tl_in_0_b_bits_source            ),\n  .io_in_0_b_bits_address           (io_tl_in_0_b_bits_address           ),\n  .io_in_0_b_bits_mask              (io_tl_in_0_b_bits_mask              ),\n  .io_in_0_b_bits_data              (io_tl_in_0_b_bits_data              ),\n  .io_in_0_c_ready                  (io_tl_in_0_c_ready                  ),\n  .io_in_0_c_valid                  (io_tl_in_0_c_valid                  ),\n  .io_in_0_c_bits_opcode            (io_tl_in_0_c_bits_opcode            ),\n  .io_in_0_c_bits_param             (io_tl_in_0_c_bits_param             ),\n  .io_in_0_c_bits_size              (io_tl_in_0_c_bits_size              ),\n  .io_in_0_c_bits_source            (io_tl_in_0_c_bits_source            ),\n  .io_in_0_c_bits_address           (io_tl_in_0_c_bits_address           ),\n  .io_in_0_c_bits_data              (io_tl_in_0_c_bits_data              ),\n  .io_in_0_c_bits_error             (io_tl_in_0_c_bits_error             ),\n  .io_in_0_d_ready                  (io_tl_in_0_d_ready                  ),\n  .io_in_0_d_valid                  (io_tl_in_0_d_valid                  ),\n  .io_in_0_d_bits_opcode            (io_tl_in_0_d_bits_opcode            ),\n  .io_in_0_d_bits_param             (io_tl_in_0_d_bits_param             ),\n  .io_in_0_d_bits_size              (io_tl_in_0_d_bits_size              ),\n  .io_in_0_d_bits_source            (io_tl_in_0_d_bits_source            ),\n  .io_in_0_d_bits_sink              (io_tl_in_0_d_bits_sink              ),\n  .io_in_0_d_bits_addr_lo           (io_tl_in_0_d_bits_addr_lo           ),\n  .io_in_0_d_bits_data              (io_tl_in_0_d_bits_data              ),\n  .io_in_0_d_bits_error             (io_tl_in_0_d_bits_error             ),\n  .io_in_0_e_ready                  (io_tl_in_0_e_ready                  ),\n  .io_in_0_e_valid                  (io_tl_in_0_e_valid                  ),\n  .io_in_0_e_bits_sink              (io_tl_in_0_e_bits_sink              ),\n\n  .io_ip_0_0 (aon_wdg_irq),\n  .io_ip_0_1 (aon_rtc_irq),\n\n  .io_pads_erst_n_i_ival       (io_pads_aon_erst_n_i_ival       ),\n  .io_pads_erst_n_o_oval       (io_pads_aon_erst_n_o_oval       ),\n  .io_pads_erst_n_o_oe         (io_pads_aon_erst_n_o_oe         ),\n  .io_pads_erst_n_o_ie         (io_pads_aon_erst_n_o_ie         ),\n  .io_pads_erst_n_o_pue        (io_pads_aon_erst_n_o_pue        ),\n  .io_pads_erst_n_o_ds         (io_pads_aon_erst_n_o_ds         ),\n  .io_pads_lfextclk_i_ival     (lfextclk     ),\n  .io_pads_lfextclk_o_oval     (),\n  .io_pads_lfextclk_o_oe       (),\n  .io_pads_lfextclk_o_ie       (),\n  .io_pads_lfextclk_o_pue      (),\n  .io_pads_lfextclk_o_ds       (),\n  .io_pads_pmu_dwakeup_n_i_ival(io_pads_aon_pmu_dwakeup_n_i_ival),\n  .io_pads_pmu_dwakeup_n_o_oval(io_pads_aon_pmu_dwakeup_n_o_oval),\n  .io_pads_pmu_dwakeup_n_o_oe  (io_pads_aon_pmu_dwakeup_n_o_oe  ),\n  .io_pads_pmu_dwakeup_n_o_ie  (io_pads_aon_pmu_dwakeup_n_o_ie  ),\n  .io_pads_pmu_dwakeup_n_o_pue (io_pads_aon_pmu_dwakeup_n_o_pue ),\n  .io_pads_pmu_dwakeup_n_o_ds  (io_pads_aon_pmu_dwakeup_n_o_ds  ),\n  .io_pads_pmu_vddpaden_i_ival (io_pads_aon_pmu_vddpaden_i_ival ),\n  .io_pads_pmu_vddpaden_o_oval (io_pads_aon_pmu_vddpaden_o_oval ),\n  .io_pads_pmu_vddpaden_o_oe   (io_pads_aon_pmu_vddpaden_o_oe   ),\n  .io_pads_pmu_vddpaden_o_ie   (io_pads_aon_pmu_vddpaden_o_ie   ),\n  .io_pads_pmu_vddpaden_o_pue  (io_pads_aon_pmu_vddpaden_o_pue  ),\n  .io_pads_pmu_vddpaden_o_ds   (io_pads_aon_pmu_vddpaden_o_ds   ),\n  .io_pads_pmu_padrst_i_ival (io_pads_aon_pmu_padrst_i_ival ),\n  .io_pads_pmu_padrst_o_oval (io_pads_aon_pmu_padrst_o_oval ),\n  .io_pads_pmu_padrst_o_oe   (io_pads_aon_pmu_padrst_o_oe   ),\n  .io_pads_pmu_padrst_o_ie   (io_pads_aon_pmu_padrst_o_ie   ),\n  .io_pads_pmu_padrst_o_pue  (io_pads_aon_pmu_padrst_o_pue  ),\n  .io_pads_pmu_padrst_o_ds   (io_pads_aon_pmu_padrst_o_ds   ),\n\n    .io_pads_jtagpwd_n_i_ival       (io_pads_jtagpwd_n_i_ival),\n    .io_pads_jtagpwd_n_o_oval       (io_pads_jtagpwd_n_o_oval),\n    .io_pads_jtagpwd_n_o_oe         (io_pads_jtagpwd_n_o_oe  ),\n    .io_pads_jtagpwd_n_o_ie         (io_pads_jtagpwd_n_o_ie  ),\n    .io_pads_jtagpwd_n_o_pue        (io_pads_jtagpwd_n_o_pue ),\n    .io_pads_jtagpwd_n_o_ds         (io_pads_jtagpwd_n_o_ds  ),\n\n    .io_pads_bootrom_n_i_ival       (io_pads_bootrom_n_i_ival),\n    .io_pads_bootrom_n_o_oval       (io_pads_bootrom_n_o_oval),\n    .io_pads_bootrom_n_o_oe         (io_pads_bootrom_n_o_oe  ),\n    .io_pads_bootrom_n_o_ie         (io_pads_bootrom_n_o_ie  ),\n    .io_pads_bootrom_n_o_pue        (io_pads_bootrom_n_o_pue ),\n    .io_pads_bootrom_n_o_ds         (io_pads_bootrom_n_o_ds  ),\n\n    .io_pads_dbgmode0_n_i_ival       (io_pads_dbgmode0_n_i_ival),\n    .io_pads_dbgmode1_n_i_ival       (io_pads_dbgmode1_n_i_ival),\n    .io_pads_dbgmode2_n_i_ival       (io_pads_dbgmode2_n_i_ival),\n\n    .inspect_mode            (inspect_mode     ), \n    .inspect_pc_29b          (inspect_pc_29b   ), \n    .inspect_por_rst         (inspect_por_rst  ), \n    .inspect_32k_clk         (inspect_32k_clk  ), \n    .inspect_dbg_irq         (inspect_dbg_irq  ),\n\n\n  .pc_rtvec (pc_rtvec),\n\n  .io_rsts_hfclkrst(hfclkrst),\n  .io_rsts_corerst (corerst ),\n  .io_rtc (aon_rtcToggle),\n\n  .test_mode        (test_mode        ),\n  .test_iso_override(test_iso_override)\n);\n\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_aon_wrapper(\n\n  output inspect_mode,\n  output inspect_por_rst,\n  output inspect_32k_clk,\n  input inspect_pc_29b, \n  input inspect_dbg_irq,\n  output  [32-1:0] pc_rtvec,\n\n  output aon_iso,\n  output jtagpwd_iso,\n  output crossing_clock,\n  output crossing_reset,\n\n  output  io_in_0_a_ready,\n  input   io_in_0_a_valid,\n  input  [2:0] io_in_0_a_bits_opcode,\n  input  [2:0] io_in_0_a_bits_param,\n  input  [2:0] io_in_0_a_bits_size,\n  input  [4:0] io_in_0_a_bits_source,\n  input  [28:0] io_in_0_a_bits_address,\n  input  [3:0] io_in_0_a_bits_mask,\n  input  [31:0] io_in_0_a_bits_data,\n  input   io_in_0_b_ready,\n  output  io_in_0_b_valid,\n  output [2:0] io_in_0_b_bits_opcode,\n  output [1:0] io_in_0_b_bits_param,\n  output [2:0] io_in_0_b_bits_size,\n  output [4:0] io_in_0_b_bits_source,\n  output [28:0] io_in_0_b_bits_address,\n  output [3:0] io_in_0_b_bits_mask,\n  output [31:0] io_in_0_b_bits_data,\n  output  io_in_0_c_ready,\n  input   io_in_0_c_valid,\n  input  [2:0] io_in_0_c_bits_opcode,\n  input  [2:0] io_in_0_c_bits_param,\n  input  [2:0] io_in_0_c_bits_size,\n  input  [4:0] io_in_0_c_bits_source,\n  input  [28:0] io_in_0_c_bits_address,\n  input  [31:0] io_in_0_c_bits_data,\n  input   io_in_0_c_bits_error,\n  input   io_in_0_d_ready,\n  output  io_in_0_d_valid,\n  output [2:0] io_in_0_d_bits_opcode,\n  output [1:0] io_in_0_d_bits_param,\n  output [2:0] io_in_0_d_bits_size,\n  output [4:0] io_in_0_d_bits_source,\n  output  io_in_0_d_bits_sink,\n  output [1:0] io_in_0_d_bits_addr_lo,\n  output [31:0] io_in_0_d_bits_data,\n  output  io_in_0_d_bits_error,\n  output  io_in_0_e_ready,\n  input   io_in_0_e_valid,\n  input   io_in_0_e_bits_sink,\n\n  output  io_ip_0_0,\n  output  io_ip_0_1,\n\n  input   io_pads_erst_n_i_ival,\n  output  io_pads_erst_n_o_oval,\n  output  io_pads_erst_n_o_oe,\n  output  io_pads_erst_n_o_ie,\n  output  io_pads_erst_n_o_pue,\n  output  io_pads_erst_n_o_ds,\n  input   io_pads_lfextclk_i_ival,\n  output  io_pads_lfextclk_o_oval,\n  output  io_pads_lfextclk_o_oe,\n  output  io_pads_lfextclk_o_ie,\n  output  io_pads_lfextclk_o_pue,\n  output  io_pads_lfextclk_o_ds,\n  input   io_pads_dbgmode0_n_i_ival,\n  input   io_pads_dbgmode1_n_i_ival,\n  input   io_pads_dbgmode2_n_i_ival,\n  input   io_pads_jtagpwd_n_i_ival,\n  output  io_pads_jtagpwd_n_o_oval,\n  output  io_pads_jtagpwd_n_o_oe,\n  output  io_pads_jtagpwd_n_o_ie,\n  output  io_pads_jtagpwd_n_o_pue,\n  output  io_pads_jtagpwd_n_o_ds,\n  input   io_pads_bootrom_n_i_ival,\n  output  io_pads_bootrom_n_o_oval,\n  output  io_pads_bootrom_n_o_oe,\n  output  io_pads_bootrom_n_o_ie,\n  output  io_pads_bootrom_n_o_pue,\n  output  io_pads_bootrom_n_o_ds,\n  input   io_pads_pmu_dwakeup_n_i_ival,\n  output  io_pads_pmu_dwakeup_n_o_oval,\n  output  io_pads_pmu_dwakeup_n_o_oe,\n  output  io_pads_pmu_dwakeup_n_o_ie,\n  output  io_pads_pmu_dwakeup_n_o_pue,\n  output  io_pads_pmu_dwakeup_n_o_ds,\n  input   io_pads_pmu_vddpaden_i_ival,\n  output  io_pads_pmu_vddpaden_o_oval,\n  output  io_pads_pmu_vddpaden_o_oe,\n  output  io_pads_pmu_vddpaden_o_ie,\n  output  io_pads_pmu_vddpaden_o_pue,\n  output  io_pads_pmu_vddpaden_o_ds,\n  input   io_pads_pmu_padrst_i_ival,\n  output  io_pads_pmu_padrst_o_oval,\n  output  io_pads_pmu_padrst_o_oe,\n  output  io_pads_pmu_padrst_o_ie,\n  output  io_pads_pmu_padrst_o_pue,\n  output  io_pads_pmu_padrst_o_ds,\n  output  io_rsts_hfclkrst,\n  output  io_rsts_corerst,\n  output  io_rtc,\n\n  output  aon_reset,\n\n  input   test_mode,\n  input   test_iso_override\n\n);\n  wire  aon_io_dbgmode0_n;\n  wire  aon_io_dbgmode1_n;\n  wire  aon_io_dbgmode2_n;\n  wire  aon_clock;\n  wire  aon_io_interrupts_0_0;\n  wire  aon_io_interrupts_0_1;\n  wire  aon_io_moff_hfclkrst;\n  wire  aon_io_moff_corerst;\n  wire  aon_io_wdog_rst;\n  wire  aon_io_lfclk;\n  wire  aon_io_pmu_vddpaden;\n  wire  aon_io_pmu_padrst;\n  wire  aon_io_pmu_dwakeup;\n  wire  aon_io_jtagpwd;\n  wire  aon_io_bootrom;\n  wire  aon_io_lfextclk;\n  wire  aon_io_resetCauses_wdogrst;\n  wire  aon_io_resetCauses_erst;\n  wire  aon_io_resetCauses_porrst;\n  wire  erst;\n  wire  T_1411;\n  wire  aonrst_catch_clock;\n  wire  aonrst_catch_reset;\n  wire  aonrst_catch_io_sync_reset;\n  wire  T_1412;\n  wire  T_1413;\n  wire  ResetCatchAndSync_1_1_clock;\n  wire  ResetCatchAndSync_1_1_reset;\n  wire  ResetCatchAndSync_1_1_io_sync_reset;\n  wire  bootrom_deglitch_clock;\n  wire  bootrom_deglitch_reset;\n  wire  bootrom_deglitch_io_d;\n  wire  bootrom_deglitch_io_q;\n  wire  jtagpwd_deglitch_clock;\n  wire  jtagpwd_deglitch_reset;\n  wire  jtagpwd_deglitch_io_d;\n  wire  jtagpwd_deglitch_io_q;\n  wire  dwakeup_deglitch_clock;\n  wire  dwakeup_deglitch_reset;\n  wire  dwakeup_deglitch_io_d;\n  wire  dwakeup_deglitch_io_q;\n  wire  T_1420;\n\n  sirv_aon u_sirv_aon (\n    .clock(aon_clock),\n    .reset(aon_reset),\n    .io_interrupts_0_0(aon_io_interrupts_0_0),\n    .io_interrupts_0_1(aon_io_interrupts_0_1),\n    .io_in_0_a_ready       (io_in_0_a_ready),\n    .io_in_0_a_valid       (io_in_0_a_valid),\n    .io_in_0_a_bits_opcode (io_in_0_a_bits_opcode),\n    .io_in_0_a_bits_param  (io_in_0_a_bits_param),\n    .io_in_0_a_bits_size   (io_in_0_a_bits_size),\n    .io_in_0_a_bits_source (io_in_0_a_bits_source),\n    .io_in_0_a_bits_address(io_in_0_a_bits_address),\n    .io_in_0_a_bits_mask   (io_in_0_a_bits_mask),\n    .io_in_0_a_bits_data   (io_in_0_a_bits_data),\n    .io_in_0_b_ready       (io_in_0_b_ready),\n    .io_in_0_b_valid       (io_in_0_b_valid),\n    .io_in_0_b_bits_opcode (io_in_0_b_bits_opcode),\n    .io_in_0_b_bits_param  (io_in_0_b_bits_param),\n    .io_in_0_b_bits_size   (io_in_0_b_bits_size),\n    .io_in_0_b_bits_source (io_in_0_b_bits_source),\n    .io_in_0_b_bits_address(io_in_0_b_bits_address),\n    .io_in_0_b_bits_mask   (io_in_0_b_bits_mask),\n    .io_in_0_b_bits_data   (io_in_0_b_bits_data),\n    .io_in_0_c_ready       (io_in_0_c_ready),\n    .io_in_0_c_valid       (io_in_0_c_valid),\n    .io_in_0_c_bits_opcode (io_in_0_c_bits_opcode),\n    .io_in_0_c_bits_param  (io_in_0_c_bits_param),\n    .io_in_0_c_bits_size   (io_in_0_c_bits_size),\n    .io_in_0_c_bits_source (io_in_0_c_bits_source),\n    .io_in_0_c_bits_address(io_in_0_c_bits_address),\n    .io_in_0_c_bits_data   (io_in_0_c_bits_data),\n    .io_in_0_c_bits_error  (io_in_0_c_bits_error),\n    .io_in_0_d_ready       (io_in_0_d_ready),\n    .io_in_0_d_valid       (io_in_0_d_valid),\n    .io_in_0_d_bits_opcode (io_in_0_d_bits_opcode),\n    .io_in_0_d_bits_param  (io_in_0_d_bits_param),\n    .io_in_0_d_bits_size   (io_in_0_d_bits_size),\n    .io_in_0_d_bits_source (io_in_0_d_bits_source),\n    .io_in_0_d_bits_sink   (io_in_0_d_bits_sink),\n    .io_in_0_d_bits_addr_lo(io_in_0_d_bits_addr_lo),\n    .io_in_0_d_bits_data   (io_in_0_d_bits_data),\n    .io_in_0_d_bits_error  (io_in_0_d_bits_error),\n    .io_in_0_e_ready       (io_in_0_e_ready),\n    .io_in_0_e_valid       (io_in_0_e_valid),\n    .io_in_0_e_bits_sink   (io_in_0_e_bits_sink),\n    .io_moff_hfclkrst(aon_io_moff_hfclkrst),\n    .io_moff_corerst(aon_io_moff_corerst),\n    .io_wdog_rst(aon_io_wdog_rst),\n    .io_lfclk(aon_io_lfclk),\n    .io_pmu_vddpaden (aon_io_pmu_vddpaden),\n    .io_pmu_padrst   (aon_io_pmu_padrst),\n    .io_pmu_dwakeup(aon_io_pmu_dwakeup),\n    .io_lfextclk(aon_io_lfextclk),\n    .io_resetCauses_wdogrst(aon_io_resetCauses_wdogrst),\n    .io_resetCauses_erst(aon_io_resetCauses_erst),\n    .io_resetCauses_porrst(aon_io_resetCauses_porrst),\n    .erst(erst),\n    .test_mode(test_mode) \n  );\n  sirv_ResetCatchAndSync aonrst_catch (\n    .test_mode(test_mode),\n    .clock(aonrst_catch_clock),\n    .reset(aonrst_catch_reset),\n    .io_sync_reset(aonrst_catch_io_sync_reset)\n  );\n    // This is the cross reset to reset the CDC logics between the Aon and MOFF to make sure\n    //   there is no any pending transactions\n  sirv_ResetCatchAndSync ResetCatchAndSync_1_1 (\n    .test_mode(test_mode),\n    .clock(ResetCatchAndSync_1_1_clock),\n    .reset(ResetCatchAndSync_1_1_reset),\n    .io_sync_reset(ResetCatchAndSync_1_1_io_sync_reset)\n  );\n  assign crossing_clock = aon_io_lfclk;\n  assign crossing_reset = ResetCatchAndSync_1_1_io_sync_reset;\n\n  sirv_DeglitchShiftRegister jtagpwd_deglitch (\n    .clock(jtagpwd_deglitch_clock),\n    .reset(jtagpwd_deglitch_reset),\n    .io_d(jtagpwd_deglitch_io_d),\n    .io_q(jtagpwd_deglitch_io_q)\n  );\n\n  sirv_DeglitchShiftRegister bootrom_deglitch (\n    .clock(bootrom_deglitch_clock),\n    .reset(bootrom_deglitch_reset),\n    .io_d(bootrom_deglitch_io_d),\n    .io_q(bootrom_deglitch_io_q)\n  );\n\n\n  sirv_DeglitchShiftRegister dwakeup_deglitch (\n    .clock(dwakeup_deglitch_clock),\n    .reset(dwakeup_deglitch_reset),\n    .io_d(dwakeup_deglitch_io_d),\n    .io_q(dwakeup_deglitch_io_q)\n  );\n  assign io_ip_0_0 = aon_io_interrupts_0_0;\n  assign io_ip_0_1 = aon_io_interrupts_0_1;\n  assign io_pads_erst_n_o_oval = 1'h0;\n  assign io_pads_erst_n_o_oe = 1'h0;\n  assign io_pads_erst_n_o_ie = 1'h1;\n  assign io_pads_erst_n_o_pue = 1'h1;\n  assign io_pads_erst_n_o_ds = 1'h0;\n  assign io_pads_lfextclk_o_oval = 1'h0;\n  assign io_pads_lfextclk_o_oe = 1'h0;\n  assign io_pads_lfextclk_o_ie = 1'h1;\n  assign io_pads_lfextclk_o_pue = 1'h1;\n  assign io_pads_lfextclk_o_ds = 1'h0;\n  assign io_pads_pmu_dwakeup_n_o_oval = 1'h0;\n  assign io_pads_pmu_dwakeup_n_o_oe = 1'h0;\n  assign io_pads_pmu_dwakeup_n_o_ie = 1'h1;\n  assign io_pads_pmu_dwakeup_n_o_pue = 1'h1;\n  assign io_pads_pmu_dwakeup_n_o_ds = 1'h0;\n    // Since the jtagpwd_n is an input, so we just tie the output relevant signals to 0\n  assign io_pads_jtagpwd_n_o_oval = 1'h0;\n  assign io_pads_jtagpwd_n_o_oe = 1'h0;\n  assign io_pads_jtagpwd_n_o_ie = 1'h1;\n  assign io_pads_jtagpwd_n_o_pue = 1'h1;\n  assign io_pads_jtagpwd_n_o_ds = 1'h0;\n    // Since the bootrom_n is an input, so we just tie the output relevant signals to 0\n  assign io_pads_bootrom_n_o_oval = 1'h0;\n  assign io_pads_bootrom_n_o_oe = 1'h0;\n  assign io_pads_bootrom_n_o_ie = 1'h1;\n  assign io_pads_bootrom_n_o_pue = 1'h1;\n  assign io_pads_bootrom_n_o_ds = 1'h0;\n    // We reuse these two pads to monitor internal key signals in functional mode \n  wire isl_inspect_pc_29b  = aon_iso ? 1'b0 : inspect_pc_29b       ;// From main domain\n  wire isl_inspect_dbg_irq = aon_iso ? 1'b0 : inspect_dbg_irq      ;// From main domain\n\n  assign inspect_mode = ({aon_io_dbgmode2_n,aon_io_dbgmode1_n,aon_io_dbgmode0_n} == 3'b000);\n  assign {io_pads_pmu_vddpaden_o_oval, io_pads_pmu_padrst_o_oval} =\n        inspect_mode ? {isl_inspect_pc_29b, isl_inspect_dbg_irq} \n                     : {aon_io_pmu_vddpaden, aon_io_pmu_padrst} ;\n  assign io_pads_pmu_vddpaden_o_oe = 1'h1;\n  assign io_pads_pmu_vddpaden_o_ie = 1'h0;\n  assign io_pads_pmu_vddpaden_o_pue = 1'h0;\n  assign io_pads_pmu_vddpaden_o_ds = 1'h0;\n  assign io_pads_pmu_padrst_o_oe = 1'h1;\n  assign io_pads_pmu_padrst_o_ie = 1'h0;\n  assign io_pads_pmu_padrst_o_pue = 1'h0;\n  assign io_pads_pmu_padrst_o_ds = 1'h0;\n  assign io_rsts_hfclkrst = aon_io_moff_hfclkrst;\n  assign io_rsts_corerst = aon_io_moff_corerst;\n  assign aon_clock = aon_io_lfclk;\n  assign aon_reset = aonrst_catch_io_sync_reset;\n  assign aon_io_pmu_dwakeup = dwakeup_deglitch_io_q;\n  assign aon_io_jtagpwd   = jtagpwd_deglitch_io_q;\n  assign aon_io_bootrom   = bootrom_deglitch_io_q;\n  // Since these are just the debug model signals, we cannot really sync it in case the sync clock is not even working\n  assign aon_io_dbgmode0_n  = io_pads_dbgmode0_n_i_ival;\n  assign aon_io_dbgmode1_n  = io_pads_dbgmode1_n_i_ival;\n  assign aon_io_dbgmode2_n  = io_pads_dbgmode2_n_i_ival;\n  assign aon_io_lfextclk = T_1411;\n  assign aon_io_resetCauses_wdogrst = aon_io_wdog_rst;\n  assign aon_io_resetCauses_erst = erst;\n\n  wire porrst_n;\n\n  sirv_aon_porrst u_aon_porrst (.porrst_n(porrst_n));\n  assign inspect_por_rst = porrst_n;\n\n  wire porrst = ~porrst_n;\n  assign aon_io_resetCauses_porrst = porrst;\n  \n  assign inspect_32k_clk = aon_io_lfextclk;\n\n\n  assign erst = ~ io_pads_erst_n_i_ival;\n  assign T_1411 = io_pads_lfextclk_i_ival;\n  assign aonrst_catch_clock = aon_io_lfclk;\n  assign aonrst_catch_reset = T_1412;\n  assign T_1412 = erst | aon_io_wdog_rst | porrst;\n  assign T_1413 = aon_io_moff_corerst | aon_reset;\n  assign ResetCatchAndSync_1_1_clock = aon_io_lfclk;\n    // This is the cross reset to reset the CDC logics between the Aon and MOFF to make sure\n    //   there is no any pending transactions\n  assign ResetCatchAndSync_1_1_reset = T_1413;\n  assign dwakeup_deglitch_clock = aon_io_lfclk;\n  assign dwakeup_deglitch_reset = 1'b1;\n  assign dwakeup_deglitch_io_d = T_1420;\n  assign T_1420 = ~ io_pads_pmu_dwakeup_n_i_ival;\n  assign jtagpwd_deglitch_clock = aon_io_lfclk;\n  assign jtagpwd_deglitch_reset = 1'b1;\n  assign jtagpwd_deglitch_io_d = (~io_pads_jtagpwd_n_i_ival);\n  assign bootrom_deglitch_clock = aon_io_lfclk;\n  assign bootrom_deglitch_reset = 1'b1;\n  assign bootrom_deglitch_io_d = (~io_pads_bootrom_n_i_ival);\n\n\n  //The toggle is generated by the low speed clock divide by 2\n  wire io_rtc_nxt = ~io_rtc;\n  wire aon_rst_n = ~aon_reset;\n  sirv_gnrl_dffr #(1) io_rtc_dffr (io_rtc_nxt, io_rtc, aon_clock, aon_rst_n);\n\n  // Since the Aon module need to handle the path from the MOFF domain, which\n  //   maybe powered down, so we need to have the isolation cells here\n  //   it can be handled by UPF flow, but we can also add them mannually here\n  // The inputs from MOFF to aon domain need to be isolated\n  // The outputs does not need to be isolated\n  //      In DFT mode the isolate control siganls should be disabled\n  assign aon_iso = test_mode ? test_iso_override : aon_io_moff_corerst;// We use this corerst signal as the isolation\n  assign jtagpwd_iso = test_mode ? test_iso_override : aon_io_jtagpwd;// \n  //\n  //\n  //\n  //  This signal will be passed to the main domain, since this is kind of pad selected signal\n  //    we dont need to sync them in main domain, just directly use it\n  assign pc_rtvec = aon_io_bootrom ? 32'h0000_1000 : \n      // This is the external QSPI flash base address \n                                     32'h2000_0000;\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_AsyncResetReg (\n                      input      d,\n                      output reg q,\n                      input      en,\n\n                      input      clk,\n                      input      rst);\n   \n   always @(posedge clk or posedge rst) begin\n\n      if (rst) begin\n         q <= 1'b0;\n      end else if (en) begin\n         q <= d;\n      end\n   end\n   \n\nendmodule // AsyncResetReg\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_AsyncResetRegVec(\n  input   clock,\n  input   reset,\n  input   io_d,\n  output  io_q,\n  input   io_en\n);\n  wire  reg_0_rst;\n  wire  reg_0_clk;\n  wire  reg_0_en;\n  wire  reg_0_q;\n  wire  reg_0_d;\n  sirv_AsyncResetReg reg_0 (\n    .rst(reg_0_rst),\n    .clk(reg_0_clk),\n    .en(reg_0_en),\n    .q(reg_0_q),\n    .d(reg_0_d)\n  );\n  assign io_q = reg_0_q;\n  assign reg_0_rst = reset;\n  assign reg_0_clk = clock;\n  assign reg_0_en = io_en;\n  assign reg_0_d = io_d;\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_AsyncResetRegVec_1(\n  input   clock,\n  input   reset,\n  input  [4:0] io_d,\n  output [4:0] io_q,\n  input   io_en\n);\n  wire  reg_0_rst;\n  wire  reg_0_clk;\n  wire  reg_0_en;\n  wire  reg_0_q;\n  wire  reg_0_d;\n  wire  reg_1_rst;\n  wire  reg_1_clk;\n  wire  reg_1_en;\n  wire  reg_1_q;\n  wire  reg_1_d;\n  wire  reg_2_rst;\n  wire  reg_2_clk;\n  wire  reg_2_en;\n  wire  reg_2_q;\n  wire  reg_2_d;\n  wire  reg_3_rst;\n  wire  reg_3_clk;\n  wire  reg_3_en;\n  wire  reg_3_q;\n  wire  reg_3_d;\n  wire  reg_4_rst;\n  wire  reg_4_clk;\n  wire  reg_4_en;\n  wire  reg_4_q;\n  wire  reg_4_d;\n  wire  T_8;\n  wire  T_9;\n  wire  T_10;\n  wire  T_11;\n  wire  T_12;\n  wire [1:0] T_13;\n  wire [1:0] T_14;\n  wire [2:0] T_15;\n  wire [4:0] T_16;\n  sirv_AsyncResetReg reg_0 (\n    .rst(reg_0_rst),\n    .clk(reg_0_clk),\n    .en(reg_0_en),\n    .q(reg_0_q),\n    .d(reg_0_d)\n  );\n  sirv_AsyncResetReg reg_1 (\n    .rst(reg_1_rst),\n    .clk(reg_1_clk),\n    .en(reg_1_en),\n    .q(reg_1_q),\n    .d(reg_1_d)\n  );\n  sirv_AsyncResetReg reg_2 (\n    .rst(reg_2_rst),\n    .clk(reg_2_clk),\n    .en(reg_2_en),\n    .q(reg_2_q),\n    .d(reg_2_d)\n  );\n  sirv_AsyncResetReg reg_3 (\n    .rst(reg_3_rst),\n    .clk(reg_3_clk),\n    .en(reg_3_en),\n    .q(reg_3_q),\n    .d(reg_3_d)\n  );\n  sirv_AsyncResetReg reg_4 (\n    .rst(reg_4_rst),\n    .clk(reg_4_clk),\n    .en(reg_4_en),\n    .q(reg_4_q),\n    .d(reg_4_d)\n  );\n  assign io_q = T_16;\n  assign reg_0_rst = reset;\n  assign reg_0_clk = clock;\n  assign reg_0_en = io_en;\n  assign reg_0_d = T_8;\n  assign reg_1_rst = reset;\n  assign reg_1_clk = clock;\n  assign reg_1_en = io_en;\n  assign reg_1_d = T_9;\n  assign reg_2_rst = reset;\n  assign reg_2_clk = clock;\n  assign reg_2_en = io_en;\n  assign reg_2_d = T_10;\n  assign reg_3_rst = reset;\n  assign reg_3_clk = clock;\n  assign reg_3_en = io_en;\n  assign reg_3_d = T_11;\n  assign reg_4_rst = reset;\n  assign reg_4_clk = clock;\n  assign reg_4_en = io_en;\n  assign reg_4_d = T_12;\n  assign T_8 = io_d[0];\n  assign T_9 = io_d[1];\n  assign T_10 = io_d[2];\n  assign T_11 = io_d[3];\n  assign T_12 = io_d[4];\n  assign T_13 = {reg_1_q,reg_0_q};\n  assign T_14 = {reg_4_q,reg_3_q};\n  assign T_15 = {T_14,reg_2_q};\n  assign T_16 = {T_15,T_13};\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_AsyncResetRegVec_129(\n  input   clock,\n  input   reset,\n  input  [19:0] io_d,\n  output [19:0] io_q,\n  input   io_en\n);\n  wire  reg_0_rst;\n  wire  reg_0_clk;\n  wire  reg_0_en;\n  wire  reg_0_q;\n  wire  reg_0_d;\n  wire  reg_1_rst;\n  wire  reg_1_clk;\n  wire  reg_1_en;\n  wire  reg_1_q;\n  wire  reg_1_d;\n  wire  reg_2_rst;\n  wire  reg_2_clk;\n  wire  reg_2_en;\n  wire  reg_2_q;\n  wire  reg_2_d;\n  wire  reg_3_rst;\n  wire  reg_3_clk;\n  wire  reg_3_en;\n  wire  reg_3_q;\n  wire  reg_3_d;\n  wire  reg_4_rst;\n  wire  reg_4_clk;\n  wire  reg_4_en;\n  wire  reg_4_q;\n  wire  reg_4_d;\n  wire  reg_5_rst;\n  wire  reg_5_clk;\n  wire  reg_5_en;\n  wire  reg_5_q;\n  wire  reg_5_d;\n  wire  reg_6_rst;\n  wire  reg_6_clk;\n  wire  reg_6_en;\n  wire  reg_6_q;\n  wire  reg_6_d;\n  wire  reg_7_rst;\n  wire  reg_7_clk;\n  wire  reg_7_en;\n  wire  reg_7_q;\n  wire  reg_7_d;\n  wire  reg_8_rst;\n  wire  reg_8_clk;\n  wire  reg_8_en;\n  wire  reg_8_q;\n  wire  reg_8_d;\n  wire  reg_9_rst;\n  wire  reg_9_clk;\n  wire  reg_9_en;\n  wire  reg_9_q;\n  wire  reg_9_d;\n  wire  reg_10_rst;\n  wire  reg_10_clk;\n  wire  reg_10_en;\n  wire  reg_10_q;\n  wire  reg_10_d;\n  wire  reg_11_rst;\n  wire  reg_11_clk;\n  wire  reg_11_en;\n  wire  reg_11_q;\n  wire  reg_11_d;\n  wire  reg_12_rst;\n  wire  reg_12_clk;\n  wire  reg_12_en;\n  wire  reg_12_q;\n  wire  reg_12_d;\n  wire  reg_13_rst;\n  wire  reg_13_clk;\n  wire  reg_13_en;\n  wire  reg_13_q;\n  wire  reg_13_d;\n  wire  reg_14_rst;\n  wire  reg_14_clk;\n  wire  reg_14_en;\n  wire  reg_14_q;\n  wire  reg_14_d;\n  wire  reg_15_rst;\n  wire  reg_15_clk;\n  wire  reg_15_en;\n  wire  reg_15_q;\n  wire  reg_15_d;\n  wire  reg_16_rst;\n  wire  reg_16_clk;\n  wire  reg_16_en;\n  wire  reg_16_q;\n  wire  reg_16_d;\n  wire  reg_17_rst;\n  wire  reg_17_clk;\n  wire  reg_17_en;\n  wire  reg_17_q;\n  wire  reg_17_d;\n  wire  reg_18_rst;\n  wire  reg_18_clk;\n  wire  reg_18_en;\n  wire  reg_18_q;\n  wire  reg_18_d;\n  wire  reg_19_rst;\n  wire  reg_19_clk;\n  wire  reg_19_en;\n  wire  reg_19_q;\n  wire  reg_19_d;\n  wire  T_8;\n  wire  T_9;\n  wire  T_10;\n  wire  T_11;\n  wire  T_12;\n  wire  T_13;\n  wire  T_14;\n  wire  T_15;\n  wire  T_16;\n  wire  T_17;\n  wire  T_18;\n  wire  T_19;\n  wire  T_20;\n  wire  T_21;\n  wire  T_22;\n  wire  T_23;\n  wire  T_24;\n  wire  T_25;\n  wire  T_26;\n  wire  T_27;\n  wire [1:0] T_28;\n  wire [1:0] T_29;\n  wire [2:0] T_30;\n  wire [4:0] T_31;\n  wire [1:0] T_32;\n  wire [1:0] T_33;\n  wire [2:0] T_34;\n  wire [4:0] T_35;\n  wire [9:0] T_36;\n  wire [1:0] T_37;\n  wire [1:0] T_38;\n  wire [2:0] T_39;\n  wire [4:0] T_40;\n  wire [1:0] T_41;\n  wire [1:0] T_42;\n  wire [2:0] T_43;\n  wire [4:0] T_44;\n  wire [9:0] T_45;\n  wire [19:0] T_46;\n  sirv_AsyncResetReg reg_0 (\n    .rst(reg_0_rst),\n    .clk(reg_0_clk),\n    .en(reg_0_en),\n    .q(reg_0_q),\n    .d(reg_0_d)\n  );\n  sirv_AsyncResetReg reg_1 (\n    .rst(reg_1_rst),\n    .clk(reg_1_clk),\n    .en(reg_1_en),\n    .q(reg_1_q),\n    .d(reg_1_d)\n  );\n  sirv_AsyncResetReg reg_2 (\n    .rst(reg_2_rst),\n    .clk(reg_2_clk),\n    .en(reg_2_en),\n    .q(reg_2_q),\n    .d(reg_2_d)\n  );\n  sirv_AsyncResetReg reg_3 (\n    .rst(reg_3_rst),\n    .clk(reg_3_clk),\n    .en(reg_3_en),\n    .q(reg_3_q),\n    .d(reg_3_d)\n  );\n  sirv_AsyncResetReg reg_4 (\n    .rst(reg_4_rst),\n    .clk(reg_4_clk),\n    .en(reg_4_en),\n    .q(reg_4_q),\n    .d(reg_4_d)\n  );\n  sirv_AsyncResetReg reg_5 (\n    .rst(reg_5_rst),\n    .clk(reg_5_clk),\n    .en(reg_5_en),\n    .q(reg_5_q),\n    .d(reg_5_d)\n  );\n  sirv_AsyncResetReg reg_6 (\n    .rst(reg_6_rst),\n    .clk(reg_6_clk),\n    .en(reg_6_en),\n    .q(reg_6_q),\n    .d(reg_6_d)\n  );\n  sirv_AsyncResetReg reg_7 (\n    .rst(reg_7_rst),\n    .clk(reg_7_clk),\n    .en(reg_7_en),\n    .q(reg_7_q),\n    .d(reg_7_d)\n  );\n  sirv_AsyncResetReg reg_8 (\n    .rst(reg_8_rst),\n    .clk(reg_8_clk),\n    .en(reg_8_en),\n    .q(reg_8_q),\n    .d(reg_8_d)\n  );\n  sirv_AsyncResetReg reg_9 (\n    .rst(reg_9_rst),\n    .clk(reg_9_clk),\n    .en(reg_9_en),\n    .q(reg_9_q),\n    .d(reg_9_d)\n  );\n  sirv_AsyncResetReg reg_10 (\n    .rst(reg_10_rst),\n    .clk(reg_10_clk),\n    .en(reg_10_en),\n    .q(reg_10_q),\n    .d(reg_10_d)\n  );\n  sirv_AsyncResetReg reg_11 (\n    .rst(reg_11_rst),\n    .clk(reg_11_clk),\n    .en(reg_11_en),\n    .q(reg_11_q),\n    .d(reg_11_d)\n  );\n  sirv_AsyncResetReg reg_12 (\n    .rst(reg_12_rst),\n    .clk(reg_12_clk),\n    .en(reg_12_en),\n    .q(reg_12_q),\n    .d(reg_12_d)\n  );\n  sirv_AsyncResetReg reg_13 (\n    .rst(reg_13_rst),\n    .clk(reg_13_clk),\n    .en(reg_13_en),\n    .q(reg_13_q),\n    .d(reg_13_d)\n  );\n  sirv_AsyncResetReg reg_14 (\n    .rst(reg_14_rst),\n    .clk(reg_14_clk),\n    .en(reg_14_en),\n    .q(reg_14_q),\n    .d(reg_14_d)\n  );\n  sirv_AsyncResetReg reg_15 (\n    .rst(reg_15_rst),\n    .clk(reg_15_clk),\n    .en(reg_15_en),\n    .q(reg_15_q),\n    .d(reg_15_d)\n  );\n  sirv_AsyncResetReg reg_16 (\n    .rst(reg_16_rst),\n    .clk(reg_16_clk),\n    .en(reg_16_en),\n    .q(reg_16_q),\n    .d(reg_16_d)\n  );\n  sirv_AsyncResetReg reg_17 (\n    .rst(reg_17_rst),\n    .clk(reg_17_clk),\n    .en(reg_17_en),\n    .q(reg_17_q),\n    .d(reg_17_d)\n  );\n  sirv_AsyncResetReg reg_18 (\n    .rst(reg_18_rst),\n    .clk(reg_18_clk),\n    .en(reg_18_en),\n    .q(reg_18_q),\n    .d(reg_18_d)\n  );\n  sirv_AsyncResetReg reg_19 (\n    .rst(reg_19_rst),\n    .clk(reg_19_clk),\n    .en(reg_19_en),\n    .q(reg_19_q),\n    .d(reg_19_d)\n  );\n  assign io_q = T_46;\n  assign reg_0_rst = reset;\n  assign reg_0_clk = clock;\n  assign reg_0_en = io_en;\n  assign reg_0_d = T_8;\n  assign reg_1_rst = reset;\n  assign reg_1_clk = clock;\n  assign reg_1_en = io_en;\n  assign reg_1_d = T_9;\n  assign reg_2_rst = reset;\n  assign reg_2_clk = clock;\n  assign reg_2_en = io_en;\n  assign reg_2_d = T_10;\n  assign reg_3_rst = reset;\n  assign reg_3_clk = clock;\n  assign reg_3_en = io_en;\n  assign reg_3_d = T_11;\n  assign reg_4_rst = reset;\n  assign reg_4_clk = clock;\n  assign reg_4_en = io_en;\n  assign reg_4_d = T_12;\n  assign reg_5_rst = reset;\n  assign reg_5_clk = clock;\n  assign reg_5_en = io_en;\n  assign reg_5_d = T_13;\n  assign reg_6_rst = reset;\n  assign reg_6_clk = clock;\n  assign reg_6_en = io_en;\n  assign reg_6_d = T_14;\n  assign reg_7_rst = reset;\n  assign reg_7_clk = clock;\n  assign reg_7_en = io_en;\n  assign reg_7_d = T_15;\n  assign reg_8_rst = reset;\n  assign reg_8_clk = clock;\n  assign reg_8_en = io_en;\n  assign reg_8_d = T_16;\n  assign reg_9_rst = reset;\n  assign reg_9_clk = clock;\n  assign reg_9_en = io_en;\n  assign reg_9_d = T_17;\n  assign reg_10_rst = reset;\n  assign reg_10_clk = clock;\n  assign reg_10_en = io_en;\n  assign reg_10_d = T_18;\n  assign reg_11_rst = reset;\n  assign reg_11_clk = clock;\n  assign reg_11_en = io_en;\n  assign reg_11_d = T_19;\n  assign reg_12_rst = reset;\n  assign reg_12_clk = clock;\n  assign reg_12_en = io_en;\n  assign reg_12_d = T_20;\n  assign reg_13_rst = reset;\n  assign reg_13_clk = clock;\n  assign reg_13_en = io_en;\n  assign reg_13_d = T_21;\n  assign reg_14_rst = reset;\n  assign reg_14_clk = clock;\n  assign reg_14_en = io_en;\n  assign reg_14_d = T_22;\n  assign reg_15_rst = reset;\n  assign reg_15_clk = clock;\n  assign reg_15_en = io_en;\n  assign reg_15_d = T_23;\n  assign reg_16_rst = reset;\n  assign reg_16_clk = clock;\n  assign reg_16_en = io_en;\n  assign reg_16_d = T_24;\n  assign reg_17_rst = reset;\n  assign reg_17_clk = clock;\n  assign reg_17_en = io_en;\n  assign reg_17_d = T_25;\n  assign reg_18_rst = reset;\n  assign reg_18_clk = clock;\n  assign reg_18_en = io_en;\n  assign reg_18_d = T_26;\n  assign reg_19_rst = reset;\n  assign reg_19_clk = clock;\n  assign reg_19_en = io_en;\n  assign reg_19_d = T_27;\n  assign T_8 = io_d[0];\n  assign T_9 = io_d[1];\n  assign T_10 = io_d[2];\n  assign T_11 = io_d[3];\n  assign T_12 = io_d[4];\n  assign T_13 = io_d[5];\n  assign T_14 = io_d[6];\n  assign T_15 = io_d[7];\n  assign T_16 = io_d[8];\n  assign T_17 = io_d[9];\n  assign T_18 = io_d[10];\n  assign T_19 = io_d[11];\n  assign T_20 = io_d[12];\n  assign T_21 = io_d[13];\n  assign T_22 = io_d[14];\n  assign T_23 = io_d[15];\n  assign T_24 = io_d[16];\n  assign T_25 = io_d[17];\n  assign T_26 = io_d[18];\n  assign T_27 = io_d[19];\n  assign T_28 = {reg_1_q,reg_0_q};\n  assign T_29 = {reg_4_q,reg_3_q};\n  assign T_30 = {T_29,reg_2_q};\n  assign T_31 = {T_30,T_28};\n  assign T_32 = {reg_6_q,reg_5_q};\n  assign T_33 = {reg_9_q,reg_8_q};\n  assign T_34 = {T_33,reg_7_q};\n  assign T_35 = {T_34,T_32};\n  assign T_36 = {T_35,T_31};\n  assign T_37 = {reg_11_q,reg_10_q};\n  assign T_38 = {reg_14_q,reg_13_q};\n  assign T_39 = {T_38,reg_12_q};\n  assign T_40 = {T_39,T_37};\n  assign T_41 = {reg_16_q,reg_15_q};\n  assign T_42 = {reg_19_q,reg_18_q};\n  assign T_43 = {T_42,reg_17_q};\n  assign T_44 = {T_43,T_41};\n  assign T_45 = {T_44,T_40};\n  assign T_46 = {T_45,T_36};\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_AsyncResetRegVec_36(\n  input   clock,\n  input   reset,\n  input  [2:0] io_d,\n  output [2:0] io_q,\n  input   io_en\n);\n  wire  reg_0_rst;\n  wire  reg_0_clk;\n  wire  reg_0_en;\n  wire  reg_0_q;\n  wire  reg_0_d;\n  wire  reg_1_rst;\n  wire  reg_1_clk;\n  wire  reg_1_en;\n  wire  reg_1_q;\n  wire  reg_1_d;\n  wire  reg_2_rst;\n  wire  reg_2_clk;\n  wire  reg_2_en;\n  wire  reg_2_q;\n  wire  reg_2_d;\n  wire  T_8;\n  wire  T_9;\n  wire  T_10;\n  wire [1:0] T_11;\n  wire [2:0] T_12;\n  sirv_AsyncResetReg reg_0 (\n    .rst(reg_0_rst),\n    .clk(reg_0_clk),\n    .en(reg_0_en),\n    .q(reg_0_q),\n    .d(reg_0_d)\n  );\n  sirv_AsyncResetReg reg_1 (\n    .rst(reg_1_rst),\n    .clk(reg_1_clk),\n    .en(reg_1_en),\n    .q(reg_1_q),\n    .d(reg_1_d)\n  );\n  sirv_AsyncResetReg reg_2 (\n    .rst(reg_2_rst),\n    .clk(reg_2_clk),\n    .en(reg_2_en),\n    .q(reg_2_q),\n    .d(reg_2_d)\n  );\n  assign io_q = T_12;\n  assign reg_0_rst = reset;\n  assign reg_0_clk = clock;\n  assign reg_0_en = io_en;\n  assign reg_0_d = T_8;\n  assign reg_1_rst = reset;\n  assign reg_1_clk = clock;\n  assign reg_1_en = io_en;\n  assign reg_1_d = T_9;\n  assign reg_2_rst = reset;\n  assign reg_2_clk = clock;\n  assign reg_2_en = io_en;\n  assign reg_2_d = T_10;\n  assign T_8 = io_d[0];\n  assign T_9 = io_d[1];\n  assign T_10 = io_d[2];\n  assign T_11 = {reg_2_q,reg_1_q};\n  assign T_12 = {T_11,reg_0_q};\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_AsyncResetRegVec_67(\n  input   clock,\n  input   reset,\n  input  [31:0] io_d,\n  output [31:0] io_q,\n  input   io_en\n);\n  wire  reg_0_rst;\n  wire  reg_0_clk;\n  wire  reg_0_en;\n  wire  reg_0_q;\n  wire  reg_0_d;\n  wire  reg_1_rst;\n  wire  reg_1_clk;\n  wire  reg_1_en;\n  wire  reg_1_q;\n  wire  reg_1_d;\n  wire  reg_2_rst;\n  wire  reg_2_clk;\n  wire  reg_2_en;\n  wire  reg_2_q;\n  wire  reg_2_d;\n  wire  reg_3_rst;\n  wire  reg_3_clk;\n  wire  reg_3_en;\n  wire  reg_3_q;\n  wire  reg_3_d;\n  wire  reg_4_rst;\n  wire  reg_4_clk;\n  wire  reg_4_en;\n  wire  reg_4_q;\n  wire  reg_4_d;\n  wire  reg_5_rst;\n  wire  reg_5_clk;\n  wire  reg_5_en;\n  wire  reg_5_q;\n  wire  reg_5_d;\n  wire  reg_6_rst;\n  wire  reg_6_clk;\n  wire  reg_6_en;\n  wire  reg_6_q;\n  wire  reg_6_d;\n  wire  reg_7_rst;\n  wire  reg_7_clk;\n  wire  reg_7_en;\n  wire  reg_7_q;\n  wire  reg_7_d;\n  wire  reg_8_rst;\n  wire  reg_8_clk;\n  wire  reg_8_en;\n  wire  reg_8_q;\n  wire  reg_8_d;\n  wire  reg_9_rst;\n  wire  reg_9_clk;\n  wire  reg_9_en;\n  wire  reg_9_q;\n  wire  reg_9_d;\n  wire  reg_10_rst;\n  wire  reg_10_clk;\n  wire  reg_10_en;\n  wire  reg_10_q;\n  wire  reg_10_d;\n  wire  reg_11_rst;\n  wire  reg_11_clk;\n  wire  reg_11_en;\n  wire  reg_11_q;\n  wire  reg_11_d;\n  wire  reg_12_rst;\n  wire  reg_12_clk;\n  wire  reg_12_en;\n  wire  reg_12_q;\n  wire  reg_12_d;\n  wire  reg_13_rst;\n  wire  reg_13_clk;\n  wire  reg_13_en;\n  wire  reg_13_q;\n  wire  reg_13_d;\n  wire  reg_14_rst;\n  wire  reg_14_clk;\n  wire  reg_14_en;\n  wire  reg_14_q;\n  wire  reg_14_d;\n  wire  reg_15_rst;\n  wire  reg_15_clk;\n  wire  reg_15_en;\n  wire  reg_15_q;\n  wire  reg_15_d;\n  wire  reg_16_rst;\n  wire  reg_16_clk;\n  wire  reg_16_en;\n  wire  reg_16_q;\n  wire  reg_16_d;\n  wire  reg_17_rst;\n  wire  reg_17_clk;\n  wire  reg_17_en;\n  wire  reg_17_q;\n  wire  reg_17_d;\n  wire  reg_18_rst;\n  wire  reg_18_clk;\n  wire  reg_18_en;\n  wire  reg_18_q;\n  wire  reg_18_d;\n  wire  reg_19_rst;\n  wire  reg_19_clk;\n  wire  reg_19_en;\n  wire  reg_19_q;\n  wire  reg_19_d;\n  wire  reg_20_rst;\n  wire  reg_20_clk;\n  wire  reg_20_en;\n  wire  reg_20_q;\n  wire  reg_20_d;\n  wire  reg_21_rst;\n  wire  reg_21_clk;\n  wire  reg_21_en;\n  wire  reg_21_q;\n  wire  reg_21_d;\n  wire  reg_22_rst;\n  wire  reg_22_clk;\n  wire  reg_22_en;\n  wire  reg_22_q;\n  wire  reg_22_d;\n  wire  reg_23_rst;\n  wire  reg_23_clk;\n  wire  reg_23_en;\n  wire  reg_23_q;\n  wire  reg_23_d;\n  wire  reg_24_rst;\n  wire  reg_24_clk;\n  wire  reg_24_en;\n  wire  reg_24_q;\n  wire  reg_24_d;\n  wire  reg_25_rst;\n  wire  reg_25_clk;\n  wire  reg_25_en;\n  wire  reg_25_q;\n  wire  reg_25_d;\n  wire  reg_26_rst;\n  wire  reg_26_clk;\n  wire  reg_26_en;\n  wire  reg_26_q;\n  wire  reg_26_d;\n  wire  reg_27_rst;\n  wire  reg_27_clk;\n  wire  reg_27_en;\n  wire  reg_27_q;\n  wire  reg_27_d;\n  wire  reg_28_rst;\n  wire  reg_28_clk;\n  wire  reg_28_en;\n  wire  reg_28_q;\n  wire  reg_28_d;\n  wire  reg_29_rst;\n  wire  reg_29_clk;\n  wire  reg_29_en;\n  wire  reg_29_q;\n  wire  reg_29_d;\n  wire  reg_30_rst;\n  wire  reg_30_clk;\n  wire  reg_30_en;\n  wire  reg_30_q;\n  wire  reg_30_d;\n  wire  reg_31_rst;\n  wire  reg_31_clk;\n  wire  reg_31_en;\n  wire  reg_31_q;\n  wire  reg_31_d;\n  wire  T_8;\n  wire  T_9;\n  wire  T_10;\n  wire  T_11;\n  wire  T_12;\n  wire  T_13;\n  wire  T_14;\n  wire  T_15;\n  wire  T_16;\n  wire  T_17;\n  wire  T_18;\n  wire  T_19;\n  wire  T_20;\n  wire  T_21;\n  wire  T_22;\n  wire  T_23;\n  wire  T_24;\n  wire  T_25;\n  wire  T_26;\n  wire  T_27;\n  wire  T_28;\n  wire  T_29;\n  wire  T_30;\n  wire  T_31;\n  wire  T_32;\n  wire  T_33;\n  wire  T_34;\n  wire  T_35;\n  wire  T_36;\n  wire  T_37;\n  wire  T_38;\n  wire  T_39;\n  wire [1:0] T_40;\n  wire [1:0] T_41;\n  wire [3:0] T_42;\n  wire [1:0] T_43;\n  wire [1:0] T_44;\n  wire [3:0] T_45;\n  wire [7:0] T_46;\n  wire [1:0] T_47;\n  wire [1:0] T_48;\n  wire [3:0] T_49;\n  wire [1:0] T_50;\n  wire [1:0] T_51;\n  wire [3:0] T_52;\n  wire [7:0] T_53;\n  wire [15:0] T_54;\n  wire [1:0] T_55;\n  wire [1:0] T_56;\n  wire [3:0] T_57;\n  wire [1:0] T_58;\n  wire [1:0] T_59;\n  wire [3:0] T_60;\n  wire [7:0] T_61;\n  wire [1:0] T_62;\n  wire [1:0] T_63;\n  wire [3:0] T_64;\n  wire [1:0] T_65;\n  wire [1:0] T_66;\n  wire [3:0] T_67;\n  wire [7:0] T_68;\n  wire [15:0] T_69;\n  wire [31:0] T_70;\n  sirv_AsyncResetReg u_reg_0 (\n    .rst(reg_0_rst),\n    .clk(reg_0_clk),\n    .en(reg_0_en),\n    .q(reg_0_q),\n    .d(reg_0_d)\n  );\n  sirv_AsyncResetReg u_reg_1 (\n    .rst(reg_1_rst),\n    .clk(reg_1_clk),\n    .en(reg_1_en),\n    .q(reg_1_q),\n    .d(reg_1_d)\n  );\n  sirv_AsyncResetReg u_reg_2 (\n    .rst(reg_2_rst),\n    .clk(reg_2_clk),\n    .en(reg_2_en),\n    .q(reg_2_q),\n    .d(reg_2_d)\n  );\n  sirv_AsyncResetReg u_reg_3 (\n    .rst(reg_3_rst),\n    .clk(reg_3_clk),\n    .en(reg_3_en),\n    .q(reg_3_q),\n    .d(reg_3_d)\n  );\n  sirv_AsyncResetReg u_reg_4 (\n    .rst(reg_4_rst),\n    .clk(reg_4_clk),\n    .en(reg_4_en),\n    .q(reg_4_q),\n    .d(reg_4_d)\n  );\n  sirv_AsyncResetReg u_reg_5 (\n    .rst(reg_5_rst),\n    .clk(reg_5_clk),\n    .en(reg_5_en),\n    .q(reg_5_q),\n    .d(reg_5_d)\n  );\n  sirv_AsyncResetReg u_reg_6 (\n    .rst(reg_6_rst),\n    .clk(reg_6_clk),\n    .en(reg_6_en),\n    .q(reg_6_q),\n    .d(reg_6_d)\n  );\n  sirv_AsyncResetReg u_reg_7 (\n    .rst(reg_7_rst),\n    .clk(reg_7_clk),\n    .en(reg_7_en),\n    .q(reg_7_q),\n    .d(reg_7_d)\n  );\n  sirv_AsyncResetReg u_reg_8 (\n    .rst(reg_8_rst),\n    .clk(reg_8_clk),\n    .en(reg_8_en),\n    .q(reg_8_q),\n    .d(reg_8_d)\n  );\n  sirv_AsyncResetReg u_reg_9 (\n    .rst(reg_9_rst),\n    .clk(reg_9_clk),\n    .en(reg_9_en),\n    .q(reg_9_q),\n    .d(reg_9_d)\n  );\n  sirv_AsyncResetReg u_reg_10 (\n    .rst(reg_10_rst),\n    .clk(reg_10_clk),\n    .en(reg_10_en),\n    .q(reg_10_q),\n    .d(reg_10_d)\n  );\n  sirv_AsyncResetReg u_reg_11 (\n    .rst(reg_11_rst),\n    .clk(reg_11_clk),\n    .en(reg_11_en),\n    .q(reg_11_q),\n    .d(reg_11_d)\n  );\n  sirv_AsyncResetReg u_reg_12 (\n    .rst(reg_12_rst),\n    .clk(reg_12_clk),\n    .en(reg_12_en),\n    .q(reg_12_q),\n    .d(reg_12_d)\n  );\n  sirv_AsyncResetReg u_reg_13 (\n    .rst(reg_13_rst),\n    .clk(reg_13_clk),\n    .en(reg_13_en),\n    .q(reg_13_q),\n    .d(reg_13_d)\n  );\n  sirv_AsyncResetReg u_reg_14 (\n    .rst(reg_14_rst),\n    .clk(reg_14_clk),\n    .en(reg_14_en),\n    .q(reg_14_q),\n    .d(reg_14_d)\n  );\n  sirv_AsyncResetReg u_reg_15 (\n    .rst(reg_15_rst),\n    .clk(reg_15_clk),\n    .en(reg_15_en),\n    .q(reg_15_q),\n    .d(reg_15_d)\n  );\n  sirv_AsyncResetReg u_reg_16 (\n    .rst(reg_16_rst),\n    .clk(reg_16_clk),\n    .en(reg_16_en),\n    .q(reg_16_q),\n    .d(reg_16_d)\n  );\n  sirv_AsyncResetReg u_reg_17 (\n    .rst(reg_17_rst),\n    .clk(reg_17_clk),\n    .en(reg_17_en),\n    .q(reg_17_q),\n    .d(reg_17_d)\n  );\n  sirv_AsyncResetReg u_reg_18 (\n    .rst(reg_18_rst),\n    .clk(reg_18_clk),\n    .en(reg_18_en),\n    .q(reg_18_q),\n    .d(reg_18_d)\n  );\n  sirv_AsyncResetReg u_reg_19 (\n    .rst(reg_19_rst),\n    .clk(reg_19_clk),\n    .en(reg_19_en),\n    .q(reg_19_q),\n    .d(reg_19_d)\n  );\n  sirv_AsyncResetReg u_reg_20 (\n    .rst(reg_20_rst),\n    .clk(reg_20_clk),\n    .en(reg_20_en),\n    .q(reg_20_q),\n    .d(reg_20_d)\n  );\n  sirv_AsyncResetReg u_reg_21 (\n    .rst(reg_21_rst),\n    .clk(reg_21_clk),\n    .en(reg_21_en),\n    .q(reg_21_q),\n    .d(reg_21_d)\n  );\n  sirv_AsyncResetReg u_reg_22 (\n    .rst(reg_22_rst),\n    .clk(reg_22_clk),\n    .en(reg_22_en),\n    .q(reg_22_q),\n    .d(reg_22_d)\n  );\n  sirv_AsyncResetReg u_reg_23 (\n    .rst(reg_23_rst),\n    .clk(reg_23_clk),\n    .en(reg_23_en),\n    .q(reg_23_q),\n    .d(reg_23_d)\n  );\n  sirv_AsyncResetReg u_reg_24 (\n    .rst(reg_24_rst),\n    .clk(reg_24_clk),\n    .en(reg_24_en),\n    .q(reg_24_q),\n    .d(reg_24_d)\n  );\n  sirv_AsyncResetReg u_reg_25 (\n    .rst(reg_25_rst),\n    .clk(reg_25_clk),\n    .en(reg_25_en),\n    .q(reg_25_q),\n    .d(reg_25_d)\n  );\n  sirv_AsyncResetReg u_reg_26 (\n    .rst(reg_26_rst),\n    .clk(reg_26_clk),\n    .en(reg_26_en),\n    .q(reg_26_q),\n    .d(reg_26_d)\n  );\n  sirv_AsyncResetReg u_reg_27 (\n    .rst(reg_27_rst),\n    .clk(reg_27_clk),\n    .en(reg_27_en),\n    .q(reg_27_q),\n    .d(reg_27_d)\n  );\n  sirv_AsyncResetReg u_reg_28 (\n    .rst(reg_28_rst),\n    .clk(reg_28_clk),\n    .en(reg_28_en),\n    .q(reg_28_q),\n    .d(reg_28_d)\n  );\n  sirv_AsyncResetReg u_reg_29 (\n    .rst(reg_29_rst),\n    .clk(reg_29_clk),\n    .en(reg_29_en),\n    .q(reg_29_q),\n    .d(reg_29_d)\n  );\n  sirv_AsyncResetReg u_reg_30 (\n    .rst(reg_30_rst),\n    .clk(reg_30_clk),\n    .en(reg_30_en),\n    .q(reg_30_q),\n    .d(reg_30_d)\n  );\n  sirv_AsyncResetReg u_reg_31 (\n    .rst(reg_31_rst),\n    .clk(reg_31_clk),\n    .en(reg_31_en),\n    .q(reg_31_q),\n    .d(reg_31_d)\n  );\n  assign io_q = T_70;\n  assign reg_0_rst = reset;\n  assign reg_0_clk = clock;\n  assign reg_0_en = io_en;\n  assign reg_0_d = T_8;\n  assign reg_1_rst = reset;\n  assign reg_1_clk = clock;\n  assign reg_1_en = io_en;\n  assign reg_1_d = T_9;\n  assign reg_2_rst = reset;\n  assign reg_2_clk = clock;\n  assign reg_2_en = io_en;\n  assign reg_2_d = T_10;\n  assign reg_3_rst = reset;\n  assign reg_3_clk = clock;\n  assign reg_3_en = io_en;\n  assign reg_3_d = T_11;\n  assign reg_4_rst = reset;\n  assign reg_4_clk = clock;\n  assign reg_4_en = io_en;\n  assign reg_4_d = T_12;\n  assign reg_5_rst = reset;\n  assign reg_5_clk = clock;\n  assign reg_5_en = io_en;\n  assign reg_5_d = T_13;\n  assign reg_6_rst = reset;\n  assign reg_6_clk = clock;\n  assign reg_6_en = io_en;\n  assign reg_6_d = T_14;\n  assign reg_7_rst = reset;\n  assign reg_7_clk = clock;\n  assign reg_7_en = io_en;\n  assign reg_7_d = T_15;\n  assign reg_8_rst = reset;\n  assign reg_8_clk = clock;\n  assign reg_8_en = io_en;\n  assign reg_8_d = T_16;\n  assign reg_9_rst = reset;\n  assign reg_9_clk = clock;\n  assign reg_9_en = io_en;\n  assign reg_9_d = T_17;\n  assign reg_10_rst = reset;\n  assign reg_10_clk = clock;\n  assign reg_10_en = io_en;\n  assign reg_10_d = T_18;\n  assign reg_11_rst = reset;\n  assign reg_11_clk = clock;\n  assign reg_11_en = io_en;\n  assign reg_11_d = T_19;\n  assign reg_12_rst = reset;\n  assign reg_12_clk = clock;\n  assign reg_12_en = io_en;\n  assign reg_12_d = T_20;\n  assign reg_13_rst = reset;\n  assign reg_13_clk = clock;\n  assign reg_13_en = io_en;\n  assign reg_13_d = T_21;\n  assign reg_14_rst = reset;\n  assign reg_14_clk = clock;\n  assign reg_14_en = io_en;\n  assign reg_14_d = T_22;\n  assign reg_15_rst = reset;\n  assign reg_15_clk = clock;\n  assign reg_15_en = io_en;\n  assign reg_15_d = T_23;\n  assign reg_16_rst = reset;\n  assign reg_16_clk = clock;\n  assign reg_16_en = io_en;\n  assign reg_16_d = T_24;\n  assign reg_17_rst = reset;\n  assign reg_17_clk = clock;\n  assign reg_17_en = io_en;\n  assign reg_17_d = T_25;\n  assign reg_18_rst = reset;\n  assign reg_18_clk = clock;\n  assign reg_18_en = io_en;\n  assign reg_18_d = T_26;\n  assign reg_19_rst = reset;\n  assign reg_19_clk = clock;\n  assign reg_19_en = io_en;\n  assign reg_19_d = T_27;\n  assign reg_20_rst = reset;\n  assign reg_20_clk = clock;\n  assign reg_20_en = io_en;\n  assign reg_20_d = T_28;\n  assign reg_21_rst = reset;\n  assign reg_21_clk = clock;\n  assign reg_21_en = io_en;\n  assign reg_21_d = T_29;\n  assign reg_22_rst = reset;\n  assign reg_22_clk = clock;\n  assign reg_22_en = io_en;\n  assign reg_22_d = T_30;\n  assign reg_23_rst = reset;\n  assign reg_23_clk = clock;\n  assign reg_23_en = io_en;\n  assign reg_23_d = T_31;\n  assign reg_24_rst = reset;\n  assign reg_24_clk = clock;\n  assign reg_24_en = io_en;\n  assign reg_24_d = T_32;\n  assign reg_25_rst = reset;\n  assign reg_25_clk = clock;\n  assign reg_25_en = io_en;\n  assign reg_25_d = T_33;\n  assign reg_26_rst = reset;\n  assign reg_26_clk = clock;\n  assign reg_26_en = io_en;\n  assign reg_26_d = T_34;\n  assign reg_27_rst = reset;\n  assign reg_27_clk = clock;\n  assign reg_27_en = io_en;\n  assign reg_27_d = T_35;\n  assign reg_28_rst = reset;\n  assign reg_28_clk = clock;\n  assign reg_28_en = io_en;\n  assign reg_28_d = T_36;\n  assign reg_29_rst = reset;\n  assign reg_29_clk = clock;\n  assign reg_29_en = io_en;\n  assign reg_29_d = T_37;\n  assign reg_30_rst = reset;\n  assign reg_30_clk = clock;\n  assign reg_30_en = io_en;\n  assign reg_30_d = T_38;\n  assign reg_31_rst = reset;\n  assign reg_31_clk = clock;\n  assign reg_31_en = io_en;\n  assign reg_31_d = T_39;\n  assign T_8 = io_d[0];\n  assign T_9 = io_d[1];\n  assign T_10 = io_d[2];\n  assign T_11 = io_d[3];\n  assign T_12 = io_d[4];\n  assign T_13 = io_d[5];\n  assign T_14 = io_d[6];\n  assign T_15 = io_d[7];\n  assign T_16 = io_d[8];\n  assign T_17 = io_d[9];\n  assign T_18 = io_d[10];\n  assign T_19 = io_d[11];\n  assign T_20 = io_d[12];\n  assign T_21 = io_d[13];\n  assign T_22 = io_d[14];\n  assign T_23 = io_d[15];\n  assign T_24 = io_d[16];\n  assign T_25 = io_d[17];\n  assign T_26 = io_d[18];\n  assign T_27 = io_d[19];\n  assign T_28 = io_d[20];\n  assign T_29 = io_d[21];\n  assign T_30 = io_d[22];\n  assign T_31 = io_d[23];\n  assign T_32 = io_d[24];\n  assign T_33 = io_d[25];\n  assign T_34 = io_d[26];\n  assign T_35 = io_d[27];\n  assign T_36 = io_d[28];\n  assign T_37 = io_d[29];\n  assign T_38 = io_d[30];\n  assign T_39 = io_d[31];\n  assign T_40 = {reg_1_q,reg_0_q};\n  assign T_41 = {reg_3_q,reg_2_q};\n  assign T_42 = {T_41,T_40};\n  assign T_43 = {reg_5_q,reg_4_q};\n  assign T_44 = {reg_7_q,reg_6_q};\n  assign T_45 = {T_44,T_43};\n  assign T_46 = {T_45,T_42};\n  assign T_47 = {reg_9_q,reg_8_q};\n  assign T_48 = {reg_11_q,reg_10_q};\n  assign T_49 = {T_48,T_47};\n  assign T_50 = {reg_13_q,reg_12_q};\n  assign T_51 = {reg_15_q,reg_14_q};\n  assign T_52 = {T_51,T_50};\n  assign T_53 = {T_52,T_49};\n  assign T_54 = {T_53,T_46};\n  assign T_55 = {reg_17_q,reg_16_q};\n  assign T_56 = {reg_19_q,reg_18_q};\n  assign T_57 = {T_56,T_55};\n  assign T_58 = {reg_21_q,reg_20_q};\n  assign T_59 = {reg_23_q,reg_22_q};\n  assign T_60 = {T_59,T_58};\n  assign T_61 = {T_60,T_57};\n  assign T_62 = {reg_25_q,reg_24_q};\n  assign T_63 = {reg_27_q,reg_26_q};\n  assign T_64 = {T_63,T_62};\n  assign T_65 = {reg_29_q,reg_28_q};\n  assign T_66 = {reg_31_q,reg_30_q};\n  assign T_67 = {T_66,T_65};\n  assign T_68 = {T_67,T_64};\n  assign T_69 = {T_68,T_61};\n  assign T_70 = {T_69,T_54};\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_clint(\n  input   clock,\n  input   reset,\n  output  io_in_0_a_ready,\n  input   io_in_0_a_valid,\n  input  [2:0] io_in_0_a_bits_opcode,\n  input  [2:0] io_in_0_a_bits_param,\n  input  [2:0] io_in_0_a_bits_size,\n  input  [4:0] io_in_0_a_bits_source,\n  input  [25:0] io_in_0_a_bits_address,\n  input  [3:0] io_in_0_a_bits_mask,\n  input  [31:0] io_in_0_a_bits_data,\n  input   io_in_0_b_ready,\n  output  io_in_0_b_valid,\n  output [2:0] io_in_0_b_bits_opcode,\n  output [1:0] io_in_0_b_bits_param,\n  output [2:0] io_in_0_b_bits_size,\n  output [4:0] io_in_0_b_bits_source,\n  output [25:0] io_in_0_b_bits_address,\n  output [3:0] io_in_0_b_bits_mask,\n  output [31:0] io_in_0_b_bits_data,\n  output  io_in_0_c_ready,\n  input   io_in_0_c_valid,\n  input  [2:0] io_in_0_c_bits_opcode,\n  input  [2:0] io_in_0_c_bits_param,\n  input  [2:0] io_in_0_c_bits_size,\n  input  [4:0] io_in_0_c_bits_source,\n  input  [25:0] io_in_0_c_bits_address,\n  input  [31:0] io_in_0_c_bits_data,\n  input   io_in_0_c_bits_error,\n  input   io_in_0_d_ready,\n  output  io_in_0_d_valid,\n  output [2:0] io_in_0_d_bits_opcode,\n  output [1:0] io_in_0_d_bits_param,\n  output [2:0] io_in_0_d_bits_size,\n  output [4:0] io_in_0_d_bits_source,\n  output  io_in_0_d_bits_sink,\n  output [1:0] io_in_0_d_bits_addr_lo,\n  output [31:0] io_in_0_d_bits_data,\n  output  io_in_0_d_bits_error,\n  output  io_in_0_e_ready,\n  input   io_in_0_e_valid,\n  input   io_in_0_e_bits_sink,\n  output  io_tiles_0_mtip,\n  output  io_tiles_0_msip,\n  input   io_rtcTick\n);\n  reg [31:0] time_0;\n  reg [31:0] GEN_62;\n  reg [31:0] time_1;\n  reg [31:0] GEN_63;\n  wire [63:0] T_904;\n  wire [64:0] T_906;\n  wire [63:0] T_907;\n  wire [31:0] T_909;\n  wire [63:0] GEN_6;\n  wire [31:0] GEN_7;\n  reg [31:0] timecmp_0_0;\n  reg [31:0] GEN_64;\n  reg [31:0] timecmp_0_1;\n  reg [31:0] GEN_65;\n  reg  ipi_0;\n  reg [31:0] GEN_66;\n  wire [63:0] T_915;\n  wire  T_916;\n  wire  T_940_ready;\n  wire  T_940_valid;\n  wire  T_940_bits_read;\n  wire [13:0] T_940_bits_index;\n  wire [31:0] T_940_bits_data;\n  wire [3:0] T_940_bits_mask;\n  wire [9:0] T_940_bits_extra;\n  wire  T_957;\n  wire [23:0] T_958;\n  wire [1:0] T_959;\n  wire [6:0] T_960;\n  wire [9:0] T_961;\n  wire  T_979_ready;\n  wire  T_979_valid;\n  wire  T_979_bits_read;\n  wire [31:0] T_979_bits_data;\n  wire [9:0] T_979_bits_extra;\n  wire  T_1015_ready;\n  wire  T_1015_valid;\n  wire  T_1015_bits_read;\n  wire [13:0] T_1015_bits_index;\n  wire [31:0] T_1015_bits_data;\n  wire [3:0] T_1015_bits_mask;\n  wire [9:0] T_1015_bits_extra;\n  wire  T_1058_0;\n  wire  T_1058_1;\n  wire  T_1058_2;\n  wire  T_1058_3;\n  wire  T_1058_4;\n  wire  T_1063_0;\n  wire  T_1063_1;\n  wire  T_1063_2;\n  wire  T_1063_3;\n  wire  T_1063_4;\n  wire  T_1068_0;\n  wire  T_1068_1;\n  wire  T_1068_2;\n  wire  T_1068_3;\n  wire  T_1068_4;\n  wire  T_1073_0;\n  wire  T_1073_1;\n  wire  T_1073_2;\n  wire  T_1073_3;\n  wire  T_1073_4;\n  wire  T_1078_0;\n  wire  T_1078_1;\n  wire  T_1078_2;\n  wire  T_1078_3;\n  wire  T_1078_4;\n  wire  T_1083_0;\n  wire  T_1083_1;\n  wire  T_1083_2;\n  wire  T_1083_3;\n  wire  T_1083_4;\n  wire  T_1088_0;\n  wire  T_1088_1;\n  wire  T_1088_2;\n  wire  T_1088_3;\n  wire  T_1088_4;\n  wire  T_1093_0;\n  wire  T_1093_1;\n  wire  T_1093_2;\n  wire  T_1093_3;\n  wire  T_1093_4;\n  wire  T_1135;\n  wire  T_1136;\n  wire  T_1137;\n  wire  T_1138;\n  wire [7:0] T_1142;\n  wire [7:0] T_1146;\n  wire [7:0] T_1150;\n  wire [7:0] T_1154;\n  wire [15:0] T_1155;\n  wire [15:0] T_1156;\n  wire [31:0] T_1157;\n  wire [31:0] T_1185;\n  wire  T_1187;\n  wire  T_1200;\n  wire [31:0] GEN_8;\n  wire [31:0] T_1219;\n  wire  T_1240;\n  wire [31:0] GEN_9;\n  wire  T_1280;\n  wire [63:0] GEN_10;\n  wire  T_1320;\n  wire [31:0] GEN_11;\n  wire  T_1360;\n  wire [31:0] GEN_12;\n  wire  T_1421_0;\n  wire  T_1421_1;\n  wire  T_1421_2;\n  wire  T_1421_3;\n  wire  T_1421_4;\n  wire  T_1421_5;\n  wire  T_1421_6;\n  wire  T_1421_7;\n  wire  T_1472_0;\n  wire  T_1472_1;\n  wire  T_1472_2;\n  wire  T_1472_3;\n  wire  T_1472_4;\n  wire  T_1472_5;\n  wire  T_1472_6;\n  wire  T_1472_7;\n  wire  T_1523_0;\n  wire  T_1523_1;\n  wire  T_1523_2;\n  wire  T_1523_3;\n  wire  T_1523_4;\n  wire  T_1523_5;\n  wire  T_1523_6;\n  wire  T_1523_7;\n  wire  T_1574_0;\n  wire  T_1574_1;\n  wire  T_1574_2;\n  wire  T_1574_3;\n  wire  T_1574_4;\n  wire  T_1574_5;\n  wire  T_1574_6;\n  wire  T_1574_7;\n  wire  T_1585;\n  wire  T_1586;\n  wire  T_1597;\n  wire [1:0] T_1599;\n  wire [2:0] T_1600;\n  wire  GEN_0;\n  wire  GEN_13;\n  wire  GEN_14;\n  wire  GEN_15;\n  wire  GEN_16;\n  wire  GEN_17;\n  wire  GEN_18;\n  wire  GEN_19;\n  wire  GEN_1;\n  wire  GEN_20;\n  wire  GEN_21;\n  wire  GEN_22;\n  wire  GEN_23;\n  wire  GEN_24;\n  wire  GEN_25;\n  wire  GEN_26;\n  wire  T_1619;\n  wire  GEN_2;\n  wire  GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_31;\n  wire  GEN_32;\n  wire  GEN_33;\n  wire  GEN_3;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  GEN_36;\n  wire  GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire  GEN_40;\n  wire  T_1622;\n  wire  T_1623;\n  wire  T_1624;\n  wire  T_1625;\n  wire  T_1626;\n  wire [7:0] T_1628;\n  wire  T_1647;\n  wire  T_1648;\n  wire  T_1649;\n  wire  T_1650;\n  wire  T_1653;\n  wire  T_1654;\n  wire  T_1656;\n  wire  T_1657;\n  wire  T_1658;\n  wire  T_1660;\n  wire  T_1664;\n  wire  T_1666;\n  wire  T_1689;\n  wire  T_1690;\n  wire  T_1696;\n  wire  T_1700;\n  wire  T_1706;\n  wire  T_1709;\n  wire  T_1710;\n  wire  T_1716;\n  wire  T_1720;\n  wire  T_1726;\n  wire  T_1729;\n  wire  T_1730;\n  wire  T_1736;\n  wire  T_1740;\n  wire  T_1746;\n  wire  T_1749;\n  wire  T_1750;\n  wire  T_1756;\n  wire  T_1760;\n  wire  T_1766;\n  wire  T_1838_0;\n  wire  T_1838_1;\n  wire  T_1838_2;\n  wire  T_1838_3;\n  wire  T_1838_4;\n  wire  T_1838_5;\n  wire  T_1838_6;\n  wire  T_1838_7;\n  wire [31:0] T_1861_0;\n  wire [31:0] T_1861_1;\n  wire [31:0] T_1861_2;\n  wire [31:0] T_1861_3;\n  wire [31:0] T_1861_4;\n  wire [31:0] T_1861_5;\n  wire [31:0] T_1861_6;\n  wire [31:0] T_1861_7;\n  wire  GEN_4;\n  wire  GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire [31:0] GEN_5;\n  wire [31:0] GEN_48;\n  wire [31:0] GEN_49;\n  wire [31:0] GEN_50;\n  wire [31:0] GEN_51;\n  wire [31:0] GEN_52;\n  wire [31:0] GEN_53;\n  wire [31:0] GEN_54;\n  wire [31:0] T_1874;\n  wire [1:0] T_1875;\n  wire [4:0] T_1877;\n  wire [2:0] T_1878;\n  wire [2:0] T_1889_opcode;\n  wire [1:0] T_1889_param;\n  wire [2:0] T_1889_size;\n  wire [4:0] T_1889_source;\n  wire  T_1889_sink;\n  wire [1:0] T_1889_addr_lo;\n  wire [31:0] T_1889_data;\n  wire  T_1889_error;\n  wire [2:0] GEN_55 = 3'b0;\n  reg [31:0] GEN_67;\n  wire [1:0] GEN_56 = 2'b0;\n  reg [31:0] GEN_68;\n  wire [2:0] GEN_57 = 3'b0;\n  reg [31:0] GEN_69;\n  wire [4:0] GEN_58 = 5'b0;\n  reg [31:0] GEN_70;\n  wire [25:0] GEN_59 = 26'b0;\n  reg [31:0] GEN_71;\n  wire [3:0] GEN_60 = 4'b0;\n  reg [31:0] GEN_72;\n  wire [31:0] GEN_61 = 32'b0;\n  reg [31:0] GEN_73;\n  assign io_in_0_a_ready = T_940_ready;\n  assign io_in_0_b_valid = 1'h0;\n  assign io_in_0_b_bits_opcode = GEN_55;\n  assign io_in_0_b_bits_param = GEN_56;\n  assign io_in_0_b_bits_size = GEN_57;\n  assign io_in_0_b_bits_source = GEN_58;\n  assign io_in_0_b_bits_address = GEN_59;\n  assign io_in_0_b_bits_mask = GEN_60;\n  assign io_in_0_b_bits_data = GEN_61;\n  assign io_in_0_c_ready = 1'h1;\n  assign io_in_0_d_valid = T_979_valid;\n  assign io_in_0_d_bits_opcode = {{2'd0}, T_979_bits_read};\n  assign io_in_0_d_bits_param = T_1889_param;\n  assign io_in_0_d_bits_size = T_1889_size;\n  assign io_in_0_d_bits_source = T_1889_source;\n  assign io_in_0_d_bits_sink = T_1889_sink;\n  assign io_in_0_d_bits_addr_lo = T_1889_addr_lo;\n  assign io_in_0_d_bits_data = T_979_bits_data;\n  assign io_in_0_d_bits_error = T_1889_error;\n  assign io_in_0_e_ready = 1'h1;\n  assign io_tiles_0_mtip = T_916;\n  assign io_tiles_0_msip = ipi_0;\n  assign T_904 = {time_1,time_0};\n  assign T_906 = T_904 + 64'h1;\n  assign T_907 = T_906[63:0];\n  assign T_909 = T_907[63:32];\n  assign GEN_6 = io_rtcTick ? T_907 : {{32'd0}, time_0};\n  assign GEN_7 = io_rtcTick ? T_909 : time_1;\n  assign T_915 = {timecmp_0_1,timecmp_0_0};\n  assign T_916 = T_904 >= T_915;\n  assign T_940_ready = T_1623;\n  assign T_940_valid = io_in_0_a_valid;\n  assign T_940_bits_read = T_957;\n  assign T_940_bits_index = T_958[13:0];\n  assign T_940_bits_data = io_in_0_a_bits_data;\n  assign T_940_bits_mask = io_in_0_a_bits_mask;\n  assign T_940_bits_extra = T_961;\n  assign T_957 = io_in_0_a_bits_opcode == 3'h4;\n  assign T_958 = io_in_0_a_bits_address[25:2];\n  assign T_959 = io_in_0_a_bits_address[1:0];\n  assign T_960 = {T_959,io_in_0_a_bits_source};\n  assign T_961 = {T_960,io_in_0_a_bits_size};\n  assign T_979_ready = io_in_0_d_ready;\n  assign T_979_valid = T_1626;\n  assign T_979_bits_read = T_1015_bits_read;\n  assign T_979_bits_data = T_1874;\n  assign T_979_bits_extra = T_1015_bits_extra;\n  assign T_1015_ready = T_1625;\n  assign T_1015_valid = T_1624;\n  assign T_1015_bits_read = T_940_bits_read;\n  assign T_1015_bits_index = T_940_bits_index;\n  assign T_1015_bits_data = T_940_bits_data;\n  assign T_1015_bits_mask = T_940_bits_mask;\n  assign T_1015_bits_extra = T_940_bits_extra;\n  assign T_1058_0 = T_1650;\n  assign T_1058_1 = T_1750;\n  assign T_1058_2 = T_1690;\n  assign T_1058_3 = T_1710;\n  assign T_1058_4 = T_1730;\n  assign T_1063_0 = T_1656;\n  assign T_1063_1 = T_1756;\n  assign T_1063_2 = T_1696;\n  assign T_1063_3 = T_1716;\n  assign T_1063_4 = T_1736;\n  assign T_1068_0 = 1'h1;\n  assign T_1068_1 = 1'h1;\n  assign T_1068_2 = 1'h1;\n  assign T_1068_3 = 1'h1;\n  assign T_1068_4 = 1'h1;\n  assign T_1073_0 = 1'h1;\n  assign T_1073_1 = 1'h1;\n  assign T_1073_2 = 1'h1;\n  assign T_1073_3 = 1'h1;\n  assign T_1073_4 = 1'h1;\n  assign T_1078_0 = 1'h1;\n  assign T_1078_1 = 1'h1;\n  assign T_1078_2 = 1'h1;\n  assign T_1078_3 = 1'h1;\n  assign T_1078_4 = 1'h1;\n  assign T_1083_0 = 1'h1;\n  assign T_1083_1 = 1'h1;\n  assign T_1083_2 = 1'h1;\n  assign T_1083_3 = 1'h1;\n  assign T_1083_4 = 1'h1;\n  assign T_1088_0 = T_1660;\n  assign T_1088_1 = T_1760;\n  assign T_1088_2 = T_1700;\n  assign T_1088_3 = T_1720;\n  assign T_1088_4 = T_1740;\n  assign T_1093_0 = T_1666;\n  assign T_1093_1 = T_1766;\n  assign T_1093_2 = T_1706;\n  assign T_1093_3 = T_1726;\n  assign T_1093_4 = T_1746;\n  assign T_1135 = T_1015_bits_mask[0];\n  assign T_1136 = T_1015_bits_mask[1];\n  assign T_1137 = T_1015_bits_mask[2];\n  assign T_1138 = T_1015_bits_mask[3];\n  assign T_1142 = T_1135 ? 8'hff : 8'h0;\n  assign T_1146 = T_1136 ? 8'hff : 8'h0;\n  assign T_1150 = T_1137 ? 8'hff : 8'h0;\n  assign T_1154 = T_1138 ? 8'hff : 8'h0;\n  assign T_1155 = {T_1146,T_1142};\n  assign T_1156 = {T_1154,T_1150};\n  assign T_1157 = {T_1156,T_1155};\n  assign T_1185 = ~ T_1157;\n  assign T_1187 = T_1185 == 32'h0;\n  assign T_1200 = T_1093_0 & T_1187;\n  assign GEN_8 = T_1200 ? T_1015_bits_data : {{31'd0}, ipi_0};\n  assign T_1219 = {{31'd0}, ipi_0};\n  assign T_1240 = T_1093_1 & T_1187;\n  assign GEN_9 = T_1240 ? T_1015_bits_data : timecmp_0_1;\n  assign T_1280 = T_1093_2 & T_1187;\n  assign GEN_10 = T_1280 ? {{32'd0}, T_1015_bits_data} : GEN_6;\n  assign T_1320 = T_1093_3 & T_1187;\n  assign GEN_11 = T_1320 ? T_1015_bits_data : GEN_7;\n  assign T_1360 = T_1093_4 & T_1187;\n  assign GEN_12 = T_1360 ? T_1015_bits_data : timecmp_0_0;\n  assign T_1421_0 = T_1068_0;\n  assign T_1421_1 = 1'h1;\n  assign T_1421_2 = T_1068_2;\n  assign T_1421_3 = T_1068_3;\n  assign T_1421_4 = T_1068_4;\n  assign T_1421_5 = T_1068_1;\n  assign T_1421_6 = 1'h1;\n  assign T_1421_7 = 1'h1;\n  assign T_1472_0 = T_1073_0;\n  assign T_1472_1 = 1'h1;\n  assign T_1472_2 = T_1073_2;\n  assign T_1472_3 = T_1073_3;\n  assign T_1472_4 = T_1073_4;\n  assign T_1472_5 = T_1073_1;\n  assign T_1472_6 = 1'h1;\n  assign T_1472_7 = 1'h1;\n  assign T_1523_0 = T_1078_0;\n  assign T_1523_1 = 1'h1;\n  assign T_1523_2 = T_1078_2;\n  assign T_1523_3 = T_1078_3;\n  assign T_1523_4 = T_1078_4;\n  assign T_1523_5 = T_1078_1;\n  assign T_1523_6 = 1'h1;\n  assign T_1523_7 = 1'h1;\n  assign T_1574_0 = T_1083_0;\n  assign T_1574_1 = 1'h1;\n  assign T_1574_2 = T_1083_2;\n  assign T_1574_3 = T_1083_3;\n  assign T_1574_4 = T_1083_4;\n  assign T_1574_5 = T_1083_1;\n  assign T_1574_6 = 1'h1;\n  assign T_1574_7 = 1'h1;\n  assign T_1585 = T_1015_bits_index[0];\n  assign T_1586 = T_1015_bits_index[1];\n  assign T_1597 = T_1015_bits_index[12];\n  assign T_1599 = {T_1597,T_1586};\n  assign T_1600 = {T_1599,T_1585};\n  assign GEN_0 = GEN_19;\n  assign GEN_13 = 3'h1 == T_1600 ? T_1421_1 : T_1421_0;\n  assign GEN_14 = 3'h2 == T_1600 ? T_1421_2 : GEN_13;\n  assign GEN_15 = 3'h3 == T_1600 ? T_1421_3 : GEN_14;\n  assign GEN_16 = 3'h4 == T_1600 ? T_1421_4 : GEN_15;\n  assign GEN_17 = 3'h5 == T_1600 ? T_1421_5 : GEN_16;\n  assign GEN_18 = 3'h6 == T_1600 ? T_1421_6 : GEN_17;\n  assign GEN_19 = 3'h7 == T_1600 ? T_1421_7 : GEN_18;\n  assign GEN_1 = GEN_26;\n  assign GEN_20 = 3'h1 == T_1600 ? T_1472_1 : T_1472_0;\n  assign GEN_21 = 3'h2 == T_1600 ? T_1472_2 : GEN_20;\n  assign GEN_22 = 3'h3 == T_1600 ? T_1472_3 : GEN_21;\n  assign GEN_23 = 3'h4 == T_1600 ? T_1472_4 : GEN_22;\n  assign GEN_24 = 3'h5 == T_1600 ? T_1472_5 : GEN_23;\n  assign GEN_25 = 3'h6 == T_1600 ? T_1472_6 : GEN_24;\n  assign GEN_26 = 3'h7 == T_1600 ? T_1472_7 : GEN_25;\n  assign T_1619 = T_1015_bits_read ? GEN_0 : GEN_1;\n  assign GEN_2 = GEN_33;\n  assign GEN_27 = 3'h1 == T_1600 ? T_1523_1 : T_1523_0;\n  assign GEN_28 = 3'h2 == T_1600 ? T_1523_2 : GEN_27;\n  assign GEN_29 = 3'h3 == T_1600 ? T_1523_3 : GEN_28;\n  assign GEN_30 = 3'h4 == T_1600 ? T_1523_4 : GEN_29;\n  assign GEN_31 = 3'h5 == T_1600 ? T_1523_5 : GEN_30;\n  assign GEN_32 = 3'h6 == T_1600 ? T_1523_6 : GEN_31;\n  assign GEN_33 = 3'h7 == T_1600 ? T_1523_7 : GEN_32;\n  assign GEN_3 = GEN_40;\n  assign GEN_34 = 3'h1 == T_1600 ? T_1574_1 : T_1574_0;\n  assign GEN_35 = 3'h2 == T_1600 ? T_1574_2 : GEN_34;\n  assign GEN_36 = 3'h3 == T_1600 ? T_1574_3 : GEN_35;\n  assign GEN_37 = 3'h4 == T_1600 ? T_1574_4 : GEN_36;\n  assign GEN_38 = 3'h5 == T_1600 ? T_1574_5 : GEN_37;\n  assign GEN_39 = 3'h6 == T_1600 ? T_1574_6 : GEN_38;\n  assign GEN_40 = 3'h7 == T_1600 ? T_1574_7 : GEN_39;\n  assign T_1622 = T_1015_bits_read ? GEN_2 : GEN_3;\n  assign T_1623 = T_1015_ready & T_1619;\n  assign T_1624 = T_940_valid & T_1619;\n  assign T_1625 = T_979_ready & T_1622;\n  assign T_1626 = T_1015_valid & T_1622;\n  assign T_1628 = 8'h1 << T_1600;\n  assign T_1647 = T_940_valid & T_1015_ready;\n  assign T_1648 = T_1647 & T_1015_bits_read;\n  assign T_1649 = T_1628[0];\n  assign T_1650 = T_1648 & T_1649;\n  assign T_1653 = T_1015_bits_read == 1'h0;\n  assign T_1654 = T_1647 & T_1653;\n  assign T_1656 = T_1654 & T_1649;\n  assign T_1657 = T_1015_valid & T_979_ready;\n  assign T_1658 = T_1657 & T_1015_bits_read;\n  assign T_1660 = T_1658 & T_1649;\n  assign T_1664 = T_1657 & T_1653;\n  assign T_1666 = T_1664 & T_1649;\n  assign T_1689 = T_1628[2];\n  assign T_1690 = T_1648 & T_1689;\n  assign T_1696 = T_1654 & T_1689;\n  assign T_1700 = T_1658 & T_1689;\n  assign T_1706 = T_1664 & T_1689;\n  assign T_1709 = T_1628[3];\n  assign T_1710 = T_1648 & T_1709;\n  assign T_1716 = T_1654 & T_1709;\n  assign T_1720 = T_1658 & T_1709;\n  assign T_1726 = T_1664 & T_1709;\n  assign T_1729 = T_1628[4];\n  assign T_1730 = T_1648 & T_1729;\n  assign T_1736 = T_1654 & T_1729;\n  assign T_1740 = T_1658 & T_1729;\n  assign T_1746 = T_1664 & T_1729;\n  assign T_1749 = T_1628[5];\n  assign T_1750 = T_1648 & T_1749;\n  assign T_1756 = T_1654 & T_1749;\n  assign T_1760 = T_1658 & T_1749;\n  assign T_1766 = T_1664 & T_1749;\n  assign T_1838_0 = 1'h1;\n  assign T_1838_1 = 1'h1;\n  assign T_1838_2 = 1'h1;\n  assign T_1838_3 = 1'h1;\n  assign T_1838_4 = 1'h1;\n  assign T_1838_5 = 1'h1;\n  assign T_1838_6 = 1'h1;\n  assign T_1838_7 = 1'h1;\n  assign T_1861_0 = T_1219;\n  assign T_1861_1 = 32'h0;\n  assign T_1861_2 = time_0;\n  assign T_1861_3 = time_1;\n  assign T_1861_4 = timecmp_0_0;\n  assign T_1861_5 = timecmp_0_1;\n  assign T_1861_6 = 32'h0;\n  assign T_1861_7 = 32'h0;\n  assign GEN_4 = GEN_47;\n  assign GEN_41 = 3'h1 == T_1600 ? T_1838_1 : T_1838_0;\n  assign GEN_42 = 3'h2 == T_1600 ? T_1838_2 : GEN_41;\n  assign GEN_43 = 3'h3 == T_1600 ? T_1838_3 : GEN_42;\n  assign GEN_44 = 3'h4 == T_1600 ? T_1838_4 : GEN_43;\n  assign GEN_45 = 3'h5 == T_1600 ? T_1838_5 : GEN_44;\n  assign GEN_46 = 3'h6 == T_1600 ? T_1838_6 : GEN_45;\n  assign GEN_47 = 3'h7 == T_1600 ? T_1838_7 : GEN_46;\n  assign GEN_5 = GEN_54;\n  assign GEN_48 = 3'h1 == T_1600 ? T_1861_1 : T_1861_0;\n  assign GEN_49 = 3'h2 == T_1600 ? T_1861_2 : GEN_48;\n  assign GEN_50 = 3'h3 == T_1600 ? T_1861_3 : GEN_49;\n  assign GEN_51 = 3'h4 == T_1600 ? T_1861_4 : GEN_50;\n  assign GEN_52 = 3'h5 == T_1600 ? T_1861_5 : GEN_51;\n  assign GEN_53 = 3'h6 == T_1600 ? T_1861_6 : GEN_52;\n  assign GEN_54 = 3'h7 == T_1600 ? T_1861_7 : GEN_53;\n  assign T_1874 = GEN_4 ? GEN_5 : 32'h0;\n  assign T_1875 = T_979_bits_extra[9:8];\n  assign T_1877 = T_979_bits_extra[7:3];\n  assign T_1878 = T_979_bits_extra[2:0];\n  assign T_1889_opcode = 3'h0;\n  assign T_1889_param = 2'h0;\n  assign T_1889_size = T_1878;\n  assign T_1889_source = T_1877;\n  assign T_1889_sink = 1'h0;\n  assign T_1889_addr_lo = T_1875;\n  assign T_1889_data = 32'h0;\n  assign T_1889_error = 1'h0;\n\n  always @(posedge clock or posedge reset) begin\n    if (reset) begin\n      time_0 <= 32'h0;\n    end else begin\n      time_0 <= GEN_10[31:0];\n    end\n  end\n\n  always @(posedge clock or posedge reset) begin\n    if (reset) begin\n      time_1 <= 32'h0;\n    end else begin\n      if (T_1320) begin\n        time_1 <= T_1015_bits_data;\n      end else begin\n        if (io_rtcTick) begin\n          time_1 <= T_909;\n        end\n      end\n    end\n  end\n\n\n  always @(posedge clock or posedge reset) begin\n    if (reset) begin\n      timecmp_0_0 <= 32'hFFFF_FFFF;\n    end\n    else if (T_1360) begin\n      timecmp_0_0 <= T_1015_bits_data;\n    end\n  end\n\n\n  always @(posedge clock or posedge reset) begin\n    if (reset) begin\n      timecmp_0_1 <= 32'hFFFF_FFFF;\n    end\n    else if (T_1240) begin\n      timecmp_0_1 <= T_1015_bits_data;\n    end\n  end\n\n\n  always @(posedge clock or posedge reset) begin\n    if (reset) begin\n      ipi_0 <= 1'h0;\n    end else begin\n      ipi_0 <= GEN_8[0];\n    end\n  end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top level of clint module\n//\n// ====================================================================\n\nmodule sirv_clint_top(\n  input   clk,\n  input   rst_n,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [32-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n  output  io_tiles_0_mtip,\n  output  io_tiles_0_msip,\n  input   io_rtcToggle \n);\n\n  wire io_rtcToggle_r; \n  sirv_gnrl_dffr #(1) io_rtcToggle_dffr (io_rtcToggle, io_rtcToggle_r, clk, rst_n);\n  wire io_rtcToggle_edge = io_rtcToggle ^ io_rtcToggle_r; \n  wire io_rtcTick = io_rtcToggle_edge;\n\n  wire  io_in_0_a_ready;\n  assign  i_icb_cmd_ready  = io_in_0_a_ready;\n  wire  io_in_0_a_valid  = i_icb_cmd_valid;\n  wire  [2:0] io_in_0_a_bits_opcode  = i_icb_cmd_read ? 3'h4 : 3'h0;\n  wire  [2:0] io_in_0_a_bits_param  = 3'b0;\n  wire  [2:0] io_in_0_a_bits_size = 3'd2;\n  wire  [4:0] io_in_0_a_bits_source  = 5'b0;\n  wire  [25:0] io_in_0_a_bits_address  = i_icb_cmd_addr[25:0];\n  wire  [3:0] io_in_0_a_bits_mask  = 4'b1111;\n  wire  [31:0] io_in_0_a_bits_data  = i_icb_cmd_wdata;\n\n  \n  wire  io_in_0_d_ready = i_icb_rsp_ready;\n\n  wire  [2:0] io_in_0_d_bits_opcode;\n  wire  [1:0] io_in_0_d_bits_param;\n  wire  [2:0] io_in_0_d_bits_size;\n  wire  [4:0] io_in_0_d_bits_source;\n  wire  io_in_0_d_bits_sink;\n  wire  [1:0] io_in_0_d_bits_addr_lo;\n  wire  [31:0] io_in_0_d_bits_data;\n  wire  io_in_0_d_bits_error;\n  wire  io_in_0_d_valid;\n\n  assign  i_icb_rsp_valid = io_in_0_d_valid;\n  assign  i_icb_rsp_rdata = io_in_0_d_bits_data;\n\n  // Not used\n  wire  io_in_0_b_ready = 1'b0;\n  wire  io_in_0_b_valid;\n  wire  [2:0] io_in_0_b_bits_opcode;\n  wire  [1:0] io_in_0_b_bits_param;\n  wire  [2:0] io_in_0_b_bits_size;\n  wire  [4:0] io_in_0_b_bits_source;\n  wire  [25:0] io_in_0_b_bits_address;\n  wire  [3:0] io_in_0_b_bits_mask;\n  wire  [31:0] io_in_0_b_bits_data;\n\n  // Not used\n  wire  io_in_0_c_ready;\n  wire  io_in_0_c_valid = 1'b0;\n  wire  [2:0] io_in_0_c_bits_opcode = 3'b0;\n  wire  [2:0] io_in_0_c_bits_param = 3'b0;\n  wire  [2:0] io_in_0_c_bits_size = 3'd2;\n  wire  [4:0] io_in_0_c_bits_source = 5'b0;\n  wire  [25:0] io_in_0_c_bits_address = 26'b0;\n  wire  [31:0] io_in_0_c_bits_data = 32'b0;\n  wire  io_in_0_c_bits_error = 1'b0;\n\n  // Not used\n  wire  io_in_0_e_ready;\n  wire  io_in_0_e_valid = 1'b0;\n  wire  io_in_0_e_bits_sink = 1'b0;\n\nsirv_clint u_sirv_clint(\n  .clock                            (clk                              ),\n  .reset                            (~rst_n                            ),\n\n  .io_in_0_a_ready                  (io_in_0_a_ready                  ),\n  .io_in_0_a_valid                  (io_in_0_a_valid                  ),\n  .io_in_0_a_bits_opcode            (io_in_0_a_bits_opcode            ),\n  .io_in_0_a_bits_param             (io_in_0_a_bits_param             ),\n  .io_in_0_a_bits_size              (io_in_0_a_bits_size              ),\n  .io_in_0_a_bits_source            (io_in_0_a_bits_source            ),\n  .io_in_0_a_bits_address           (io_in_0_a_bits_address           ),\n  .io_in_0_a_bits_mask              (io_in_0_a_bits_mask              ),\n  .io_in_0_a_bits_data              (io_in_0_a_bits_data              ),\n  .io_in_0_b_ready                  (io_in_0_b_ready                  ),\n  .io_in_0_b_valid                  (io_in_0_b_valid                  ),\n  .io_in_0_b_bits_opcode            (io_in_0_b_bits_opcode            ),\n  .io_in_0_b_bits_param             (io_in_0_b_bits_param             ),\n  .io_in_0_b_bits_size              (io_in_0_b_bits_size              ),\n  .io_in_0_b_bits_source            (io_in_0_b_bits_source            ),\n  .io_in_0_b_bits_address           (io_in_0_b_bits_address           ),\n  .io_in_0_b_bits_mask              (io_in_0_b_bits_mask              ),\n  .io_in_0_b_bits_data              (io_in_0_b_bits_data              ),\n  .io_in_0_c_ready                  (io_in_0_c_ready                  ),\n  .io_in_0_c_valid                  (io_in_0_c_valid                  ),\n  .io_in_0_c_bits_opcode            (io_in_0_c_bits_opcode            ),\n  .io_in_0_c_bits_param             (io_in_0_c_bits_param             ),\n  .io_in_0_c_bits_size              (io_in_0_c_bits_size              ),\n  .io_in_0_c_bits_source            (io_in_0_c_bits_source            ),\n  .io_in_0_c_bits_address           (io_in_0_c_bits_address           ),\n  .io_in_0_c_bits_data              (io_in_0_c_bits_data              ),\n  .io_in_0_c_bits_error             (io_in_0_c_bits_error             ),\n  .io_in_0_d_ready                  (io_in_0_d_ready                  ),\n  .io_in_0_d_valid                  (io_in_0_d_valid                  ),\n  .io_in_0_d_bits_opcode            (io_in_0_d_bits_opcode            ),\n  .io_in_0_d_bits_param             (io_in_0_d_bits_param             ),\n  .io_in_0_d_bits_size              (io_in_0_d_bits_size              ),\n  .io_in_0_d_bits_source            (io_in_0_d_bits_source            ),\n  .io_in_0_d_bits_sink              (io_in_0_d_bits_sink              ),\n  .io_in_0_d_bits_addr_lo           (io_in_0_d_bits_addr_lo           ),\n  .io_in_0_d_bits_data              (io_in_0_d_bits_data              ),\n  .io_in_0_d_bits_error             (io_in_0_d_bits_error             ),\n  .io_in_0_e_ready                  (io_in_0_e_ready                  ),\n  .io_in_0_e_valid                  (io_in_0_e_valid                  ),\n  .io_in_0_e_bits_sink              (io_in_0_e_bits_sink              ),\n\n  .io_tiles_0_mtip (io_tiles_0_mtip),\n  .io_tiles_0_msip (io_tiles_0_msip),\n  .io_rtcTick      (io_rtcTick     ) \n);\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The module to implement the core's debug control and relevant CSRs\n//\n// ===========================================================================\n`include \"e203_defines.v\"\n\nmodule sirv_debug_csr \n#(\n    parameter PC_SIZE = 32 \n)(\n\n    // The interface with commit stage\n  input  [PC_SIZE-1:0] cmt_dpc,\n  input  cmt_dpc_ena,\n\n  input  [3-1:0] cmt_dcause,\n  input  cmt_dcause_ena,\n\n  input  dbg_irq_r,\n\n    // The interface with CSR control \n  input  wr_dcsr_ena    ,\n  input  wr_dpc_ena     ,\n  input  wr_dscratch_ena,\n\n  input  [32-1:0] wr_csr_nxt    ,\n\n  output[32-1:0] dcsr_r    ,\n  output[PC_SIZE-1:0] dpc_r     ,\n  output[32-1:0] dscratch_r,\n\n  output dbg_mode,\n  output dbg_halt_r,\n  output dbg_step_r,\n  output dbg_ebreakm_r,\n  output dbg_stopcycle,\n\n  input  clk,\n  input  rst_n\n  );\n\n\n// Implement DPC reg\n  wire dpc_ena = wr_dpc_ena | cmt_dpc_ena;\n  wire [PC_SIZE-1:0] dpc_nxt;\n  assign dpc_nxt[PC_SIZE-1:1] = \n       cmt_dpc_ena ? cmt_dpc[PC_SIZE-1:1] \n                   : wr_csr_nxt[PC_SIZE-1:1];\n  assign dpc_nxt[0] = 1'b0; \n  sirv_gnrl_dfflr #(PC_SIZE) dpc_dfflr (dpc_ena, dpc_nxt, dpc_r, clk, rst_n);\n  \n// Implement Dbg Scratch reg\n  wire dscratch_ena = wr_dscratch_ena;\n  wire [32-1:0] dscratch_nxt;\n  assign dscratch_nxt = wr_csr_nxt;\n  sirv_gnrl_dfflr #(32) dscratch_dfflr (dscratch_ena, dscratch_nxt, dscratch_r, clk, rst_n);\n \n  // We dont support the HW Trigger Module yet now\n\n// Implement dcsr reg\n    //\n    // The ndreset field\n  wire ndreset_ena = wr_dcsr_ena & wr_csr_nxt[29];\n  wire ndreset_nxt;\n  wire ndreset_r;\n  assign ndreset_nxt = wr_csr_nxt[29];\n  sirv_gnrl_dfflr #(1) ndreset_dfflr (ndreset_ena, ndreset_nxt, ndreset_r, clk, rst_n);\n  // This bit is not used as rocket impelmentation\n    //\n    // The fullreset field\n  wire fullreset_ena = wr_dcsr_ena & wr_csr_nxt[28];\n  wire fullreset_nxt;\n  wire fullreset_r;\n  assign fullreset_nxt = wr_csr_nxt[28];\n  sirv_gnrl_dfflr #(1) fullreset_dfflr (fullreset_ena, fullreset_nxt, fullreset_r, clk, rst_n);\n  // This bit is not used as rocket impelmentation\n    //\n    // The cause field\n  wire dcause_ena = cmt_dcause_ena;\n  wire [3-1:0] dcause_r;\n  wire [3-1:0] dcause_nxt = cmt_dcause;\n  sirv_gnrl_dfflr #(3) dcause_dfflr (dcause_ena, dcause_nxt, dcause_r, clk, rst_n);\n    //\n    // The halt field\n  wire halt_ena = wr_dcsr_ena;\n  wire halt_nxt;\n  wire halt_r;\n  assign halt_nxt = wr_csr_nxt[3];\n  sirv_gnrl_dfflr #(1) halt_dfflr (halt_ena, halt_nxt, halt_r, clk, rst_n);\n    //\n    // The step field\n  wire step_ena = wr_dcsr_ena;\n  wire step_nxt;\n  wire step_r;\n  assign step_nxt = wr_csr_nxt[2];\n  sirv_gnrl_dfflr #(1) step_dfflr (step_ena, step_nxt, step_r, clk, rst_n);\n    //\n    // The ebreakm field\n  wire ebreakm_ena = wr_dcsr_ena;\n  wire ebreakm_nxt;\n  wire ebreakm_r;\n  assign ebreakm_nxt = wr_csr_nxt[15];\n  sirv_gnrl_dfflr #(1) ebreakm_dfflr (ebreakm_ena, ebreakm_nxt, ebreakm_r, clk, rst_n);\n    //\n  //  // The stopcycle field\n  //wire stopcycle_ena = wr_dcsr_ena;\n  //wire stopcycle_nxt;\n  //wire stopcycle_r;\n  //assign stopcycle_nxt = wr_csr_nxt[10];\n  //sirv_gnrl_dfflr #(1) stopcycle_dfflr (stopcycle_ena, stopcycle_nxt, stopcycle_r, clk, rst_n);\n  //  //\n  //  // The stoptime field\n  //wire stoptime_ena = wr_dcsr_ena;\n  //wire stoptime_nxt;\n  //wire stoptime_r;\n  //assign stoptime_nxt = wr_csr_nxt[9];\n  //sirv_gnrl_dfflr #(1) stoptime_dfflr (stoptime_ena, stoptime_nxt, stoptime_r, clk, rst_n);\n\n  assign dbg_stopcycle = 1'b1; \n\n  assign dcsr_r [31:30] = 2'd1;\n  assign dcsr_r [29:16]  = 14'b0;\n  assign dcsr_r [15:12]  = {4{ebreakm_r}};// we replicated the ebreakm for all ebreakh/s/u\n  assign dcsr_r [11]  = 1'b0;\n  assign dcsr_r [10]    = dbg_stopcycle;// Not writeable this bit is constant\n  assign dcsr_r [9]     = 1'b0;//stoptime_r; Not use this bit same as rocket implmementation\n  assign dcsr_r [8:6]   = dcause_r; \n  assign dcsr_r [5]     = dbg_irq_r; \n  assign dcsr_r [4]   = 1'b0;\n  assign dcsr_r [3]   = halt_r;\n  assign dcsr_r [2]   = step_r;\n  assign dcsr_r [1:0]   = 2'b11;\n\n  assign dbg_mode = ~(dcause_r == 3'b0);\n\n\n  assign dbg_halt_r = halt_r;\n  assign dbg_step_r = step_r;\n  assign dbg_ebreakm_r = ebreakm_r;\n\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The debug module\n//\n// ====================================================================\n\n`include \"e203_defines.v\"\n\nmodule sirv_debug_module\n# (\n  parameter SUPPORT_JTAG_DTM = 1,\n  parameter ASYNC_FF_LEVELS = 2,\n  parameter PC_SIZE = 32,\n  parameter HART_NUM = 1,\n  parameter HART_ID_W = 1\n) (\n\n  output  inspect_jtag_clk,\n\n    // The interface with commit stage\n  input   [PC_SIZE-1:0] cmt_dpc,\n  input   cmt_dpc_ena,\n\n  input   [3-1:0] cmt_dcause,\n  input   cmt_dcause_ena,\n\n  input  dbg_irq_r,\n\n    // The interface with CSR control \n  input  wr_dcsr_ena    ,\n  input  wr_dpc_ena     ,\n  input  wr_dscratch_ena,\n\n\n\n  input  [32-1:0] wr_csr_nxt    ,\n\n  output[32-1:0] dcsr_r    ,\n  output[PC_SIZE-1:0] dpc_r     ,\n  output[32-1:0] dscratch_r,\n\n  output dbg_mode,\n  output dbg_halt_r,\n  output dbg_step_r,\n  output dbg_ebreakm_r,\n  output dbg_stopcycle,\n\n\n  // The system memory bus interface\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [12-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n\n  input   io_pads_jtag_TCK_i_ival,\n  output  io_pads_jtag_TCK_o_oval,\n  output  io_pads_jtag_TCK_o_oe,\n  output  io_pads_jtag_TCK_o_ie,\n  output  io_pads_jtag_TCK_o_pue,\n  output  io_pads_jtag_TCK_o_ds,\n  input   io_pads_jtag_TMS_i_ival,\n  output  io_pads_jtag_TMS_o_oval,\n  output  io_pads_jtag_TMS_o_oe,\n  output  io_pads_jtag_TMS_o_ie,\n  output  io_pads_jtag_TMS_o_pue,\n  output  io_pads_jtag_TMS_o_ds,\n  input   io_pads_jtag_TDI_i_ival,\n  output  io_pads_jtag_TDI_o_oval,\n  output  io_pads_jtag_TDI_o_oe,\n  output  io_pads_jtag_TDI_o_ie,\n  output  io_pads_jtag_TDI_o_pue,\n  output  io_pads_jtag_TDI_o_ds,\n  input   io_pads_jtag_TDO_i_ival,\n  output  io_pads_jtag_TDO_o_oval,\n  output  io_pads_jtag_TDO_o_oe,\n  output  io_pads_jtag_TDO_o_ie,\n  output  io_pads_jtag_TDO_o_pue,\n  output  io_pads_jtag_TDO_o_ds,\n  input   io_pads_jtag_TRST_n_i_ival,\n  output  io_pads_jtag_TRST_n_o_oval,\n  output  io_pads_jtag_TRST_n_o_oe,\n  output  io_pads_jtag_TRST_n_o_ie,\n  output  io_pads_jtag_TRST_n_o_pue,\n  output  io_pads_jtag_TRST_n_o_ds,\n\n  // To the target hart\n  output [HART_NUM-1:0]      o_dbg_irq,\n  output [HART_NUM-1:0]      o_ndreset,\n  output [HART_NUM-1:0]      o_fullreset,\n\n  input   core_csr_clk,\n  input   hfclk,\n  input   corerst,\n\n  input   test_mode \n);\n\n\n  wire dm_rst;\n  wire dm_rst_n;\n\n  //This is to reset Debug module's logic, the debug module have same clock domain \n  //  as the main domain, so just use the same reset.\n sirv_ResetCatchAndSync_2 u_dm_ResetCatchAndSync_2_1 (\n    .test_mode(test_mode),\n    .clock(hfclk),// Use same clock as main domain\n    .reset(corerst),\n    .io_sync_reset(dm_rst)\n  );\n  \n  assign dm_rst_n = ~dm_rst;\n\n  //This is to reset the JTAG_CLK relevant logics, since the chip does not \n  //  have the JTAG_RST used really, so we need to use the global chip reset to reset\n  //  JTAG relevant logics\n wire jtag_TCK;\n wire jtag_reset;\n\n sirv_ResetCatchAndSync u_jtag_ResetCatchAndSync_3_1 (\n    .test_mode(test_mode),\n    .clock(jtag_TCK),\n    .reset(corerst),\n    .io_sync_reset(jtag_reset)\n  );\n\n\n  wire dm_clk = hfclk;// Currently Debug Module have same clock domain as core\n\n  wire jtag_TDI;\n  wire jtag_TDO;\n  wire jtag_TMS;\n  wire jtag_TRST;\n  wire jtag_DRV_TDO;\n\n  sirv_jtaggpioport u_jtag_pins (\n    .clock(1'b0),\n    .reset(1'b1),\n    .io_jtag_TCK(jtag_TCK),\n    .io_jtag_TMS(jtag_TMS),\n    .io_jtag_TDI(jtag_TDI),\n    .io_jtag_TDO(jtag_TDO),\n    .io_jtag_TRST(jtag_TRST),\n    .io_jtag_DRV_TDO(jtag_DRV_TDO),\n    .io_pins_TCK_i_ival(io_pads_jtag_TCK_i_ival),\n    .io_pins_TCK_o_oval(io_pads_jtag_TCK_o_oval),\n    .io_pins_TCK_o_oe(io_pads_jtag_TCK_o_oe),\n    .io_pins_TCK_o_ie(io_pads_jtag_TCK_o_ie),\n    .io_pins_TCK_o_pue(io_pads_jtag_TCK_o_pue),\n    .io_pins_TCK_o_ds(io_pads_jtag_TCK_o_ds),\n    .io_pins_TMS_i_ival(io_pads_jtag_TMS_i_ival),\n    .io_pins_TMS_o_oval(io_pads_jtag_TMS_o_oval),\n    .io_pins_TMS_o_oe(io_pads_jtag_TMS_o_oe),\n    .io_pins_TMS_o_ie(io_pads_jtag_TMS_o_ie),\n    .io_pins_TMS_o_pue(io_pads_jtag_TMS_o_pue),\n    .io_pins_TMS_o_ds(io_pads_jtag_TMS_o_ds),\n    .io_pins_TDI_i_ival(io_pads_jtag_TDI_i_ival),\n    .io_pins_TDI_o_oval(io_pads_jtag_TDI_o_oval),\n    .io_pins_TDI_o_oe(io_pads_jtag_TDI_o_oe),\n    .io_pins_TDI_o_ie(io_pads_jtag_TDI_o_ie),\n    .io_pins_TDI_o_pue(io_pads_jtag_TDI_o_pue),\n    .io_pins_TDI_o_ds(io_pads_jtag_TDI_o_ds),\n    .io_pins_TDO_i_ival(io_pads_jtag_TDO_i_ival),\n    .io_pins_TDO_o_oval(io_pads_jtag_TDO_o_oval),\n    .io_pins_TDO_o_oe(io_pads_jtag_TDO_o_oe),\n    .io_pins_TDO_o_ie(io_pads_jtag_TDO_o_ie),\n    .io_pins_TDO_o_pue(io_pads_jtag_TDO_o_pue),\n    .io_pins_TDO_o_ds(io_pads_jtag_TDO_o_ds),\n    .io_pins_TRST_n_i_ival(io_pads_jtag_TRST_n_i_ival),\n    .io_pins_TRST_n_o_oval(io_pads_jtag_TRST_n_o_oval),\n    .io_pins_TRST_n_o_oe(io_pads_jtag_TRST_n_o_oe),\n    .io_pins_TRST_n_o_ie(io_pads_jtag_TRST_n_o_ie),\n    .io_pins_TRST_n_o_pue(io_pads_jtag_TRST_n_o_pue),\n    .io_pins_TRST_n_o_ds(io_pads_jtag_TRST_n_o_ds)\n  );\n\n\n  sirv_debug_csr # (\n          .PC_SIZE(PC_SIZE)\n      ) u_sirv_debug_csr (\n    .dbg_stopcycle   (dbg_stopcycle  ),\n    .dbg_irq_r       (dbg_irq_r      ),\n\n    .cmt_dpc         (cmt_dpc        ),\n    .cmt_dpc_ena     (cmt_dpc_ena    ),\n    .cmt_dcause      (cmt_dcause     ),\n    .cmt_dcause_ena  (cmt_dcause_ena ),\n\n    .wr_dcsr_ena     (wr_dcsr_ena    ),\n    .wr_dpc_ena      (wr_dpc_ena     ),\n    .wr_dscratch_ena (wr_dscratch_ena),\n\n\n                                     \n    .wr_csr_nxt      (wr_csr_nxt     ),\n                                     \n    .dcsr_r          (dcsr_r         ),\n    .dpc_r           (dpc_r          ),\n    .dscratch_r      (dscratch_r     ),\n\n    .dbg_mode        (dbg_mode),\n    .dbg_halt_r      (dbg_halt_r),\n    .dbg_step_r      (dbg_step_r),\n    .dbg_ebreakm_r   (dbg_ebreakm_r),\n\n    .clk             (core_csr_clk),\n    .rst_n           (dm_rst_n ) \n  );\n\n\n\n  // The debug bus interface\n  wire                     dtm_req_valid;\n  wire                     dtm_req_ready;\n  wire [41-1 :0]           dtm_req_bits;\n\n  wire                     dtm_resp_valid;\n  wire                     dtm_resp_ready;\n  wire [36-1 : 0]          dtm_resp_bits;\n\n  generate\n    if(SUPPORT_JTAG_DTM == 1) begin: jtag_dtm_gen\n      sirv_jtag_dtm # (\n          .ASYNC_FF_LEVELS(ASYNC_FF_LEVELS)\n      ) u_sirv_jtag_dtm (\n                       \n        .jtag_TDI           (jtag_TDI      ),\n        .jtag_TDO           (jtag_TDO      ),\n        .jtag_TCK           (jtag_TCK      ),\n        .jtag_TMS           (jtag_TMS      ),\n        .jtag_TRST          (jtag_reset    ),\n                            \n        .jtag_DRV_TDO       (jtag_DRV_TDO  ),\n                           \n        .dtm_req_valid      (dtm_req_valid ),\n        .dtm_req_ready      (dtm_req_ready ),\n        .dtm_req_bits       (dtm_req_bits  ),\n                          \n        .dtm_resp_valid     (dtm_resp_valid),\n        .dtm_resp_ready     (dtm_resp_ready),\n        .dtm_resp_bits      (dtm_resp_bits )\n      );\n   end\n   else begin: no_jtag_dtm_gen\n      assign jtag_TDI  = 1'b0;\n      assign jtag_TDO  = 1'b0;\n      assign jtag_TCK  = 1'b0;\n      assign jtag_TMS  = 1'b0;\n      assign jtag_DRV_TDO = 1'b0;\n      assign dtm_req_valid = 1'b0;\n      assign dtm_req_bits = 41'b0;\n      assign dtm_resp_ready = 1'b0;\n   end\n  endgenerate\n\n  wire                i_dtm_req_valid;\n  wire                i_dtm_req_ready;\n  wire [41-1 :0]      i_dtm_req_bits;\n\n  wire                i_dtm_resp_valid;\n  wire                i_dtm_resp_ready;\n  wire [36-1 : 0]     i_dtm_resp_bits;\n\n  sirv_gnrl_cdc_tx   \n   # (\n     .DW      (36),\n     .SYNC_DP (ASYNC_FF_LEVELS) \n   ) u_dm2dtm_cdc_tx (\n     .o_vld  (dtm_resp_valid), \n     .o_rdy_a(dtm_resp_ready), \n     .o_dat  (dtm_resp_bits ),\n     .i_vld  (i_dtm_resp_valid),\n     .i_rdy  (i_dtm_resp_ready),\n     .i_dat  (i_dtm_resp_bits ),\n   \n     .clk    (dm_clk),\n     .rst_n  (dm_rst_n)\n   );\n     \n   sirv_gnrl_cdc_rx   \n      # (\n     .DW      (41),\n     .SYNC_DP (ASYNC_FF_LEVELS) \n   ) u_dm2dtm_cdc_rx (\n     .i_vld_a(dtm_req_valid), \n     .i_rdy  (dtm_req_ready), \n     .i_dat  (dtm_req_bits ),\n     .o_vld  (i_dtm_req_valid),\n     .o_rdy  (i_dtm_req_ready),\n     .o_dat  (i_dtm_req_bits ),\n   \n     .clk    (dm_clk),\n     .rst_n  (dm_rst_n)\n   );\n\n  wire i_dtm_req_hsked = i_dtm_req_valid & i_dtm_req_ready; \n\n  wire [ 4:0] dtm_req_bits_addr;\n  wire [33:0] dtm_req_bits_data;\n  wire [ 1:0] dtm_req_bits_op;\n\n  wire [33:0] dtm_resp_bits_data;\n  wire [ 1:0] dtm_resp_bits_resp;\n\n  assign dtm_req_bits_addr = i_dtm_req_bits[40:36];\n  assign dtm_req_bits_data = i_dtm_req_bits[35:2];\n  assign dtm_req_bits_op   = i_dtm_req_bits[1:0];\n  assign i_dtm_resp_bits = {dtm_resp_bits_data, dtm_resp_bits_resp};\n\n  // The OP field\n  //   0: Ignore data. (nop)\n  //   1: Read from address. (read)\n  //   2: Read from address. Then write data to address. (write) \n  //   3: Reserved.\n  wire dtm_req_rd = (dtm_req_bits_op == 2'd1);\n  wire dtm_req_wr = (dtm_req_bits_op == 2'd2);\n\n  wire dtm_req_sel_dbgram   = (dtm_req_bits_addr[4:3] == 2'b0) & (~(dtm_req_bits_addr[2:0] == 3'b111));//0x00-0x06\n  wire dtm_req_sel_dmcontrl = (dtm_req_bits_addr == 5'h10);\n  wire dtm_req_sel_dminfo   = (dtm_req_bits_addr == 5'h11);\n  wire dtm_req_sel_haltstat = (dtm_req_bits_addr == 5'h1C);\n\n  wire [33:0] dminfo_r;\n  wire [33:0] dmcontrol_r;\n\n  wire [HART_NUM-1:0] dm_haltnot_r;\n  wire [HART_NUM-1:0] dm_debint_r;\n\n  //In the future if it is multi-core, then we need to add the core ID, to support this\n  //   text from the debug_spec_v0.11\n  //   At the cost of more hardware, this can be resolved in two ways. If\n  //   the bus knows an ID for the originator, then the Debug Module can refuse write\n  //   accesses to originators that don't match the hart ID set in hartid of dmcontrol.\n  //\n\n  // The Resp field\n  //   0: The previous operation completed successfully.\n  //   1: Reserved.\n  //   2: The previous operation failed. The data scanned into dbus in this access\n  //      will be ignored. This status is sticky and can be cleared by writing dbusreset in dtmcontrol.\n  //   3: The previous operation is still in progress. The data scanned into dbus\n  //      in this access will be ignored. \n  wire [31:0] ram_dout;\n  assign dtm_resp_bits_data =\n            ({34{dtm_req_sel_dbgram  }} & {dmcontrol_r[33:32],ram_dout})\n          | ({34{dtm_req_sel_dmcontrl}} & dmcontrol_r)\n          | ({34{dtm_req_sel_dminfo  }} & dminfo_r)\n          | ({34{dtm_req_sel_haltstat}} & {{34-HART_ID_W{1'b0}},dm_haltnot_r});\n\n  assign dtm_resp_bits_resp = 2'd0;\n\n  wire icb_access_dbgram_ena;\n\n  wire i_dtm_req_condi = dtm_req_sel_dbgram ? (~icb_access_dbgram_ena) : 1'b1;\n  assign i_dtm_req_ready    = i_dtm_req_condi & i_dtm_resp_ready;\n  assign i_dtm_resp_valid   = i_dtm_req_condi & i_dtm_req_valid;\n\n\n  // DMINFORdData_reserved0 = 2'h0;\n  // DMINFORdData_abussize = 7'h0;\n  // DMINFORdData_serialcount = 4'h0;\n  // DMINFORdData_access128 = 1'h0;\n  // DMINFORdData_access64 = 1'h0;\n  // DMINFORdData_access32 = 1'h0;\n  // DMINFORdData_access16 = 1'h0;\n  // DMINFORdData_accesss8 = 1'h0;\n  // DMINFORdData_dramsize = 6'h6;\n  // DMINFORdData_haltsum = 1'h0;\n  // DMINFORdData_reserved1 = 3'h0;\n  // DMINFORdData_authenticated = 1'h1;\n  // DMINFORdData_authbusy = 1'h0;\n  // DMINFORdData_authtype = 2'h0;\n  // DMINFORdData_version = 2'h1;\n  assign dminfo_r[33:16] = 18'b0;\n  assign dminfo_r[15:10] = 6'h6;\n  assign dminfo_r[9:6]   = 4'b0;\n  assign dminfo_r[5]     = 1'h1;\n  assign dminfo_r[4:2]   = 3'b0;\n  assign dminfo_r[1:0]   = 2'h1;\n\n\n  wire [HART_ID_W-1:0] dm_hartid_r;\n\n  wire [1:0] dm_debint_arr  = {1'b0,dm_debint_r };\n  wire [1:0] dm_haltnot_arr = {1'b0,dm_haltnot_r};\n  assign dmcontrol_r[33] = dm_debint_arr [dm_hartid_r];\n  assign dmcontrol_r[32] = dm_haltnot_arr[dm_hartid_r];\n  assign dmcontrol_r[31:12] = 20'b0;\n  assign dmcontrol_r[11:2] = {{10-HART_ID_W{1'b0}},dm_hartid_r};\n  assign dmcontrol_r[1:0] = 2'b0;\n\n  wire dtm_wr_dmcontrol = dtm_req_sel_dmcontrl & dtm_req_wr;\n  wire dtm_wr_dbgram    = dtm_req_sel_dbgram   & dtm_req_wr;\n\n  wire dtm_wr_interrupt_ena = i_dtm_req_hsked & (dtm_wr_dmcontrol | dtm_wr_dbgram) & dtm_req_bits_data[33];//W1\n  wire dtm_wr_haltnot_ena   = i_dtm_req_hsked & (dtm_wr_dmcontrol | dtm_wr_dbgram) & (~dtm_req_bits_data[32]);//W0\n  wire dtm_wr_hartid_ena    = i_dtm_req_hsked & dtm_wr_dmcontrol;\n  wire dtm_wr_dbgram_ena    = i_dtm_req_hsked & dtm_wr_dbgram;\n\n  wire dtm_access_dbgram_ena    = i_dtm_req_hsked & dtm_req_sel_dbgram;\n\n  wire dm_hartid_ena = dtm_wr_hartid_ena;\n  wire [HART_ID_W-1:0] dm_hartid_nxt = dtm_req_bits_data[HART_ID_W+2-1:2];\n  sirv_gnrl_dfflr #(HART_ID_W) dm_hartid_dfflr (dm_hartid_ena, dm_hartid_nxt, dm_hartid_r, dm_clk, dm_rst_n);\n\n\n  //////////////////////////////////////////////////////////////\n  // Impelement the DM ICB system bus agent\n  //   0x100 - 0x2ff Debug Module registers described in Section 7.12.\n  //       * Only two registers needed, others are not supported\n  //                  cleardebint, at 0x100 \n  //                  sethaltnot,  at 0x10c \n  //   0x400 - 0x4ff Up to 256 bytes of Debug RAM. Each unique address species 8 bits.\n  //       * Since this is remapped to each core's ITCM, we dont handle it at this module\n  //   0x800 - 0x9ff Up to 512 bytes of Debug ROM.\n  //    \n  //\n  wire i_icb_cmd_hsked = i_icb_cmd_valid & i_icb_cmd_ready;\n  wire icb_wr_ena = i_icb_cmd_hsked & (~i_icb_cmd_read);\n  wire icb_sel_cleardebint = (i_icb_cmd_addr == 12'h100);\n  wire icb_sel_sethaltnot  = (i_icb_cmd_addr == 12'h10c);\n  wire icb_sel_dbgrom  = (i_icb_cmd_addr[12-1:8] == 4'h8);\n  wire icb_sel_dbgram  = (i_icb_cmd_addr[12-1:8] == 4'h4);\n\n\n  wire icb_wr_cleardebint_ena = icb_wr_ena & icb_sel_cleardebint;\n  wire icb_wr_sethaltnot_ena  = icb_wr_ena & icb_sel_sethaltnot ;\n\n  assign icb_access_dbgram_ena = i_icb_cmd_hsked & icb_sel_dbgram;\n\n  wire cleardebint_ena = icb_wr_cleardebint_ena;\n  wire [HART_ID_W-1:0] cleardebint_r;\n  wire [HART_ID_W-1:0] cleardebint_nxt = i_icb_cmd_wdata[HART_ID_W-1:0];\n  sirv_gnrl_dfflr #(HART_ID_W) cleardebint_dfflr (cleardebint_ena, cleardebint_nxt, cleardebint_r, dm_clk, dm_rst_n);\n\n  wire sethaltnot_ena = icb_wr_sethaltnot_ena;\n  wire [HART_ID_W-1:0] sethaltnot_r;\n  wire [HART_ID_W-1:0] sethaltnot_nxt = i_icb_cmd_wdata[HART_ID_W-1:0];\n  sirv_gnrl_dfflr #(HART_ID_W) sethaltnot_dfflr (sethaltnot_ena, sethaltnot_nxt, sethaltnot_r, dm_clk, dm_rst_n);\n\n\n  assign i_icb_rsp_valid = i_icb_cmd_valid;// Just directly pass back the valid in 0 cycle\n  assign i_icb_cmd_ready = i_icb_rsp_ready;\n\n  wire [31:0] rom_dout;\n\n  assign i_icb_rsp_rdata =  \n            ({32{icb_sel_cleardebint}} & {{32-HART_ID_W{1'b0}}, cleardebint_r}) \n          | ({32{icb_sel_sethaltnot }} & {{32-HART_ID_W{1'b0}}, sethaltnot_r})\n          | ({32{icb_sel_dbgrom  }} & rom_dout) \n          | ({32{icb_sel_dbgram  }} & ram_dout);\n\n   sirv_debug_rom u_sirv_debug_rom (\n     .rom_addr (i_icb_cmd_addr[7-1:2]),\n     .rom_dout (rom_dout) \n   );\n  //sirv_debug_rom_64 u_sirv_debug_rom_64(\n  //  .rom_addr (i_icb_cmd_addr[8-1:2]),\n  //  .rom_dout (rom_dout) \n  //);\n\n  wire         ram_cs   = dtm_access_dbgram_ena | icb_access_dbgram_ena;\n  wire [3-1:0] ram_addr = dtm_access_dbgram_ena ? dtm_req_bits_addr[2:0] : i_icb_cmd_addr[4:2]; \n  wire         ram_rd   = dtm_access_dbgram_ena ? dtm_req_rd             : i_icb_cmd_read; \n  wire [32-1:0]ram_wdat = dtm_access_dbgram_ena ? dtm_req_bits_data[31:0]: i_icb_cmd_wdata;\n\n  sirv_debug_ram u_sirv_debug_ram(\n    .clk      (dm_clk),\n    .rst_n    (dm_rst_n), \n    .ram_cs   (ram_cs),\n    .ram_rd   (ram_rd),\n    .ram_addr (ram_addr),\n    .ram_wdat (ram_wdat),\n    .ram_dout (ram_dout) \n  );\n\n  wire [HART_NUM-1:0] dm_haltnot_set;\n  wire [HART_NUM-1:0] dm_haltnot_clr;\n  wire [HART_NUM-1:0] dm_haltnot_ena;\n  wire [HART_NUM-1:0] dm_haltnot_nxt;\n\n  wire [HART_NUM-1:0] dm_debint_set;\n  wire [HART_NUM-1:0] dm_debint_clr;\n  wire [HART_NUM-1:0] dm_debint_ena;\n  wire [HART_NUM-1:0] dm_debint_nxt;\n\n  genvar i;\n  generate\n    for(i = 0; i < HART_NUM; i = i+1)//{\n    begin:dm_halt_int_gen\n\n        // The haltnot will be set by system bus set its ID to sethaltnot_r\n      assign dm_haltnot_set[i] = icb_wr_sethaltnot_ena & (i_icb_cmd_wdata[HART_ID_W-1:0] == i[HART_ID_W-1:0]);\n        // The haltnot will be cleared by DTM write 0 to haltnot\n      assign dm_haltnot_clr[i] = dtm_wr_haltnot_ena & (dm_hartid_r == i[HART_ID_W-1:0]);\n      assign dm_haltnot_ena[i] = dm_haltnot_set[i] | dm_haltnot_clr[i];\n      assign dm_haltnot_nxt[i] = dm_haltnot_set[i] | (~dm_haltnot_clr[i]);\n\n      sirv_gnrl_dfflr #(1) dm_haltnot_dfflr (dm_haltnot_ena[i], dm_haltnot_nxt[i], dm_haltnot_r[i], dm_clk, dm_rst_n);\n\n        // The debug intr will be set by DTM write 1 to interrupt\n      assign dm_debint_set[i] = dtm_wr_interrupt_ena & (dm_hartid_r == i[HART_ID_W-1:0]);\n        // The debug intr will be clear by system bus set its ID to cleardebint_r\n      assign dm_debint_clr[i] = icb_wr_cleardebint_ena & (i_icb_cmd_wdata[HART_ID_W-1:0] == i[HART_ID_W-1:0]);\n      assign dm_debint_ena[i] = dm_debint_set[i] | dm_debint_clr[i];\n      assign dm_debint_nxt[i] = dm_debint_set[i] | (~dm_debint_clr[i]);\n\n      sirv_gnrl_dfflr #(1) dm_debint_dfflr  ( dm_debint_ena[i],  dm_debint_nxt[i],  dm_debint_r[i], dm_clk, dm_rst_n);\n    end//}\n  endgenerate\n\n  assign o_dbg_irq = dm_debint_r;\n\n \n  assign o_ndreset   = {HART_NUM{1'b0}};\n  assign o_fullreset = {HART_NUM{1'b0}};\n\n  assign inspect_jtag_clk = jtag_TCK;\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The module for debug RAM program\n//\n// ====================================================================\n\nmodule sirv_debug_ram(\n  input  clk,\n  input  rst_n,\n  input  ram_cs,\n  input  ram_rd,\n  input  [ 3-1:0] ram_addr, \n  input  [32-1:0] ram_wdat,  \n  output [32-1:0] ram_dout  \n  );\n        \n  wire [31:0] debug_ram_r [0:6]; \n  wire [6:0]  ram_wen;\n\n\n  assign ram_dout = debug_ram_r[ram_addr]; \n\n  genvar i;\n  generate //{\n  \n      for (i=0; i<7; i=i+1) begin:debug_ram_gen//{\n  \n            assign ram_wen[i] = ram_cs & (~ram_rd) & (ram_addr == i) ;\n            sirv_gnrl_dfflr #(32) ram_dfflr (ram_wen[i], ram_wdat, debug_ram_r[i], clk, rst_n);\n  \n      end//}\n  endgenerate//}\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The module for debug ROM program\n//\n// ====================================================================\n\nmodule sirv_debug_rom(\n  input  [7-1:2] rom_addr, \n  output [32-1:0] rom_dout  \n  );\n        \n  // These ROM contents support only RV32 \n  // See $RISCV/riscv-tools/riscv-isa-sim/debug_rom/debug_rom.h/S\n  // The code assumes only 28 bytes of Debug RAM.\n\n  // def xlen32OnlyRomContents : Array[Byte] = Array(\n  // 0x6f, 0x00, 0xc0, 0x03, 0x6f, 0x00, 0xc0, 0x00, 0x13, 0x04, 0xf0, 0xff,\n  // 0x6f, 0x00, 0x80, 0x00, 0x13, 0x04, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x0f,\n  // 0x83, 0x24, 0x80, 0x41, 0x23, 0x2c, 0x80, 0x40, 0x73, 0x24, 0x40, 0xf1,\n  // 0x23, 0x20, 0x80, 0x10, 0x73, 0x24, 0x00, 0x7b, 0x13, 0x74, 0x84, 0x00,\n  // 0x63, 0x1a, 0x04, 0x02, 0x73, 0x24, 0x20, 0x7b, 0x73, 0x00, 0x20, 0x7b,\n  // 0x73, 0x10, 0x24, 0x7b, 0x73, 0x24, 0x00, 0x7b, 0x13, 0x74, 0x04, 0x1c,\n  // 0x13, 0x04, 0x04, 0xf4, 0x63, 0x16, 0x04, 0x00, 0x23, 0x2c, 0x90, 0x40,\n  // 0x67, 0x00, 0x00, 0x40, 0x73, 0x24, 0x40, 0xf1, 0x23, 0x26, 0x80, 0x10,\n  // 0x73, 0x60, 0x04, 0x7b, 0x73, 0x24, 0x00, 0x7b, 0x13, 0x74, 0x04, 0x02,\n  // 0xe3, 0x0c, 0x04, 0xfe, 0x6f, 0xf0, 0x1f, 0xfe).map(_.toByte)\n\n  wire [31:0] debug_rom [0:28]; // 29 words in total\n\n  assign rom_dout = debug_rom[rom_addr]; \n\n  // 0x6f, 0x00, 0xc0, 0x03, 0x6f, 0x00, 0xc0, 0x00, 0x13, 0x04, 0xf0, 0xff,\n  assign debug_rom[ 0][7 : 0] = 8'h6f;\n  assign debug_rom[ 0][15: 8] = 8'h00;\n  assign debug_rom[ 0][23:16] = 8'hc0;\n  assign debug_rom[ 0][31:24] = 8'h03;\n  \n  assign debug_rom[ 1][7 : 0] = 8'h6f;\n  assign debug_rom[ 1][15: 8] = 8'h00;\n  assign debug_rom[ 1][23:16] = 8'hc0;\n  assign debug_rom[ 1][31:24] = 8'h00;\n \n  assign debug_rom[ 2][7 : 0] = 8'h13;\n  assign debug_rom[ 2][15: 8] = 8'h04;\n  assign debug_rom[ 2][23:16] = 8'hf0;\n  assign debug_rom[ 2][31:24] = 8'hff;\n\n  // 0x6f, 0x00, 0x80, 0x00, 0x13, 0x04, 0x00, 0x00, 0x0f, 0x00, 0xf0, 0x0f,\n  assign debug_rom[ 3][7 : 0] = 8'h6f;\n  assign debug_rom[ 3][15: 8] = 8'h00;\n  assign debug_rom[ 3][23:16] = 8'h80;\n  assign debug_rom[ 3][31:24] = 8'h00;\n\n  assign debug_rom[ 4][7 : 0] = 8'h13;\n  assign debug_rom[ 4][15: 8] = 8'h04;\n  assign debug_rom[ 4][23:16] = 8'h00;\n  assign debug_rom[ 4][31:24] = 8'h00;\n\n  assign debug_rom[ 5][7 : 0] = 8'h0f;\n  assign debug_rom[ 5][15: 8] = 8'h00;\n  assign debug_rom[ 5][23:16] = 8'hf0;\n  assign debug_rom[ 5][31:24] = 8'h0f;\n\n  // 0x83, 0x24, 0x80, 0x41, 0x23, 0x2c, 0x80, 0x40, 0x73, 0x24, 0x40, 0xf1,\n  assign debug_rom[ 6][7 : 0] = 8'h83;\n  assign debug_rom[ 6][15: 8] = 8'h24;\n  assign debug_rom[ 6][23:16] = 8'h80;\n  assign debug_rom[ 6][31:24] = 8'h41;\n \n  assign debug_rom[ 7][7 : 0] = 8'h23;\n  assign debug_rom[ 7][15: 8] = 8'h2c;\n  assign debug_rom[ 7][23:16] = 8'h80;\n  assign debug_rom[ 7][31:24] = 8'h40;\n\n  assign debug_rom[ 8][7 : 0] = 8'h73;\n  assign debug_rom[ 8][15: 8] = 8'h24;\n  assign debug_rom[ 8][23:16] = 8'h40;\n  assign debug_rom[ 8][31:24] = 8'hf1;\n\n  // 0x23, 0x20, 0x80, 0x10, 0x73, 0x24, 0x00, 0x7b, 0x13, 0x74, 0x84, 0x00,\n  assign debug_rom[ 9][7 : 0] = 8'h23;\n  assign debug_rom[ 9][15: 8] = 8'h20;\n  assign debug_rom[ 9][23:16] = 8'h80;\n  assign debug_rom[ 9][31:24] = 8'h10;\n\n  assign debug_rom[10][7 : 0] = 8'h73;\n  assign debug_rom[10][15: 8] = 8'h24;\n  assign debug_rom[10][23:16] = 8'h00;\n  assign debug_rom[10][31:24] = 8'h7b;\n                   \n  assign debug_rom[11][7 : 0] = 8'h13;\n  assign debug_rom[11][15: 8] = 8'h74;\n  assign debug_rom[11][23:16] = 8'h84;\n  assign debug_rom[11][31:24] = 8'h00;\n                  \n  // 0x63, 0x1a, 0x04, 0x02, 0x73, 0x24, 0x20, 0x7b, 0x73, 0x00, 0x20, 0x7b,\n  assign debug_rom[12][7 : 0] = 8'h63;\n  assign debug_rom[12][15: 8] = 8'h1a;\n  assign debug_rom[12][23:16] = 8'h04;\n  assign debug_rom[12][31:24] = 8'h02;\n                 \n  assign debug_rom[13][7 : 0] = 8'h73;\n  assign debug_rom[13][15: 8] = 8'h24;\n  assign debug_rom[13][23:16] = 8'h20;\n  assign debug_rom[13][31:24] = 8'h7b;\n                \n  assign debug_rom[14][7 : 0] = 8'h73;\n  assign debug_rom[14][15: 8] = 8'h00;\n  assign debug_rom[14][23:16] = 8'h20;\n  assign debug_rom[14][31:24] = 8'h7b;\n               \n  // 0x73, 0x10, 0x24, 0x7b, 0x73, 0x24, 0x00, 0x7b, 0x13, 0x74, 0x04, 0x1c,\n  assign debug_rom[15][7 : 0] = 8'h73;\n  assign debug_rom[15][15: 8] = 8'h10;\n  assign debug_rom[15][23:16] = 8'h24;\n  assign debug_rom[15][31:24] = 8'h7b;\n              \n  assign debug_rom[16][7 : 0] = 8'h73;\n  assign debug_rom[16][15: 8] = 8'h24;\n  assign debug_rom[16][23:16] = 8'h00;\n  assign debug_rom[16][31:24] = 8'h7b;\n             \n  assign debug_rom[17][7 : 0] = 8'h13;\n  assign debug_rom[17][15: 8] = 8'h74;\n  assign debug_rom[17][23:16] = 8'h04;\n  assign debug_rom[17][31:24] = 8'h1c;\n            \n  // 0x13, 0x04, 0x04, 0xf4, 0x63, 0x16, 0x04, 0x00, 0x23, 0x2c, 0x90, 0x40,\n  assign debug_rom[18][7 : 0] = 8'h13;\n  assign debug_rom[18][15: 8] = 8'h04;\n  assign debug_rom[18][23:16] = 8'h04;\n  assign debug_rom[18][31:24] = 8'hf4;\n           \n  assign debug_rom[19][7 : 0] = 8'h63;\n  assign debug_rom[19][15: 8] = 8'h16;\n  assign debug_rom[19][23:16] = 8'h04;\n  assign debug_rom[19][31:24] = 8'h00;\n\n  assign debug_rom[20][7 : 0] = 8'h23;\n  assign debug_rom[20][15: 8] = 8'h2c;\n  assign debug_rom[20][23:16] = 8'h90;\n  assign debug_rom[20][31:24] = 8'h40;\n                   \n  // 0x67, 0x00, 0x00, 0x40, 0x73, 0x24, 0x40, 0xf1, 0x23, 0x26, 0x80, 0x10,\n  assign debug_rom[21][7 : 0] = 8'h67;\n  assign debug_rom[21][15: 8] = 8'h00;\n  assign debug_rom[21][23:16] = 8'h00;\n  assign debug_rom[21][31:24] = 8'h40;\n                  \n  assign debug_rom[22][7 : 0] = 8'h73;\n  assign debug_rom[22][15: 8] = 8'h24;\n  assign debug_rom[22][23:16] = 8'h40;\n  assign debug_rom[22][31:24] = 8'hf1;\n                 \n  assign debug_rom[23][7 : 0] = 8'h23;\n  assign debug_rom[23][15: 8] = 8'h26;\n  assign debug_rom[23][23:16] = 8'h80;\n  assign debug_rom[23][31:24] = 8'h10;\n                \n  // 0x73, 0x60, 0x04, 0x7b, 0x73, 0x24, 0x00, 0x7b, 0x13, 0x74, 0x04, 0x02,\n  assign debug_rom[24][7 : 0] = 8'h73;\n  assign debug_rom[24][15: 8] = 8'h60;\n  assign debug_rom[24][23:16] = 8'h04;\n  assign debug_rom[24][31:24] = 8'h7b;\n               \n  assign debug_rom[25][7 : 0] = 8'h73;\n  assign debug_rom[25][15: 8] = 8'h24;\n  assign debug_rom[25][23:16] = 8'h00;\n  assign debug_rom[25][31:24] = 8'h7b;\n              \n  assign debug_rom[26][7 : 0] = 8'h13;\n  assign debug_rom[26][15: 8] = 8'h74;\n  assign debug_rom[26][23:16] = 8'h04;\n  assign debug_rom[26][31:24] = 8'h02;\n             \n  // 0xe3, 0x0c, 0x04, 0xfe, 0x6f, 0xf0, 0x1f, 0xfe).map(_.toByte)\n  assign debug_rom[27][7 : 0] = 8'he3;\n  assign debug_rom[27][15: 8] = 8'h0c;\n  assign debug_rom[27][23:16] = 8'h04;\n  assign debug_rom[27][31:24] = 8'hfe;\n            \n  assign debug_rom[28][7 : 0] = 8'h6f;\n  assign debug_rom[28][15: 8] = 8'hf0;\n  assign debug_rom[28][23:16] = 8'h1f;\n  assign debug_rom[28][31:24] = 8'hfe;\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_DeglitchShiftRegister(\n  input   clock,\n  input   reset,\n  input   io_d,\n  output  io_q\n);\n  reg  T_8;\n  reg [31:0] GEN_0;\n  reg  T_9;\n  reg [31:0] GEN_1;\n  reg  sync;\n  reg [31:0] GEN_2;\n  reg  last;\n  reg [31:0] GEN_3;\n  wire  T_12;\n  assign io_q = T_12;\n  assign T_12 = sync & last;\n  always @(posedge clock) begin// sync reg do not need reset, and the external reset is tied to 1, do not use it\n    T_8 <= io_d;\n    T_9 <= T_8;\n    sync <= T_9;\n    last <= sync;\n  end\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top module of the example APB slave\n//\n// ====================================================================\nmodule sirv_expl_apb_slv #(\n    parameter AW = 32,\n    parameter DW = 32 \n)(\n  input  [AW-1:0] apb_paddr,\n  input           apb_pwrite,\n  input           apb_pselx,\n  input           apb_penable,\n  input  [DW-1:0] apb_pwdata,\n  output [DW-1:0] apb_prdata,\n\n  input  clk,  \n  input  rst_n\n);\n\n  assign apb_prdata = {DW{1'b0}};\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top module of the example AXI slave\n//\n// ====================================================================\nmodule sirv_expl_axi_slv #(\n    parameter AW = 32,\n    parameter DW = 32 \n)(\n  input  axi_arvalid,\n  output axi_arready,\n  input  [AW-1:0] axi_araddr,\n  input  [3:0] axi_arcache,\n  input  [2:0] axi_arprot,\n  input  [1:0] axi_arlock,\n  input  [1:0] axi_arburst,\n  input  [3:0] axi_arlen,\n  input  [2:0] axi_arsize,\n\n  input  axi_awvalid,\n  output axi_awready,\n  input  [AW-1:0] axi_awaddr,\n  input  [3:0] axi_awcache,\n  input  [2:0] axi_awprot,\n  input  [1:0] axi_awlock,\n  input  [1:0] axi_awburst,\n  input  [3:0] axi_awlen,\n  input  [2:0] axi_awsize,\n\n  output axi_rvalid,\n  input  axi_rready,\n  output [DW-1:0] axi_rdata,\n  output [1:0] axi_rresp,\n  output axi_rlast,\n\n  input  axi_wvalid,\n  output axi_wready,\n  input  [DW-1:0] axi_wdata,\n  input  [(DW/8)-1:0] axi_wstrb,\n  input  axi_wlast,\n\n  output axi_bvalid,\n  input  axi_bready,\n  output [1:0] axi_bresp,\n\n  input  clk,  \n  input  rst_n\n);\n\n  assign axi_rvalid = axi_arvalid;\n  assign axi_arready = axi_rready;\n\n  assign axi_rdata = {DW{1'b0}};\n  assign axi_rresp = 2'b0;\n  assign axi_rlast = 1'b1;\n\n  assign axi_bvalid = axi_wvalid;\n  assign axi_wready = axi_bready;\n  assign axi_bresp  = 2'b0;\n\n  assign axi_awready = 1'b1;\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_flash_qspi(\n  input   clock,\n  input   reset,\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  output  io_tl_i_0_0,\n  output  io_tl_r_0_a_ready,\n  input   io_tl_r_0_a_valid,\n  input  [2:0] io_tl_r_0_a_bits_opcode,\n  input  [2:0] io_tl_r_0_a_bits_param,\n  input  [2:0] io_tl_r_0_a_bits_size,\n  input  [4:0] io_tl_r_0_a_bits_source,\n  input  [28:0] io_tl_r_0_a_bits_address,\n  input  [3:0] io_tl_r_0_a_bits_mask,\n  input  [31:0] io_tl_r_0_a_bits_data,\n  input   io_tl_r_0_b_ready,\n  output  io_tl_r_0_b_valid,\n  output [2:0] io_tl_r_0_b_bits_opcode,\n  output [1:0] io_tl_r_0_b_bits_param,\n  output [2:0] io_tl_r_0_b_bits_size,\n  output [4:0] io_tl_r_0_b_bits_source,\n  output [28:0] io_tl_r_0_b_bits_address,\n  output [3:0] io_tl_r_0_b_bits_mask,\n  output [31:0] io_tl_r_0_b_bits_data,\n  output  io_tl_r_0_c_ready,\n  input   io_tl_r_0_c_valid,\n  input  [2:0] io_tl_r_0_c_bits_opcode,\n  input  [2:0] io_tl_r_0_c_bits_param,\n  input  [2:0] io_tl_r_0_c_bits_size,\n  input  [4:0] io_tl_r_0_c_bits_source,\n  input  [28:0] io_tl_r_0_c_bits_address,\n  input  [31:0] io_tl_r_0_c_bits_data,\n  input   io_tl_r_0_c_bits_error,\n  input   io_tl_r_0_d_ready,\n  output  io_tl_r_0_d_valid,\n  output [2:0] io_tl_r_0_d_bits_opcode,\n  output [1:0] io_tl_r_0_d_bits_param,\n  output [2:0] io_tl_r_0_d_bits_size,\n  output [4:0] io_tl_r_0_d_bits_source,\n  output  io_tl_r_0_d_bits_sink,\n  output [1:0] io_tl_r_0_d_bits_addr_lo,\n  output [31:0] io_tl_r_0_d_bits_data,\n  output  io_tl_r_0_d_bits_error,\n  output  io_tl_r_0_e_ready,\n  input   io_tl_r_0_e_valid,\n  input   io_tl_r_0_e_bits_sink,\n  output  io_tl_f_0_a_ready,\n  input   io_tl_f_0_a_valid,\n  input  [2:0] io_tl_f_0_a_bits_opcode,\n  input  [2:0] io_tl_f_0_a_bits_param,\n  input  [2:0] io_tl_f_0_a_bits_size,\n  input  [6:0] io_tl_f_0_a_bits_source,\n  input  [29:0] io_tl_f_0_a_bits_address,\n  input   io_tl_f_0_a_bits_mask,\n  input  [7:0] io_tl_f_0_a_bits_data,\n  input   io_tl_f_0_b_ready,\n  output  io_tl_f_0_b_valid,\n  output [2:0] io_tl_f_0_b_bits_opcode,\n  output [1:0] io_tl_f_0_b_bits_param,\n  output [2:0] io_tl_f_0_b_bits_size,\n  output [6:0] io_tl_f_0_b_bits_source,\n  output [29:0] io_tl_f_0_b_bits_address,\n  output  io_tl_f_0_b_bits_mask,\n  output [7:0] io_tl_f_0_b_bits_data,\n  output  io_tl_f_0_c_ready,\n  input   io_tl_f_0_c_valid,\n  input  [2:0] io_tl_f_0_c_bits_opcode,\n  input  [2:0] io_tl_f_0_c_bits_param,\n  input  [2:0] io_tl_f_0_c_bits_size,\n  input  [6:0] io_tl_f_0_c_bits_source,\n  input  [29:0] io_tl_f_0_c_bits_address,\n  input  [7:0] io_tl_f_0_c_bits_data,\n  input   io_tl_f_0_c_bits_error,\n  input   io_tl_f_0_d_ready,\n  output  io_tl_f_0_d_valid,\n  output [2:0] io_tl_f_0_d_bits_opcode,\n  output [1:0] io_tl_f_0_d_bits_param,\n  output [2:0] io_tl_f_0_d_bits_size,\n  output [6:0] io_tl_f_0_d_bits_source,\n  output  io_tl_f_0_d_bits_sink,\n  output  io_tl_f_0_d_bits_addr_lo,\n  output [7:0] io_tl_f_0_d_bits_data,\n  output  io_tl_f_0_d_bits_error,\n  output  io_tl_f_0_e_ready,\n  input   io_tl_f_0_e_valid,\n  input   io_tl_f_0_e_bits_sink\n);\n  wire [1:0] T_1840_fmt_proto;\n  wire  T_1840_fmt_endian;\n  wire  T_1840_fmt_iodir;\n  wire [3:0] T_1840_fmt_len;\n  wire [11:0] T_1840_sck_div;\n  wire  T_1840_sck_pol;\n  wire  T_1840_sck_pha;\n  wire  T_1840_cs_id;\n  wire  T_1840_cs_dflt_0;\n  wire [1:0] T_1840_cs_mode;\n  wire [7:0] T_1840_dla_cssck;\n  wire [7:0] T_1840_dla_sckcs;\n  wire [7:0] T_1840_dla_intercs;\n  wire [7:0] T_1840_dla_interxfr;\n  wire [3:0] T_1840_wm_tx;\n  wire [3:0] T_1840_wm_rx;\n  reg [1:0] ctrl_fmt_proto;\n  reg [31:0] GEN_273;\n  reg  ctrl_fmt_endian;\n  reg [31:0] GEN_274;\n  reg  ctrl_fmt_iodir;\n  reg [31:0] GEN_275;\n  reg [3:0] ctrl_fmt_len;\n  reg [31:0] GEN_276;\n  reg [11:0] ctrl_sck_div;\n  reg [31:0] GEN_277;\n  reg  ctrl_sck_pol;\n  reg [31:0] GEN_278;\n  reg  ctrl_sck_pha;\n  reg [31:0] GEN_279;\n  reg  ctrl_cs_id;\n  reg [31:0] GEN_280;\n  reg  ctrl_cs_dflt_0;\n  reg [31:0] GEN_281;\n  reg [1:0] ctrl_cs_mode;\n  reg [31:0] GEN_282;\n  reg [7:0] ctrl_dla_cssck;\n  reg [31:0] GEN_283;\n  reg [7:0] ctrl_dla_sckcs;\n  reg [31:0] GEN_284;\n  reg [7:0] ctrl_dla_intercs;\n  reg [31:0] GEN_285;\n  reg [7:0] ctrl_dla_interxfr;\n  reg [31:0] GEN_286;\n  reg [3:0] ctrl_wm_tx;\n  reg [31:0] GEN_287;\n  reg [3:0] ctrl_wm_rx;\n  reg [31:0] GEN_288;\n  wire  fifo_clock;\n  wire  fifo_reset;\n  wire [1:0] fifo_io_ctrl_fmt_proto;\n  wire  fifo_io_ctrl_fmt_endian;\n  wire  fifo_io_ctrl_fmt_iodir;\n  wire [3:0] fifo_io_ctrl_fmt_len;\n  wire [1:0] fifo_io_ctrl_cs_mode;\n  wire [3:0] fifo_io_ctrl_wm_tx;\n  wire [3:0] fifo_io_ctrl_wm_rx;\n  wire  fifo_io_link_tx_ready;\n  wire  fifo_io_link_tx_valid;\n  wire [7:0] fifo_io_link_tx_bits;\n  wire  fifo_io_link_rx_valid;\n  wire [7:0] fifo_io_link_rx_bits;\n  wire [7:0] fifo_io_link_cnt;\n  wire [1:0] fifo_io_link_fmt_proto;\n  wire  fifo_io_link_fmt_endian;\n  wire  fifo_io_link_fmt_iodir;\n  wire  fifo_io_link_cs_set;\n  wire  fifo_io_link_cs_clear;\n  wire  fifo_io_link_cs_hold;\n  wire  fifo_io_link_active;\n  wire  fifo_io_link_lock;\n  wire  fifo_io_tx_ready;\n  wire  fifo_io_tx_valid;\n  wire [7:0] fifo_io_tx_bits;\n  wire  fifo_io_rx_ready;\n  wire  fifo_io_rx_valid;\n  wire [7:0] fifo_io_rx_bits;\n  wire  fifo_io_ip_txwm;\n  wire  fifo_io_ip_rxwm;\n  wire  mac_clock;\n  wire  mac_reset;\n  wire  mac_io_port_sck;\n  wire  mac_io_port_dq_0_i;\n  wire  mac_io_port_dq_0_o;\n  wire  mac_io_port_dq_0_oe;\n  wire  mac_io_port_dq_1_i;\n  wire  mac_io_port_dq_1_o;\n  wire  mac_io_port_dq_1_oe;\n  wire  mac_io_port_dq_2_i;\n  wire  mac_io_port_dq_2_o;\n  wire  mac_io_port_dq_2_oe;\n  wire  mac_io_port_dq_3_i;\n  wire  mac_io_port_dq_3_o;\n  wire  mac_io_port_dq_3_oe;\n  wire  mac_io_port_cs_0;\n  wire [11:0] mac_io_ctrl_sck_div;\n  wire  mac_io_ctrl_sck_pol;\n  wire  mac_io_ctrl_sck_pha;\n  wire [7:0] mac_io_ctrl_dla_cssck;\n  wire [7:0] mac_io_ctrl_dla_sckcs;\n  wire [7:0] mac_io_ctrl_dla_intercs;\n  wire [7:0] mac_io_ctrl_dla_interxfr;\n  wire  mac_io_ctrl_cs_id;\n  wire  mac_io_ctrl_cs_dflt_0;\n  wire  mac_io_link_tx_ready;\n  wire  mac_io_link_tx_valid;\n  wire [7:0] mac_io_link_tx_bits;\n  wire  mac_io_link_rx_valid;\n  wire [7:0] mac_io_link_rx_bits;\n  wire [7:0] mac_io_link_cnt;\n  wire [1:0] mac_io_link_fmt_proto;\n  wire  mac_io_link_fmt_endian;\n  wire  mac_io_link_fmt_iodir;\n  wire  mac_io_link_cs_set;\n  wire  mac_io_link_cs_clear;\n  wire  mac_io_link_cs_hold;\n  wire  mac_io_link_active;\n  wire  T_1906_txwm;\n  wire  T_1906_rxwm;\n  wire [1:0] T_1910;\n  wire  T_1911;\n  wire  T_1912;\n  reg  ie_txwm;\n  reg [31:0] GEN_289;\n  reg  ie_rxwm;\n  reg [31:0] GEN_290;\n  wire  T_1915;\n  wire  T_1916;\n  wire  T_1917;\n  wire  T_1921;\n  wire  T_1924;\n  wire  flash_clock;\n  wire  flash_reset;\n  wire  flash_io_en;\n  wire [1:0] flash_io_ctrl_insn_cmd_proto;\n  wire [7:0] flash_io_ctrl_insn_cmd_code;\n  wire  flash_io_ctrl_insn_cmd_en;\n  wire [1:0] flash_io_ctrl_insn_addr_proto;\n  wire [2:0] flash_io_ctrl_insn_addr_len;\n  wire [7:0] flash_io_ctrl_insn_pad_code;\n  wire [3:0] flash_io_ctrl_insn_pad_cnt;\n  wire [1:0] flash_io_ctrl_insn_data_proto;\n  wire  flash_io_ctrl_fmt_endian;\n  wire  flash_io_addr_ready;\n  wire  flash_io_addr_valid;\n  wire [31:0] flash_io_addr_bits_next;\n  wire [31:0] flash_io_addr_bits_hold;\n  wire  flash_io_data_ready;\n  wire  flash_io_data_valid;\n  wire [7:0] flash_io_data_bits;\n  wire  flash_io_link_tx_ready;\n  wire  flash_io_link_tx_valid;\n  wire [7:0] flash_io_link_tx_bits;\n  wire  flash_io_link_rx_valid;\n  wire [7:0] flash_io_link_rx_bits;\n  wire [7:0] flash_io_link_cnt;\n  wire [1:0] flash_io_link_fmt_proto;\n  wire  flash_io_link_fmt_endian;\n  wire  flash_io_link_fmt_iodir;\n  wire  flash_io_link_cs_set;\n  wire  flash_io_link_cs_clear;\n  wire  flash_io_link_cs_hold;\n  wire  flash_io_link_active;\n  wire  flash_io_link_lock;\n  wire  arb_clock;\n  wire  arb_reset;\n  wire  arb_io_inner_0_tx_ready;\n  wire  arb_io_inner_0_tx_valid;\n  wire [7:0] arb_io_inner_0_tx_bits;\n  wire  arb_io_inner_0_rx_valid;\n  wire [7:0] arb_io_inner_0_rx_bits;\n  wire [7:0] arb_io_inner_0_cnt;\n  wire [1:0] arb_io_inner_0_fmt_proto;\n  wire  arb_io_inner_0_fmt_endian;\n  wire  arb_io_inner_0_fmt_iodir;\n  wire  arb_io_inner_0_cs_set;\n  wire  arb_io_inner_0_cs_clear;\n  wire  arb_io_inner_0_cs_hold;\n  wire  arb_io_inner_0_active;\n  wire  arb_io_inner_0_lock;\n  wire  arb_io_inner_1_tx_ready;\n  wire  arb_io_inner_1_tx_valid;\n  wire [7:0] arb_io_inner_1_tx_bits;\n  wire  arb_io_inner_1_rx_valid;\n  wire [7:0] arb_io_inner_1_rx_bits;\n  wire [7:0] arb_io_inner_1_cnt;\n  wire [1:0] arb_io_inner_1_fmt_proto;\n  wire  arb_io_inner_1_fmt_endian;\n  wire  arb_io_inner_1_fmt_iodir;\n  wire  arb_io_inner_1_cs_set;\n  wire  arb_io_inner_1_cs_clear;\n  wire  arb_io_inner_1_cs_hold;\n  wire  arb_io_inner_1_active;\n  wire  arb_io_inner_1_lock;\n  wire  arb_io_outer_tx_ready;\n  wire  arb_io_outer_tx_valid;\n  wire [7:0] arb_io_outer_tx_bits;\n  wire  arb_io_outer_rx_valid;\n  wire [7:0] arb_io_outer_rx_bits;\n  wire [7:0] arb_io_outer_cnt;\n  wire [1:0] arb_io_outer_fmt_proto;\n  wire  arb_io_outer_fmt_endian;\n  wire  arb_io_outer_fmt_iodir;\n  wire  arb_io_outer_cs_set;\n  wire  arb_io_outer_cs_clear;\n  wire  arb_io_outer_cs_hold;\n  wire  arb_io_outer_active;\n  wire  arb_io_sel;\n  reg [2:0] a_opcode;\n  reg [31:0] GEN_291;\n  reg [2:0] a_param;\n  reg [31:0] GEN_292;\n  reg [2:0] a_size;\n  reg [31:0] GEN_293;\n  reg [6:0] a_source;\n  reg [31:0] GEN_294;\n  reg [29:0] a_address;\n  reg [31:0] GEN_295;\n  reg  a_mask;\n  reg [31:0] GEN_296;\n  reg [7:0] a_data;\n  reg [31:0] GEN_297;\n  wire  T_1935;\n  wire [2:0] GEN_6;\n  wire [2:0] GEN_7;\n  wire [2:0] GEN_8;\n  wire [6:0] GEN_9;\n  wire [29:0] GEN_10;\n  wire  GEN_11;\n  wire [7:0] GEN_12;\n  wire [28:0] T_1936;\n  wire [28:0] T_1937;\n  wire [2:0] T_1949_opcode;\n  wire [1:0] T_1949_param;\n  wire [2:0] T_1949_size;\n  wire [6:0] T_1949_source;\n  wire  T_1949_sink;\n  wire  T_1949_addr_lo;\n  wire [7:0] T_1949_data;\n  wire  T_1949_error;\n  wire [1:0] T_1973_cmd_proto;\n  wire [7:0] T_1973_cmd_code;\n  wire  T_1973_cmd_en;\n  wire [1:0] T_1973_addr_proto;\n  wire [2:0] T_1973_addr_len;\n  wire [7:0] T_1973_pad_code;\n  wire [3:0] T_1973_pad_cnt;\n  wire [1:0] T_1973_data_proto;\n  reg [1:0] insn_cmd_proto;\n  reg [31:0] GEN_298;\n  reg [7:0] insn_cmd_code;\n  reg [31:0] GEN_299;\n  reg  insn_cmd_en;\n  reg [31:0] GEN_300;\n  reg [1:0] insn_addr_proto;\n  reg [31:0] GEN_301;\n  reg [2:0] insn_addr_len;\n  reg [31:0] GEN_302;\n  reg [7:0] insn_pad_code;\n  reg [31:0] GEN_303;\n  reg [3:0] insn_pad_cnt;\n  reg [31:0] GEN_304;\n  reg [1:0] insn_data_proto;\n  reg [31:0] GEN_305;\n  reg  flash_en;\n  reg [31:0] GEN_306;\n  wire  T_2005;\n  wire  T_2029_ready;\n  wire  T_2029_valid;\n  wire  T_2029_bits_read;\n  wire [9:0] T_2029_bits_index;\n  wire [31:0] T_2029_bits_data;\n  wire [3:0] T_2029_bits_mask;\n  wire [9:0] T_2029_bits_extra;\n  wire  T_2046;\n  wire [26:0] T_2047;\n  wire [1:0] T_2048;\n  wire [6:0] T_2049;\n  wire [9:0] T_2050;\n  wire  T_2068_ready;\n  wire  T_2068_valid;\n  wire  T_2068_bits_read;\n  wire [31:0] T_2068_bits_data;\n  wire [9:0] T_2068_bits_extra;\n  wire  T_2104_ready;\n  wire  T_2104_valid;\n  wire  T_2104_bits_read;\n  wire [9:0] T_2104_bits_index;\n  wire [31:0] T_2104_bits_data;\n  wire [3:0] T_2104_bits_mask;\n  wire [9:0] T_2104_bits_extra;\n  wire [9:0] T_2189;\n  wire  T_2191;\n  wire [9:0] T_2197;\n  wire [9:0] T_2198;\n  wire  T_2200;\n  wire [9:0] T_2206;\n  wire [9:0] T_2207;\n  wire  T_2209;\n  wire [9:0] T_2215;\n  wire [9:0] T_2216;\n  wire  T_2218;\n  wire [9:0] T_2224;\n  wire [9:0] T_2225;\n  wire  T_2227;\n  wire [9:0] T_2233;\n  wire [9:0] T_2234;\n  wire  T_2236;\n  wire [9:0] T_2242;\n  wire [9:0] T_2243;\n  wire  T_2245;\n  wire [9:0] T_2251;\n  wire [9:0] T_2252;\n  wire  T_2254;\n  wire [9:0] T_2260;\n  wire [9:0] T_2261;\n  wire  T_2263;\n  wire [9:0] T_2269;\n  wire [9:0] T_2270;\n  wire  T_2272;\n  wire [9:0] T_2278;\n  wire [9:0] T_2279;\n  wire  T_2281;\n  wire [9:0] T_2287;\n  wire [9:0] T_2288;\n  wire  T_2290;\n  wire [9:0] T_2296;\n  wire [9:0] T_2297;\n  wire  T_2299;\n  wire [9:0] T_2305;\n  wire [9:0] T_2306;\n  wire  T_2308;\n  wire [9:0] T_2314;\n  wire [9:0] T_2315;\n  wire  T_2317;\n  wire [9:0] T_2323;\n  wire [9:0] T_2324;\n  wire  T_2326;\n  wire  T_2334_0;\n  wire  T_2334_1;\n  wire  T_2334_2;\n  wire  T_2334_3;\n  wire  T_2334_4;\n  wire  T_2334_5;\n  wire  T_2334_6;\n  wire  T_2334_7;\n  wire  T_2334_8;\n  wire  T_2334_9;\n  wire  T_2334_10;\n  wire  T_2334_11;\n  wire  T_2334_12;\n  wire  T_2334_13;\n  wire  T_2334_14;\n  wire  T_2334_15;\n  wire  T_2334_16;\n  wire  T_2334_17;\n  wire  T_2334_18;\n  wire  T_2334_19;\n  wire  T_2334_20;\n  wire  T_2334_21;\n  wire  T_2334_22;\n  wire  T_2334_23;\n  wire  T_2334_24;\n  wire  T_2334_25;\n  wire  T_2334_26;\n  wire  T_2334_27;\n  wire  T_2334_28;\n  wire  T_2334_29;\n  wire  T_2334_30;\n  wire  T_2334_31;\n  wire  T_2334_32;\n  wire  T_2334_33;\n  wire  T_2334_34;\n  wire  T_2339_0;\n  wire  T_2339_1;\n  wire  T_2339_2;\n  wire  T_2339_3;\n  wire  T_2339_4;\n  wire  T_2339_5;\n  wire  T_2339_6;\n  wire  T_2339_7;\n  wire  T_2339_8;\n  wire  T_2339_9;\n  wire  T_2339_10;\n  wire  T_2339_11;\n  wire  T_2339_12;\n  wire  T_2339_13;\n  wire  T_2339_14;\n  wire  T_2339_15;\n  wire  T_2339_16;\n  wire  T_2339_17;\n  wire  T_2339_18;\n  wire  T_2339_19;\n  wire  T_2339_20;\n  wire  T_2339_21;\n  wire  T_2339_22;\n  wire  T_2339_23;\n  wire  T_2339_24;\n  wire  T_2339_25;\n  wire  T_2339_26;\n  wire  T_2339_27;\n  wire  T_2339_28;\n  wire  T_2339_29;\n  wire  T_2339_30;\n  wire  T_2339_31;\n  wire  T_2339_32;\n  wire  T_2339_33;\n  wire  T_2339_34;\n  wire  T_2344_0;\n  wire  T_2344_1;\n  wire  T_2344_2;\n  wire  T_2344_3;\n  wire  T_2344_4;\n  wire  T_2344_5;\n  wire  T_2344_6;\n  wire  T_2344_7;\n  wire  T_2344_8;\n  wire  T_2344_9;\n  wire  T_2344_10;\n  wire  T_2344_11;\n  wire  T_2344_12;\n  wire  T_2344_13;\n  wire  T_2344_14;\n  wire  T_2344_15;\n  wire  T_2344_16;\n  wire  T_2344_17;\n  wire  T_2344_18;\n  wire  T_2344_19;\n  wire  T_2344_20;\n  wire  T_2344_21;\n  wire  T_2344_22;\n  wire  T_2344_23;\n  wire  T_2344_24;\n  wire  T_2344_25;\n  wire  T_2344_26;\n  wire  T_2344_27;\n  wire  T_2344_28;\n  wire  T_2344_29;\n  wire  T_2344_30;\n  wire  T_2344_31;\n  wire  T_2344_32;\n  wire  T_2344_33;\n  wire  T_2344_34;\n  wire  T_2349_0;\n  wire  T_2349_1;\n  wire  T_2349_2;\n  wire  T_2349_3;\n  wire  T_2349_4;\n  wire  T_2349_5;\n  wire  T_2349_6;\n  wire  T_2349_7;\n  wire  T_2349_8;\n  wire  T_2349_9;\n  wire  T_2349_10;\n  wire  T_2349_11;\n  wire  T_2349_12;\n  wire  T_2349_13;\n  wire  T_2349_14;\n  wire  T_2349_15;\n  wire  T_2349_16;\n  wire  T_2349_17;\n  wire  T_2349_18;\n  wire  T_2349_19;\n  wire  T_2349_20;\n  wire  T_2349_21;\n  wire  T_2349_22;\n  wire  T_2349_23;\n  wire  T_2349_24;\n  wire  T_2349_25;\n  wire  T_2349_26;\n  wire  T_2349_27;\n  wire  T_2349_28;\n  wire  T_2349_29;\n  wire  T_2349_30;\n  wire  T_2349_31;\n  wire  T_2349_32;\n  wire  T_2349_33;\n  wire  T_2349_34;\n  wire  T_2354_0;\n  wire  T_2354_1;\n  wire  T_2354_2;\n  wire  T_2354_3;\n  wire  T_2354_4;\n  wire  T_2354_5;\n  wire  T_2354_6;\n  wire  T_2354_7;\n  wire  T_2354_8;\n  wire  T_2354_9;\n  wire  T_2354_10;\n  wire  T_2354_11;\n  wire  T_2354_12;\n  wire  T_2354_13;\n  wire  T_2354_14;\n  wire  T_2354_15;\n  wire  T_2354_16;\n  wire  T_2354_17;\n  wire  T_2354_18;\n  wire  T_2354_19;\n  wire  T_2354_20;\n  wire  T_2354_21;\n  wire  T_2354_22;\n  wire  T_2354_23;\n  wire  T_2354_24;\n  wire  T_2354_25;\n  wire  T_2354_26;\n  wire  T_2354_27;\n  wire  T_2354_28;\n  wire  T_2354_29;\n  wire  T_2354_30;\n  wire  T_2354_31;\n  wire  T_2354_32;\n  wire  T_2354_33;\n  wire  T_2354_34;\n  wire  T_2359_0;\n  wire  T_2359_1;\n  wire  T_2359_2;\n  wire  T_2359_3;\n  wire  T_2359_4;\n  wire  T_2359_5;\n  wire  T_2359_6;\n  wire  T_2359_7;\n  wire  T_2359_8;\n  wire  T_2359_9;\n  wire  T_2359_10;\n  wire  T_2359_11;\n  wire  T_2359_12;\n  wire  T_2359_13;\n  wire  T_2359_14;\n  wire  T_2359_15;\n  wire  T_2359_16;\n  wire  T_2359_17;\n  wire  T_2359_18;\n  wire  T_2359_19;\n  wire  T_2359_20;\n  wire  T_2359_21;\n  wire  T_2359_22;\n  wire  T_2359_23;\n  wire  T_2359_24;\n  wire  T_2359_25;\n  wire  T_2359_26;\n  wire  T_2359_27;\n  wire  T_2359_28;\n  wire  T_2359_29;\n  wire  T_2359_30;\n  wire  T_2359_31;\n  wire  T_2359_32;\n  wire  T_2359_33;\n  wire  T_2359_34;\n  wire  T_2364_0;\n  wire  T_2364_1;\n  wire  T_2364_2;\n  wire  T_2364_3;\n  wire  T_2364_4;\n  wire  T_2364_5;\n  wire  T_2364_6;\n  wire  T_2364_7;\n  wire  T_2364_8;\n  wire  T_2364_9;\n  wire  T_2364_10;\n  wire  T_2364_11;\n  wire  T_2364_12;\n  wire  T_2364_13;\n  wire  T_2364_14;\n  wire  T_2364_15;\n  wire  T_2364_16;\n  wire  T_2364_17;\n  wire  T_2364_18;\n  wire  T_2364_19;\n  wire  T_2364_20;\n  wire  T_2364_21;\n  wire  T_2364_22;\n  wire  T_2364_23;\n  wire  T_2364_24;\n  wire  T_2364_25;\n  wire  T_2364_26;\n  wire  T_2364_27;\n  wire  T_2364_28;\n  wire  T_2364_29;\n  wire  T_2364_30;\n  wire  T_2364_31;\n  wire  T_2364_32;\n  wire  T_2364_33;\n  wire  T_2364_34;\n  wire  T_2369_0;\n  wire  T_2369_1;\n  wire  T_2369_2;\n  wire  T_2369_3;\n  wire  T_2369_4;\n  wire  T_2369_5;\n  wire  T_2369_6;\n  wire  T_2369_7;\n  wire  T_2369_8;\n  wire  T_2369_9;\n  wire  T_2369_10;\n  wire  T_2369_11;\n  wire  T_2369_12;\n  wire  T_2369_13;\n  wire  T_2369_14;\n  wire  T_2369_15;\n  wire  T_2369_16;\n  wire  T_2369_17;\n  wire  T_2369_18;\n  wire  T_2369_19;\n  wire  T_2369_20;\n  wire  T_2369_21;\n  wire  T_2369_22;\n  wire  T_2369_23;\n  wire  T_2369_24;\n  wire  T_2369_25;\n  wire  T_2369_26;\n  wire  T_2369_27;\n  wire  T_2369_28;\n  wire  T_2369_29;\n  wire  T_2369_30;\n  wire  T_2369_31;\n  wire  T_2369_32;\n  wire  T_2369_33;\n  wire  T_2369_34;\n  wire  T_2531;\n  wire  T_2532;\n  wire  T_2533;\n  wire  T_2534;\n  wire [7:0] T_2538;\n  wire [7:0] T_2542;\n  wire [7:0] T_2546;\n  wire [7:0] T_2550;\n  wire [15:0] T_2551;\n  wire [15:0] T_2552;\n  wire [31:0] T_2553;\n  wire [11:0] T_2577;\n  wire [11:0] T_2581;\n  wire  T_2583;\n  wire  T_2596;\n  wire [11:0] T_2597;\n  wire [11:0] GEN_13;\n  wire  T_2617;\n  wire  T_2621;\n  wire  T_2623;\n  wire  T_2636;\n  wire  T_2637;\n  wire  GEN_14;\n  wire [7:0] T_2657;\n  wire  T_2659;\n  wire [7:0] T_2661;\n  wire  T_2663;\n  wire  T_2676;\n  wire [7:0] T_2677;\n  wire [7:0] GEN_15;\n  wire [7:0] T_2697;\n  wire [7:0] T_2701;\n  wire  T_2703;\n  wire  T_2716;\n  wire [7:0] T_2717;\n  wire [7:0] GEN_16;\n  wire [23:0] GEN_226;\n  wire [23:0] T_2732;\n  wire [23:0] GEN_227;\n  wire [23:0] T_2736;\n  wire  T_2756;\n  wire  GEN_17;\n  wire  T_2796;\n  wire  GEN_18;\n  wire [2:0] T_2817;\n  wire [2:0] T_2821;\n  wire  T_2823;\n  wire  T_2836;\n  wire [2:0] T_2837;\n  wire [2:0] GEN_19;\n  wire [3:0] GEN_228;\n  wire [3:0] T_2852;\n  wire [3:0] GEN_229;\n  wire [3:0] T_2856;\n  wire [3:0] T_2857;\n  wire [3:0] T_2861;\n  wire  T_2863;\n  wire  T_2876;\n  wire [3:0] T_2877;\n  wire [3:0] GEN"}
{"text": "_20;\n  wire [7:0] GEN_230;\n  wire [7:0] T_2892;\n  wire [7:0] GEN_231;\n  wire [7:0] T_2896;\n  wire [1:0] T_2897;\n  wire [1:0] T_2901;\n  wire  T_2903;\n  wire  T_2916;\n  wire [1:0] T_2917;\n  wire [1:0] GEN_21;\n  wire [9:0] GEN_232;\n  wire [9:0] T_2932;\n  wire [9:0] GEN_233;\n  wire [9:0] T_2936;\n  wire [1:0] T_2937;\n  wire [1:0] T_2941;\n  wire  T_2943;\n  wire  T_2956;\n  wire [1:0] T_2957;\n  wire [1:0] GEN_22;\n  wire [11:0] GEN_234;\n  wire [11:0] T_2972;\n  wire [11:0] GEN_235;\n  wire [11:0] T_2976;\n  wire [1:0] T_2977;\n  wire [1:0] T_2981;\n  wire  T_2983;\n  wire  T_2996;\n  wire [1:0] T_2997;\n  wire [1:0] GEN_23;\n  wire [13:0] GEN_236;\n  wire [13:0] T_3012;\n  wire [13:0] GEN_237;\n  wire [13:0] T_3016;\n  wire  T_3036;\n  wire [7:0] GEN_24;\n  wire [23:0] GEN_238;\n  wire [23:0] T_3052;\n  wire [23:0] GEN_239;\n  wire [23:0] T_3056;\n  wire [7:0] T_3057;\n  wire [7:0] T_3061;\n  wire  T_3063;\n  wire  T_3076;\n  wire [7:0] T_3077;\n  wire [7:0] GEN_25;\n  wire [31:0] GEN_240;\n  wire [31:0] T_3092;\n  wire [31:0] GEN_241;\n  wire [31:0] T_3096;\n  wire [3:0] T_3097;\n  wire [3:0] T_3101;\n  wire  T_3103;\n  wire  T_3116;\n  wire [3:0] T_3117;\n  wire [3:0] GEN_26;\n  wire  T_3172;\n  wire  T_3177;\n  wire  T_3181;\n  wire  T_3183;\n  wire  T_3197;\n  wire [1:0] GEN_242;\n  wire [1:0] T_3212;\n  wire [1:0] GEN_243;\n  wire [1:0] T_3216;\n  wire  T_3236;\n  wire  GEN_27;\n  wire  T_3276;\n  wire  GEN_28;\n  wire [1:0] GEN_244;\n  wire [1:0] T_3292;\n  wire [1:0] GEN_245;\n  wire [1:0] T_3296;\n  wire [1:0] T_3297;\n  wire [1:0] T_3301;\n  wire  T_3303;\n  wire  T_3316;\n  wire [1:0] T_3317;\n  wire [1:0] GEN_29;\n  wire  T_3356;\n  wire  GEN_30;\n  wire  T_3396;\n  wire  GEN_31;\n  wire [1:0] GEN_246;\n  wire [1:0] T_3412;\n  wire [1:0] GEN_247;\n  wire [1:0] T_3416;\n  wire  T_3436;\n  wire [3:0] GEN_32;\n  wire  T_3476;\n  wire [31:0] GEN_248;\n  wire [31:0] T_3572;\n  wire  T_3596;\n  wire [1:0] GEN_33;\n  wire  T_3617;\n  wire  T_3621;\n  wire  T_3623;\n  wire  T_3636;\n  wire  T_3637;\n  wire  GEN_34;\n  wire [2:0] GEN_249;\n  wire [2:0] T_3652;\n  wire [2:0] GEN_250;\n  wire [2:0] T_3656;\n  wire  T_3657;\n  wire  T_3661;\n  wire  T_3663;\n  wire  T_3676;\n  wire  T_3677;\n  wire  GEN_35;\n  wire [3:0] GEN_251;\n  wire [3:0] T_3692;\n  wire [3:0] GEN_252;\n  wire [3:0] T_3696;\n  wire [3:0] T_3697;\n  wire [3:0] T_3701;\n  wire  T_3703;\n  wire  T_3716;\n  wire [3:0] T_3717;\n  wire [3:0] GEN_36;\n  wire [19:0] GEN_253;\n  wire [19:0] T_3732;\n  wire [19:0] GEN_254;\n  wire [19:0] T_3736;\n  wire  T_3756;\n  wire [7:0] GEN_37;\n  wire  T_3796;\n  wire [7:0] GEN_38;\n  wire [23:0] GEN_255;\n  wire [23:0] T_3812;\n  wire [23:0] GEN_256;\n  wire [23:0] T_3816;\n  wire  T_3832;\n  wire [7:0] T_3852;\n  wire [30:0] T_3896;\n  wire [31:0] GEN_257;\n  wire [31:0] T_3932;\n  wire [31:0] GEN_258;\n  wire [31:0] T_3936;\n  wire  T_3956;\n  wire  GEN_39;\n  wire  T_3978;\n  wire  T_3980;\n  wire  T_3982;\n  wire  T_3983;\n  wire  T_3985;\n  wire  T_3993;\n  wire  T_3995;\n  wire  T_3997;\n  wire  T_3999;\n  wire  T_4001;\n  wire  T_4003;\n  wire  T_4014;\n  wire  T_4015;\n  wire  T_4017;\n  wire  T_4019;\n  wire  T_4020;\n  wire  T_4022;\n  wire  T_4036;\n  wire  T_4037;\n  wire  T_4038;\n  wire  T_4039;\n  wire  T_4041;\n  wire  T_4046;\n  wire  T_4047;\n  wire  T_4048;\n  wire  T_4050;\n  wire  T_4052;\n  wire  T_4053;\n  wire  T_4054;\n  wire  T_4056;\n  wire  T_4058;\n  wire  T_4060;\n  wire  T_4062;\n  wire  T_4064;\n  wire  T_4072;\n  wire  T_4074;\n  wire  T_4076;\n  wire  T_4077;\n  wire  T_4078;\n  wire  T_4079;\n  wire  T_4080;\n  wire  T_4081;\n  wire  T_4082;\n  wire  T_4083;\n  wire  T_4085;\n  wire  T_4093;\n  wire  T_4094;\n  wire  T_4096;\n  wire  T_4098;\n  wire  T_4099;\n  wire  T_4101;\n  wire  T_4143_0;\n  wire  T_4143_1;\n  wire  T_4143_2;\n  wire  T_4143_3;\n  wire  T_4143_4;\n  wire  T_4143_5;\n  wire  T_4143_6;\n  wire  T_4143_7;\n  wire  T_4143_8;\n  wire  T_4143_9;\n  wire  T_4143_10;\n  wire  T_4143_11;\n  wire  T_4143_12;\n  wire  T_4143_13;\n  wire  T_4143_14;\n  wire  T_4143_15;\n  wire  T_4143_16;\n  wire  T_4143_17;\n  wire  T_4143_18;\n  wire  T_4143_19;\n  wire  T_4143_20;\n  wire  T_4143_21;\n  wire  T_4143_22;\n  wire  T_4143_23;\n  wire  T_4143_24;\n  wire  T_4143_25;\n  wire  T_4143_26;\n  wire  T_4143_27;\n  wire  T_4143_28;\n  wire  T_4143_29;\n  wire  T_4143_30;\n  wire  T_4143_31;\n  wire  T_4181;\n  wire  T_4184;\n  wire  T_4186;\n  wire  T_4196;\n  wire  T_4200;\n  wire  T_4204;\n  wire  T_4216;\n  wire  T_4218;\n  wire  T_4221;\n  wire  T_4223;\n  wire  T_4238;\n  wire  T_4239;\n  wire  T_4240;\n  wire  T_4242;\n  wire  T_4248;\n  wire  T_4249;\n  wire  T_4251;\n  wire  T_4254;\n  wire  T_4255;\n  wire  T_4257;\n  wire  T_4261;\n  wire  T_4265;\n  wire  T_4275;\n  wire  T_4278;\n  wire  T_4279;\n  wire  T_4280;\n  wire  T_4281;\n  wire  T_4282;\n  wire  T_4283;\n  wire  T_4284;\n  wire  T_4286;\n  wire  T_4295;\n  wire  T_4297;\n  wire  T_4300;\n  wire  T_4302;\n  wire  T_4344_0;\n  wire  T_4344_1;\n  wire  T_4344_2;\n  wire  T_4344_3;\n  wire  T_4344_4;\n  wire  T_4344_5;\n  wire  T_4344_6;\n  wire  T_4344_7;\n  wire  T_4344_8;\n  wire  T_4344_9;\n  wire  T_4344_10;\n  wire  T_4344_11;\n  wire  T_4344_12;\n  wire  T_4344_13;\n  wire  T_4344_14;\n  wire  T_4344_15;\n  wire  T_4344_16;\n  wire  T_4344_17;\n  wire  T_4344_18;\n  wire  T_4344_19;\n  wire  T_4344_20;\n  wire  T_4344_21;\n  wire  T_4344_22;\n  wire  T_4344_23;\n  wire  T_4344_24;\n  wire  T_4344_25;\n  wire  T_4344_26;\n  wire  T_4344_27;\n  wire  T_4344_28;\n  wire  T_4344_29;\n  wire  T_4344_30;\n  wire  T_4344_31;\n  wire  T_4382;\n  wire  T_4385;\n  wire  T_4387;\n  wire  T_4397;\n  wire  T_4401;\n  wire  T_4405;\n  wire  T_4417;\n  wire  T_4419;\n  wire  T_4422;\n  wire  T_4424;\n  wire  T_4439;\n  wire  T_4440;\n  wire  T_4441;\n  wire  T_4443;\n  wire  T_4449;\n  wire  T_4450;\n  wire  T_4452;\n  wire  T_4455;\n  wire  T_4456;\n  wire  T_4458;\n  wire  T_4462;\n  wire  T_4466;\n  wire  T_4476;\n  wire  T_4479;\n  wire  T_4480;\n  wire  T_4481;\n  wire  T_4482;\n  wire  T_4483;\n  wire  T_4484;\n  wire  T_4485;\n  wire  T_4487;\n  wire  T_4496;\n  wire  T_4498;\n  wire  T_4501;\n  wire  T_4503;\n  wire  T_4545_0;\n  wire  T_4545_1;\n  wire  T_4545_2;\n  wire  T_4545_3;\n  wire  T_4545_4;\n  wire  T_4545_5;\n  wire  T_4545_6;\n  wire  T_4545_7;\n  wire  T_4545_8;\n  wire  T_4545_9;\n  wire  T_4545_10;\n  wire  T_4545_11;\n  wire  T_4545_12;\n  wire  T_4545_13;\n  wire  T_4545_14;\n  wire  T_4545_15;\n  wire  T_4545_16;\n  wire  T_4545_17;\n  wire  T_4545_18;\n  wire  T_4545_19;\n  wire  T_4545_20;\n  wire  T_4545_21;\n  wire  T_4545_22;\n  wire  T_4545_23;\n  wire  T_4545_24;\n  wire  T_4545_25;\n  wire  T_4545_26;\n  wire  T_4545_27;\n  wire  T_4545_28;\n  wire  T_4545_29;\n  wire  T_4545_30;\n  wire  T_4545_31;\n  wire  T_4583;\n  wire  T_4586;\n  wire  T_4588;\n  wire  T_4598;\n  wire  T_4602;\n  wire  T_4606;\n  wire  T_4618;\n  wire  T_4620;\n  wire  T_4623;\n  wire  T_4625;\n  wire  T_4640;\n  wire  T_4641;\n  wire  T_4642;\n  wire  T_4644;\n  wire  T_4650;\n  wire  T_4651;\n  wire  T_4653;\n  wire  T_4656;\n  wire  T_4657;\n  wire  T_4659;\n  wire  T_4663;\n  wire  T_4667;\n  wire  T_4677;\n  wire  T_4680;\n  wire  T_4681;\n  wire  T_4682;\n  wire  T_4683;\n  wire  T_4684;\n  wire  T_4685;\n  wire  T_4686;\n  wire  T_4688;\n  wire  T_4697;\n  wire  T_4699;\n  wire  T_4702;\n  wire  T_4704;\n  wire  T_4746_0;\n  wire  T_4746_1;\n  wire  T_4746_2;\n  wire  T_4746_3;\n  wire  T_4746_4;\n  wire  T_4746_5;\n  wire  T_4746_6;\n  wire  T_4746_7;\n  wire  T_4746_8;\n  wire  T_4746_9;\n  wire  T_4746_10;\n  wire  T_4746_11;\n  wire  T_4746_12;\n  wire  T_4746_13;\n  wire  T_4746_14;\n  wire  T_4746_15;\n  wire  T_4746_16;\n  wire  T_4746_17;\n  wire  T_4746_18;\n  wire  T_4746_19;\n  wire  T_4746_20;\n  wire  T_4746_21;\n  wire  T_4746_22;\n  wire  T_4746_23;\n  wire  T_4746_24;\n  wire  T_4746_25;\n  wire  T_4746_26;\n  wire  T_4746_27;\n  wire  T_4746_28;\n  wire  T_4746_29;\n  wire  T_4746_30;\n  wire  T_4746_31;\n  wire  T_4781;\n  wire  T_4782;\n  wire  T_4783;\n  wire  T_4784;\n  wire  T_4785;\n  wire [1:0] T_4791;\n  wire [1:0] T_4792;\n  wire [2:0] T_4793;\n  wire [4:0] T_4794;\n  wire  GEN_0;\n  wire  GEN_40;\n  wire  GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire  GEN_48;\n  wire  GEN_49;\n  wire  GEN_50;\n  wire  GEN_51;\n  wire  GEN_52;\n  wire  GEN_53;\n  wire  GEN_54;\n  wire  GEN_55;\n  wire  GEN_56;\n  wire  GEN_57;\n  wire  GEN_58;\n  wire  GEN_59;\n  wire  GEN_60;\n  wire  GEN_61;\n  wire  GEN_62;\n  wire  GEN_63;\n  wire  GEN_64;\n  wire  GEN_65;\n  wire  GEN_66;\n  wire  GEN_67;\n  wire  GEN_68;\n  wire  GEN_69;\n  wire  GEN_70;\n  wire  GEN_1;\n  wire  GEN_71;\n  wire  GEN_72;\n  wire  GEN_73;\n  wire  GEN_74;\n  wire  GEN_75;\n  wire  GEN_76;\n  wire  GEN_77;\n  wire  GEN_78;\n  wire  GEN_79;\n  wire  GEN_80;\n  wire  GEN_81;\n  wire  GEN_82;\n  wire  GEN_83;\n  wire  GEN_84;\n  wire  GEN_85;\n  wire  GEN_86;\n  wire  GEN_87;\n  wire  GEN_88;\n  wire  GEN_89;\n  wire  GEN_90;\n  wire  GEN_91;\n  wire  GEN_92;\n  wire  GEN_93;\n  wire  GEN_94;\n  wire  GEN_95;\n  wire  GEN_96;\n  wire  GEN_97;\n  wire  GEN_98;\n  wire  GEN_99;\n  wire  GEN_100;\n  wire  GEN_101;\n  wire  T_4811;\n  wire  GEN_2;\n  wire  GEN_102;\n  wire  GEN_103;\n  wire  GEN_104;\n  wire  GEN_105;\n  wire  GEN_106;\n  wire  GEN_107;\n  wire  GEN_108;\n  wire  GEN_109;\n  wire  GEN_110;\n  wire  GEN_111;\n  wire  GEN_112;\n  wire  GEN_113;\n  wire  GEN_114;\n  wire  GEN_115;\n  wire  GEN_116;\n  wire  GEN_117;\n  wire  GEN_118;\n  wire  GEN_119;\n  wire  GEN_120;\n  wire  GEN_121;\n  wire  GEN_122;\n  wire  GEN_123;\n  wire  GEN_124;\n  wire  GEN_125;\n  wire  GEN_126;\n  wire  GEN_127;\n  wire  GEN_128;\n  wire  GEN_129;\n  wire  GEN_130;\n  wire  GEN_131;\n  wire  GEN_132;\n  wire  GEN_3;\n  wire  GEN_133;\n  wire  GEN_134;\n  wire  GEN_135;\n  wire  GEN_136;\n  wire  GEN_137;\n  wire  GEN_138;\n  wire  GEN_139;\n  wire  GEN_140;\n  wire  GEN_141;\n  wire  GEN_142;\n  wire  GEN_143;\n  wire  GEN_144;\n  wire  GEN_145;\n  wire  GEN_146;\n  wire  GEN_147;\n  wire  GEN_148;\n  wire  GEN_149;\n  wire  GEN_150;\n  wire  GEN_151;\n  wire  GEN_152;\n  wire  GEN_153;\n  wire  GEN_154;\n  wire  GEN_155;\n  wire  GEN_156;\n  wire  GEN_157;\n  wire  GEN_158;\n  wire  GEN_159;\n  wire  GEN_160;\n  wire  GEN_161;\n  wire  GEN_162;\n  wire  GEN_163;\n  wire  T_4814;\n  wire  T_4815;\n  wire  T_4816;\n  wire  T_4817;\n  wire  T_4818;\n  wire [31:0] T_4820;\n  wire [1:0] T_4821;\n  wire [3:0] T_4823;\n  wire [1:0] T_4824;\n  wire [1:0] T_4825;\n  wire [3:0] T_4826;\n  wire [7:0] T_4827;\n  wire [1:0] T_4829;\n  wire [3:0] T_4830;\n  wire [7:0] T_4834;\n  wire [15:0] T_4835;\n  wire [1:0] T_4836;\n  wire [1:0] T_4837;\n  wire [3:0] T_4838;\n  wire [1:0] T_4839;\n  wire [3:0] T_4841;\n  wire [7:0] T_4842;\n  wire [1:0] T_4843;\n  wire [3:0] T_4845;\n  wire [1:0] T_4846;\n  wire [3:0] T_4848;\n  wire [7:0] T_4849;\n  wire [15:0] T_4850;\n  wire [31:0] T_4851;\n  wire [31:0] T_4852;\n  wire  T_4887;\n  wire  T_4888;\n  wire  T_4889;\n  wire  T_4890;\n  wire  T_4893;\n  wire  T_4894;\n  wire  T_4896;\n  wire  T_4897;\n  wire  T_4898;\n  wire  T_4900;\n  wire  T_4904;\n  wire  T_4906;\n  wire  T_4909;\n  wire  T_4910;\n  wire  T_4916;\n  wire  T_4920;\n  wire  T_4926;\n  wire  T_4969;\n  wire  T_4970;\n  wire  T_4976;\n  wire  T_4980;\n  wire  T_4986;\n  wire  T_4989;\n  wire  T_4990;\n  wire  T_4996;\n  wire  T_5000;\n  wire  T_5006;\n  wire  T_5009;\n  wire  T_5010;\n  wire  T_5016;\n  wire  T_5020;\n  wire  T_5026;\n  wire  T_5089;\n  wire  T_5090;\n  wire  T_5096;\n  wire  T_5100;\n  wire  T_5106;\n  wire  T_5109;\n  wire  T_5110;\n  wire  T_5116;\n  wire  T_5120;\n  wire  T_5126;\n  wire  T_5209;\n  wire  T_5210;\n  wire  T_5216;\n  wire  T_5220;\n  wire  T_5226;\n  wire  T_5249;\n  wire  T_5250;\n  wire  T_5256;\n  wire  T_5260;\n  wire  T_5266;\n  wire  T_5269;\n  wire  T_5270;\n  wire  T_5276;\n  wire  T_5280;\n  wire  T_5286;\n  wire  T_5289;\n  wire  T_5290;\n  wire  T_5296;\n  wire  T_5300;\n  wire  T_5306;\n  wire  T_5309;\n  wire  T_5310;\n  wire  T_5316;\n  wire  T_5320;\n  wire  T_5326;\n  wire  T_5369;\n  wire  T_5370;\n  wire  T_5376;\n  wire  T_5380;\n  wire  T_5386;\n  wire  T_5389;\n  wire  T_5390;\n  wire  T_5396;\n  wire  T_5400;\n  wire  T_5406;\n  wire  T_5449;\n  wire  T_5450;\n  wire  T_5456;\n  wire  T_5460;\n  wire  T_5466;\n  wire  T_5469;\n  wire  T_5470;\n  wire  T_5476;\n  wire  T_5480;\n  wire  T_5486;\n  wire  T_5535;\n  wire  T_5537;\n  wire  T_5539;\n  wire  T_5541;\n  wire  T_5543;\n  wire  T_5545;\n  wire  T_5547;\n  wire  T_5549;\n  wire  T_5555;\n  wire  T_5556;\n  wire  T_5557;\n  wire  T_5558;\n  wire  T_5559;\n  wire  T_5560;\n  wire  T_5561;\n  wire  T_5563;\n  wire  T_5564;\n  wire  T_5565;\n  wire  T_5566;\n  wire  T_5567;\n  wire  T_5568;\n  wire  T_5569;\n  wire  T_5571;\n  wire  T_5572;\n  wire  T_5573;\n  wire  T_5574;\n  wire  T_5575;\n  wire  T_5576;\n  wire  T_5577;\n  wire  T_5579;\n  wire  T_5580;\n  wire  T_5581;\n  wire  T_5582;\n  wire  T_5583;\n  wire  T_5584;\n  wire  T_5585;\n  wire  T_5593;\n  wire  T_5601;\n  wire  T_5609;\n  wire  T_5617;\n  wire  T_5624;\n  wire  T_5625;\n  wire  T_5632;\n  wire  T_5633;\n  wire  T_5640;\n  wire  T_5641;\n  wire  T_5648;\n  wire  T_5649;\n  wire  T_5655;\n  wire  T_5656;\n  wire  T_5657;\n  wire  T_5663;\n  wire  T_5664;\n  wire  T_5665;\n  wire  T_5671;\n  wire  T_5672;\n  wire  T_5673;\n  wire  T_5679;\n  wire  T_5680;\n  wire  T_5681;\n  wire  T_5686;\n  wire  T_5687;\n  wire  T_5688;\n  wire  T_5689;\n  wire  T_5694;\n  wire  T_5695;\n  wire  T_5696;\n  wire  T_5697;\n  wire  T_5702;\n  wire  T_5703;\n  wire  T_5704;\n  wire  T_5705;\n  wire  T_5710;\n  wire  T_5711;\n  wire  T_5712;\n  wire  T_5713;\n  wire  T_5717;\n  wire  T_5718;\n  wire  T_5719;\n  wire  T_5720;\n  wire  T_5721;\n  wire  T_5725;\n  wire  T_5726;\n  wire  T_5727;\n  wire  T_5728;\n  wire  T_5729;\n  wire  T_5733;\n  wire  T_5734;\n  wire  T_5735;\n  wire  T_5736;\n  wire  T_5737;\n  wire  T_5741;\n  wire  T_5742;\n  wire  T_5743;\n  wire  T_5744;\n  wire  T_5745;\n  wire  T_5748;\n  wire  T_5749;\n  wire  T_5750;\n  wire  T_5751;\n  wire  T_5752;\n  wire  T_5753;\n  wire  T_5756;\n  wire  T_5757;\n  wire  T_5758;\n  wire  T_5759;\n  wire  T_5760;\n  wire  T_5761;\n  wire  T_5764;\n  wire  T_5765;\n  wire  T_5766;\n  wire  T_5767;\n  wire  T_5768;\n  wire  T_5769;\n  wire  T_5772;\n  wire  T_5773;\n  wire  T_5774;\n  wire  T_5775;\n  wire  T_5776;\n  wire  T_5777;\n  wire  T_5779;\n  wire  T_5780;\n  wire  T_5781;\n  wire  T_5782;\n  wire  T_5783;\n  wire  T_5784;\n  wire  T_5785;\n  wire  T_5787;\n  wire  T_5788;\n  wire  T_5789;\n  wire  T_5790;\n  wire  T_5791;\n  wire  T_5792;\n  wire  T_5793;\n  wire  T_5795;\n  wire  T_5796;\n  wire  T_5797;\n  wire  T_5798;\n  wire  T_5799;\n  wire  T_5800;\n  wire  T_5801;\n  wire  T_5803;\n  wire  T_5804;\n  wire  T_5805;\n  wire  T_5806;\n  wire  T_5807;\n  wire  T_5808;\n  wire  T_5809;\n  wire  T_5815;\n  wire  T_5817;\n  wire  T_5819;\n  wire  T_5821;\n  wire  T_5823;\n  wire  T_5825;\n  wire  T_5827;\n  wire  T_5829;\n  wire  T_5831;\n  wire  T_5833;\n  wire  T_5835;\n  wire  T_5837;\n  wire  T_5839;\n  wire  T_5841;\n  wire  T_5843;\n  wire  T_5845;\n  wire  T_5851;\n  wire  T_5853;\n  wire  T_5855;\n  wire  T_5857;\n  wire  T_5859;\n  wire  T_5861;\n  wire  T_5863;\n  wire  T_5865;\n  wire  T_5871;\n  wire  T_5872;\n  wire  T_5874;\n  wire  T_5875;\n  wire  T_5877;\n  wire  T_5878;\n  wire  T_5880;\n  wire  T_5881;\n  wire  T_5884;\n  wire  T_5887;\n  wire  T_5890;\n  wire  T_5893;\n  wire  T_5895;\n  wire  T_5896;\n  wire  T_5898;\n  wire  T_5899;\n  wire  T_5901;\n  wire  T_5902;\n  wire  T_5904;\n  wire  T_5905;\n  wire  T_5907;\n  wire  T_5908;\n  wire  T_5909;\n  wire  T_5911;\n  wire  T_5912;\n  wire  T_5913;\n  wire  T_5915;\n  wire  T_5916;\n  wire  T_5917;\n  wire  T_5919;\n  wire  T_5920;\n  wire  T_5921;\n  wire  T_5925;\n  wire  T_5929;\n  wire  T_5933;\n  wire  T_5937;\n  wire  T_5940;\n  wire  T_5941;\n  wire  T_5944;\n  wire  T_5945;\n  wire  T_5948;\n  wire  T_5949;\n  wire  T_5952;\n  wire  T_5953;\n  wire  T_5955;\n  wire  T_5956;\n  wire  T_5957;\n  wire  T_5959;\n  wire  T_5960;\n  wire  T_5961;\n  wire  T_5963;\n  wire  T_5964;\n  wire  T_5965;\n  wire  T_5967;\n  wire  T_5968;\n  wire  T_5969;\n  wire  T_5971;\n  wire  T_5973;\n  wire  T_5975;\n  wire  T_5977;\n  wire  T_5979;\n  wire  T_5981;\n  wire  T_5983;\n  wire  T_5985;\n  wire  T_5987;\n  wire  T_5988;\n  wire  T_5990;\n  wire  T_5991;\n  wire  T_5993;\n  wire  T_5994;\n  wire  T_5996;\n  wire  T_5997;\n  wire  T_6000;\n  wire  T_6003;\n  wire  T_6006;\n  wire  T_6009;\n  wire  T_6011;\n  wire  T_6012;\n  wire  T_6014;\n  wire  T_6015;\n  wire  T_6017;\n  wire  T_6018;\n  wire  T_6020;\n  wire  T_6021;\n  wire  T_6062_0;\n  wire  T_6062_1;\n  wire  T_6062_2;\n  wire  T_6062_3;\n  wire  T_6062_4;\n  wire  T_6062_5;\n  wire  T_6062_6;\n  wire  T_6062_7;\n  wire  T_6062_8;\n  wire  T_6062_9;\n  wire  T_6062_10;\n  wire  T_6062_11;\n  wire  T_6062_12;\n  wire  T_6062_13;\n  wire  T_6062_14;\n  wire  T_6062_15;\n  wire  T_6062_16;\n  wire  T_6062_17;\n  wire  T_6062_18;\n  wire  T_6062_19;\n  wire  T_6062_20;\n  wire  T_6062_21;\n  wire  T_6062_22;\n  wire  T_6062_23;\n  wire  T_6062_24;\n  wire  T_6062_25;\n  wire  T_6062_26;\n  wire  T_6062_27;\n  wire  T_6062_28;\n  wire  T_6062_29;\n  wire  T_6062_30;\n  wire  T_6062_31;\n  wire [31:0] T_6133_0;\n  wire [31:0] T_6133_1;\n  wire [31:0] T_6133_2;\n  wire [31:0] T_6133_3;\n  wire [31:0] T_6133_4;\n  wire [31:0] T_6133_5;\n  wire [31:0] T_6133_6;\n  wire [31:0] T_6133_7;\n  wire [31:0] T_6133_8;\n  wire [31:0] T_6133_9;\n  wire [31:0] T_6133_10;\n  wire [31:0] T_6133_11;\n  wire [31:0] T_6133_12;\n  wire [31:0] T_6133_13;\n  wire [31:0] T_6133_14;\n  wire [31:0] T_6133_15;\n  wire [31:0] T_6133_16;\n  wire [31:0] T_6133_17;\n  wire [31:0] T_6133_18;\n  wire [31:0] T_6133_19;\n  wire [31:0] T_6133_20;\n  wire [31:0] T_6133_21;\n  wire [31:0] T_6133_22;\n  wire [31:0] T_6133_23;\n  wire [31:0] T_6133_24;\n  wire [31:0] T_6133_25;\n  wire [31:0] T_6133_26;\n  wire [31:0] T_6133_27;\n  wire [31:0] T_6133_28;\n  wire [31:0] T_6133_29;\n  wire [31:0] T_6133_30;\n  wire [31:0] T_6133_31;\n  wire  GEN_4;\n  wire  GEN_164;\n  wire  GEN_165;\n  wire  GEN_166;\n  wire  GEN_167;\n  wire  GEN_168;\n  wire  GEN_169;\n  wire  GEN_170;\n  wire  GEN_171;\n  wire  GEN_172;\n  wire  GEN_173;\n  wire  GEN_174;\n  wire  GEN_175;\n  wire  GEN_176;\n  wire  GEN_177;\n  wire  GEN_178;\n  wire  GEN_179;\n  wire  GEN_180;\n  wire  GEN_181;\n  wire  GEN_182;\n  wire  GEN_183;\n  wire  GEN_184;\n  wire  GEN_185;\n  wire  GEN_186;\n  wire  GEN_187;\n  wire  GEN_188;\n  wire  GEN_189;\n  wire  GEN_190;\n  wire  GEN_191;\n  wire  GEN_192;\n  wire  GEN_193;\n  wire  GEN_194;\n  wire [31:0] GEN_5;\n  wire [31:0] GEN_195;\n  wire [31:0] GEN_196;\n  wire [31:0] GEN_197;\n  wire [31:0] GEN_198;\n  wire [31:0] GEN_199;\n  wire [31:0] GEN_200;\n  wire [31:0] GEN_201;\n  wire [31:0] GEN_202;\n  wire [31:0] GEN_203;\n  wire [31:0] GEN_204;\n  wire [31:0] GEN_205;\n  wire [31:0] GEN_206;\n  wire [31:0] GEN_207;\n  wire [31:0] GEN_208;\n  wire [31:0] GEN_209;\n  wire [31:0] GEN_210;\n  wire [31:0] GEN_211;\n  wire [31:0] GEN_212;\n  wire [31:0] GEN_213;\n  wire [31:0] GEN_214;\n  wire [31:0] GEN_215;\n  wire [31:0] GEN_216;\n  wire [31:0] GEN_217;\n  wire [31:0] GEN_218;\n  wire [31:0] GEN_219;\n  wire [31:0] GEN_220;\n  wire [31:0] GEN_221;\n  wire [31:0] GEN_222;\n  wire [31:0] GEN_223;\n  wire [31:0] GEN_224;\n  wire [31:0] GEN_225;\n  wire [31:0] T_6170;\n  wire [1:0] T_6171;\n  wire [4:0] T_6173;\n  wire [2:0] T_6174;\n  wire [2:0] T_6185_opcode;\n  wire [1:0] T_6185_param;\n  wire [2:0] T_6185_size;\n  wire [4:0] T_6185_source;\n  wire  T_6185_sink;\n  wire [1:0] T_6185_addr_lo;\n  wire [31:0] T_6185_data;\n  wire  T_6185_error;\n  wire [2:0] GEN_259 = 3'b0;\n  reg [31:0] GEN_307;\n  wire [1:0] GEN_260 = 2'b0;\n  reg [31:0] GEN_308;\n  wire [2:0] GEN_261 = 3'b0;\n  reg [31:0] GEN_309;\n  wire [4:0] GEN_262 = 5'b0;\n  reg [31:0] GEN_310;\n  wire [28:0] GEN_263 = 29'b0;\n  reg [31:0] GEN_311;\n  wire [3:0] GEN_264 = 4'b0;\n  reg [31:0] GEN_312;\n  wire [31:0] GEN_265 = 32'b0;\n  reg [31:0] GEN_313;\n  wire [2:0] GEN_266 = 3'b0;\n  reg [31:0] GEN_314;\n  wire [1:0] GEN_267 = 2'b0;\n  reg [31:0] GEN_315;\n  wire [2:0] GEN_268 = 3'b0;\n  reg [31:0] GEN_316;\n  wire [6:0] GEN_269 = 7'b0;\n  reg [31:0] GEN_317;\n  wire [29:0] GEN_270 = 30'b0;\n  reg [31:0] GEN_318;\n  wire GEN_271 = 1'b0;\n  reg [31:0] GEN_319;\n  wire [7:0] GEN_272 = 8'b0;\n  reg [31:0] GEN_320;\n  sirv_qspi_fifo fifo (\n    .clock(fifo_clock),\n    .reset(fifo_reset),\n    .io_ctrl_fmt_proto(fifo_io_ctrl_fmt_proto),\n    .io_ctrl_fmt_endian(fifo_io_ctrl_fmt_endian),\n    .io_ctrl_fmt_iodir(fifo_io_ctrl_fmt_iodir),\n    .io_ctrl_fmt_len(fifo_io_ctrl_fmt_len),\n    .io"}
{"text": "_ctrl_cs_mode(fifo_io_ctrl_cs_mode),\n    .io_ctrl_wm_tx(fifo_io_ctrl_wm_tx),\n    .io_ctrl_wm_rx(fifo_io_ctrl_wm_rx),\n    .io_link_tx_ready(fifo_io_link_tx_ready),\n    .io_link_tx_valid(fifo_io_link_tx_valid),\n    .io_link_tx_bits(fifo_io_link_tx_bits),\n    .io_link_rx_valid(fifo_io_link_rx_valid),\n    .io_link_rx_bits(fifo_io_link_rx_bits),\n    .io_link_cnt(fifo_io_link_cnt),\n    .io_link_fmt_proto(fifo_io_link_fmt_proto),\n    .io_link_fmt_endian(fifo_io_link_fmt_endian),\n    .io_link_fmt_iodir(fifo_io_link_fmt_iodir),\n    .io_link_cs_set(fifo_io_link_cs_set),\n    .io_link_cs_clear(fifo_io_link_cs_clear),\n    .io_link_cs_hold(fifo_io_link_cs_hold),\n    .io_link_active(fifo_io_link_active),\n    .io_link_lock(fifo_io_link_lock),\n    .io_tx_ready(fifo_io_tx_ready),\n    .io_tx_valid(fifo_io_tx_valid),\n    .io_tx_bits(fifo_io_tx_bits),\n    .io_rx_ready(fifo_io_rx_ready),\n    .io_rx_valid(fifo_io_rx_valid),\n    .io_rx_bits(fifo_io_rx_bits),\n    .io_ip_txwm(fifo_io_ip_txwm),\n    .io_ip_rxwm(fifo_io_ip_rxwm)\n  );\n  sirv_qspi_media mac (\n    .clock(mac_clock),\n    .reset(mac_reset),\n    .io_port_sck(mac_io_port_sck),\n    .io_port_dq_0_i(mac_io_port_dq_0_i),\n    .io_port_dq_0_o(mac_io_port_dq_0_o),\n    .io_port_dq_0_oe(mac_io_port_dq_0_oe),\n    .io_port_dq_1_i(mac_io_port_dq_1_i),\n    .io_port_dq_1_o(mac_io_port_dq_1_o),\n    .io_port_dq_1_oe(mac_io_port_dq_1_oe),\n    .io_port_dq_2_i(mac_io_port_dq_2_i),\n    .io_port_dq_2_o(mac_io_port_dq_2_o),\n    .io_port_dq_2_oe(mac_io_port_dq_2_oe),\n    .io_port_dq_3_i(mac_io_port_dq_3_i),\n    .io_port_dq_3_o(mac_io_port_dq_3_o),\n    .io_port_dq_3_oe(mac_io_port_dq_3_oe),\n    .io_port_cs_0(mac_io_port_cs_0),\n    .io_ctrl_sck_div(mac_io_ctrl_sck_div),\n    .io_ctrl_sck_pol(mac_io_ctrl_sck_pol),\n    .io_ctrl_sck_pha(mac_io_ctrl_sck_pha),\n    .io_ctrl_dla_cssck(mac_io_ctrl_dla_cssck),\n    .io_ctrl_dla_sckcs(mac_io_ctrl_dla_sckcs),\n    .io_ctrl_dla_intercs(mac_io_ctrl_dla_intercs),\n    .io_ctrl_dla_interxfr(mac_io_ctrl_dla_interxfr),\n    .io_ctrl_cs_id(mac_io_ctrl_cs_id),\n    .io_ctrl_cs_dflt_0(mac_io_ctrl_cs_dflt_0),\n    .io_link_tx_ready(mac_io_link_tx_ready),\n    .io_link_tx_valid(mac_io_link_tx_valid),\n    .io_link_tx_bits(mac_io_link_tx_bits),\n    .io_link_rx_valid(mac_io_link_rx_valid),\n    .io_link_rx_bits(mac_io_link_rx_bits),\n    .io_link_cnt(mac_io_link_cnt),\n    .io_link_fmt_proto(mac_io_link_fmt_proto),\n    .io_link_fmt_endian(mac_io_link_fmt_endian),\n    .io_link_fmt_iodir(mac_io_link_fmt_iodir),\n    .io_link_cs_set(mac_io_link_cs_set),\n    .io_link_cs_clear(mac_io_link_cs_clear),\n    .io_link_cs_hold(mac_io_link_cs_hold),\n    .io_link_active(mac_io_link_active)\n  );\n  sirv_qspi_flashmap flash (\n    .clock(flash_clock),\n    .reset(flash_reset),\n    .io_en(flash_io_en),\n    .io_ctrl_insn_cmd_proto(flash_io_ctrl_insn_cmd_proto),\n    .io_ctrl_insn_cmd_code(flash_io_ctrl_insn_cmd_code),\n    .io_ctrl_insn_cmd_en(flash_io_ctrl_insn_cmd_en),\n    .io_ctrl_insn_addr_proto(flash_io_ctrl_insn_addr_proto),\n    .io_ctrl_insn_addr_len(flash_io_ctrl_insn_addr_len),\n    .io_ctrl_insn_pad_code(flash_io_ctrl_insn_pad_code),\n    .io_ctrl_insn_pad_cnt(flash_io_ctrl_insn_pad_cnt),\n    .io_ctrl_insn_data_proto(flash_io_ctrl_insn_data_proto),\n    .io_ctrl_fmt_endian(flash_io_ctrl_fmt_endian),\n    .io_addr_ready(flash_io_addr_ready),\n    .io_addr_valid(flash_io_addr_valid),\n    .io_addr_bits_next(flash_io_addr_bits_next),\n    .io_addr_bits_hold(flash_io_addr_bits_hold),\n    .io_data_ready(flash_io_data_ready),\n    .io_data_valid(flash_io_data_valid),\n    .io_data_bits(flash_io_data_bits),\n    .io_link_tx_ready(flash_io_link_tx_ready),\n    .io_link_tx_valid(flash_io_link_tx_valid),\n    .io_link_tx_bits(flash_io_link_tx_bits),\n    .io_link_rx_valid(flash_io_link_rx_valid),\n    .io_link_rx_bits(flash_io_link_rx_bits),\n    .io_link_cnt(flash_io_link_cnt),\n    .io_link_fmt_proto(flash_io_link_fmt_proto),\n    .io_link_fmt_endian(flash_io_link_fmt_endian),\n    .io_link_fmt_iodir(flash_io_link_fmt_iodir),\n    .io_link_cs_set(flash_io_link_cs_set),\n    .io_link_cs_clear(flash_io_link_cs_clear),\n    .io_link_cs_hold(flash_io_link_cs_hold),\n    .io_link_active(flash_io_link_active),\n    .io_link_lock(flash_io_link_lock)\n  );\n  sirv_qspi_arbiter arb (\n    .clock(arb_clock),\n    .reset(arb_reset),\n    .io_inner_0_tx_ready(arb_io_inner_0_tx_ready),\n    .io_inner_0_tx_valid(arb_io_inner_0_tx_valid),\n    .io_inner_0_tx_bits(arb_io_inner_0_tx_bits),\n    .io_inner_0_rx_valid(arb_io_inner_0_rx_valid),\n    .io_inner_0_rx_bits(arb_io_inner_0_rx_bits),\n    .io_inner_0_cnt(arb_io_inner_0_cnt),\n    .io_inner_0_fmt_proto(arb_io_inner_0_fmt_proto),\n    .io_inner_0_fmt_endian(arb_io_inner_0_fmt_endian),\n    .io_inner_0_fmt_iodir(arb_io_inner_0_fmt_iodir),\n    .io_inner_0_cs_set(arb_io_inner_0_cs_set),\n    .io_inner_0_cs_clear(arb_io_inner_0_cs_clear),\n    .io_inner_0_cs_hold(arb_io_inner_0_cs_hold),\n    .io_inner_0_active(arb_io_inner_0_active),\n    .io_inner_0_lock(arb_io_inner_0_lock),\n    .io_inner_1_tx_ready(arb_io_inner_1_tx_ready),\n    .io_inner_1_tx_valid(arb_io_inner_1_tx_valid),\n    .io_inner_1_tx_bits(arb_io_inner_1_tx_bits),\n    .io_inner_1_rx_valid(arb_io_inner_1_rx_valid),\n    .io_inner_1_rx_bits(arb_io_inner_1_rx_bits),\n    .io_inner_1_cnt(arb_io_inner_1_cnt),\n    .io_inner_1_fmt_proto(arb_io_inner_1_fmt_proto),\n    .io_inner_1_fmt_endian(arb_io_inner_1_fmt_endian),\n    .io_inner_1_fmt_iodir(arb_io_inner_1_fmt_iodir),\n    .io_inner_1_cs_set(arb_io_inner_1_cs_set),\n    .io_inner_1_cs_clear(arb_io_inner_1_cs_clear),\n    .io_inner_1_cs_hold(arb_io_inner_1_cs_hold),\n    .io_inner_1_active(arb_io_inner_1_active),\n    .io_inner_1_lock(arb_io_inner_1_lock),\n    .io_outer_tx_ready(arb_io_outer_tx_ready),\n    .io_outer_tx_valid(arb_io_outer_tx_valid),\n    .io_outer_tx_bits(arb_io_outer_tx_bits),\n    .io_outer_rx_valid(arb_io_outer_rx_valid),\n    .io_outer_rx_bits(arb_io_outer_rx_bits),\n    .io_outer_cnt(arb_io_outer_cnt),\n    .io_outer_fmt_proto(arb_io_outer_fmt_proto),\n    .io_outer_fmt_endian(arb_io_outer_fmt_endian),\n    .io_outer_fmt_iodir(arb_io_outer_fmt_iodir),\n    .io_outer_cs_set(arb_io_outer_cs_set),\n    .io_outer_cs_clear(arb_io_outer_cs_clear),\n    .io_outer_cs_hold(arb_io_outer_cs_hold),\n    .io_outer_active(arb_io_outer_active),\n    .io_sel(arb_io_sel)\n  );\n  assign io_port_sck = mac_io_port_sck;\n  assign io_port_dq_0_o = mac_io_port_dq_0_o;\n  assign io_port_dq_0_oe = mac_io_port_dq_0_oe;\n  assign io_port_dq_1_o = mac_io_port_dq_1_o;\n  assign io_port_dq_1_oe = mac_io_port_dq_1_oe;\n  assign io_port_dq_2_o = mac_io_port_dq_2_o;\n  assign io_port_dq_2_oe = mac_io_port_dq_2_oe;\n  assign io_port_dq_3_o = mac_io_port_dq_3_o;\n  assign io_port_dq_3_oe = mac_io_port_dq_3_oe;\n  assign io_port_cs_0 = mac_io_port_cs_0;\n  assign io_tl_i_0_0 = T_1917;\n  assign io_tl_r_0_a_ready = T_2029_ready;\n  assign io_tl_r_0_b_valid = 1'h0;\n  assign io_tl_r_0_b_bits_opcode = GEN_259;\n  assign io_tl_r_0_b_bits_param = GEN_260;\n  assign io_tl_r_0_b_bits_size = GEN_261;\n  assign io_tl_r_0_b_bits_source = GEN_262;\n  assign io_tl_r_0_b_bits_address = GEN_263;\n  assign io_tl_r_0_b_bits_mask = GEN_264;\n  assign io_tl_r_0_b_bits_data = GEN_265;\n  assign io_tl_r_0_c_ready = 1'h1;\n  assign io_tl_r_0_d_valid = T_2068_valid;\n  assign io_tl_r_0_d_bits_opcode = {{2'd0}, T_2068_bits_read};\n  assign io_tl_r_0_d_bits_param = T_6185_param;\n  assign io_tl_r_0_d_bits_size = T_6185_size;\n  assign io_tl_r_0_d_bits_source = T_6185_source;\n  assign io_tl_r_0_d_bits_sink = T_6185_sink;\n  assign io_tl_r_0_d_bits_addr_lo = T_6185_addr_lo;\n  assign io_tl_r_0_d_bits_data = T_2068_bits_data;\n  assign io_tl_r_0_d_bits_error = T_6185_error;\n  assign io_tl_r_0_e_ready = 1'h1;\n  assign io_tl_f_0_a_ready = flash_io_addr_ready;\n  assign io_tl_f_0_b_valid = 1'h0;\n  assign io_tl_f_0_b_bits_opcode = GEN_266;\n  assign io_tl_f_0_b_bits_param = GEN_267;\n  assign io_tl_f_0_b_bits_size = GEN_268;\n  assign io_tl_f_0_b_bits_source = GEN_269;\n  assign io_tl_f_0_b_bits_address = GEN_270;\n  assign io_tl_f_0_b_bits_mask = GEN_271;\n  assign io_tl_f_0_b_bits_data = GEN_272;\n  assign io_tl_f_0_c_ready = 1'h1;\n  assign io_tl_f_0_d_valid = flash_io_data_valid;\n  assign io_tl_f_0_d_bits_opcode = T_1949_opcode;\n  assign io_tl_f_0_d_bits_param = T_1949_param;\n  assign io_tl_f_0_d_bits_size = T_1949_size;\n  assign io_tl_f_0_d_bits_source = T_1949_source;\n  assign io_tl_f_0_d_bits_sink = T_1949_sink;\n  assign io_tl_f_0_d_bits_addr_lo = T_1949_addr_lo;\n  assign io_tl_f_0_d_bits_data = T_1949_data;\n  assign io_tl_f_0_d_bits_error = T_1949_error;\n  assign io_tl_f_0_e_ready = 1'h1;\n  assign T_1840_fmt_proto = 2'h0;\n  assign T_1840_fmt_endian = 1'h0;\n  assign T_1840_fmt_iodir = 1'h0;\n  assign T_1840_fmt_len = 4'h8;\n  assign T_1840_sck_div = 12'h3;\n  assign T_1840_sck_pol = 1'h0;\n  assign T_1840_sck_pha = 1'h0;\n  assign T_1840_cs_id = 1'h0;\n  assign T_1840_cs_dflt_0 = 1'h1;\n  assign T_1840_cs_mode = 2'h0;\n  assign T_1840_dla_cssck = 8'h1;\n  assign T_1840_dla_sckcs = 8'h1;\n  assign T_1840_dla_intercs = 8'h1;\n  assign T_1840_dla_interxfr = 8'h0;\n  assign T_1840_wm_tx = 4'h0;\n  assign T_1840_wm_rx = 4'h0;\n  assign fifo_clock = clock;\n  assign fifo_reset = reset;\n  assign fifo_io_ctrl_fmt_proto = ctrl_fmt_proto;\n  assign fifo_io_ctrl_fmt_endian = ctrl_fmt_endian;\n  assign fifo_io_ctrl_fmt_iodir = ctrl_fmt_iodir;\n  assign fifo_io_ctrl_fmt_len = ctrl_fmt_len;\n  assign fifo_io_ctrl_cs_mode = ctrl_cs_mode;\n  assign fifo_io_ctrl_wm_tx = ctrl_wm_tx;\n  assign fifo_io_ctrl_wm_rx = ctrl_wm_rx;\n  assign fifo_io_link_tx_ready = arb_io_inner_1_tx_ready;\n  assign fifo_io_link_rx_valid = arb_io_inner_1_rx_valid;\n  assign fifo_io_link_rx_bits = arb_io_inner_1_rx_bits;\n  assign fifo_io_link_active = arb_io_inner_1_active;\n  assign fifo_io_tx_valid = T_3476;\n  assign fifo_io_tx_bits = T_2677;\n  assign fifo_io_rx_ready = T_3832;\n  assign mac_clock = clock;\n  assign mac_reset = reset;\n  assign mac_io_port_dq_0_i = io_port_dq_0_i;\n  assign mac_io_port_dq_1_i = io_port_dq_1_i;\n  assign mac_io_port_dq_2_i = io_port_dq_2_i;\n  assign mac_io_port_dq_3_i = io_port_dq_3_i;\n  assign mac_io_ctrl_sck_div = ctrl_sck_div;\n  assign mac_io_ctrl_sck_pol = ctrl_sck_pol;\n  assign mac_io_ctrl_sck_pha = ctrl_sck_pha;\n  assign mac_io_ctrl_dla_cssck = ctrl_dla_cssck;\n  assign mac_io_ctrl_dla_sckcs = ctrl_dla_sckcs;\n  assign mac_io_ctrl_dla_intercs = ctrl_dla_intercs;\n  assign mac_io_ctrl_dla_interxfr = ctrl_dla_interxfr;\n  assign mac_io_ctrl_cs_id = ctrl_cs_id;\n  assign mac_io_ctrl_cs_dflt_0 = ctrl_cs_dflt_0;\n  assign mac_io_link_tx_valid = arb_io_outer_tx_valid;\n  assign mac_io_link_tx_bits = arb_io_outer_tx_bits;\n  assign mac_io_link_cnt = arb_io_outer_cnt;\n  assign mac_io_link_fmt_proto = arb_io_outer_fmt_proto;\n  assign mac_io_link_fmt_endian = arb_io_outer_fmt_endian;\n  assign mac_io_link_fmt_iodir = arb_io_outer_fmt_iodir;\n  assign mac_io_link_cs_set = arb_io_outer_cs_set;\n  assign mac_io_link_cs_clear = arb_io_outer_cs_clear;\n  assign mac_io_link_cs_hold = arb_io_outer_cs_hold;\n  assign T_1906_txwm = T_1912;\n  assign T_1906_rxwm = T_1911;\n  assign T_1910 = 2'h0;\n  assign T_1911 = T_1910[0];\n  assign T_1912 = T_1910[1];\n  assign T_1915 = fifo_io_ip_txwm & ie_txwm;\n  assign T_1916 = fifo_io_ip_rxwm & ie_rxwm;\n  assign T_1917 = T_1915 | T_1916;\n  assign T_1921 = fifo_io_tx_ready == 1'h0;\n  assign T_1924 = fifo_io_rx_valid == 1'h0;\n  assign flash_clock = clock;\n  assign flash_reset = reset;\n  assign flash_io_en = flash_en;\n  assign flash_io_ctrl_insn_cmd_proto = insn_cmd_proto;\n  assign flash_io_ctrl_insn_cmd_code = insn_cmd_code;\n  assign flash_io_ctrl_insn_cmd_en = insn_cmd_en;\n  assign flash_io_ctrl_insn_addr_proto = insn_addr_proto;\n  assign flash_io_ctrl_insn_addr_len = insn_addr_len;\n  assign flash_io_ctrl_insn_pad_code = insn_pad_code;\n  assign flash_io_ctrl_insn_pad_cnt = insn_pad_cnt;\n  assign flash_io_ctrl_insn_data_proto = insn_data_proto;\n  assign flash_io_ctrl_fmt_endian = ctrl_fmt_endian;\n  assign flash_io_addr_valid = io_tl_f_0_a_valid;\n  assign flash_io_addr_bits_next = {{3'd0}, T_1936};\n  assign flash_io_addr_bits_hold = {{3'd0}, T_1937};\n  assign flash_io_data_ready = io_tl_f_0_d_ready;\n  assign flash_io_link_tx_ready = arb_io_inner_0_tx_ready;\n  assign flash_io_link_rx_valid = arb_io_inner_0_rx_valid;\n  assign flash_io_link_rx_bits = arb_io_inner_0_rx_bits;\n  assign flash_io_link_active = arb_io_inner_0_active;\n  assign arb_clock = clock;\n  assign arb_reset = reset;\n  assign arb_io_inner_0_tx_valid = flash_io_link_tx_valid;\n  assign arb_io_inner_0_tx_bits = flash_io_link_tx_bits;\n  assign arb_io_inner_0_cnt = flash_io_link_cnt;\n  assign arb_io_inner_0_fmt_proto = flash_io_link_fmt_proto;\n  assign arb_io_inner_0_fmt_endian = flash_io_link_fmt_endian;\n  assign arb_io_inner_0_fmt_iodir = flash_io_link_fmt_iodir;\n  assign arb_io_inner_0_cs_set = flash_io_link_cs_set;\n  assign arb_io_inner_0_cs_clear = flash_io_link_cs_clear;\n  assign arb_io_inner_0_cs_hold = flash_io_link_cs_hold;\n  assign arb_io_inner_0_lock = flash_io_link_lock;\n  assign arb_io_inner_1_tx_valid = fifo_io_link_tx_valid;\n  assign arb_io_inner_1_tx_bits = fifo_io_link_tx_bits;\n  assign arb_io_inner_1_cnt = fifo_io_link_cnt;\n  assign arb_io_inner_1_fmt_proto = fifo_io_link_fmt_proto;\n  assign arb_io_inner_1_fmt_endian = fifo_io_link_fmt_endian;\n  assign arb_io_inner_1_fmt_iodir = fifo_io_link_fmt_iodir;\n  assign arb_io_inner_1_cs_set = fifo_io_link_cs_set;\n  assign arb_io_inner_1_cs_clear = fifo_io_link_cs_clear;\n  assign arb_io_inner_1_cs_hold = fifo_io_link_cs_hold;\n  assign arb_io_inner_1_lock = fifo_io_link_lock;\n  assign arb_io_outer_tx_ready = mac_io_link_tx_ready;\n  assign arb_io_outer_rx_valid = mac_io_link_rx_valid;\n  assign arb_io_outer_rx_bits = mac_io_link_rx_bits;\n  assign arb_io_outer_active = mac_io_link_active;\n  assign arb_io_sel = T_2005;\n  assign T_1935 = io_tl_f_0_a_ready & io_tl_f_0_a_valid;\n  assign GEN_6 = T_1935 ? io_tl_f_0_a_bits_opcode : a_opcode;\n  assign GEN_7 = T_1935 ? io_tl_f_0_a_bits_param : a_param;\n  assign GEN_8 = T_1935 ? io_tl_f_0_a_bits_size : a_size;\n  assign GEN_9 = T_1935 ? io_tl_f_0_a_bits_source : a_source;\n  assign GEN_10 = T_1935 ? io_tl_f_0_a_bits_address : a_address;\n  assign GEN_11 = T_1935 ? io_tl_f_0_a_bits_mask : a_mask;\n  assign GEN_12 = T_1935 ? io_tl_f_0_a_bits_data : a_data;\n  assign T_1936 = io_tl_f_0_a_bits_address[28:0];\n  assign T_1937 = a_address[28:0];\n  assign T_1949_opcode = 3'h1;\n  assign T_1949_param = 2'h0;\n  assign T_1949_size = a_size;\n  assign T_1949_source = a_source;\n  assign T_1949_sink = 1'h0;\n  assign T_1949_addr_lo = 1'h0;\n  assign T_1949_data = flash_io_data_bits;\n  assign T_1949_error = 1'h0;\n  assign T_1973_cmd_proto = 2'h0;\n  assign T_1973_cmd_code = 8'h3;\n  assign T_1973_cmd_en = 1'h1;\n  assign T_1973_addr_proto = 2'h0;\n  assign T_1973_addr_len = 3'h3;\n  assign T_1973_pad_code = 8'h0;\n  assign T_1973_pad_cnt = 4'h0;\n  assign T_1973_data_proto = 2'h0;\n  assign T_2005 = flash_en == 1'h0;\n  assign T_2029_ready = T_4815;\n  assign T_2029_valid = io_tl_r_0_a_valid;\n  assign T_2029_bits_read = T_2046;\n  assign T_2029_bits_index = T_2047[9:0];\n  assign T_2029_bits_data = io_tl_r_0_a_bits_data;\n  assign T_2029_bits_mask = io_tl_r_0_a_bits_mask;\n  assign T_2029_bits_extra = T_2050;\n  assign T_2046 = io_tl_r_0_a_bits_opcode == 3'h4;\n  assign T_2047 = io_tl_r_0_a_bits_address[28:2];\n  assign T_2048 = io_tl_r_0_a_bits_address[1:0];\n  assign T_2049 = {T_2048,io_tl_r_0_a_bits_source};\n  assign T_2050 = {T_2049,io_tl_r_0_a_bits_size};\n  assign T_2068_ready = io_tl_r_0_d_ready;\n  assign T_2068_valid = T_4818;\n  assign T_2068_bits_read = T_2104_bits_read;\n  assign T_2068_bits_data = T_6170;\n  assign T_2068_bits_extra = T_2104_bits_extra;\n  assign T_2104_ready = T_4817;\n  assign T_2104_valid = T_4816;\n  assign T_2104_bits_read = T_2029_bits_read;\n  assign T_2104_bits_index = T_2029_bits_index;\n  assign T_2104_bits_data = T_2029_bits_data;\n  assign T_2104_bits_mask = T_2029_bits_mask;\n  assign T_2104_bits_extra = T_2029_bits_extra;\n  assign T_2189 = T_2104_bits_index & 10'h3e0;\n  assign T_2191 = T_2189 == 10'h0;\n  assign T_2197 = T_2104_bits_index ^ 10'h5;\n  assign T_2198 = T_2197 & 10'h3e0;\n  assign T_2200 = T_2198 == 10'h0;\n  assign T_2206 = T_2104_bits_index ^ 10'ha;\n  assign T_2207 = T_2206 & 10'h3e0;\n  assign T_2209 = T_2207 == 10'h0;\n  assign T_2215 = T_2104_bits_index ^ 10'h18;\n  assign T_2216 = T_2215 & 10'h3e0;\n  assign T_2218 = T_2216 == 10'h0;\n  assign T_2224 = T_2104_bits_index ^ 10'h19;\n  assign T_2225 = T_2224 & 10'h3e0;\n  assign T_2227 = T_2225 == 10'h0;\n  assign T_2233 = T_2104_bits_index ^ 10'h14;\n  assign T_2234 = T_2233 & 10'h3e0;\n  assign T_2236 = T_2234 == 10'h0;\n  assign T_2242 = T_2104_bits_index ^ 10'h1d;\n  assign T_2243 = T_2242 & 10'h3e0;\n  assign T_2245 = T_2243 == 10'h0;\n  assign T_2251 = T_2104_bits_index ^ 10'h1;\n  assign T_2252 = T_2251 & 10'h3e0;\n  assign T_2254 = T_2252 == 10'h0;\n  assign T_2260 = T_2104_bits_index ^ 10'h6;\n  assign T_2261 = T_2260 & 10'h3e0;\n  assign T_2263 = T_2261 == 10'h0;\n  assign T_2269 = T_2104_bits_index ^ 10'h1c;\n  assign T_2270 = T_2269 & 10'h3e0;\n  assign T_2272 = T_2270 == 10'h0;\n  assign T_2278 = T_2104_bits_index ^ 10'h15;\n  assign T_2279 = T_2278 & 10'h3e0;\n  assign T_2281 = T_2279 == 10'h0;\n  assign T_2287 = T_2104_bits_index ^ 10'h12;\n  assign T_2288 = T_2287 & 10'h3e0;\n  assign T_2290 = T_2288 == 10'h0;\n  assign T_2296 = T_2104_bits_index ^ 10'h10;\n  assign T_2297 = T_2296 & 10'h3e0;\n  assign T_2299 = T_2297 == 10'h0;\n  assign T_2305 = T_2104_bits_index ^ 10'hb;\n  assign T_2306 = T_2305 & 10'h3e0;\n  assign T_2308 = T_2306 == 10'h0;\n  assign T_2314 = T_2104_bits_index ^ 10'h13;\n  assign T_2315 = T_2314 & 10'h3e0;\n  assign T_2317 = T_2315 == 10'h0;\n  assign T_2323 = T_2104_bits_index ^ 10'h4;\n  assign T_2324 = T_2323 & 10'h3e0;\n  assign T_2326 = T_2324 == 10'h0;\n  assign T_2334_0 = T_4890;\n  assign T_2334_1 = T_4990;\n  assign T_2334_2 = T_5535;\n  assign T_2334_3 = T_5543;\n  assign T_2334_4 = T_5370;\n  assign T_2334_5 = T_5561;\n  assign T_2334_6 = T_5593;\n  assign T_2334_7 = T_5625;\n  assign T_2334_8 = T_5657;\n  assign T_2334_9 = T_5689;\n  assign T_2334_10 = T_5721;\n  assign T_2334_11 = T_5753;\n  assign T_2334_12 = T_5785;\n  assign T_2334_13 = T_5290;\n  assign T_2334_14 = T_5815;\n  assign T_2334_15 = T_5823;\n  assign T_2334_16 = T_5831;\n  assign T_2334_17 = T_5839;\n  assign T_2334_18 = T_5010;\n  assign T_2334_19 = T_5851;\n  assign T_2334_20 = T_5859;\n  assign T_2334_21 = T_5310;\n  assign T_2334_22 = T_5872;\n  assign T_2334_23 = T_5884;\n  assign T_2334_24 = T_5896;\n  assign T_2334_25 = T_5909;\n  assign T_2334_26 = T_5925;\n  assign T_2334_27 = T_5941;\n  assign T_2334_28 = T_5957;\n  assign T_2334_29 = T_5971;\n  assign T_2334_30 = T_5979;\n  assign T_2334_31 = T_5988;\n  assign T_2334_32 = T_6000;\n  assign T_2334_33 = T_6012;\n  assign T_2334_34 = T_4970;\n  assign T_2339_0 = T_4896;\n  assign T_2339_1 = T_4996;\n  assign T_2339_2 = T_5537;\n  assign T_2339_3 = T_5545;\n  assign T_2339_4 = T_5376;\n  assign T_2339_5 = T_5569;\n  assign T_2339_6 = T_5601;\n  assign T_2339_7 = T_5633;\n  assign T_2339_8 = T_5665;\n  assign T_2339_9 = T_5697;\n  assign T_2339_10 = T_5729;\n  assign T_2339_11 = T_5761;\n  assign T_2339_12 = T_5793;\n  assign T_2339_13 = T_5296;\n  assign T_2339_14 = T_5817;\n  assign T_2339_15 = T_5825;\n  assign T_2339_16 = T_5833;\n  assign T_2339_17 = T_5841;\n  assign T_2339_18 = T_5016;\n  assign T_2339_19 = T_5853;\n  assign T_2339_20 = T_5861;\n  assign T_2339_21 = T_5316;\n  assign T_2339_22 = T_5875;\n  assign T_2339_23 = T_5887;\n  assign T_2339_24 = T_5899;\n  assign T_2339_25 = T_5913;\n  assign T_2339_26 = T_5929;\n  assign T_2339_27 = T_5945;\n  assign T_2339_28 = T_5961;\n  assign T_2339_29 = T_5973;\n  assign T_2339_30 = T_5981;\n  assign T_2339_31 = T_5991;\n  assign T_2339_32 = T_6003;\n  assign T_2339_33 = T_6015;\n  assign T_2339_34 = T_4976;\n  assign T_2344_0 = 1'h1;\n  assign T_2344_1 = 1'h1;\n  assign T_2344_2 = 1'h1;\n  assign T_2344_3 = 1'h1;\n  assign T_2344_4 = 1'h1;\n  assign T_2344_5 = 1'h1;\n  assign T_2344_6 = 1'h1;\n  assign T_2344_7 = 1'h1;\n  a"}
{"text": "ssign T_2344_8 = 1'h1;\n  assign T_2344_9 = 1'h1;\n  assign T_2344_10 = 1'h1;\n  assign T_2344_11 = 1'h1;\n  assign T_2344_12 = 1'h1;\n  assign T_2344_13 = 1'h1;\n  assign T_2344_14 = 1'h1;\n  assign T_2344_15 = 1'h1;\n  assign T_2344_16 = 1'h1;\n  assign T_2344_17 = 1'h1;\n  assign T_2344_18 = 1'h1;\n  assign T_2344_19 = 1'h1;\n  assign T_2344_20 = 1'h1;\n  assign T_2344_21 = 1'h1;\n  assign T_2344_22 = 1'h1;\n  assign T_2344_23 = 1'h1;\n  assign T_2344_24 = 1'h1;\n  assign T_2344_25 = 1'h1;\n  assign T_2344_26 = 1'h1;\n  assign T_2344_27 = 1'h1;\n  assign T_2344_28 = 1'h1;\n  assign T_2344_29 = 1'h1;\n  assign T_2344_30 = 1'h1;\n  assign T_2344_31 = 1'h1;\n  assign T_2344_32 = 1'h1;\n  assign T_2344_33 = 1'h1;\n  assign T_2344_34 = 1'h1;\n  assign T_2349_0 = 1'h1;\n  assign T_2349_1 = 1'h1;\n  assign T_2349_2 = 1'h1;\n  assign T_2349_3 = 1'h1;\n  assign T_2349_4 = 1'h1;\n  assign T_2349_5 = 1'h1;\n  assign T_2349_6 = 1'h1;\n  assign T_2349_7 = 1'h1;\n  assign T_2349_8 = 1'h1;\n  assign T_2349_9 = 1'h1;\n  assign T_2349_10 = 1'h1;\n  assign T_2349_11 = 1'h1;\n  assign T_2349_12 = 1'h1;\n  assign T_2349_13 = 1'h1;\n  assign T_2349_14 = 1'h1;\n  assign T_2349_15 = 1'h1;\n  assign T_2349_16 = 1'h1;\n  assign T_2349_17 = 1'h1;\n  assign T_2349_18 = 1'h1;\n  assign T_2349_19 = 1'h1;\n  assign T_2349_20 = 1'h1;\n  assign T_2349_21 = 1'h1;\n  assign T_2349_22 = 1'h1;\n  assign T_2349_23 = 1'h1;\n  assign T_2349_24 = 1'h1;\n  assign T_2349_25 = 1'h1;\n  assign T_2349_26 = 1'h1;\n  assign T_2349_27 = 1'h1;\n  assign T_2349_28 = 1'h1;\n  assign T_2349_29 = 1'h1;\n  assign T_2349_30 = 1'h1;\n  assign T_2349_31 = 1'h1;\n  assign T_2349_32 = 1'h1;\n  assign T_2349_33 = 1'h1;\n  assign T_2349_34 = 1'h1;\n  assign T_2354_0 = 1'h1;\n  assign T_2354_1 = 1'h1;\n  assign T_2354_2 = 1'h1;\n  assign T_2354_3 = 1'h1;\n  assign T_2354_4 = 1'h1;\n  assign T_2354_5 = 1'h1;\n  assign T_2354_6 = 1'h1;\n  assign T_2354_7 = 1'h1;\n  assign T_2354_8 = 1'h1;\n  assign T_2354_9 = 1'h1;\n  assign T_2354_10 = 1'h1;\n  assign T_2354_11 = 1'h1;\n  assign T_2354_12 = 1'h1;\n  assign T_2354_13 = 1'h1;\n  assign T_2354_14 = 1'h1;\n  assign T_2354_15 = 1'h1;\n  assign T_2354_16 = 1'h1;\n  assign T_2354_17 = 1'h1;\n  assign T_2354_18 = 1'h1;\n  assign T_2354_19 = 1'h1;\n  assign T_2354_20 = 1'h1;\n  assign T_2354_21 = 1'h1;\n  assign T_2354_22 = 1'h1;\n  assign T_2354_23 = 1'h1;\n  assign T_2354_24 = 1'h1;\n  assign T_2354_25 = 1'h1;\n  assign T_2354_26 = 1'h1;\n  assign T_2354_27 = 1'h1;\n  assign T_2354_28 = 1'h1;\n  assign T_2354_29 = 1'h1;\n  assign T_2354_30 = 1'h1;\n  assign T_2354_31 = 1'h1;\n  assign T_2354_32 = 1'h1;\n  assign T_2354_33 = 1'h1;\n  assign T_2354_34 = 1'h1;\n  assign T_2359_0 = 1'h1;\n  assign T_2359_1 = 1'h1;\n  assign T_2359_2 = 1'h1;\n  assign T_2359_3 = 1'h1;\n  assign T_2359_4 = 1'h1;\n  assign T_2359_5 = 1'h1;\n  assign T_2359_6 = 1'h1;\n  assign T_2359_7 = 1'h1;\n  assign T_2359_8 = 1'h1;\n  assign T_2359_9 = 1'h1;\n  assign T_2359_10 = 1'h1;\n  assign T_2359_11 = 1'h1;\n  assign T_2359_12 = 1'h1;\n  assign T_2359_13 = 1'h1;\n  assign T_2359_14 = 1'h1;\n  assign T_2359_15 = 1'h1;\n  assign T_2359_16 = 1'h1;\n  assign T_2359_17 = 1'h1;\n  assign T_2359_18 = 1'h1;\n  assign T_2359_19 = 1'h1;\n  assign T_2359_20 = 1'h1;\n  assign T_2359_21 = 1'h1;\n  assign T_2359_22 = 1'h1;\n  assign T_2359_23 = 1'h1;\n  assign T_2359_24 = 1'h1;\n  assign T_2359_25 = 1'h1;\n  assign T_2359_26 = 1'h1;\n  assign T_2359_27 = 1'h1;\n  assign T_2359_28 = 1'h1;\n  assign T_2359_29 = 1'h1;\n  assign T_2359_30 = 1'h1;\n  assign T_2359_31 = 1'h1;\n  assign T_2359_32 = 1'h1;\n  assign T_2359_33 = 1'h1;\n  assign T_2359_34 = 1'h1;\n  assign T_2364_0 = T_4900;\n  assign T_2364_1 = T_5000;\n  assign T_2364_2 = T_5539;\n  assign T_2364_3 = T_5547;\n  assign T_2364_4 = T_5380;\n  assign T_2364_5 = T_5577;\n  assign T_2364_6 = T_5609;\n  assign T_2364_7 = T_5641;\n  assign T_2364_8 = T_5673;\n  assign T_2364_9 = T_5705;\n  assign T_2364_10 = T_5737;\n  assign T_2364_11 = T_5769;\n  assign T_2364_12 = T_5801;\n  assign T_2364_13 = T_5300;\n  assign T_2364_14 = T_5819;\n  assign T_2364_15 = T_5827;\n  assign T_2364_16 = T_5835;\n  assign T_2364_17 = T_5843;\n  assign T_2364_18 = T_5020;\n  assign T_2364_19 = T_5855;\n  assign T_2364_20 = T_5863;\n  assign T_2364_21 = T_5320;\n  assign T_2364_22 = T_5878;\n  assign T_2364_23 = T_5890;\n  assign T_2364_24 = T_5902;\n  assign T_2364_25 = T_5917;\n  assign T_2364_26 = T_5933;\n  assign T_2364_27 = T_5949;\n  assign T_2364_28 = T_5965;\n  assign T_2364_29 = T_5975;\n  assign T_2364_30 = T_5983;\n  assign T_2364_31 = T_5994;\n  assign T_2364_32 = T_6006;\n  assign T_2364_33 = T_6018;\n  assign T_2364_34 = T_4980;\n  assign T_2369_0 = T_4906;\n  assign T_2369_1 = T_5006;\n  assign T_2369_2 = T_5541;\n  assign T_2369_3 = T_5549;\n  assign T_2369_4 = T_5386;\n  assign T_2369_5 = T_5585;\n  assign T_2369_6 = T_5617;\n  assign T_2369_7 = T_5649;\n  assign T_2369_8 = T_5681;\n  assign T_2369_9 = T_5713;\n  assign T_2369_10 = T_5745;\n  assign T_2369_11 = T_5777;\n  assign T_2369_12 = T_5809;\n  assign T_2369_13 = T_5306;\n  assign T_2369_14 = T_5821;\n  assign T_2369_15 = T_5829;\n  assign T_2369_16 = T_5837;\n  assign T_2369_17 = T_5845;\n  assign T_2369_18 = T_5026;\n  assign T_2369_19 = T_5857;\n  assign T_2369_20 = T_5865;\n  assign T_2369_21 = T_5326;\n  assign T_2369_22 = T_5881;\n  assign T_2369_23 = T_5893;\n  assign T_2369_24 = T_5905;\n  assign T_2369_25 = T_5921;\n  assign T_2369_26 = T_5937;\n  assign T_2369_27 = T_5953;\n  assign T_2369_28 = T_5969;\n  assign T_2369_29 = T_5977;\n  assign T_2369_30 = T_5985;\n  assign T_2369_31 = T_5997;\n  assign T_2369_32 = T_6009;\n  assign T_2369_33 = T_6021;\n  assign T_2369_34 = T_4986;\n  assign T_2531 = T_2104_bits_mask[0];\n  assign T_2532 = T_2104_bits_mask[1];\n  assign T_2533 = T_2104_bits_mask[2];\n  assign T_2534 = T_2104_bits_mask[3];\n  assign T_2538 = T_2531 ? 8'hff : 8'h0;\n  assign T_2542 = T_2532 ? 8'hff : 8'h0;\n  assign T_2546 = T_2533 ? 8'hff : 8'h0;\n  assign T_2550 = T_2534 ? 8'hff : 8'h0;\n  assign T_2551 = {T_2542,T_2538};\n  assign T_2552 = {T_2550,T_2546};\n  assign T_2553 = {T_2552,T_2551};\n  assign T_2577 = T_2553[11:0];\n  assign T_2581 = ~ T_2577;\n  assign T_2583 = T_2581 == 12'h0;\n  assign T_2596 = T_2369_0 & T_2583;\n  assign T_2597 = T_2104_bits_data[11:0];\n  assign GEN_13 = T_2596 ? T_2597 : ctrl_sck_div;\n  assign T_2617 = T_2553[0];\n  assign T_2621 = ~ T_2617;\n  assign T_2623 = T_2621 == 1'h0;\n  assign T_2636 = T_2369_1 & T_2623;\n  assign T_2637 = T_2104_bits_data[0];\n  assign GEN_14 = T_2636 ? T_2637 : ctrl_cs_dflt_0;\n  assign T_2657 = T_2553[7:0];\n  assign T_2659 = T_2657 != 8'h0;\n  assign T_2661 = ~ T_2657;\n  assign T_2663 = T_2661 == 8'h0;\n  assign T_2676 = T_2369_2 & T_2663;\n  assign T_2677 = T_2104_bits_data[7:0];\n  assign GEN_15 = T_2676 ? T_2677 : ctrl_dla_cssck;\n  assign T_2697 = T_2553[23:16];\n  assign T_2701 = ~ T_2697;\n  assign T_2703 = T_2701 == 8'h0;\n  assign T_2716 = T_2369_3 & T_2703;\n  assign T_2717 = T_2104_bits_data[23:16];\n  assign GEN_16 = T_2716 ? T_2717 : ctrl_dla_sckcs;\n  assign GEN_226 = {{16'd0}, ctrl_dla_sckcs};\n  assign T_2732 = GEN_226 << 16;\n  assign GEN_227 = {{16'd0}, ctrl_dla_cssck};\n  assign T_2736 = GEN_227 | T_2732;\n  assign T_2756 = T_2369_4 & T_2623;\n  assign GEN_17 = T_2756 ? T_2637 : flash_en;\n  assign T_2796 = T_2369_5 & T_2623;\n  assign GEN_18 = T_2796 ? T_2637 : insn_cmd_en;\n  assign T_2817 = T_2553[3:1];\n  assign T_2821 = ~ T_2817;\n  assign T_2823 = T_2821 == 3'h0;\n  assign T_2836 = T_2369_6 & T_2823;\n  assign T_2837 = T_2104_bits_data[3:1];\n  assign GEN_19 = T_2836 ? T_2837 : insn_addr_len;\n  assign GEN_228 = {{1'd0}, insn_addr_len};\n  assign T_2852 = GEN_228 << 1;\n  assign GEN_229 = {{3'd0}, insn_cmd_en};\n  assign T_2856 = GEN_229 | T_2852;\n  assign T_2857 = T_2553[7:4];\n  assign T_2861 = ~ T_2857;\n  assign T_2863 = T_2861 == 4'h0;\n  assign T_2876 = T_2369_7 & T_2863;\n  assign T_2877 = T_2104_bits_data[7:4];\n  assign GEN_20 = T_2876 ? T_2877 : insn_pad_cnt;\n  assign GEN_230 = {{4'd0}, insn_pad_cnt};\n  assign T_2892 = GEN_230 << 4;\n  assign GEN_231 = {{4'd0}, T_2856};\n  assign T_2896 = GEN_231 | T_2892;\n  assign T_2897 = T_2553[9:8];\n  assign T_2901 = ~ T_2897;\n  assign T_2903 = T_2901 == 2'h0;\n  assign T_2916 = T_2369_8 & T_2903;\n  assign T_2917 = T_2104_bits_data[9:8];\n  assign GEN_21 = T_2916 ? T_2917 : insn_cmd_proto;\n  assign GEN_232 = {{8'd0}, insn_cmd_proto};\n  assign T_2932 = GEN_232 << 8;\n  assign GEN_233 = {{2'd0}, T_2896};\n  assign T_2936 = GEN_233 | T_2932;\n  assign T_2937 = T_2553[11:10];\n  assign T_2941 = ~ T_2937;\n  assign T_2943 = T_2941 == 2'h0;\n  assign T_2956 = T_2369_9 & T_2943;\n  assign T_2957 = T_2104_bits_data[11:10];\n  assign GEN_22 = T_2956 ? T_2957 : insn_addr_proto;\n  assign GEN_234 = {{10'd0}, insn_addr_proto};\n  assign T_2972 = GEN_234 << 10;\n  assign GEN_235 = {{2'd0}, T_2936};\n  assign T_2976 = GEN_235 | T_2972;\n  assign T_2977 = T_2553[13:12];\n  assign T_2981 = ~ T_2977;\n  assign T_2983 = T_2981 == 2'h0;\n  assign T_2996 = T_2369_10 & T_2983;\n  assign T_2997 = T_2104_bits_data[13:12];\n  assign GEN_23 = T_2996 ? T_2997 : insn_data_proto;\n  assign GEN_236 = {{12'd0}, insn_data_proto};\n  assign T_3012 = GEN_236 << 12;\n  assign GEN_237 = {{2'd0}, T_2976};\n  assign T_3016 = GEN_237 | T_3012;\n  assign T_3036 = T_2369_11 & T_2703;\n  assign GEN_24 = T_3036 ? T_2717 : insn_cmd_code;\n  assign GEN_238 = {{16'd0}, insn_cmd_code};\n  assign T_3052 = GEN_238 << 16;\n  assign GEN_239 = {{10'd0}, T_3016};\n  assign T_3056 = GEN_239 | T_3052;\n  assign T_3057 = T_2553[31:24];\n  assign T_3061 = ~ T_3057;\n  assign T_3063 = T_3061 == 8'h0;\n  assign T_3076 = T_2369_12 & T_3063;\n  assign T_3077 = T_2104_bits_data[31:24];\n  assign GEN_25 = T_3076 ? T_3077 : insn_pad_code;\n  assign GEN_240 = {{24'd0}, insn_pad_code};\n  assign T_3092 = GEN_240 << 24;\n  assign GEN_241 = {{8'd0}, T_3056};\n  assign T_3096 = GEN_241 | T_3092;\n  assign T_3097 = T_2553[3:0];\n  assign T_3101 = ~ T_3097;\n  assign T_3103 = T_3101 == 4'h0;\n  assign T_3116 = T_2369_13 & T_3103;\n  assign T_3117 = T_2104_bits_data[3:0];\n  assign GEN_26 = T_3116 ? T_3117 : ctrl_wm_tx;\n  assign T_3172 = fifo_io_ip_txwm;\n  assign T_3177 = T_2553[1];\n  assign T_3181 = ~ T_3177;\n  assign T_3183 = T_3181 == 1'h0;\n  assign T_3197 = T_2104_bits_data[1];\n  assign GEN_242 = {{1'd0}, fifo_io_ip_rxwm};\n  assign T_3212 = GEN_242 << 1;\n  assign GEN_243 = {{1'd0}, T_3172};\n  assign T_3216 = GEN_243 | T_3212;\n  assign T_3236 = T_2369_16 & T_2623;\n  assign GEN_27 = T_3236 ? T_2637 : ctrl_sck_pha;\n  assign T_3276 = T_2369_17 & T_3183;\n  assign GEN_28 = T_3276 ? T_3197 : ctrl_sck_pol;\n  assign GEN_244 = {{1'd0}, ctrl_sck_pol};\n  assign T_3292 = GEN_244 << 1;\n  assign GEN_245 = {{1'd0}, ctrl_sck_pha};\n  assign T_3296 = GEN_245 | T_3292;\n  assign T_3297 = T_2553[1:0];\n  assign T_3301 = ~ T_3297;\n  assign T_3303 = T_3301 == 2'h0;\n  assign T_3316 = T_2369_18 & T_3303;\n  assign T_3317 = T_2104_bits_data[1:0];\n  assign GEN_29 = T_3316 ? T_3317 : ctrl_cs_mode;\n  assign T_3356 = T_2369_19 & T_2623;\n  assign GEN_30 = T_3356 ? T_2637 : ie_txwm;\n  assign T_3396 = T_2369_20 & T_3183;\n  assign GEN_31 = T_3396 ? T_3197 : ie_rxwm;\n  assign GEN_246 = {{1'd0}, ie_rxwm};\n  assign T_3412 = GEN_246 << 1;\n  assign GEN_247 = {{1'd0}, ie_txwm};\n  assign T_3416 = GEN_247 | T_3412;\n  assign T_3436 = T_2369_21 & T_3103;\n  assign GEN_32 = T_3436 ? T_3117 : ctrl_wm_rx;\n  assign T_3476 = T_2369_22 & T_2663;\n  assign GEN_248 = {{31'd0}, T_1921};\n  assign T_3572 = GEN_248 << 31;\n  assign T_3596 = T_2369_25 & T_3303;\n  assign GEN_33 = T_3596 ? T_3317 : ctrl_fmt_proto;\n  assign T_3617 = T_2553[2];\n  assign T_3621 = ~ T_3617;\n  assign T_3623 = T_3621 == 1'h0;\n  assign T_3636 = T_2369_26 & T_3623;\n  assign T_3637 = T_2104_bits_data[2];\n  assign GEN_34 = T_3636 ? T_3637 : ctrl_fmt_endian;\n  assign GEN_249 = {{2'd0}, ctrl_fmt_endian};\n  assign T_3652 = GEN_249 << 2;\n  assign GEN_250 = {{1'd0}, ctrl_fmt_proto};\n  assign T_3656 = GEN_250 | T_3652;\n  assign T_3657 = T_2553[3];\n  assign T_3661 = ~ T_3657;\n  assign T_3663 = T_3661 == 1'h0;\n  assign T_3676 = T_2369_27 & T_3663;\n  assign T_3677 = T_2104_bits_data[3];\n  assign GEN_35 = T_3676 ? T_3677 : ctrl_fmt_iodir;\n  assign GEN_251 = {{3'd0}, ctrl_fmt_iodir};\n  assign T_3692 = GEN_251 << 3;\n  assign GEN_252 = {{1'd0}, T_3656};\n  assign T_3696 = GEN_252 | T_3692;\n  assign T_3697 = T_2553[19:16];\n  assign T_3701 = ~ T_3697;\n  assign T_3703 = T_3701 == 4'h0;\n  assign T_3716 = T_2369_28 & T_3703;\n  assign T_3717 = T_2104_bits_data[19:16];\n  assign GEN_36 = T_3716 ? T_3717 : ctrl_fmt_len;\n  assign GEN_253 = {{16'd0}, ctrl_fmt_len};\n  assign T_3732 = GEN_253 << 16;\n  assign GEN_254 = {{16'd0}, T_3696};\n  assign T_3736 = GEN_254 | T_3732;\n  assign T_3756 = T_2369_29 & T_2663;\n  assign GEN_37 = T_3756 ? T_2677 : ctrl_dla_intercs;\n  assign T_3796 = T_2369_30 & T_2703;\n  assign GEN_38 = T_3796 ? T_2717 : ctrl_dla_interxfr;\n  assign GEN_255 = {{16'd0}, ctrl_dla_interxfr};\n  assign T_3812 = GEN_255 << 16;\n  assign GEN_256 = {{16'd0}, ctrl_dla_intercs};\n  assign T_3816 = GEN_256 | T_3812;\n  assign T_3832 = T_2364_31 & T_2659;\n  assign T_3852 = fifo_io_rx_bits;\n  assign T_3896 = {{23'd0}, T_3852};\n  assign GEN_257 = {{31'd0}, T_1924};\n  assign T_3932 = GEN_257 << 31;\n  assign GEN_258 = {{1'd0}, T_3896};\n  assign T_3936 = GEN_258 | T_3932;\n  assign T_3956 = T_2369_34 & T_2623;\n  assign GEN_39 = T_3956 ? T_2637 : ctrl_cs_id;\n  assign T_3978 = T_2191 == 1'h0;\n  assign T_3980 = T_3978 | T_2344_0;\n  assign T_3982 = T_2254 == 1'h0;\n  assign T_3983 = T_2344_17 & T_2344_16;\n  assign T_3985 = T_3982 | T_3983;\n  assign T_3993 = T_2326 == 1'h0;\n  assign T_3995 = T_3993 | T_2344_34;\n  assign T_3997 = T_2200 == 1'h0;\n  assign T_3999 = T_3997 | T_2344_1;\n  assign T_4001 = T_2263 == 1'h0;\n  assign T_4003 = T_4001 | T_2344_18;\n  assign T_4014 = T_2209 == 1'h0;\n  assign T_4015 = T_2344_3 & T_2344_2;\n  assign T_4017 = T_4014 | T_4015;\n  assign T_4019 = T_2308 == 1'h0;\n  assign T_4020 = T_2344_30 & T_2344_29;\n  assign T_4022 = T_4019 | T_4020;\n  assign T_4036 = T_2299 == 1'h0;\n  assign T_4037 = T_2344_28 & T_2344_27;\n  assign T_4038 = T_4037 & T_2344_26;\n  assign T_4039 = T_4038 & T_2344_25;\n  assign T_4041 = T_4036 | T_4039;\n  assign T_4046 = T_2290 == 1'h0;\n  assign T_4047 = T_2344_24 & T_2344_23;\n  assign T_4048 = T_4047 & T_2344_22;\n  assign T_4050 = T_4046 | T_4048;\n  assign T_4052 = T_2317 == 1'h0;\n  assign T_4053 = T_2344_33 & T_2344_32;\n  assign T_4054 = T_4053 & T_2344_31;\n  assign T_4056 = T_4052 | T_4054;\n  assign T_4058 = T_2236 == 1'h0;\n  assign T_4060 = T_4058 | T_2344_13;\n  assign T_4062 = T_2281 == 1'h0;\n  assign T_4064 = T_4062 | T_2344_21;\n  assign T_4072 = T_2218 == 1'h0;\n  assign T_4074 = T_4072 | T_2344_4;\n  assign T_4076 = T_2227 == 1'h0;\n  assign T_4077 = T_2344_12 & T_2344_11;\n  assign T_4078 = T_4077 & T_2344_10;\n  assign T_4079 = T_4078 & T_2344_9;\n  assign T_4080 = T_4079 & T_2344_8;\n  assign T_4081 = T_4080 & T_2344_7;\n  assign T_4082 = T_4081 & T_2344_6;\n  assign T_4083 = T_4082 & T_2344_5;\n  assign T_4085 = T_4076 | T_4083;\n  assign T_4093 = T_2272 == 1'h0;\n  assign T_4094 = T_2344_20 & T_2344_19;\n  assign T_4096 = T_4093 | T_4094;\n  assign T_4098 = T_2245 == 1'h0;\n  assign T_4099 = T_2344_15 & T_2344_14;\n  assign T_4101 = T_4098 | T_4099;\n  assign T_4143_0 = T_3980;\n  assign T_4143_1 = T_3985;\n  assign T_4143_2 = 1'h1;\n  assign T_4143_3 = 1'h1;\n  assign T_4143_4 = T_3995;\n  assign T_4143_5 = T_3999;\n  assign T_4143_6 = T_4003;\n  assign T_4143_7 = 1'h1;\n  assign T_4143_8 = 1'h1;\n  assign T_4143_9 = 1'h1;\n  assign T_4143_10 = T_4017;\n  assign T_4143_11 = T_4022;\n  assign T_4143_12 = 1'h1;\n  assign T_4143_13 = 1'h1;\n  assign T_4143_14 = 1'h1;\n  assign T_4143_15 = 1'h1;\n  assign T_4143_16 = T_4041;\n  assign T_4143_17 = 1'h1;\n  assign T_4143_18 = T_4050;\n  assign T_4143_19 = T_4056;\n  assign T_4143_20 = T_4060;\n  assign T_4143_21 = T_4064;\n  assign T_4143_22 = 1'h1;\n  assign T_4143_23 = 1'h1;\n  assign T_4143_24 = T_4074;\n  assign T_4143_25 = T_4085;\n  assign T_4143_26 = 1'h1;\n  assign T_4143_27 = 1'h1;\n  assign T_4143_28 = T_4096;\n  assign T_4143_29 = T_4101;\n  assign T_4143_30 = 1'h1;\n  assign T_4143_31 = 1'h1;\n  assign T_4181 = T_3978 | T_2349_0;\n  assign T_4184 = T_2349_17 & T_2349_16;\n  assign T_4186 = T_3982 | T_4184;\n  assign T_4196 = T_3993 | T_2349_34;\n  assign T_4200 = T_3997 | T_2349_1;\n  assign T_4204 = T_4001 | T_2349_18;\n  assign T_4216 = T_2349_3 & T_2349_2;\n  assign T_4218 = T_4014 | T_4216;\n  assign T_4221 = T_2349_30 & T_2349_29;\n  assign T_4223 = T_4019 | T_4221;\n  assign T_4238 = T_2349_28 & T_2349_27;\n  assign T_4239 = T_4238 & T_2349_26;\n  assign T_4240 = T_4239 & T_2349_25;\n  assign T_4242 = T_4036 | T_4240;\n  assign T_4248 = T_2349_24 & T_2349_23;\n  assign T_4249 = T_4248 & T_2349_22;\n  assign T_4251 = T_4046 | T_4249;\n  assign T_4254 = T_2349_33 & T_2349_32;\n  assign T_4255 = T_4254 & T_2349_31;\n  assign T_4257 = T_4052 | T_4255;\n  assign T_4261 = T_4058 | T_2349_13;\n  assign T_4265 = T_4062 | T_2349_21;\n  assign T_4275 = T_4072 | T_2349_4;\n  assign T_4278 = T_2349_12 & T_2349_11;\n  assign T_4279 = T_4278 & T_2349_10;\n  assign T_4280 = T_4279 & T_2349_9;\n  assign T_4281 = T_4280 & T_2349_8;\n  assign T_4282 = T_4281 & T_2349_7;\n  assign T_4283 = T_4282 & T_2349_6;\n  assign T_4284 = T_4283 & T_2349_5;\n  assign T_4286 = T_4076 | T_4284;\n  assign T_4295 = T_2349_20 & T_2349_19;\n  assign T_4297 = T_4093 | T_4295;\n  assign T_4300 = T_2349_15 & T_2349_14;\n  assign T_4302 = T_4098 | T_4300;\n  assign T_4344_0 = T_4181;\n  assign T_4344_1 = T_4186;\n  assign T_4344_2 = 1'h1;\n  assign T_4344_3 = 1'h1;\n  assign T_4344_4 = T_4196;\n  assign T_4344_5 = T_4200;\n  assign T_4344_6 = T_4204;\n  assign T_4344_7 = 1'h1;\n  assign T_4344_8 = 1'h1;\n  assign T_4344_9 = 1'h1;\n  assign T_4344_10 = T_4218;\n  assign T_4344_11 = T_4223;\n  assign T_4344_12 = 1'h1;\n  assign T_4344_13 = 1'h1;\n  assign T_4344_14 = 1'h1;\n  assign T_4344_15 = 1'h1;\n  assign T_4344_16 = T_4242;\n  assign T_4344_17 = 1'h1;\n  assign T_4344_18 = T_4251;\n  assign T_4344_19 = T_4257;\n  assign T_4344_20 = T_4261;\n  assign T_4344_21 = T_4265;\n  assign T_4344_22 = 1'h1;\n  assign T_4344_23 = 1'h1;\n  assign T_4344_24 = T_4275;\n  assign T_4344_25 = T_4286;\n  assign T_4344_26 = 1'h1;\n  assign T_4344_27 = 1'h1;\n  assign T_4344_28 = T_4297;\n  assign T_4344_29 = T_4302;\n  assign T_4344_30 = 1'h1;\n  assign T_4344_31 = 1'h1;\n  assign T_4382 = T_3978 | T_2354_0;\n  assign T_4385 = T_2354_17 & T_2354_16;\n  assign T_4387 = T_3982 | T_4385;\n  assign T_4397 = T_3993 | T_2354_34;\n  assign T_4401 = T_3997 | T_2354_1;\n  assign T_4405 = T_4001 | T_2354_18;\n  assign T_4417 = T_2354_3 & T_2354_2;\n  assign T_4419 = T_4014 | T_4417;\n  assign T_4422 = T_2354_30 & T_2354_29;\n  assign T_4424 = T_4019 | T_4422;\n  assign T_4439 = T_2354_28 & T_2354_27;\n  assign T_4440 = T_4439 & T_2354_26;\n  assign T_4441 = T_4440 & T_2354_25;\n  assign T_4443 = T_4036 | T_4441;\n  assign T_4449 = T_2354_24 & T_2354_23;\n  assign T_4450 = T_4449 & T_2354_22;\n  assign T_4452 = T_4046 | T_4450;\n  assign T_4455 = T_2354_33 & T_2354_32;\n  assign T_4456 = T_4455 & T_2354_31;\n  assign T_4458 = T_4052 | T_4456;\n  assign T_4462 = T_4058 | T_2354_13;\n  assign T_4466 = T_4062 | T_2354_21;\n  assign T_4476 = T_4072 | T_2354_4;\n  assign T_4479 = T_2354_12 & T_2354_11;\n  assign T_4480 = T_4479 & T_2354_10;\n  assign T_4481 = T_4480 & T_2354_9;\n  assign T_4482 = T_4481 & T_2354_8;\n  assign T_4483 = T_4482 & T_2354_7;\n  assign T_4484 = T_4483 & T_2354_6;\n  assign T_4485 = T_4484 & T_2354_5;\n  assign T_4487 = T_4076 | T_4485;\n  assign T_4496 = T_2354_20 & T_2354_19;\n  assign T_4498 = T_4093 | T_4496;\n  assign T_4501 = T_2354_15 & T_2354_14;\n  assign T_4503 = T_4098 | T_4501;\n  assign T_4545_0 = T_4382;\n  assign T_4545_1 = T_4387;\n  assign T_4545_2 = 1'h1;\n  assign T_4545_3 = 1'h1;\n  assign T_4545_4 = T_4397;\n  assign T_4545_5 = T_4401;\n  assign T_4545_6 = T_4405;\n  assign T_4545_7 = 1'h1;\n  assign T_4545_8 = 1'h1;\n  assign T_4545_9 = 1'h1;\n  assign T_4545_10 = T_4419;\n  assign T_4545_11 = T_4424;\n  assign T_4545_12 = 1'h1;\n  assign T_4545_13 = 1'h1;\n  assign T_4545_14 = 1'h1;\n  assign T_4545_15 = 1'h1;\n  assign T_4545_16 = T_4443;\n  assign T_4545_17 = 1'h1;\n  assign T"}
{"text": "_4545_18 = T_4452;\n  assign T_4545_19 = T_4458;\n  assign T_4545_20 = T_4462;\n  assign T_4545_21 = T_4466;\n  assign T_4545_22 = 1'h1;\n  assign T_4545_23 = 1'h1;\n  assign T_4545_24 = T_4476;\n  assign T_4545_25 = T_4487;\n  assign T_4545_26 = 1'h1;\n  assign T_4545_27 = 1'h1;\n  assign T_4545_28 = T_4498;\n  assign T_4545_29 = T_4503;\n  assign T_4545_30 = 1'h1;\n  assign T_4545_31 = 1'h1;\n  assign T_4583 = T_3978 | T_2359_0;\n  assign T_4586 = T_2359_17 & T_2359_16;\n  assign T_4588 = T_3982 | T_4586;\n  assign T_4598 = T_3993 | T_2359_34;\n  assign T_4602 = T_3997 | T_2359_1;\n  assign T_4606 = T_4001 | T_2359_18;\n  assign T_4618 = T_2359_3 & T_2359_2;\n  assign T_4620 = T_4014 | T_4618;\n  assign T_4623 = T_2359_30 & T_2359_29;\n  assign T_4625 = T_4019 | T_4623;\n  assign T_4640 = T_2359_28 & T_2359_27;\n  assign T_4641 = T_4640 & T_2359_26;\n  assign T_4642 = T_4641 & T_2359_25;\n  assign T_4644 = T_4036 | T_4642;\n  assign T_4650 = T_2359_24 & T_2359_23;\n  assign T_4651 = T_4650 & T_2359_22;\n  assign T_4653 = T_4046 | T_4651;\n  assign T_4656 = T_2359_33 & T_2359_32;\n  assign T_4657 = T_4656 & T_2359_31;\n  assign T_4659 = T_4052 | T_4657;\n  assign T_4663 = T_4058 | T_2359_13;\n  assign T_4667 = T_4062 | T_2359_21;\n  assign T_4677 = T_4072 | T_2359_4;\n  assign T_4680 = T_2359_12 & T_2359_11;\n  assign T_4681 = T_4680 & T_2359_10;\n  assign T_4682 = T_4681 & T_2359_9;\n  assign T_4683 = T_4682 & T_2359_8;\n  assign T_4684 = T_4683 & T_2359_7;\n  assign T_4685 = T_4684 & T_2359_6;\n  assign T_4686 = T_4685 & T_2359_5;\n  assign T_4688 = T_4076 | T_4686;\n  assign T_4697 = T_2359_20 & T_2359_19;\n  assign T_4699 = T_4093 | T_4697;\n  assign T_4702 = T_2359_15 & T_2359_14;\n  assign T_4704 = T_4098 | T_4702;\n  assign T_4746_0 = T_4583;\n  assign T_4746_1 = T_4588;\n  assign T_4746_2 = 1'h1;\n  assign T_4746_3 = 1'h1;\n  assign T_4746_4 = T_4598;\n  assign T_4746_5 = T_4602;\n  assign T_4746_6 = T_4606;\n  assign T_4746_7 = 1'h1;\n  assign T_4746_8 = 1'h1;\n  assign T_4746_9 = 1'h1;\n  assign T_4746_10 = T_4620;\n  assign T_4746_11 = T_4625;\n  assign T_4746_12 = 1'h1;\n  assign T_4746_13 = 1'h1;\n  assign T_4746_14 = 1'h1;\n  assign T_4746_15 = 1'h1;\n  assign T_4746_16 = T_4644;\n  assign T_4746_17 = 1'h1;\n  assign T_4746_18 = T_4653;\n  assign T_4746_19 = T_4659;\n  assign T_4746_20 = T_4663;\n  assign T_4746_21 = T_4667;\n  assign T_4746_22 = 1'h1;\n  assign T_4746_23 = 1'h1;\n  assign T_4746_24 = T_4677;\n  assign T_4746_25 = T_4688;\n  assign T_4746_26 = 1'h1;\n  assign T_4746_27 = 1'h1;\n  assign T_4746_28 = T_4699;\n  assign T_4746_29 = T_4704;\n  assign T_4746_30 = 1'h1;\n  assign T_4746_31 = 1'h1;\n  assign T_4781 = T_2104_bits_index[0];\n  assign T_4782 = T_2104_bits_index[1];\n  assign T_4783 = T_2104_bits_index[2];\n  assign T_4784 = T_2104_bits_index[3];\n  assign T_4785 = T_2104_bits_index[4];\n  assign T_4791 = {T_4782,T_4781};\n  assign T_4792 = {T_4785,T_4784};\n  assign T_4793 = {T_4792,T_4783};\n  assign T_4794 = {T_4793,T_4791};\n  assign GEN_0 = GEN_70;\n  assign GEN_40 = 5'h1 == T_4794 ? T_4143_1 : T_4143_0;\n  assign GEN_41 = 5'h2 == T_4794 ? T_4143_2 : GEN_40;\n  assign GEN_42 = 5'h3 == T_4794 ? T_4143_3 : GEN_41;\n  assign GEN_43 = 5'h4 == T_4794 ? T_4143_4 : GEN_42;\n  assign GEN_44 = 5'h5 == T_4794 ? T_4143_5 : GEN_43;\n  assign GEN_45 = 5'h6 == T_4794 ? T_4143_6 : GEN_44;\n  assign GEN_46 = 5'h7 == T_4794 ? T_4143_7 : GEN_45;\n  assign GEN_47 = 5'h8 == T_4794 ? T_4143_8 : GEN_46;\n  assign GEN_48 = 5'h9 == T_4794 ? T_4143_9 : GEN_47;\n  assign GEN_49 = 5'ha == T_4794 ? T_4143_10 : GEN_48;\n  assign GEN_50 = 5'hb == T_4794 ? T_4143_11 : GEN_49;\n  assign GEN_51 = 5'hc == T_4794 ? T_4143_12 : GEN_50;\n  assign GEN_52 = 5'hd == T_4794 ? T_4143_13 : GEN_51;\n  assign GEN_53 = 5'he == T_4794 ? T_4143_14 : GEN_52;\n  assign GEN_54 = 5'hf == T_4794 ? T_4143_15 : GEN_53;\n  assign GEN_55 = 5'h10 == T_4794 ? T_4143_16 : GEN_54;\n  assign GEN_56 = 5'h11 == T_4794 ? T_4143_17 : GEN_55;\n  assign GEN_57 = 5'h12 == T_4794 ? T_4143_18 : GEN_56;\n  assign GEN_58 = 5'h13 == T_4794 ? T_4143_19 : GEN_57;\n  assign GEN_59 = 5'h14 == T_4794 ? T_4143_20 : GEN_58;\n  assign GEN_60 = 5'h15 == T_4794 ? T_4143_21 : GEN_59;\n  assign GEN_61 = 5'h16 == T_4794 ? T_4143_22 : GEN_60;\n  assign GEN_62 = 5'h17 == T_4794 ? T_4143_23 : GEN_61;\n  assign GEN_63 = 5'h18 == T_4794 ? T_4143_24 : GEN_62;\n  assign GEN_64 = 5'h19 == T_4794 ? T_4143_25 : GEN_63;\n  assign GEN_65 = 5'h1a == T_4794 ? T_4143_26 : GEN_64;\n  assign GEN_66 = 5'h1b == T_4794 ? T_4143_27 : GEN_65;\n  assign GEN_67 = 5'h1c == T_4794 ? T_4143_28 : GEN_66;\n  assign GEN_68 = 5'h1d == T_4794 ? T_4143_29 : GEN_67;\n  assign GEN_69 = 5'h1e == T_4794 ? T_4143_30 : GEN_68;\n  assign GEN_70 = 5'h1f == T_4794 ? T_4143_31 : GEN_69;\n  assign GEN_1 = GEN_101;\n  assign GEN_71 = 5'h1 == T_4794 ? T_4344_1 : T_4344_0;\n  assign GEN_72 = 5'h2 == T_4794 ? T_4344_2 : GEN_71;\n  assign GEN_73 = 5'h3 == T_4794 ? T_4344_3 : GEN_72;\n  assign GEN_74 = 5'h4 == T_4794 ? T_4344_4 : GEN_73;\n  assign GEN_75 = 5'h5 == T_4794 ? T_4344_5 : GEN_74;\n  assign GEN_76 = 5'h6 == T_4794 ? T_4344_6 : GEN_75;\n  assign GEN_77 = 5'h7 == T_4794 ? T_4344_7 : GEN_76;\n  assign GEN_78 = 5'h8 == T_4794 ? T_4344_8 : GEN_77;\n  assign GEN_79 = 5'h9 == T_4794 ? T_4344_9 : GEN_78;\n  assign GEN_80 = 5'ha == T_4794 ? T_4344_10 : GEN_79;\n  assign GEN_81 = 5'hb == T_4794 ? T_4344_11 : GEN_80;\n  assign GEN_82 = 5'hc == T_4794 ? T_4344_12 : GEN_81;\n  assign GEN_83 = 5'hd == T_4794 ? T_4344_13 : GEN_82;\n  assign GEN_84 = 5'he == T_4794 ? T_4344_14 : GEN_83;\n  assign GEN_85 = 5'hf == T_4794 ? T_4344_15 : GEN_84;\n  assign GEN_86 = 5'h10 == T_4794 ? T_4344_16 : GEN_85;\n  assign GEN_87 = 5'h11 == T_4794 ? T_4344_17 : GEN_86;\n  assign GEN_88 = 5'h12 == T_4794 ? T_4344_18 : GEN_87;\n  assign GEN_89 = 5'h13 == T_4794 ? T_4344_19 : GEN_88;\n  assign GEN_90 = 5'h14 == T_4794 ? T_4344_20 : GEN_89;\n  assign GEN_91 = 5'h15 == T_4794 ? T_4344_21 : GEN_90;\n  assign GEN_92 = 5'h16 == T_4794 ? T_4344_22 : GEN_91;\n  assign GEN_93 = 5'h17 == T_4794 ? T_4344_23 : GEN_92;\n  assign GEN_94 = 5'h18 == T_4794 ? T_4344_24 : GEN_93;\n  assign GEN_95 = 5'h19 == T_4794 ? T_4344_25 : GEN_94;\n  assign GEN_96 = 5'h1a == T_4794 ? T_4344_26 : GEN_95;\n  assign GEN_97 = 5'h1b == T_4794 ? T_4344_27 : GEN_96;\n  assign GEN_98 = 5'h1c == T_4794 ? T_4344_28 : GEN_97;\n  assign GEN_99 = 5'h1d == T_4794 ? T_4344_29 : GEN_98;\n  assign GEN_100 = 5'h1e == T_4794 ? T_4344_30 : GEN_99;\n  assign GEN_101 = 5'h1f == T_4794 ? T_4344_31 : GEN_100;\n  assign T_4811 = T_2104_bits_read ? GEN_0 : GEN_1;\n  assign GEN_2 = GEN_132;\n  assign GEN_102 = 5'h1 == T_4794 ? T_4545_1 : T_4545_0;\n  assign GEN_103 = 5'h2 == T_4794 ? T_4545_2 : GEN_102;\n  assign GEN_104 = 5'h3 == T_4794 ? T_4545_3 : GEN_103;\n  assign GEN_105 = 5'h4 == T_4794 ? T_4545_4 : GEN_104;\n  assign GEN_106 = 5'h5 == T_4794 ? T_4545_5 : GEN_105;\n  assign GEN_107 = 5'h6 == T_4794 ? T_4545_6 : GEN_106;\n  assign GEN_108 = 5'h7 == T_4794 ? T_4545_7 : GEN_107;\n  assign GEN_109 = 5'h8 == T_4794 ? T_4545_8 : GEN_108;\n  assign GEN_110 = 5'h9 == T_4794 ? T_4545_9 : GEN_109;\n  assign GEN_111 = 5'ha == T_4794 ? T_4545_10 : GEN_110;\n  assign GEN_112 = 5'hb == T_4794 ? T_4545_11 : GEN_111;\n  assign GEN_113 = 5'hc == T_4794 ? T_4545_12 : GEN_112;\n  assign GEN_114 = 5'hd == T_4794 ? T_4545_13 : GEN_113;\n  assign GEN_115 = 5'he == T_4794 ? T_4545_14 : GEN_114;\n  assign GEN_116 = 5'hf == T_4794 ? T_4545_15 : GEN_115;\n  assign GEN_117 = 5'h10 == T_4794 ? T_4545_16 : GEN_116;\n  assign GEN_118 = 5'h11 == T_4794 ? T_4545_17 : GEN_117;\n  assign GEN_119 = 5'h12 == T_4794 ? T_4545_18 : GEN_118;\n  assign GEN_120 = 5'h13 == T_4794 ? T_4545_19 : GEN_119;\n  assign GEN_121 = 5'h14 == T_4794 ? T_4545_20 : GEN_120;\n  assign GEN_122 = 5'h15 == T_4794 ? T_4545_21 : GEN_121;\n  assign GEN_123 = 5'h16 == T_4794 ? T_4545_22 : GEN_122;\n  assign GEN_124 = 5'h17 == T_4794 ? T_4545_23 : GEN_123;\n  assign GEN_125 = 5'h18 == T_4794 ? T_4545_24 : GEN_124;\n  assign GEN_126 = 5'h19 == T_4794 ? T_4545_25 : GEN_125;\n  assign GEN_127 = 5'h1a == T_4794 ? T_4545_26 : GEN_126;\n  assign GEN_128 = 5'h1b == T_4794 ? T_4545_27 : GEN_127;\n  assign GEN_129 = 5'h1c == T_4794 ? T_4545_28 : GEN_128;\n  assign GEN_130 = 5'h1d == T_4794 ? T_4545_29 : GEN_129;\n  assign GEN_131 = 5'h1e == T_4794 ? T_4545_30 : GEN_130;\n  assign GEN_132 = 5'h1f == T_4794 ? T_4545_31 : GEN_131;\n  assign GEN_3 = GEN_163;\n  assign GEN_133 = 5'h1 == T_4794 ? T_4746_1 : T_4746_0;\n  assign GEN_134 = 5'h2 == T_4794 ? T_4746_2 : GEN_133;\n  assign GEN_135 = 5'h3 == T_4794 ? T_4746_3 : GEN_134;\n  assign GEN_136 = 5'h4 == T_4794 ? T_4746_4 : GEN_135;\n  assign GEN_137 = 5'h5 == T_4794 ? T_4746_5 : GEN_136;\n  assign GEN_138 = 5'h6 == T_4794 ? T_4746_6 : GEN_137;\n  assign GEN_139 = 5'h7 == T_4794 ? T_4746_7 : GEN_138;\n  assign GEN_140 = 5'h8 == T_4794 ? T_4746_8 : GEN_139;\n  assign GEN_141 = 5'h9 == T_4794 ? T_4746_9 : GEN_140;\n  assign GEN_142 = 5'ha == T_4794 ? T_4746_10 : GEN_141;\n  assign GEN_143 = 5'hb == T_4794 ? T_4746_11 : GEN_142;\n  assign GEN_144 = 5'hc == T_4794 ? T_4746_12 : GEN_143;\n  assign GEN_145 = 5'hd == T_4794 ? T_4746_13 : GEN_144;\n  assign GEN_146 = 5'he == T_4794 ? T_4746_14 : GEN_145;\n  assign GEN_147 = 5'hf == T_4794 ? T_4746_15 : GEN_146;\n  assign GEN_148 = 5'h10 == T_4794 ? T_4746_16 : GEN_147;\n  assign GEN_149 = 5'h11 == T_4794 ? T_4746_17 : GEN_148;\n  assign GEN_150 = 5'h12 == T_4794 ? T_4746_18 : GEN_149;\n  assign GEN_151 = 5'h13 == T_4794 ? T_4746_19 : GEN_150;\n  assign GEN_152 = 5'h14 == T_4794 ? T_4746_20 : GEN_151;\n  assign GEN_153 = 5'h15 == T_4794 ? T_4746_21 : GEN_152;\n  assign GEN_154 = 5'h16 == T_4794 ? T_4746_22 : GEN_153;\n  assign GEN_155 = 5'h17 == T_4794 ? T_4746_23 : GEN_154;\n  assign GEN_156 = 5'h18 == T_4794 ? T_4746_24 : GEN_155;\n  assign GEN_157 = 5'h19 == T_4794 ? T_4746_25 : GEN_156;\n  assign GEN_158 = 5'h1a == T_4794 ? T_4746_26 : GEN_157;\n  assign GEN_159 = 5'h1b == T_4794 ? T_4746_27 : GEN_158;\n  assign GEN_160 = 5'h1c == T_4794 ? T_4746_28 : GEN_159;\n  assign GEN_161 = 5'h1d == T_4794 ? T_4746_29 : GEN_160;\n  assign GEN_162 = 5'h1e == T_4794 ? T_4746_30 : GEN_161;\n  assign GEN_163 = 5'h1f == T_4794 ? T_4746_31 : GEN_162;\n  assign T_4814 = T_2104_bits_read ? GEN_2 : GEN_3;\n  assign T_4815 = T_2104_ready & T_4811;\n  assign T_4816 = T_2029_valid & T_4811;\n  assign T_4817 = T_2068_ready & T_4814;\n  assign T_4818 = T_2104_valid & T_4814;\n  assign T_4820 = 32'h1 << T_4794;\n  assign T_4821 = {T_2254,T_2191};\n  assign T_4823 = {2'h3,T_4821};\n  assign T_4824 = {T_2200,T_2326};\n  assign T_4825 = {1'h1,T_2263};\n  assign T_4826 = {T_4825,T_4824};\n  assign T_4827 = {T_4826,T_4823};\n  assign T_4829 = {T_2308,T_2209};\n  assign T_4830 = {T_4829,2'h3};\n  assign T_4834 = {4'hf,T_4830};\n  assign T_4835 = {T_4834,T_4827};\n  assign T_4836 = {1'h1,T_2299};\n  assign T_4837 = {T_2317,T_2290};\n  assign T_4838 = {T_4837,T_4836};\n  assign T_4839 = {T_2281,T_2236};\n  assign T_4841 = {2'h3,T_4839};\n  assign T_4842 = {T_4841,T_4838};\n  assign T_4843 = {T_2227,T_2218};\n  assign T_4845 = {2'h3,T_4843};\n  assign T_4846 = {T_2245,T_2272};\n  assign T_4848 = {2'h3,T_4846};\n  assign T_4849 = {T_4848,T_4845};\n  assign T_4850 = {T_4849,T_4842};\n  assign T_4851 = {T_4850,T_4835};\n  assign T_4852 = T_4820 & T_4851;\n  assign T_4887 = T_2029_valid & T_2104_ready;\n  assign T_4888 = T_4887 & T_2104_bits_read;\n  assign T_4889 = T_4852[0];\n  assign T_4890 = T_4888 & T_4889;\n  assign T_4893 = T_2104_bits_read == 1'h0;\n  assign T_4894 = T_4887 & T_4893;\n  assign T_4896 = T_4894 & T_4889;\n  assign T_4897 = T_2104_valid & T_2068_ready;\n  assign T_4898 = T_4897 & T_2104_bits_read;\n  assign T_4900 = T_4898 & T_4889;\n  assign T_4904 = T_4897 & T_4893;\n  assign T_4906 = T_4904 & T_4889;\n  assign T_4909 = T_4852[1];\n  assign T_4910 = T_4888 & T_4909;\n  assign T_4916 = T_4894 & T_4909;\n  assign T_4920 = T_4898 & T_4909;\n  assign T_4926 = T_4904 & T_4909;\n  assign T_4969 = T_4852[4];\n  assign T_4970 = T_4888 & T_4969;\n  assign T_4976 = T_4894 & T_4969;\n  assign T_4980 = T_4898 & T_4969;\n  assign T_4986 = T_4904 & T_4969;\n  assign T_4989 = T_4852[5];\n  assign T_4990 = T_4888 & T_4989;\n  assign T_4996 = T_4894 & T_4989;\n  assign T_5000 = T_4898 & T_4989;\n  assign T_5006 = T_4904 & T_4989;\n  assign T_5009 = T_4852[6];\n  assign T_5010 = T_4888 & T_5009;\n  assign T_5016 = T_4894 & T_5009;\n  assign T_5020 = T_4898 & T_5009;\n  assign T_5026 = T_4904 & T_5009;\n  assign T_5089 = T_4852[10];\n  assign T_5090 = T_4888 & T_5089;\n  assign T_5096 = T_4894 & T_5089;\n  assign T_5100 = T_4898 & T_5089;\n  assign T_5106 = T_4904 & T_5089;\n  assign T_5109 = T_4852[11];\n  assign T_5110 = T_4888 & T_5109;\n  assign T_5116 = T_4894 & T_5109;\n  assign T_5120 = T_4898 & T_5109;\n  assign T_5126 = T_4904 & T_5109;\n  assign T_5209 = T_4852[16];\n  assign T_5210 = T_4888 & T_5209;\n  assign T_5216 = T_4894 & T_5209;\n  assign T_5220 = T_4898 & T_5209;\n  assign T_5226 = T_4904 & T_5209;\n  assign T_5249 = T_4852[18];\n  assign T_5250 = T_4888 & T_5249;\n  assign T_5256 = T_4894 & T_5249;\n  assign T_5260 = T_4898 & T_5249;\n  assign T_5266 = T_4904 & T_5249;\n  assign T_5269 = T_4852[19];\n  assign T_5270 = T_4888 & T_5269;\n  assign T_5276 = T_4894 & T_5269;\n  assign T_5280 = T_4898 & T_5269;\n  assign T_5286 = T_4904 & T_5269;\n  assign T_5289 = T_4852[20];\n  assign T_5290 = T_4888 & T_5289;\n  assign T_5296 = T_4894 & T_5289;\n  assign T_5300 = T_4898 & T_5289;\n  assign T_5306 = T_4904 & T_5289;\n  assign T_5309 = T_4852[21];\n  assign T_5310 = T_4888 & T_5309;\n  assign T_5316 = T_4894 & T_5309;\n  assign T_5320 = T_4898 & T_5309;\n  assign T_5326 = T_4904 & T_5309;\n  assign T_5369 = T_4852[24];\n  assign T_5370 = T_4888 & T_5369;\n  assign T_5376 = T_4894 & T_5369;\n  assign T_5380 = T_4898 & T_5369;\n  assign T_5386 = T_4904 & T_5369;\n  assign T_5389 = T_4852[25];\n  assign T_5390 = T_4888 & T_5389;\n  assign T_5396 = T_4894 & T_5389;\n  assign T_5400 = T_4898 & T_5389;\n  assign T_5406 = T_4904 & T_5389;\n  assign T_5449 = T_4852[28];\n  assign T_5450 = T_4888 & T_5449;\n  assign T_5456 = T_4894 & T_5449;\n  assign T_5460 = T_4898 & T_5449;\n  assign T_5466 = T_4904 & T_5449;\n  assign T_5469 = T_4852[29];\n  assign T_5470 = T_4888 & T_5469;\n  assign T_5476 = T_4894 & T_5469;\n  assign T_5480 = T_4898 & T_5469;\n  assign T_5486 = T_4904 & T_5469;\n  assign T_5535 = T_5090 & T_2344_3;\n  assign T_5537 = T_5096 & T_2349_3;\n  assign T_5539 = T_5100 & T_2354_3;\n  assign T_5541 = T_5106 & T_2359_3;\n  assign T_5543 = T_5090 & T_2344_2;\n  assign T_5545 = T_5096 & T_2349_2;\n  assign T_5547 = T_5100 & T_2354_2;\n  assign T_5549 = T_5106 & T_2359_2;\n  assign T_5555 = T_5390 & T_2344_12;\n  assign T_5556 = T_5555 & T_2344_11;\n  assign T_5557 = T_5556 & T_2344_10;\n  assign T_5558 = T_5557 & T_2344_9;\n  assign T_5559 = T_5558 & T_2344_8;\n  assign T_5560 = T_5559 & T_2344_7;\n  assign T_5561 = T_5560 & T_2344_6;\n  assign T_5563 = T_5396 & T_2349_12;\n  assign T_5564 = T_5563 & T_2349_11;\n  assign T_5565 = T_5564 & T_2349_10;\n  assign T_5566 = T_5565 & T_2349_9;\n  assign T_5567 = T_5566 & T_2349_8;\n  assign T_5568 = T_5567 & T_2349_7;\n  assign T_5569 = T_5568 & T_2349_6;\n  assign T_5571 = T_5400 & T_2354_12;\n  assign T_5572 = T_5571 & T_2354_11;\n  assign T_5573 = T_5572 & T_2354_10;\n  assign T_5574 = T_5573 & T_2354_9;\n  assign T_5575 = T_5574 & T_2354_8;\n  assign T_5576 = T_5575 & T_2354_7;\n  assign T_5577 = T_5576 & T_2354_6;\n  assign T_5579 = T_5406 & T_2359_12;\n  assign T_5580 = T_5579 & T_2359_11;\n  assign T_5581 = T_5580 & T_2359_10;\n  assign T_5582 = T_5581 & T_2359_9;\n  assign T_5583 = T_5582 & T_2359_8;\n  assign T_5584 = T_5583 & T_2359_7;\n  assign T_5585 = T_5584 & T_2359_6;\n  assign T_5593 = T_5560 & T_2344_5;\n  assign T_5601 = T_5568 & T_2349_5;\n  assign T_5609 = T_5576 & T_2354_5;\n  assign T_5617 = T_5584 & T_2359_5;\n  assign T_5624 = T_5559 & T_2344_6;\n  assign T_5625 = T_5624 & T_2344_5;\n  assign T_5632 = T_5567 & T_2349_6;\n  assign T_5633 = T_5632 & T_2349_5;\n  assign T_5640 = T_5575 & T_2354_6;\n  assign T_5641 = T_5640 & T_2354_5;\n  assign T_5648 = T_5583 & T_2359_6;\n  assign T_5649 = T_5648 & T_2359_5;\n  assign T_5655 = T_5558 & T_2344_7;\n  assign T_5656 = T_5655 & T_2344_6;\n  assign T_5657 = T_5656 & T_2344_5;\n  assign T_5663 = T_5566 & T_2349_7;\n  assign T_5664 = T_5663 & T_2349_6;\n  assign T_5665 = T_5664 & T_2349_5;\n  assign T_5671 = T_5574 & T_2354_7;\n  assign T_5672 = T_5671 & T_2354_6;\n  assign T_5673 = T_5672 & T_2354_5;\n  assign T_5679 = T_5582 & T_2359_7;\n  assign T_5680 = T_5679 & T_2359_6;\n  assign T_5681 = T_5680 & T_2359_5;\n  assign T_5686 = T_5557 & T_2344_8;\n  assign T_5687 = T_5686 & T_2344_7;\n  assign T_5688 = T_5687 & T_2344_6;\n  assign T_5689 = T_5688 & T_2344_5;\n  assign T_5694 = T_5565 & T_2349_8;\n  assign T_5695 = T_5694 & T_2349_7;\n  assign T_5696 = T_5695 & T_2349_6;\n  assign T_5697 = T_5696 & T_2349_5;\n  assign T_5702 = T_5573 & T_2354_8;\n  assign T_5703 = T_5702 & T_2354_7;\n  assign T_5704 = T_5703 & T_2354_6;\n  assign T_5705 = T_5704 & T_2354_5;\n  assign T_5710 = T_5581 & T_2359_8;\n  assign T_5711 = T_5710 & T_2359_7;\n  assign T_5712 = T_5711 & T_2359_6;\n  assign T_5713 = T_5712 & T_2359_5;\n  assign T_5717 = T_5556 & T_2344_9;\n  assign T_5718 = T_5717 & T_2344_8;\n  assign T_5719 = T_5718 & T_2344_7;\n  assign T_5720 = T_5719 & T_2344_6;\n  assign T_5721 = T_5720 & T_2344_5;\n  assign T_5725 = T_5564 & T_2349_9;\n  assign T_5726 = T_5725 & T_2349_8;\n  assign T_5727 = T_5726 & T_2349_7;\n  assign T_5728 = T_5727 & T_2349_6;\n  assign T_5729 = T_5728 & T_2349_5;\n  assign T_5733 = T_5572 & T_2354_9;\n  assign T_5734 = T_5733 & T_2354_8;\n  assign T_5735 = T_5734 & T_2354_7;\n  assign T_5736 = T_5735 & T_2354_6;\n  assign T_5737 = T_5736 & T_2354_5;\n  assign T_5741 = T_5580 & T_2359_9;\n  assign T_5742 = T_5741 & T_2359_8;\n  assign T_5743 = T_5742 & T_2359_7;\n  assign T_5744 = T_5743 & T_2359_6;\n  assign T_5745 = T_5744 & T_2359_5;\n  assign T_5748 = T_5555 & T_2344_10;\n  assign T_5749 = T_5748 & T_2344_9;\n  assign T_5750 = T_5749 & T_2344_8;\n  assign T_5751 = T_5750 & T_2344_7;\n  assign T_5752 = T_5751 & T_2344_6;\n  assign T_5753 = T_5752 & T_2344_5;\n  assign T_5756 = T_5563 & T_2349_10;\n  assign T_5757 = T_5756 & T_2349_9;\n  assign T_5758 = T_5757 & T_2349_8;\n  assign T_5759 = T_5758 & T_2349_7;\n  assign T_5760 = T_5759 & T_2349_6;\n  assign T_5761 = T_5760 & T_2349_5;\n  assign T_5764 = T_5571 & T_2354_10;\n  assign T_5765 = T_5764 & T_2354_9;\n  assign T_5766 = T_5765 & T_2354_8;\n  assign T_5767 = T_5766 & T_2354_7;\n  assign T_5768 = T_5767 & T_2354_6;\n  assign T_5769 = T_5768 & T_2354_5;\n  assign T_5772 = T_5579 & T_2359_10;\n  assign T_5773 = T_5772 & T_2359_9;\n  assign T_5774 = T_5773 & T_2359_8;\n  assign T_5775 = T_5774 & T_2359_7;\n  assign T_5776 = T_5775 & T_2359_6;\n  assign T_5777 = T_5776 & T_2359_5;\n  assign T_5779 = T_5390 & T_2344_11;\n  assign T_5780 = T_5779 & T_2344_10;\n  assign T_5781 = T_5780 & T_2344_9;\n  assign T_5782 = T_5781 & T_2344_8;\n  assign T_5783 = T_5782 & T_2344_7;\n  assign T_5784 = T_5783 & T_2344_6;\n  assign T_5785 = T_5784 & T_2344_5;\n  assign T_5787 = T_5396 & T_2349_11;\n  assign T_5788 = T_5787 & T_2349_10;\n  assign T_5789 = T_5788 & T_2349_9;\n  assign T_5790 = T_5789 & T_2349_8;\n  assign T_5791 = T_5790 & T_2349_7;\n  assign T_5792 = T_5791 & T_2349_6;\n  assign T_5793 = T_5792 & T_2349_5;\n  assign T_5795 = T_5400 & T_2354_11;\n  assign T_5796 = T_5795 & T_2354_10;\n  assign T_5797 = T_5796 & T_2354_9;\n  assign T_5798 = T_5797 & T_2354_8;\n  assign T_5799 = T_5798 & T_2354_7;\n  assign T_5800 = T_5799 & T_2354_6;\n  assign T_5801 = T_5800 & T_2354_5;\n  assign T_5803 = T_5406 & T_2359_11;\n  assign T_5804 = T_5803 & T_2359_10;\n  assign T_5805 = T_5804 & T_2359_9;\n  assign T_5806 = T_5805 & T_2359_8;\n  assign T_5807 = T_5806 & T_2359_7;\n  assign T_5808 = T_5807 & T_2359_6;\n  assign T_5809 = T_5808 & T_2359_5;\n  assign T_5815 = T_5470 & T_2344_15;\n  assign T_5817 = T_5476 & T_2349_15;\n  assign T_5819 = T_5480 & T_2354_15;\n  assign T_5821 = T_5486 & T_2359_15;\n  assign T_5823 = T_5470 & T_2344_14;\n  assign T_5825 = T_5476 & T_2349_14;\n  assign T_5827 = T_5480 & T_2354_14;\n  assign T_5829 = T_5486 & T_2359_14;\n  assign T_5831 = T_4910 & T_2344_17;\n  as"}
{"text": "sign T_5833 = T_4916 & T_2349_17;\n  assign T_5835 = T_4920 & T_2354_17;\n  assign T_5837 = T_4926 & T_2359_17;\n  assign T_5839 = T_4910 & T_2344_16;\n  assign T_5841 = T_4916 & T_2349_16;\n  assign T_5843 = T_4920 & T_2354_16;\n  assign T_5845 = T_4926 & T_2359_16;\n  assign T_5851 = T_5450 & T_2344_20;\n  assign T_5853 = T_5456 & T_2349_20;\n  assign T_5855 = T_5460 & T_2354_20;\n  assign T_5857 = T_5466 & T_2359_20;\n  assign T_5859 = T_5450 & T_2344_19;\n  assign T_5861 = T_5456 & T_2349_19;\n  assign T_5863 = T_5460 & T_2354_19;\n  assign T_5865 = T_5466 & T_2359_19;\n  assign T_5871 = T_5250 & T_2344_24;\n  assign T_5872 = T_5871 & T_2344_23;\n  assign T_5874 = T_5256 & T_2349_24;\n  assign T_5875 = T_5874 & T_2349_23;\n  assign T_5877 = T_5260 & T_2354_24;\n  assign T_5878 = T_5877 & T_2354_23;\n  assign T_5880 = T_5266 & T_2359_24;\n  assign T_5881 = T_5880 & T_2359_23;\n  assign T_5884 = T_5871 & T_2344_22;\n  assign T_5887 = T_5874 & T_2349_22;\n  assign T_5890 = T_5877 & T_2354_22;\n  assign T_5893 = T_5880 & T_2359_22;\n  assign T_5895 = T_5250 & T_2344_23;\n  assign T_5896 = T_5895 & T_2344_22;\n  assign T_5898 = T_5256 & T_2349_23;\n  assign T_5899 = T_5898 & T_2349_22;\n  assign T_5901 = T_5260 & T_2354_23;\n  assign T_5902 = T_5901 & T_2354_22;\n  assign T_5904 = T_5266 & T_2359_23;\n  assign T_5905 = T_5904 & T_2359_22;\n  assign T_5907 = T_5210 & T_2344_28;\n  assign T_5908 = T_5907 & T_2344_27;\n  assign T_5909 = T_5908 & T_2344_26;\n  assign T_5911 = T_5216 & T_2349_28;\n  assign T_5912 = T_5911 & T_2349_27;\n  assign T_5913 = T_5912 & T_2349_26;\n  assign T_5915 = T_5220 & T_2354_28;\n  assign T_5916 = T_5915 & T_2354_27;\n  assign T_5917 = T_5916 & T_2354_26;\n  assign T_5919 = T_5226 & T_2359_28;\n  assign T_5920 = T_5919 & T_2359_27;\n  assign T_5921 = T_5920 & T_2359_26;\n  assign T_5925 = T_5908 & T_2344_25;\n  assign T_5929 = T_5912 & T_2349_25;\n  assign T_5933 = T_5916 & T_2354_25;\n  assign T_5937 = T_5920 & T_2359_25;\n  assign T_5940 = T_5907 & T_2344_26;\n  assign T_5941 = T_5940 & T_2344_25;\n  assign T_5944 = T_5911 & T_2349_26;\n  assign T_5945 = T_5944 & T_2349_25;\n  assign T_5948 = T_5915 & T_2354_26;\n  assign T_5949 = T_5948 & T_2354_25;\n  assign T_5952 = T_5919 & T_2359_26;\n  assign T_5953 = T_5952 & T_2359_25;\n  assign T_5955 = T_5210 & T_2344_27;\n  assign T_5956 = T_5955 & T_2344_26;\n  assign T_5957 = T_5956 & T_2344_25;\n  assign T_5959 = T_5216 & T_2349_27;\n  assign T_5960 = T_5959 & T_2349_26;\n  assign T_5961 = T_5960 & T_2349_25;\n  assign T_5963 = T_5220 & T_2354_27;\n  assign T_5964 = T_5963 & T_2354_26;\n  assign T_5965 = T_5964 & T_2354_25;\n  assign T_5967 = T_5226 & T_2359_27;\n  assign T_5968 = T_5967 & T_2359_26;\n  assign T_5969 = T_5968 & T_2359_25;\n  assign T_5971 = T_5110 & T_2344_30;\n  assign T_5973 = T_5116 & T_2349_30;\n  assign T_5975 = T_5120 & T_2354_30;\n  assign T_5977 = T_5126 & T_2359_30;\n  assign T_5979 = T_5110 & T_2344_29;\n  assign T_5981 = T_5116 & T_2349_29;\n  assign T_5983 = T_5120 & T_2354_29;\n  assign T_5985 = T_5126 & T_2359_29;\n  assign T_5987 = T_5270 & T_2344_33;\n  assign T_5988 = T_5987 & T_2344_32;\n  assign T_5990 = T_5276 & T_2349_33;\n  assign T_5991 = T_5990 & T_2349_32;\n  assign T_5993 = T_5280 & T_2354_33;\n  assign T_5994 = T_5993 & T_2354_32;\n  assign T_5996 = T_5286 & T_2359_33;\n  assign T_5997 = T_5996 & T_2359_32;\n  assign T_6000 = T_5987 & T_2344_31;\n  assign T_6003 = T_5990 & T_2349_31;\n  assign T_6006 = T_5993 & T_2354_31;\n  assign T_6009 = T_5996 & T_2359_31;\n  assign T_6011 = T_5270 & T_2344_32;\n  assign T_6012 = T_6011 & T_2344_31;\n  assign T_6014 = T_5276 & T_2349_32;\n  assign T_6015 = T_6014 & T_2349_31;\n  assign T_6017 = T_5280 & T_2354_32;\n  assign T_6018 = T_6017 & T_2354_31;\n  assign T_6020 = T_5286 & T_2359_32;\n  assign T_6021 = T_6020 & T_2359_31;\n  assign T_6062_0 = T_2191;\n  assign T_6062_1 = T_2254;\n  assign T_6062_2 = 1'h1;\n  assign T_6062_3 = 1'h1;\n  assign T_6062_4 = T_2326;\n  assign T_6062_5 = T_2200;\n  assign T_6062_6 = T_2263;\n  assign T_6062_7 = 1'h1;\n  assign T_6062_8 = 1'h1;\n  assign T_6062_9 = 1'h1;\n  assign T_6062_10 = T_2209;\n  assign T_6062_11 = T_2308;\n  assign T_6062_12 = 1'h1;\n  assign T_6062_13 = 1'h1;\n  assign T_6062_14 = 1'h1;\n  assign T_6062_15 = 1'h1;\n  assign T_6062_16 = T_2299;\n  assign T_6062_17 = 1'h1;\n  assign T_6062_18 = T_2290;\n  assign T_6062_19 = T_2317;\n  assign T_6062_20 = T_2236;\n  assign T_6062_21 = T_2281;\n  assign T_6062_22 = 1'h1;\n  assign T_6062_23 = 1'h1;\n  assign T_6062_24 = T_2218;\n  assign T_6062_25 = T_2227;\n  assign T_6062_26 = 1'h1;\n  assign T_6062_27 = 1'h1;\n  assign T_6062_28 = T_2272;\n  assign T_6062_29 = T_2245;\n  assign T_6062_30 = 1'h1;\n  assign T_6062_31 = 1'h1;\n  assign T_6133_0 = {{20'd0}, ctrl_sck_div};\n  assign T_6133_1 = {{30'd0}, T_3296};\n  assign T_6133_2 = 32'h0;\n  assign T_6133_3 = 32'h0;\n  assign T_6133_4 = {{31'd0}, ctrl_cs_id};\n  assign T_6133_5 = {{31'd0}, ctrl_cs_dflt_0};\n  assign T_6133_6 = {{30'd0}, ctrl_cs_mode};\n  assign T_6133_7 = 32'h0;\n  assign T_6133_8 = 32'h0;\n  assign T_6133_9 = 32'h0;\n  assign T_6133_10 = {{8'd0}, T_2736};\n  assign T_6133_11 = {{8'd0}, T_3816};\n  assign T_6133_12 = 32'h0;\n  assign T_6133_13 = 32'h0;\n  assign T_6133_14 = 32'h0;\n  assign T_6133_15 = 32'h0;\n  assign T_6133_16 = {{12'd0}, T_3736};\n  assign T_6133_17 = 32'h0;\n  assign T_6133_18 = T_3572;\n  assign T_6133_19 = T_3936;\n  assign T_6133_20 = {{28'd0}, ctrl_wm_tx};\n  assign T_6133_21 = {{28'd0}, ctrl_wm_rx};\n  assign T_6133_22 = 32'h0;\n  assign T_6133_23 = 32'h0;\n  assign T_6133_24 = {{31'd0}, flash_en};\n  assign T_6133_25 = T_3096;\n  assign T_6133_26 = 32'h0;\n  assign T_6133_27 = 32'h0;\n  assign T_6133_28 = {{30'd0}, T_3416};\n  assign T_6133_29 = {{30'd0}, T_3216};\n  assign T_6133_30 = 32'h0;\n  assign T_6133_31 = 32'h0;\n  assign GEN_4 = GEN_194;\n  assign GEN_164 = 5'h1 == T_4794 ? T_6062_1 : T_6062_0;\n  assign GEN_165 = 5'h2 == T_4794 ? T_6062_2 : GEN_164;\n  assign GEN_166 = 5'h3 == T_4794 ? T_6062_3 : GEN_165;\n  assign GEN_167 = 5'h4 == T_4794 ? T_6062_4 : GEN_166;\n  assign GEN_168 = 5'h5 == T_4794 ? T_6062_5 : GEN_167;\n  assign GEN_169 = 5'h6 == T_4794 ? T_6062_6 : GEN_168;\n  assign GEN_170 = 5'h7 == T_4794 ? T_6062_7 : GEN_169;\n  assign GEN_171 = 5'h8 == T_4794 ? T_6062_8 : GEN_170;\n  assign GEN_172 = 5'h9 == T_4794 ? T_6062_9 : GEN_171;\n  assign GEN_173 = 5'ha == T_4794 ? T_6062_10 : GEN_172;\n  assign GEN_174 = 5'hb == T_4794 ? T_6062_11 : GEN_173;\n  assign GEN_175 = 5'hc == T_4794 ? T_6062_12 : GEN_174;\n  assign GEN_176 = 5'hd == T_4794 ? T_6062_13 : GEN_175;\n  assign GEN_177 = 5'he == T_4794 ? T_6062_14 : GEN_176;\n  assign GEN_178 = 5'hf == T_4794 ? T_6062_15 : GEN_177;\n  assign GEN_179 = 5'h10 == T_4794 ? T_6062_16 : GEN_178;\n  assign GEN_180 = 5'h11 == T_4794 ? T_6062_17 : GEN_179;\n  assign GEN_181 = 5'h12 == T_4794 ? T_6062_18 : GEN_180;\n  assign GEN_182 = 5'h13 == T_4794 ? T_6062_19 : GEN_181;\n  assign GEN_183 = 5'h14 == T_4794 ? T_6062_20 : GEN_182;\n  assign GEN_184 = 5'h15 == T_4794 ? T_6062_21 : GEN_183;\n  assign GEN_185 = 5'h16 == T_4794 ? T_6062_22 : GEN_184;\n  assign GEN_186 = 5'h17 == T_4794 ? T_6062_23 : GEN_185;\n  assign GEN_187 = 5'h18 == T_4794 ? T_6062_24 : GEN_186;\n  assign GEN_188 = 5'h19 == T_4794 ? T_6062_25 : GEN_187;\n  assign GEN_189 = 5'h1a == T_4794 ? T_6062_26 : GEN_188;\n  assign GEN_190 = 5'h1b == T_4794 ? T_6062_27 : GEN_189;\n  assign GEN_191 = 5'h1c == T_4794 ? T_6062_28 : GEN_190;\n  assign GEN_192 = 5'h1d == T_4794 ? T_6062_29 : GEN_191;\n  assign GEN_193 = 5'h1e == T_4794 ? T_6062_30 : GEN_192;\n  assign GEN_194 = 5'h1f == T_4794 ? T_6062_31 : GEN_193;\n  assign GEN_5 = GEN_225;\n  assign GEN_195 = 5'h1 == T_4794 ? T_6133_1 : T_6133_0;\n  assign GEN_196 = 5'h2 == T_4794 ? T_6133_2 : GEN_195;\n  assign GEN_197 = 5'h3 == T_4794 ? T_6133_3 : GEN_196;\n  assign GEN_198 = 5'h4 == T_4794 ? T_6133_4 : GEN_197;\n  assign GEN_199 = 5'h5 == T_4794 ? T_6133_5 : GEN_198;\n  assign GEN_200 = 5'h6 == T_4794 ? T_6133_6 : GEN_199;\n  assign GEN_201 = 5'h7 == T_4794 ? T_6133_7 : GEN_200;\n  assign GEN_202 = 5'h8 == T_4794 ? T_6133_8 : GEN_201;\n  assign GEN_203 = 5'h9 == T_4794 ? T_6133_9 : GEN_202;\n  assign GEN_204 = 5'ha == T_4794 ? T_6133_10 : GEN_203;\n  assign GEN_205 = 5'hb == T_4794 ? T_6133_11 : GEN_204;\n  assign GEN_206 = 5'hc == T_4794 ? T_6133_12 : GEN_205;\n  assign GEN_207 = 5'hd == T_4794 ? T_6133_13 : GEN_206;\n  assign GEN_208 = 5'he == T_4794 ? T_6133_14 : GEN_207;\n  assign GEN_209 = 5'hf == T_4794 ? T_6133_15 : GEN_208;\n  assign GEN_210 = 5'h10 == T_4794 ? T_6133_16 : GEN_209;\n  assign GEN_211 = 5'h11 == T_4794 ? T_6133_17 : GEN_210;\n  assign GEN_212 = 5'h12 == T_4794 ? T_6133_18 : GEN_211;\n  assign GEN_213 = 5'h13 == T_4794 ? T_6133_19 : GEN_212;\n  assign GEN_214 = 5'h14 == T_4794 ? T_6133_20 : GEN_213;\n  assign GEN_215 = 5'h15 == T_4794 ? T_6133_21 : GEN_214;\n  assign GEN_216 = 5'h16 == T_4794 ? T_6133_22 : GEN_215;\n  assign GEN_217 = 5'h17 == T_4794 ? T_6133_23 : GEN_216;\n  assign GEN_218 = 5'h18 == T_4794 ? T_6133_24 : GEN_217;\n  assign GEN_219 = 5'h19 == T_4794 ? T_6133_25 : GEN_218;\n  assign GEN_220 = 5'h1a == T_4794 ? T_6133_26 : GEN_219;\n  assign GEN_221 = 5'h1b == T_4794 ? T_6133_27 : GEN_220;\n  assign GEN_222 = 5'h1c == T_4794 ? T_6133_28 : GEN_221;\n  assign GEN_223 = 5'h1d == T_4794 ? T_6133_29 : GEN_222;\n  assign GEN_224 = 5'h1e == T_4794 ? T_6133_30 : GEN_223;\n  assign GEN_225 = 5'h1f == T_4794 ? T_6133_31 : GEN_224;\n  assign T_6170 = GEN_4 ? GEN_5 : 32'h0;\n  assign T_6171 = T_2068_bits_extra[9:8];\n  assign T_6173 = T_2068_bits_extra[7:3];\n  assign T_6174 = T_2068_bits_extra[2:0];\n  assign T_6185_opcode = 3'h0;\n  assign T_6185_param = 2'h0;\n  assign T_6185_size = T_6174;\n  assign T_6185_source = T_6173;\n  assign T_6185_sink = 1'h0;\n  assign T_6185_addr_lo = T_6171;\n  assign T_6185_data = 32'h0;\n  assign T_6185_error = 1'h0;\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_proto <= T_1840_fmt_proto;\n    end else begin\n      if (T_3596) begin\n        ctrl_fmt_proto <= T_3317;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_endian <= T_1840_fmt_endian;\n    end else begin\n      if (T_3636) begin\n        ctrl_fmt_endian <= T_3637;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_iodir <= T_1840_fmt_iodir;\n    end else begin\n      if (T_3676) begin\n        ctrl_fmt_iodir <= T_3677;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_len <= T_1840_fmt_len;\n    end else begin\n      if (T_3716) begin\n        ctrl_fmt_len <= T_3717;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_sck_div <= T_1840_sck_div;\n    end else begin\n      if (T_2596) begin\n        ctrl_sck_div <= T_2597;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_sck_pol <= T_1840_sck_pol;\n    end else begin\n      if (T_3276) begin\n        ctrl_sck_pol <= T_3197;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_sck_pha <= T_1840_sck_pha;\n    end else begin\n      if (T_3236) begin\n        ctrl_sck_pha <= T_2637;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_id <= T_1840_cs_id;\n    end else begin\n      if (T_3956) begin\n        ctrl_cs_id <= T_2637;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_dflt_0 <= T_1840_cs_dflt_0;\n    end else begin\n      if (T_2636) begin\n        ctrl_cs_dflt_0 <= T_2637;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_mode <= T_1840_cs_mode;\n    end else begin\n      if (T_3316) begin\n        ctrl_cs_mode <= T_3317;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_cssck <= T_1840_dla_cssck;\n    end else begin\n      if (T_2676) begin\n        ctrl_dla_cssck <= T_2677;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_sckcs <= T_1840_dla_sckcs;\n    end else begin\n      if (T_2716) begin\n        ctrl_dla_sckcs <= T_2717;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_intercs <= T_1840_dla_intercs;\n    end else begin\n      if (T_3756) begin\n        ctrl_dla_intercs <= T_2677;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_interxfr <= T_1840_dla_interxfr;\n    end else begin\n      if (T_3796) begin\n        ctrl_dla_interxfr <= T_2717;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_wm_tx <= T_1840_wm_tx;\n    end else begin\n      if (T_3116) begin\n        ctrl_wm_tx <= T_3117;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_wm_rx <= T_1840_wm_rx;\n    end else begin\n      if (T_3436) begin\n        ctrl_wm_rx <= T_3117;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ie_txwm <= T_1906_txwm;\n    end else begin\n      if (T_3356) begin\n        ie_txwm <= T_2637;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ie_rxwm <= T_1906_rxwm;\n    end else begin\n      if (T_3396) begin\n        ie_rxwm <= T_3197;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      insn_cmd_proto <= T_1973_cmd_proto;\n    end else begin\n      if (T_2916) begin\n        insn_cmd_proto <= T_2917;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      insn_cmd_code <= T_1973_cmd_code;\n    end else begin\n      if (T_3036) begin\n        insn_cmd_code <= T_2717;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      insn_cmd_en <= T_1973_cmd_en;\n    end else begin\n      if (T_2796) begin\n        insn_cmd_en <= T_2637;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      insn_addr_proto <= T_1973_addr_proto;\n    end else begin\n      if (T_2956) begin\n        insn_addr_proto <= T_2957;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      insn_addr_len <= T_1973_addr_len;\n    end else begin\n      if (T_2836) begin\n        insn_addr_len <= T_2837;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      insn_pad_code <= T_1973_pad_code;\n    end else begin\n      if (T_3076) begin\n        insn_pad_code <= T_3077;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      insn_pad_cnt <= T_1973_pad_cnt;\n    end else begin\n      if (T_2876) begin\n        insn_pad_cnt <= T_2877;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      insn_data_proto <= T_1973_data_proto;\n    end else begin\n      if (T_2996) begin\n        insn_data_proto <= T_2997;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      flash_en <= 1'h1;\n    end else begin\n      if (T_2756) begin\n        flash_en <= T_2637;\n      end\n    end\n\n  always @(posedge clock or posedge reset) begin\n  if(reset) begin\n    a_opcode <= 3'b0;\n    a_param <= 3'b0;\n    a_size <= 3'b0;\n    a_source <= 7'b0;\n    a_address <= 30'b0;\n    a_mask <= 1'b0;\n    a_data <= 8'b0;\n  end\n  else begin\n\n    if (T_1935) begin\n      a_opcode <= io_tl_f_0_a_bits_opcode;\n    end\n    if (T_1935) begin\n      a_param <= io_tl_f_0_a_bits_param;\n    end\n    if (T_1935) begin\n      a_size <= io_tl_f_0_a_bits_size;\n    end\n    if (T_1935) begin\n      a_source <= io_tl_f_0_a_bits_source;\n    end\n    if (T_1935) begin\n      a_address <= io_tl_f_0_a_bits_address;\n    end\n    if (T_1935) begin\n      a_mask <= io_tl_f_0_a_bits_mask;\n    end\n    if (T_1935) begin\n      a_data <= io_tl_f_0_a_bits_data;\n    end\n  end\n\n  end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top level module of flash-qspi\n//\n// ====================================================================\n\nmodule sirv_flash_qspi_top(\n  input   clk,\n  input   rst_n,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [32-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n  input                      f_icb_cmd_valid,\n  output                     f_icb_cmd_ready,\n  input  [32-1:0]            f_icb_cmd_addr, \n  input                      f_icb_cmd_read, \n  input  [32-1:0]            f_icb_cmd_wdata,\n  \n  output                     f_icb_rsp_valid,\n  input                      f_icb_rsp_ready,\n  output [32-1:0]            f_icb_rsp_rdata,\n\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  output  io_tl_i_0_0 \n);\n\n\n  wire  io_tl_r_0_a_ready;\n  assign  i_icb_cmd_ready  = io_tl_r_0_a_ready;\n  wire  io_tl_r_0_a_valid  = i_icb_cmd_valid;\n  wire  [2:0] io_tl_r_0_a_bits_opcode  = i_icb_cmd_read ? 3'h4 : 3'h0;\n  wire  [2:0] io_tl_r_0_a_bits_param  = 3'b0;\n  wire  [2:0] io_tl_r_0_a_bits_size = 3'd2;\n  wire  [4:0] io_tl_r_0_a_bits_source  = 5'b0;\n  wire  [28:0] io_tl_r_0_a_bits_address  = i_icb_cmd_addr[28:0];\n  wire  [3:0] io_tl_r_0_a_bits_mask  = 4'b1111;\n  wire  [31:0] io_tl_r_0_a_bits_data  = i_icb_cmd_wdata;\n\n  \n  wire  io_tl_r_0_d_ready = i_icb_rsp_ready;\n\n  wire  [2:0] io_tl_r_0_d_bits_opcode;\n  wire  [1:0] io_tl_r_0_d_bits_param;\n  wire  [2:0] io_tl_r_0_d_bits_size;\n  wire  [4:0] io_tl_r_0_d_bits_source;\n  wire  io_tl_r_0_d_bits_sink;\n  wire  [1:0] io_tl_r_0_d_bits_addr_lo;\n  wire  [31:0] io_tl_r_0_d_bits_data;\n  wire  io_tl_r_0_d_bits_error;\n  wire  io_tl_r_0_d_valid;\n\n  assign  i_icb_rsp_valid = io_tl_r_0_d_valid;\n  assign  i_icb_rsp_rdata = io_tl_r_0_d_bits_data;\n\n  // Not used\n  wire  io_tl_r_0_b_ready = 1'b0;\n  wire  io_tl_r_0_b_valid;\n  wire  [2:0] io_tl_r_0_b_bits_opcode;\n  wire  [1:0] io_tl_r_0_b_bits_param;\n  wire  [2:0] io_tl_r_0_b_bits_size;\n  wire  [4:0] io_tl_r_0_b_bits_source;\n  wire  [28:0] io_tl_r_0_b_bits_address;\n  wire  [3:0] io_tl_r_0_b_bits_mask;\n  wire  [31:0] io_tl_r_0_b_bits_data;\n\n  // Not used\n  wire  io_tl_r_0_c_ready;\n  wire  io_tl_r_0_c_valid = 1'b0;\n  wire  [2:0] io_tl_r_0_c_bits_opcode = 3'b0;\n  wire  [2:0] io_tl_r_0_c_bits_param = 3'b0;\n  wire  [2:0] io_tl_r_0_c_bits_size = 3'd2;\n  wire  [4:0] io_tl_r_0_c_bits_source = 5'b0;\n  wire  [28:0] io_tl_r_0_c_bits_address = 29'b0;\n  wire  [31:0] io_tl_r_0_c_bits_data = 32'b0;\n  wire  io_tl_r_0_c_bits_error = 1'b0;\n\n  // Not used\n  wire  io_tl_r_0_e_ready;\n  wire  io_tl_r_0_e_valid = 1'b0;\n  wire  io_tl_r_0_e_bits_sink = 1'b0;\n\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n  wire  io_tl_f_0_a_ready;\n  assign  f_icb_cmd_ready  = io_tl_f_0_a_ready;\n  wire  io_tl_f_0_a_valid  = f_icb_cmd_valid;\n  wire  [2:0] io_tl_f_0_a_bits_opcode  = f_icb_cmd_read ? 3'h4 : 3'h0;\n  wire  [2:0] io_tl_f_0_a_bits_param  = 3'b0;\n  wire  [2:0] io_tl_f_0_a_bits_size = 3'd2;\n  wire  [1:0] io_tl_f_0_a_bits_source  = 2'b0;\n  // We must force the address to be aligned to 32bits\n  wire  [29:0] io_tl_f_0_a_bits_address  = {f_icb_cmd_addr[29:2],2'b0};\n  wire  [3:0] io_tl_f_0_a_bits_mask  = 4'b1111;\n  wire  [31:0] io_tl_f_0_a_bits_data  = f_icb_cmd_wdata;\n\n  \n  wire  io_tl_f_0_d_ready = f_icb_rsp_ready;\n\n  wire  [2:0] io_tl_f_0_d_bits_opcode;\n  wire  [1:0] io_tl_f_0_d_bits_param;\n  wire  [2:0] io_tl_f_0_d_bits_size;\n  wire  [1:0] io_tl_f_0_d_bits_source;\n  wire  io_tl_f_0_d_bits_sink;\n  wire  [1:0] io_tl_f_0_d_bits_addr_lo;\n  wire  [31:0] io_tl_f_0_d_bits_data;\n  wire  io_tl_f_0_d_bits_error;\n  wire  io_tl_f_0_d_valid;\n\n  assign  f_icb_rsp_valid = io_tl_f_0_d_valid;\n  assign  f_icb_rsp_rdata = io_tl_f_0_d_bits_data;\n\n  // Not used\n  wire  io_tl_f_0_b_ready = 1'b0;\n  wire  io_tl_f_0_b_valid;\n  wire  [2:0] io_tl_f_0_b_bits_opcode;\n  wire  [1:0] io_tl_f_0_b_bits_param;\n  wire  [2:0] io_tl_f_0_b_bits_size;\n  wire  [1:0] io_tl_f_0_b_bits_source;\n  wire  [29:0] io_tl_f_0_b_bits_address;\n  wire  [3:0] io_tl_f_0_b_bits_mask;\n  wire  [31:0] io_tl_f_0_b_bits_data;\n\n  // Not used\n  wire  io_tl_f_0_c_ready;\n  wire  io_tl_f_0_c_valid = 1'b0;\n  wire  [2:0] io_tl_f_0_c_bits_opcode = 3'b0;\n  wire  [2:0] io_tl_f_0_c_bits_param = 3'b0;\n  wire  [2:0] io_tl_f_0_c_bits_size = 3'd2;\n  wire  [1:0] io_tl_f_0_c_bits_source = 2'b0;\n  wire  [29:0] io_tl_f_0_c_bits_address = 30'b0;\n  wire  [31:0] io_tl_f_0_c_bits_data = 32'b0;\n  wire  io_tl_f_0_c_bits_error = 1'b0;\n\n  // Not used\n  wire  io_tl_f_0_e_ready;\n  wire  io_tl_f_0_e_valid = 1'b0;\n  wire  io_tl_f_0_e_bits_sink = 1'b0;\n\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n  wire  tl_f_0_a_ready;\n  wire  tl_f_0_a_valid;\n  wire  [2:0] tl_f_0_a_bits_opcode;\n  wire  [2:0] tl_f_0_a_bits_param;\n  wire  [2:0] tl_f_0_a_bits_size;\n  wire  [6:0] tl_f_0_a_bits_source;\n  wire  [29:0] tl_f_0_a_bits_address;\n  wire  tl_f_0_a_bits_mask;\n  wire  [7:0] tl_f_0_a_bits_data;\n\n  \n  wire  io_in_0_a_ready;\n  wire  io_in_0_a_valid;\n  wire [2:0] io_in_0_a_bits_opcode;\n  wire [2:0] io_in_0_a_bits_param;\n  wire [2:0] io_in_0_a_bits_size;\n  wire [1:0] io_in_0_a_bits_source;\n  wire [29:0] io_in_0_a_bits_address;\n  wire  io_in_0_a_bits_mask;\n  wire [7:0] io_in_0_a_bits_data;\n  wire  io_in_0_b_ready;\n  wire  io_in_0_b_valid;\n  wire [2:0] io_in_0_b_bits_opcode;\n  wire [1:0] io_in_0_b_bits_param;\n  wire [2:0] io_in_0_b_bits_size;\n  wire [1:0] io_in_0_b_bits_source;\n  wire [29:0] io_in_0_b_bits_address;\n  wire  io_in_0_b_bits_mask;\n  wire [7:0] io_in_0_b_bits_data;\n  wire  io_in_0_c_ready;\n  wire  io_in_0_c_valid;\n  wire [2:0] io_in_0_c_bits_opcode;\n  wire [2:0] io_in_0_c_bits_param;\n  wire [2:0] io_in_0_c_bits_size;\n  wire [1:0] io_in_0_c_bits_source;\n  wire [29:0] io_in_0_c_bits_address;\n  wire [7:0] io_in_0_c_bits_data;\n  wire  io_in_0_c_bits_error;\n  wire  io_in_0_d_ready;\n  wire  io_in_0_d_valid;\n  wire [2:0] io_in_0_d_bits_opcode;\n  wire [1:0] io_in_0_d_bits_param;\n  wire [2:0] io_in_0_d_bits_size;\n  wire [1:0] io_in_0_d_bits_source;\n  wire  io_in_0_d_bits_sink;\n  wire  io_in_0_d_bits_addr_lo;\n  wire [7:0] io_in_0_d_bits_data;\n  wire  io_in_0_d_bits_error;\n  wire  io_in_0_e_ready;\n  wire  io_in_0_e_valid;\n  wire  io_in_0_e_bits_sink;\n\n  wire  io_out_0_a_ready;\n  wire  io_out_0_a_valid;\n  wire [2:0] io_out_0_a_bits_opcode;\n  wire [2:0] io_out_0_a_bits_param;\n  wire [2:0] io_out_0_a_bits_size;\n  wire [6:0] io_out_0_a_bits_source;\n  wire [29:0] io_out_0_a_bits_address;\n  wire  io_out_0_a_bits_mask;\n  wire [7:0] io_out_0_a_bits_data;\n  wire  io_out_0_b_ready;\n  wire  io_out_0_b_valid;\n  wire [2:0] io_out_0_b_bits_opcode;\n  wire [1:0] io_out_0_b_bits_param;\n  wire [2:0] io_out_0_b_bits_size;\n  wire [6:0] io_out_0_b_bits_source;\n  wire [29:0] io_out_0_b_bits_address;\n  wire  io_out_0_b_bits_mask;\n  wire [7:0] io_out_0_b_bits_data;\n  wire  io_out_0_c_ready;\n  wire  io_out_0_c_valid;\n  wire [2:0] io_out_0_c_bits_opcode;\n  wire [2:0] io_out_0_c_bits_param;\n  wire [2:0] io_out_0_c_bits_size;\n  wire [6:0] io_out_0_c_bits_source;\n  wire [29:0] io_out_0_c_bits_address;\n  wire [7:0] io_out_0_c_bits_data;\n  wire  io_out_0_c_bits_error;\n  wire  io_out_0_d_ready;\n  wire  io_out_0_d_valid;\n  wire [2:0] io_out_0_d_bits_opcode;\n  wire [1:0] io_out_0_d_bits_param;\n  wire [2:0] io_out_0_d_bits_size;\n  wire [6:0] io_out_0_d_bits_source;\n  wire  io_out_0_d_bits_sink;\n  wire  io_out_0_d_bits_addr_lo;\n  wire [7:0] io_out_0_d_bits_data;\n  wire  io_out_0_d_bits_error;\n  wire  io_out_0_e_ready;\n  wire  io_out_0_e_valid;\n  wire  io_out_0_e_bits_sink;\n\n\n  sirv_tlwidthwidget_qspi qspi_TLWidthWidget (\n    .clock(clk),\n    .reset(~rst_n),\n    .io_in_0_a_ready(io_tl_f_0_a_ready),\n    .io_in_0_a_valid(io_tl_f_0_a_valid),\n    .io_in_0_a_bits_opcode(io_tl_f_0_a_bits_opcode),\n    .io_in_0_a_bits_param(io_tl_f_0_a_bits_param),\n    .io_in_0_a_bits_size(io_tl_f_0_a_bits_size),\n    .io_in_0_a_bits_source(io_tl_f_0_a_bits_source),\n    .io_in_0_a_bits_address(io_tl_f_0_a_bits_address),\n    .io_in_0_a_bits_mask(io_tl_f_0_a_bits_mask),\n    .io_in_0_a_bits_data(io_tl_f_0_a_bits_data),\n    .io_in_0_b_ready(io_tl_f_0_b_ready),\n    .io_in_0_b_valid(io_tl_f_0_b_valid),\n    .io_in_0_b_bits_opcode(io_tl_f_0_b_bits_opcode),\n    .io_in_0_b_bits_param(io_tl_f_0_b_bits_param),\n    .io_in_0_b_bits_size(io_tl_f_0_b_bits_size),\n    .io_in_0_b_bits_source(io_tl_f_0_b_bits_source),\n    .io_in_0_b_bits_address(io_tl_f_0_b_bits_address),\n    .io_in_0_b_bits_mask(io_tl_f_0_b_bits_mask),\n    .io_in_0_b_bits_data(io_tl_f_0_b_bits_data),\n    .io_in_0_c_ready(io_tl_f_0_c_ready),\n    .io_in_0_c_valid(io_tl_f_0_c_valid),\n    .io_in_0_c_bits_opcode(io_tl_f_0_c_bits_opcode),\n    .io_in_0_c_bits_param(io_tl_f_0_c_bits_param),\n    .io_in_0_c_bits_size(io_tl_f_0_c_bits_size),\n    .io_in_0_c_bits_source(io_tl_f_0_c_bits_source),\n    .io_in_0_c_bits_address(io_tl_f_0_c_bits_address),\n    .io_in_0_c_bits_data(io_tl_f_0_c_bits_data),\n    .io_in_0_c_bits_error(io_tl_f_0_c_bits_error),\n    .io_in_0_d_ready(io_tl_f_0_d_ready),\n    .io_in_0_d_valid(io_tl_f_0_d_valid),\n    .io_in_0_d_bits_opcode(io_tl_f_0_d_bits_opcode),\n    .io_in_0_d_bits_param(io_tl_f_0_d_bits_param),\n    .io_in_0_d_bits_size(io_tl_f_0_d_bits_size),\n    .io_in_0_d_bits_source(io_tl_f_0_d_bits_source),\n    .io_in_0_d_bits_sink(io_tl_f_0_d_bits_sink),\n    .io_in_0_d_bits_addr_lo(io_tl_f_0_d_bits_addr_lo),\n    .io_in_0_d_bits_data(io_tl_f_0_d_bits_data),\n    .io_in_0_d_bits_error(io_tl_f_0_d_bits_error),\n    .io_in_0_e_ready(io_tl_f_0_e_ready),\n    .io_in_0_e_valid(io_tl_f_0_e_valid),\n    .io_in_0_e_bits_sink(io_tl_f_0_e_bits_sink),\n\n    .io_out_0_a_ready(io_in_0_a_ready),\n    .io_out_0_a_valid(io_in_0_a_valid),\n    .io_out_0_a_bits_opcode(io_in_0_a_bits_opcode),\n    .io_out_0_a_bits_param(io_in_0_a_bits_param),\n    .io_out_0_a_bits_size(io_in_0_a_bits_size),\n    .io_out_0_a_bits_source(io_in_0_a_bits_source),\n    .io_out_0_a_bits_address(io_in_0_a_bits_address),\n    .io_out_0_a_bits_mask(io_in_0_a_bits_mask),\n    .io_out_0_a_bits_data(io_in_0_a_bits_data),\n    .io_out_0_b_ready(io_in_0_b_ready),\n    .io_out_0_b_valid(io_in_0_b_valid),\n    .io_out_0_b_bits_opcode(io_in_0_b_bits_opcode),\n    .io_out_0_b_bits_param(io_in_0_b_bits_param),\n    .io_out_0_b_bits_size(io_in_0_b_bits_size),\n    .io_out_0_b_bits_source(io_in_0_b_bits_source),\n    .io_out_0_b_bits_address(io_in_0_b_bits_address),\n    .io_out_0_b_bits_mask(io_in_0_b_bits_mask),\n    .io_out_0_b_bits_data(io_in_0_b_bits_data),\n    .io_out_0_c_ready(io_in_0_c_ready),\n    .io_out_0_c_valid(io_in_0_c_valid),\n    .io_out_0_c_bits_opcode(io_in_0_c_bits_opcode),\n    .io_out_0_c_bits_param(io_in_0_c_bits_param),\n    .io_out_0_c_bits_size(io_in_0_c_bits_size),\n    .io_out_0_c_bits_source(io_in_0_c_bits_source),\n    .io_out_0_c_bits_address(io_in_0_c_bits_address),\n    .io_out_0_c_bits_data(io_in_0_c_bits_data),\n    .io_out_0_c_bits_error(io_in_0_c_bits_error),\n    .io_out_0_d_ready(io_in_0_d_ready),\n    .io_out_0_d_valid(io_in_0_d_valid),\n    .io_out_0_d_bits_opcode(io_in_0_d_bits_opcode),\n    .io_out_0_d_bits_param(io_in_0_d_bits_param),\n    .io_out_0_d_bits_size(io_in_0_d_bits_size),\n    .io_out_0_d_bits_source(io_in_0_d_bits_source),\n    .io_out_0_d_bits_sink(io_in_0_d_bits_sink),\n    .io_out_0_d_bits_addr_lo(io_in_0_d_bits_addr_lo),\n    .io_out_0_d_bits_data(io_in_0_d_bits_data),\n    .io_out_0_d_bits_error(io_in_0_d_bits_error),\n    .io_out_0_e_ready(io_in_0_e_ready),\n    .io_out_0_e_valid(io_in_0_e_valid),\n    .io_out_0_e_bits_sink(io_in_0_e_bits_sink)\n  );\n\n  sirv_tlfragmenter_qspi_1 qspi_TLFragmenter_1 (\n    .clock (clk   ),\n    .reset (~rst_n),\n    .io_in_0_a_ready(io_in_0_a_ready),\n    .io_in_0_a_valid(io_in_0_a_valid),\n    .io_in_0_a_bits_opcode(io_in_0_a_bits_opcode),\n    .io_in_0_a_bits_param(io_in_0_a_bits_param),\n    .io_in_0_a_bits_size(io_in_0_a_bits_size),\n    .io_in_0_a_bits_source(io_in_0_a_bits_source),\n    .io_in_0_a_bits_address(io_in_0_a_bits_address),\n    .io_in_0_a_bits_mask(io_in_0_a_bits_mask),\n    .io_in_0_a_bits_data(io_in_0_a_bits_data),\n    .io_in_0_b_ready(io_in_0_b_ready),\n    .io_in_0_b_valid(io_in_0_b_valid),\n    .io_in_0_b_bits_opcode(io_in_0_b_bits_opcode),\n    .io_in_0_b_bits_param(io_in_0_b_bits_param),\n    .io_in_0_b_bits_size(io_in_0_b_bits_size),\n    .io_in_0_b_bits_source(io_in_0_b_bits_source),\n    .io_in_0_b_bits_address(io_in_0_b_bits_address),\n    .io_in_0_b_bits_mask(io_in_0_b_bits_mask),\n    .io_in_0_b_bits_data(io_in_0_b_bits_data),\n    .io_in_0_c_ready(io_in_0_c_ready),\n    .io_in_0_c_valid(io_in_0_c_valid),\n    .io_in_0_c_bits_opcode(io_in_0_c_bits_opcode),\n    .io_in_0_c_bits_param(io_in_0_c_bits_param),\n    .io_in_0_c_bits_size(io_in_0_c_bits_size),\n    .io_in_0_c_bits_source(io_in_0_c_bits_source),\n    .io_in_0_c_bits_address(io_in_0_c_bits_address),\n    .io_in_0_c_bits_data(io_in_0_c_bits_data),\n    .io_in_0_c_bits_error(io_in_0_c_bits_error),\n    .io_in_0_d_ready(io_in_0_d_ready),\n    .io_in_0_d_valid(io_in_0_d_valid),\n    .io_in_0_d_bits_opcode(io_in_0_d_bits_opcode),\n    .io_in_0_d_bits_param(io_in_0_d_bits_param),\n    .io_in_0_d_bits_size(io_in_0_d_bits_size),\n    .io_in_0_d_bits_source(io_in_0_d_bits_source),\n    .io_in_0_d_bits_sink(io_in_0_d_bits_sink),\n    .io_in_0_d_bits_addr_lo(io_in_0_d_bits_addr_lo),\n    .io_in_0_d_bits_data(io_in_0_d_bits_data),\n    .io_in_0_d_bits_error(io_in_0_d_bits_error),\n    .io_in_0_e_ready(io_in_0_e_ready),\n    .io_in_0_e_valid(io_in_0_e_valid),\n    .io_in_0_e_bits_sink(io_in_0_e_bits_sink),\n    .io_out_0_a_ready(io_out_0_a_ready),\n    .io_out_0_a_valid(io_out_0_a_valid),\n    .io_out_0_a_bits_opcode(io_out_0_a_bits_opcode),\n    .io_out_0_a_bits_param(io_out_0_a_bits_param),\n    .io_out_0_a_bits_size(io_out_0_a_bits_size),\n    .io_out_0_a_bits_source(io_out_0_a_bits_source),\n    .io_out_0_a_bits_address(io_out_0_a_bits_address),\n    .io_out_0_a_bits_mask(io_out_0_a_bits_mask),\n    .io_out_0_a_bits_data(io_out_0_a_bits_data),\n    .io_out_0_b_ready(io_out_0_b_ready),\n    .io_out_0_b_valid(io_out_0_b_valid),\n    .io_out_0_b_bits_opcode(io_out_0_b_bits_opcode),\n    .io_out_0_b_bits_param(io_out_0_b_bits_param),\n    .io_out_0_b_bits_size(io_out_0_b_bits_size),\n    .io_out_0_b_bits_source(io_out_0_b_bits_source),\n    .io_out_0_b_bits_address(io_out_0_b_bits_address),\n    .io_out_0_b_bits_mask(io_out_0_b_bits_mask),\n    .io_out_0_b_bits_data(io_out_0_b_bits_data),\n    .io_out_0_c_ready(io_out_0_c_ready),\n    .io_out_0_c_valid(io_out_0_c_valid),\n    .io_out_0_c_bits_opcode(io_out_0_c_bits_opcode),\n    .io_out_0_c_bits_param(io_out_0_c_bits_param),\n    .io_out_0_c_bits_size(io_out_0_c_bits_size),\n    .io_out_0_c_bits_source(io_out_0_c_bits_source),\n    .io_out_0_c_bits_address(io_out_0_c_bits_address),\n    .io_out_0_c_bits_data(io_out_0_c_bits_data),\n    .io_out_0_c_bits_error(io_out_0_c_bits_error),\n    .io_out_0_d_ready(io_out_0_d_ready),\n    .io_out_0_d_valid(io_out_0_d_valid),\n    .io_out_0_d_bits_opcode(io_out_0_d_bits_opcode),\n    .io_out_0_d_bits_param(io_out_0_d_bits_param),\n    .io_out_0_d_bits_size(io_out_0_d_bits_size),\n    .io_out_0_d_bits_source(io_out_0_d_bits_source),\n    .io_out_0_d_bits_sink(io_out_0_d_bits_sink),\n    .io_out_0_d_bits_addr_lo(io_out_0_d_bits_addr_lo),\n    .io_out_0_d_bits_data(io_out_0_d_bits_data),\n    .io_out_0_d_bits_error(io_out_0_d_bits_error),\n    .io_out_0_e_ready(io_out_0_e_ready),\n    .io_out_0_e_valid(io_out_0_e_valid),\n    .io_out_0_e_bits_sink(io_out_0_e_bits_sink)\n  );\nsirv_flash_qspi u_sirv_flash_qspi(\n  .clock                            (clk                              ),\n  .reset                            (~rst_n                           ),\n\n  .io_tl_r_0_a_ready                  (io_tl_r_0_a_ready                  ),\n  .io_tl_r_0_a_valid                  (io_tl_r_0_a_valid                  ),\n  .io_tl_r_0_a_bits_opcode            (io_tl_r_0_a_bits_opcode            ),\n  .io_tl_r_0_a_bits_param             (io_tl_r_0_a_bits_param             ),\n  .io_tl_r_0_a_bits_size              (io_tl_r_0_a_bits_size              ),\n  .io_tl_r_0_a_bits_source            (io_tl_r_0_a_bits_source            ),\n  .io_tl_r_0_a_bits_address           (io_tl_r_0_a_bits_address           ),\n  .io_tl_r_0_a_bits_mask              (io_tl_r_0_a_bits_mask              ),\n  .io_tl_r_0_a_bits_data              (io_tl_r_0_a_bits_data              ),\n  .io_tl_r_0_b_ready                  (io_tl_r_0_b_ready                  ),\n  .io_tl_r_0_b_valid                  (io_tl_r_0_b_valid                  ),\n  .io_tl_r_0_b_bits_opcode            (io_tl_r_0_b_bits_opcode            ),\n  .io_tl_r_0_b_bits_param             (io_tl_r_0_b_bits_param             ),\n  .io_tl_r_0_b_bits_size              (io_tl_r_0_b_bits_size              ),\n  .io_tl_r_0_b_bits_source            (io_tl_r_0_b_bits_source            ),\n  .io_tl_r_0_b_bits_address           (io_tl_r_0_b_bits_address           ),\n  .io_tl_r_0_b_bits_mask              (io_tl_r_0_b_bits_mask              ),\n  .io_tl_r_0_b_bits_data              (io_tl_r_0_b_bits_data              ),\n  .io_tl_r_0_c_ready                  (io_tl_r_0_c_ready                  ),\n  .io_tl_r_0_c_valid                  (io_tl_r_0_c_valid                  ),\n  .io_tl_r_0_c_bits_opcode            (io_tl_r_0_c_bits_opcode            ),\n  .io_tl_r_0_c_bits_param             (io_tl_r_0_c_bits_param             ),\n  .io_tl_r_0_c_bits_size              (io_tl_r_0_c_bits_size              ),\n  .io_tl_r_0_c_bits_source            (io_tl_r_0_c_bits_source            ),\n  .io_tl_r_0_c_bits_address           (io_tl_r_0_c_bits_address           ),\n  .io_tl_r_0_c_bits_data              (io_tl_r_0_c_bits_data              ),\n  .io_tl_r_0_c_bits_error             (io_tl_r_0_c_bits_error             ),\n  .io_tl_r_0_d_ready                  (io_tl_r_0_d_ready                  ),\n  .io_tl_r_0_d_valid                  (io_tl_r_0_d_valid                  ),\n  .io_tl_r_0_d_bits_opcode            (io_tl_r_0_d_bits_opcode            )"}
{"text": ",\n  .io_tl_r_0_d_bits_param             (io_tl_r_0_d_bits_param             ),\n  .io_tl_r_0_d_bits_size              (io_tl_r_0_d_bits_size              ),\n  .io_tl_r_0_d_bits_source            (io_tl_r_0_d_bits_source            ),\n  .io_tl_r_0_d_bits_sink              (io_tl_r_0_d_bits_sink              ),\n  .io_tl_r_0_d_bits_addr_lo           (io_tl_r_0_d_bits_addr_lo           ),\n  .io_tl_r_0_d_bits_data              (io_tl_r_0_d_bits_data              ),\n  .io_tl_r_0_d_bits_error             (io_tl_r_0_d_bits_error             ),\n  .io_tl_r_0_e_ready                  (io_tl_r_0_e_ready                  ),\n  .io_tl_r_0_e_valid                  (io_tl_r_0_e_valid                  ),\n  .io_tl_r_0_e_bits_sink              (io_tl_r_0_e_bits_sink              ),\n\n  .io_tl_f_0_a_ready                  (io_out_0_a_ready                  ),\n  .io_tl_f_0_a_valid                  (io_out_0_a_valid                  ),\n  .io_tl_f_0_a_bits_opcode            (io_out_0_a_bits_opcode            ),\n  .io_tl_f_0_a_bits_param             (io_out_0_a_bits_param             ),\n  .io_tl_f_0_a_bits_size              (io_out_0_a_bits_size              ),\n  .io_tl_f_0_a_bits_source            (io_out_0_a_bits_source            ),\n  .io_tl_f_0_a_bits_address           (io_out_0_a_bits_address           ),\n  .io_tl_f_0_a_bits_mask              (io_out_0_a_bits_mask              ),\n  .io_tl_f_0_a_bits_data              (io_out_0_a_bits_data              ),\n  .io_tl_f_0_b_ready                  (io_out_0_b_ready                  ),\n  .io_tl_f_0_b_valid                  (io_out_0_b_valid                  ),\n  .io_tl_f_0_b_bits_opcode            (io_out_0_b_bits_opcode            ),\n  .io_tl_f_0_b_bits_param             (io_out_0_b_bits_param             ),\n  .io_tl_f_0_b_bits_size              (io_out_0_b_bits_size              ),\n  .io_tl_f_0_b_bits_source            (io_out_0_b_bits_source            ),\n  .io_tl_f_0_b_bits_address           (io_out_0_b_bits_address           ),\n  .io_tl_f_0_b_bits_mask              (io_out_0_b_bits_mask              ),\n  .io_tl_f_0_b_bits_data              (io_out_0_b_bits_data              ),\n  .io_tl_f_0_c_ready                  (io_out_0_c_ready                  ),\n  .io_tl_f_0_c_valid                  (io_out_0_c_valid                  ),\n  .io_tl_f_0_c_bits_opcode            (io_out_0_c_bits_opcode            ),\n  .io_tl_f_0_c_bits_param             (io_out_0_c_bits_param             ),\n  .io_tl_f_0_c_bits_size              (io_out_0_c_bits_size              ),\n  .io_tl_f_0_c_bits_source            (io_out_0_c_bits_source            ),\n  .io_tl_f_0_c_bits_address           (io_out_0_c_bits_address           ),\n  .io_tl_f_0_c_bits_data              (io_out_0_c_bits_data              ),\n  .io_tl_f_0_c_bits_error             (io_out_0_c_bits_error             ),\n  .io_tl_f_0_d_ready                  (io_out_0_d_ready                  ),\n  .io_tl_f_0_d_valid                  (io_out_0_d_valid                  ),\n  .io_tl_f_0_d_bits_opcode            (io_out_0_d_bits_opcode            ),\n  .io_tl_f_0_d_bits_param             (io_out_0_d_bits_param             ),\n  .io_tl_f_0_d_bits_size              (io_out_0_d_bits_size              ),\n  .io_tl_f_0_d_bits_source            (io_out_0_d_bits_source            ),\n  .io_tl_f_0_d_bits_sink              (io_out_0_d_bits_sink              ),\n  .io_tl_f_0_d_bits_addr_lo           (io_out_0_d_bits_addr_lo           ),\n  .io_tl_f_0_d_bits_data              (io_out_0_d_bits_data              ),\n  .io_tl_f_0_d_bits_error             (io_out_0_d_bits_error             ),\n  .io_tl_f_0_e_ready                  (io_out_0_e_ready                  ),\n  .io_tl_f_0_e_valid                  (io_out_0_e_valid                  ),\n  .io_tl_f_0_e_bits_sink              (io_out_0_e_bits_sink              ),\n\n\n  .io_port_sck       (io_port_sck    ),\n  .io_port_dq_0_i    (io_port_dq_0_i ),\n  .io_port_dq_0_o    (io_port_dq_0_o ),\n  .io_port_dq_0_oe   (io_port_dq_0_oe),\n  .io_port_dq_1_i    (io_port_dq_1_i ),\n  .io_port_dq_1_o    (io_port_dq_1_o ),\n  .io_port_dq_1_oe   (io_port_dq_1_oe),\n  .io_port_dq_2_i    (io_port_dq_2_i ),\n  .io_port_dq_2_o    (io_port_dq_2_o ),\n  .io_port_dq_2_oe   (io_port_dq_2_oe),\n  .io_port_dq_3_i    (io_port_dq_3_i ),\n  .io_port_dq_3_o    (io_port_dq_3_o ),\n  .io_port_dq_3_oe   (io_port_dq_3_oe), \n  .io_port_cs_0      (io_port_cs_0   ),\n  .io_tl_i_0_0       (io_tl_i_0_0    ) \n\n);\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_gpio(\n  input   clock,\n  input   reset,\n  output  io_interrupts_0_0,\n  output  io_interrupts_0_1,\n  output  io_interrupts_0_2,\n  output  io_interrupts_0_3,\n  output  io_interrupts_0_4,\n  output  io_interrupts_0_5,\n  output  io_interrupts_0_6,\n  output  io_interrupts_0_7,\n  output  io_interrupts_0_8,\n  output  io_interrupts_0_9,\n  output  io_interrupts_0_10,\n  output  io_interrupts_0_11,\n  output  io_interrupts_0_12,\n  output  io_interrupts_0_13,\n  output  io_interrupts_0_14,\n  output  io_interrupts_0_15,\n  output  io_interrupts_0_16,\n  output  io_interrupts_0_17,\n  output  io_interrupts_0_18,\n  output  io_interrupts_0_19,\n  output  io_interrupts_0_20,\n  output  io_interrupts_0_21,\n  output  io_interrupts_0_22,\n  output  io_interrupts_0_23,\n  output  io_interrupts_0_24,\n  output  io_interrupts_0_25,\n  output  io_interrupts_0_26,\n  output  io_interrupts_0_27,\n  output  io_interrupts_0_28,\n  output  io_interrupts_0_29,\n  output  io_interrupts_0_30,\n  output  io_interrupts_0_31,\n  output  io_in_0_a_ready,\n  input   io_in_0_a_valid,\n  input  [2:0] io_in_0_a_bits_opcode,\n  input  [2:0] io_in_0_a_bits_param,\n  input  [2:0] io_in_0_a_bits_size,\n  input  [4:0] io_in_0_a_bits_source,\n  input  [28:0] io_in_0_a_bits_address,\n  input  [3:0] io_in_0_a_bits_mask,\n  input  [31:0] io_in_0_a_bits_data,\n  input   io_in_0_b_ready,\n  output  io_in_0_b_valid,\n  output [2:0] io_in_0_b_bits_opcode,\n  output [1:0] io_in_0_b_bits_param,\n  output [2:0] io_in_0_b_bits_size,\n  output [4:0] io_in_0_b_bits_source,\n  output [28:0] io_in_0_b_bits_address,\n  output [3:0] io_in_0_b_bits_mask,\n  output [31:0] io_in_0_b_bits_data,\n  output  io_in_0_c_ready,\n  input   io_in_0_c_valid,\n  input  [2:0] io_in_0_c_bits_opcode,\n  input  [2:0] io_in_0_c_bits_param,\n  input  [2:0] io_in_0_c_bits_size,\n  input  [4:0] io_in_0_c_bits_source,\n  input  [28:0] io_in_0_c_bits_address,\n  input  [31:0] io_in_0_c_bits_data,\n  input   io_in_0_c_bits_error,\n  input   io_in_0_d_ready,\n  output  io_in_0_d_valid,\n  output [2:0] io_in_0_d_bits_opcode,\n  output [1:0] io_in_0_d_bits_param,\n  output [2:0] io_in_0_d_bits_size,\n  output [4:0] io_in_0_d_bits_source,\n  output  io_in_0_d_bits_sink,\n  output [1:0] io_in_0_d_bits_addr_lo,\n  output [31:0] io_in_0_d_bits_data,\n  output  io_in_0_d_bits_error,\n  output  io_in_0_e_ready,\n  input   io_in_0_e_valid,\n  input   io_in_0_e_bits_sink,\n  input   io_port_pins_0_i_ival,\n  output  io_port_pins_0_o_oval,\n  output  io_port_pins_0_o_oe,\n  output  io_port_pins_0_o_ie,\n  output  io_port_pins_0_o_pue,\n  output  io_port_pins_0_o_ds,\n  input   io_port_pins_1_i_ival,\n  output  io_port_pins_1_o_oval,\n  output  io_port_pins_1_o_oe,\n  output  io_port_pins_1_o_ie,\n  output  io_port_pins_1_o_pue,\n  output  io_port_pins_1_o_ds,\n  input   io_port_pins_2_i_ival,\n  output  io_port_pins_2_o_oval,\n  output  io_port_pins_2_o_oe,\n  output  io_port_pins_2_o_ie,\n  output  io_port_pins_2_o_pue,\n  output  io_port_pins_2_o_ds,\n  input   io_port_pins_3_i_ival,\n  output  io_port_pins_3_o_oval,\n  output  io_port_pins_3_o_oe,\n  output  io_port_pins_3_o_ie,\n  output  io_port_pins_3_o_pue,\n  output  io_port_pins_3_o_ds,\n  input   io_port_pins_4_i_ival,\n  output  io_port_pins_4_o_oval,\n  output  io_port_pins_4_o_oe,\n  output  io_port_pins_4_o_ie,\n  output  io_port_pins_4_o_pue,\n  output  io_port_pins_4_o_ds,\n  input   io_port_pins_5_i_ival,\n  output  io_port_pins_5_o_oval,\n  output  io_port_pins_5_o_oe,\n  output  io_port_pins_5_o_ie,\n  output  io_port_pins_5_o_pue,\n  output  io_port_pins_5_o_ds,\n  input   io_port_pins_6_i_ival,\n  output  io_port_pins_6_o_oval,\n  output  io_port_pins_6_o_oe,\n  output  io_port_pins_6_o_ie,\n  output  io_port_pins_6_o_pue,\n  output  io_port_pins_6_o_ds,\n  input   io_port_pins_7_i_ival,\n  output  io_port_pins_7_o_oval,\n  output  io_port_pins_7_o_oe,\n  output  io_port_pins_7_o_ie,\n  output  io_port_pins_7_o_pue,\n  output  io_port_pins_7_o_ds,\n  input   io_port_pins_8_i_ival,\n  output  io_port_pins_8_o_oval,\n  output  io_port_pins_8_o_oe,\n  output  io_port_pins_8_o_ie,\n  output  io_port_pins_8_o_pue,\n  output  io_port_pins_8_o_ds,\n  input   io_port_pins_9_i_ival,\n  output  io_port_pins_9_o_oval,\n  output  io_port_pins_9_o_oe,\n  output  io_port_pins_9_o_ie,\n  output  io_port_pins_9_o_pue,\n  output  io_port_pins_9_o_ds,\n  input   io_port_pins_10_i_ival,\n  output  io_port_pins_10_o_oval,\n  output  io_port_pins_10_o_oe,\n  output  io_port_pins_10_o_ie,\n  output  io_port_pins_10_o_pue,\n  output  io_port_pins_10_o_ds,\n  input   io_port_pins_11_i_ival,\n  output  io_port_pins_11_o_oval,\n  output  io_port_pins_11_o_oe,\n  output  io_port_pins_11_o_ie,\n  output  io_port_pins_11_o_pue,\n  output  io_port_pins_11_o_ds,\n  input   io_port_pins_12_i_ival,\n  output  io_port_pins_12_o_oval,\n  output  io_port_pins_12_o_oe,\n  output  io_port_pins_12_o_ie,\n  output  io_port_pins_12_o_pue,\n  output  io_port_pins_12_o_ds,\n  input   io_port_pins_13_i_ival,\n  output  io_port_pins_13_o_oval,\n  output  io_port_pins_13_o_oe,\n  output  io_port_pins_13_o_ie,\n  output  io_port_pins_13_o_pue,\n  output  io_port_pins_13_o_ds,\n  input   io_port_pins_14_i_ival,\n  output  io_port_pins_14_o_oval,\n  output  io_port_pins_14_o_oe,\n  output  io_port_pins_14_o_ie,\n  output  io_port_pins_14_o_pue,\n  output  io_port_pins_14_o_ds,\n  input   io_port_pins_15_i_ival,\n  output  io_port_pins_15_o_oval,\n  output  io_port_pins_15_o_oe,\n  output  io_port_pins_15_o_ie,\n  output  io_port_pins_15_o_pue,\n  output  io_port_pins_15_o_ds,\n  input   io_port_pins_16_i_ival,\n  output  io_port_pins_16_o_oval,\n  output  io_port_pins_16_o_oe,\n  output  io_port_pins_16_o_ie,\n  output  io_port_pins_16_o_pue,\n  output  io_port_pins_16_o_ds,\n  input   io_port_pins_17_i_ival,\n  output  io_port_pins_17_o_oval,\n  output  io_port_pins_17_o_oe,\n  output  io_port_pins_17_o_ie,\n  output  io_port_pins_17_o_pue,\n  output  io_port_pins_17_o_ds,\n  input   io_port_pins_18_i_ival,\n  output  io_port_pins_18_o_oval,\n  output  io_port_pins_18_o_oe,\n  output  io_port_pins_18_o_ie,\n  output  io_port_pins_18_o_pue,\n  output  io_port_pins_18_o_ds,\n  input   io_port_pins_19_i_ival,\n  output  io_port_pins_19_o_oval,\n  output  io_port_pins_19_o_oe,\n  output  io_port_pins_19_o_ie,\n  output  io_port_pins_19_o_pue,\n  output  io_port_pins_19_o_ds,\n  input   io_port_pins_20_i_ival,\n  output  io_port_pins_20_o_oval,\n  output  io_port_pins_20_o_oe,\n  output  io_port_pins_20_o_ie,\n  output  io_port_pins_20_o_pue,\n  output  io_port_pins_20_o_ds,\n  input   io_port_pins_21_i_ival,\n  output  io_port_pins_21_o_oval,\n  output  io_port_pins_21_o_oe,\n  output  io_port_pins_21_o_ie,\n  output  io_port_pins_21_o_pue,\n  output  io_port_pins_21_o_ds,\n  input   io_port_pins_22_i_ival,\n  output  io_port_pins_22_o_oval,\n  output  io_port_pins_22_o_oe,\n  output  io_port_pins_22_o_ie,\n  output  io_port_pins_22_o_pue,\n  output  io_port_pins_22_o_ds,\n  input   io_port_pins_23_i_ival,\n  output  io_port_pins_23_o_oval,\n  output  io_port_pins_23_o_oe,\n  output  io_port_pins_23_o_ie,\n  output  io_port_pins_23_o_pue,\n  output  io_port_pins_23_o_ds,\n  input   io_port_pins_24_i_ival,\n  output  io_port_pins_24_o_oval,\n  output  io_port_pins_24_o_oe,\n  output  io_port_pins_24_o_ie,\n  output  io_port_pins_24_o_pue,\n  output  io_port_pins_24_o_ds,\n  input   io_port_pins_25_i_ival,\n  output  io_port_pins_25_o_oval,\n  output  io_port_pins_25_o_oe,\n  output  io_port_pins_25_o_ie,\n  output  io_port_pins_25_o_pue,\n  output  io_port_pins_25_o_ds,\n  input   io_port_pins_26_i_ival,\n  output  io_port_pins_26_o_oval,\n  output  io_port_pins_26_o_oe,\n  output  io_port_pins_26_o_ie,\n  output  io_port_pins_26_o_pue,\n  output  io_port_pins_26_o_ds,\n  input   io_port_pins_27_i_ival,\n  output  io_port_pins_27_o_oval,\n  output  io_port_pins_27_o_oe,\n  output  io_port_pins_27_o_ie,\n  output  io_port_pins_27_o_pue,\n  output  io_port_pins_27_o_ds,\n  input   io_port_pins_28_i_ival,\n  output  io_port_pins_28_o_oval,\n  output  io_port_pins_28_o_oe,\n  output  io_port_pins_28_o_ie,\n  output  io_port_pins_28_o_pue,\n  output  io_port_pins_28_o_ds,\n  input   io_port_pins_29_i_ival,\n  output  io_port_pins_29_o_oval,\n  output  io_port_pins_29_o_oe,\n  output  io_port_pins_29_o_ie,\n  output  io_port_pins_29_o_pue,\n  output  io_port_pins_29_o_ds,\n  input   io_port_pins_30_i_ival,\n  output  io_port_pins_30_o_oval,\n  output  io_port_pins_30_o_oe,\n  output  io_port_pins_30_o_ie,\n  output  io_port_pins_30_o_pue,\n  output  io_port_pins_30_o_ds,\n  input   io_port_pins_31_i_ival,\n  output  io_port_pins_31_o_oval,\n  output  io_port_pins_31_o_oe,\n  output  io_port_pins_31_o_ie,\n  output  io_port_pins_31_o_pue,\n  output  io_port_pins_31_o_ds,\n  output  io_port_iof_0_0_i_ival,\n  input   io_port_iof_0_0_o_oval,\n  input   io_port_iof_0_0_o_oe,\n  input   io_port_iof_0_0_o_ie,\n  input   io_port_iof_0_0_o_valid,\n  output  io_port_iof_0_1_i_ival,\n  input   io_port_iof_0_1_o_oval,\n  input   io_port_iof_0_1_o_oe,\n  input   io_port_iof_0_1_o_ie,\n  input   io_port_iof_0_1_o_valid,\n  output  io_port_iof_0_2_i_ival,\n  input   io_port_iof_0_2_o_oval,\n  input   io_port_iof_0_2_o_oe,\n  input   io_port_iof_0_2_o_ie,\n  input   io_port_iof_0_2_o_valid,\n  output  io_port_iof_0_3_i_ival,\n  input   io_port_iof_0_3_o_oval,\n  input   io_port_iof_0_3_o_oe,\n  input   io_port_iof_0_3_o_ie,\n  input   io_port_iof_0_3_o_valid,\n  output  io_port_iof_0_4_i_ival,\n  input   io_port_iof_0_4_o_oval,\n  input   io_port_iof_0_4_o_oe,\n  input   io_port_iof_0_4_o_ie,\n  input   io_port_iof_0_4_o_valid,\n  output  io_port_iof_0_5_i_ival,\n  input   io_port_iof_0_5_o_oval,\n  input   io_port_iof_0_5_o_oe,\n  input   io_port_iof_0_5_o_ie,\n  input   io_port_iof_0_5_o_valid,\n  output  io_port_iof_0_6_i_ival,\n  input   io_port_iof_0_6_o_oval,\n  input   io_port_iof_0_6_o_oe,\n  input   io_port_iof_0_6_o_ie,\n  input   io_port_iof_0_6_o_valid,\n  output  io_port_iof_0_7_i_ival,\n  input   io_port_iof_0_7_o_oval,\n  input   io_port_iof_0_7_o_oe,\n  input   io_port_iof_0_7_o_ie,\n  input   io_port_iof_0_7_o_valid,\n  output  io_port_iof_0_8_i_ival,\n  input   io_port_iof_0_8_o_oval,\n  input   io_port_iof_0_8_o_oe,\n  input   io_port_iof_0_8_o_ie,\n  input   io_port_iof_0_8_o_valid,\n  output  io_port_iof_0_9_i_ival,\n  input   io_port_iof_0_9_o_oval,\n  input   io_port_iof_0_9_o_oe,\n  input   io_port_iof_0_9_o_ie,\n  input   io_port_iof_0_9_o_valid,\n  output  io_port_iof_0_10_i_ival,\n  input   io_port_iof_0_10_o_oval,\n  input   io_port_iof_0_10_o_oe,\n  input   io_port_iof_0_10_o_ie,\n  input   io_port_iof_0_10_o_valid,\n  output  io_port_iof_0_11_i_ival,\n  input   io_port_iof_0_11_o_oval,\n  input   io_port_iof_0_11_o_oe,\n  input   io_port_iof_0_11_o_ie,\n  input   io_port_iof_0_11_o_valid,\n  output  io_port_iof_0_12_i_ival,\n  input   io_port_iof_0_12_o_oval,\n  input   io_port_iof_0_12_o_oe,\n  input   io_port_iof_0_12_o_ie,\n  input   io_port_iof_0_12_o_valid,\n  output  io_port_iof_0_13_i_ival,\n  input   io_port_iof_0_13_o_oval,\n  input   io_port_iof_0_13_o_oe,\n  input   io_port_iof_0_13_o_ie,\n  input   io_port_iof_0_13_o_valid,\n  output  io_port_iof_0_14_i_ival,\n  input   io_port_iof_0_14_o_oval,\n  input   io_port_iof_0_14_o_oe,\n  input   io_port_iof_0_14_o_ie,\n  input   io_port_iof_0_14_o_valid,\n  output  io_port_iof_0_15_i_ival,\n  input   io_port_iof_0_15_o_oval,\n  input   io_port_iof_0_15_o_oe,\n  input   io_port_iof_0_15_o_ie,\n  input   io_port_iof_0_15_o_valid,\n  output  io_port_iof_0_16_i_ival,\n  input   io_port_iof_0_16_o_oval,\n  input   io_port_iof_0_16_o_oe,\n  input   io_port_iof_0_16_o_ie,\n  input   io_port_iof_0_16_o_valid,\n  output  io_port_iof_0_17_i_ival,\n  input   io_port_iof_0_17_o_oval,\n  input   io_port_iof_0_17_o_oe,\n  input   io_port_iof_0_17_o_ie,\n  input   io_port_iof_0_17_o_valid,\n  output  io_port_iof_0_18_i_ival,\n  input   io_port_iof_0_18_o_oval,\n  input   io_port_iof_0_18_o_oe,\n  input   io_port_iof_0_18_o_ie,\n  input   io_port_iof_0_18_o_valid,\n  output  io_port_iof_0_19_i_ival,\n  input   io_port_iof_0_19_o_oval,\n  input   io_port_iof_0_19_o_oe,\n  input   io_port_iof_0_19_o_ie,\n  input   io_port_iof_0_19_o_valid,\n  output  io_port_iof_0_20_i_ival,\n  input   io_port_iof_0_20_o_oval,\n  input   io_port_iof_0_20_o_oe,\n  input   io_port_iof_0_20_o_ie,\n  input   io_port_iof_0_20_o_valid,\n  output  io_port_iof_0_21_i_ival,\n  input   io_port_iof_0_21_o_oval,\n  input   io_port_iof_0_21_o_oe,\n  input   io_port_iof_0_21_o_ie,\n  input   io_port_iof_0_21_o_valid,\n  output  io_port_iof_0_22_i_ival,\n  input   io_port_iof_0_22_o_oval,\n  input   io_port_iof_0_22_o_oe,\n  input   io_port_iof_0_22_o_ie,\n  input   io_port_iof_0_22_o_valid,\n  output  io_port_iof_0_23_i_ival,\n  input   io_port_iof_0_23_o_oval,\n  input   io_port_iof_0_23_o_oe,\n  input   io_port_iof_0_23_o_ie,\n  input   io_port_iof_0_23_o_valid,\n  output  io_port_iof_0_24_i_ival,\n  input   io_port_iof_0_24_o_oval,\n  input   io_port_iof_0_24_o_oe,\n  input   io_port_iof_0_24_o_ie,\n  input   io_port_iof_0_24_o_valid,\n  output  io_port_iof_0_25_i_ival,\n  input   io_port_iof_0_25_o_oval,\n  input   io_port_iof_0_25_o_oe,\n  input   io_port_iof_0_25_o_ie,\n  input   io_port_iof_0_25_o_valid,\n  output  io_port_iof_0_26_i_ival,\n  input   io_port_iof_0_26_o_oval,\n  input   io_port_iof_0_26_o_oe,\n  input   io_port_iof_0_26_o_ie,\n  input   io_port_iof_0_26_o_valid,\n  output  io_port_iof_0_27_i_ival,\n  input   io_port_iof_0_27_o_oval,\n  input   io_port_iof_0_27_o_oe,\n  input   io_port_iof_0_27_o_ie,\n  input   io_port_iof_0_27_o_valid,\n  output  io_port_iof_0_28_i_ival,\n  input   io_port_iof_0_28_o_oval,\n  input   io_port_iof_0_28_o_oe,\n  input   io_port_iof_0_28_o_ie,\n  input   io_port_iof_0_28_o_valid,\n  output  io_port_iof_0_29_i_ival,\n  input   io_port_iof_0_29_o_oval,\n  input   io_port_iof_0_29_o_oe,\n  input   io_port_iof_0_29_o_ie,\n  input   io_port_iof_0_29_o_valid,\n  output  io_port_iof_0_30_i_ival,\n  input   io_port_iof_0_30_o_oval,\n  input   io_port_iof_0_30_o_oe,\n  input   io_port_iof_0_30_o_ie,\n  input   io_port_iof_0_30_o_valid,\n  output  io_port_iof_0_31_i_ival,\n  input   io_port_iof_0_31_o_oval,\n  input   io_port_iof_0_31_o_oe,\n  input   io_port_iof_0_31_o_ie,\n  input   io_port_iof_0_31_o_valid,\n  output  io_port_iof_1_0_i_ival,\n  input   io_port_iof_1_0_o_oval,\n  input   io_port_iof_1_0_o_oe,\n  input   io_port_iof_1_0_o_ie,\n  input   io_port_iof_1_0_o_valid,\n  output  io_port_iof_1_1_i_ival,\n  input   io_port_iof_1_1_o_oval,\n  input   io_port_iof_1_1_o_oe,\n  input   io_port_iof_1_1_o_ie,\n  input   io_port_iof_1_1_o_valid,\n  output  io_port_iof_1_2_i_ival,\n  input   io_port_iof_1_2_o_oval,\n  input   io_port_iof_1_2_o_oe,\n  input   io_port_iof_1_2_o_ie,\n  input   io_port_iof_1_2_o_valid,\n  output  io_port_iof_1_3_i_ival,\n  input   io_port_iof_1_3_o_oval,\n  input   io_port_iof_1_3_o_oe,\n  input   io_port_iof_1_3_o_ie,\n  input   io_port_iof_1_3_o_valid,\n  output  io_port_iof_1_4_i_ival,\n  input   io_port_iof_1_4_o_oval,\n  input   io_port_iof_1_4_o_oe,\n  input   io_port_iof_1_4_o_ie,\n  input   io_port_iof_1_4_o_valid,\n  output  io_port_iof_1_5_i_ival,\n  input   io_port_iof_1_5_o_oval,\n  input   io_port_iof_1_5_o_oe,\n  input   io_port_iof_1_5_o_ie,\n  input   io_port_iof_1_5_o_valid,\n  output  io_port_iof_1_6_i_ival,\n  input   io_port_iof_1_6_o_oval,\n  input   io_port_iof_1_6_o_oe,\n  input   io_port_iof_1_6_o_ie,\n  input   io_port_iof_1_6_o_valid,\n  output  io_port_iof_1_7_i_ival,\n  input   io_port_iof_1_7_o_oval,\n  input   io_port_iof_1_7_o_oe,\n  input   io_port_iof_1_7_o_ie,\n  input   io_port_iof_1_7_o_valid,\n  output  io_port_iof_1_8_i_ival,\n  input   io_port_iof_1_8_o_oval,\n  input   io_port_iof_1_8_o_oe,\n  input   io_port_iof_1_8_o_ie,\n  input   io_port_iof_1_8_o_valid,\n  output  io_port_iof_1_9_i_ival,\n  input   io_port_iof_1_9_o_oval,\n  input   io_port_iof_1_9_o_oe,\n  input   io_port_iof_1_9_o_ie,\n  input   io_port_iof_1_9_o_valid,\n  output  io_port_iof_1_10_i_ival,\n  input   io_port_iof_1_10_o_oval,\n  input   io_port_iof_1_10_o_oe,\n  input   io_port_iof_1_10_o_ie,\n  input   io_port_iof_1_10_o_valid,\n  output  io_port_iof_1_11_i_ival,\n  input   io_port_iof_1_11_o_oval,\n  input   io_port_iof_1_11_o_oe,\n  input   io_port_iof_1_11_o_ie,\n  input   io_port_iof_1_11_o_valid,\n  output  io_port_iof_1_12_i_ival,\n  input   io_port_iof_1_12_o_oval,\n  input   io_port_iof_1_12_o_oe,\n  input   io_port_iof_1_12_o_ie,\n  input   io_port_iof_1_12_o_valid,\n  output  io_port_iof_1_13_i_ival,\n  input   io_port_iof_1_13_o_oval,\n  input   io_port_iof_1_13_o_oe,\n  input   io_port_iof_1_13_o_ie,\n  input   io_port_iof_1_13_o_valid,\n  output  io_port_iof_1_14_i_ival,\n  input   io_port_iof_1_14_o_oval,\n  input   io_port_iof_1_14_o_oe,\n  input   io_port_iof_1_14_o_ie,\n  input   io_port_iof_1_14_o_valid,\n  output  io_port_iof_1_15_i_ival,\n  input   io_port_iof_1_15_o_oval,\n  input   io_port_iof_1_15_o_oe,\n  input   io_port_iof_1_15_o_ie,\n  input   io_port_iof_1_15_o_valid,\n  output  io_port_iof_1_16_i_ival,\n  input   io_port_iof_1_16_o_oval,\n  input   io_port_iof_1_16_o_oe,\n  input   io_port_iof_1_16_o_ie,\n  input   io_port_iof_1_16_o_valid,\n  output  io_port_iof_1_17_i_ival,\n  input   io_port_iof_1_17_o_oval,\n  input   io_port_iof_1_17_o_oe,\n  input   io_port_iof_1_17_o_ie,\n  input   io_port_iof_1_17_o_valid,\n  output  io_port_iof_1_18_i_ival,\n  input   io_port_iof_1_18_o_oval,\n  input   io_port_iof_1_18_o_oe,\n  input   io_port_iof_1_18_o_ie,\n  input   io_port_iof_1_18_o_valid,\n  output  io_port_iof_1_19_i_ival,\n  input   io_port_iof_1_19_o_oval,\n  input   io_port_iof_1_19_o_oe,\n  input   io_port_iof_1_19_o_ie,\n  input   io_port_iof_1_19_o_valid,\n  output  io_port_iof_1_20_i_ival,\n  input   io_port_iof_1_20_o_oval,\n  input   io_port_iof_1_20_o_oe,\n  input   io_port_iof_1_20_o_ie,\n  input   io_port_iof_1_20_o_valid,\n  output  io_port_iof_1_21_i_ival,\n  input   io_port_iof_1_21_o_oval,\n  input   io_port_iof_1_21_o_oe,\n  input   io_port_iof_1_21_o_ie,\n  input   io_port_iof_1_21_o_valid,\n  output  io_port_iof_1_22_i_ival,\n  input   io_port_iof_1_22_o_oval,\n  input   io_port_iof_1_22_o_oe,\n  input   io_port_iof_1_22_o_ie,\n  input   io_port_iof_1_22_o_valid,\n  output  io_port_iof_1_23_i_ival,\n  input   io_port_iof_1_23_o_oval,\n  input   io_port_iof_1_23_o_oe,\n  input   io_port_iof_1_23_o_ie,\n  input   io_port_iof_1_23_o_valid,\n  output  io_port_iof_1_24_i_ival,\n  input   io_port_iof_1_24_o_oval,\n  input   io_port_iof_1_24_o_oe,\n  input   io_port_iof_1_24_o_ie,\n  input   io_port_iof_1_24_o_valid,\n  output  io_port_iof_1_25_i_ival,\n  input   io_port_iof_1_25_o_oval,\n  input   io_port_iof_1_25_o_oe,\n  input   io_port_iof_1_25_o_ie,\n  input   io_port_iof_1_25_o_valid,\n  output  io_port_iof_1_26_i_ival,\n  input   io_port_iof_1_26_o_oval,\n  input   io_port_iof_1_26_o_oe,\n  input   io_port_iof_1_26_o_ie,\n  input   io_port_iof_1_26_o_valid,\n  output  io_p"}
{"text": "ort_iof_1_27_i_ival,\n  input   io_port_iof_1_27_o_oval,\n  input   io_port_iof_1_27_o_oe,\n  input   io_port_iof_1_27_o_ie,\n  input   io_port_iof_1_27_o_valid,\n  output  io_port_iof_1_28_i_ival,\n  input   io_port_iof_1_28_o_oval,\n  input   io_port_iof_1_28_o_oe,\n  input   io_port_iof_1_28_o_ie,\n  input   io_port_iof_1_28_o_valid,\n  output  io_port_iof_1_29_i_ival,\n  input   io_port_iof_1_29_o_oval,\n  input   io_port_iof_1_29_o_oe,\n  input   io_port_iof_1_29_o_ie,\n  input   io_port_iof_1_29_o_valid,\n  output  io_port_iof_1_30_i_ival,\n  input   io_port_iof_1_30_o_oval,\n  input   io_port_iof_1_30_o_oe,\n  input   io_port_iof_1_30_o_ie,\n  input   io_port_iof_1_30_o_valid,\n  output  io_port_iof_1_31_i_ival,\n  input   io_port_iof_1_31_o_oval,\n  input   io_port_iof_1_31_o_oe,\n  input   io_port_iof_1_31_o_ie,\n  input   io_port_iof_1_31_o_valid\n);\n  reg [31:0] portReg;\n  reg [31:0] GEN_399;\n  wire  oeReg_clock;\n  wire  oeReg_reset;\n  wire [31:0] oeReg_io_d;\n  wire [31:0] oeReg_io_q;\n  wire  oeReg_io_en;\n  wire  pueReg_clock;\n  wire  pueReg_reset;\n  wire [31:0] pueReg_io_d;\n  wire [31:0] pueReg_io_q;\n  wire  pueReg_io_en;\n  reg [31:0] dsReg;\n  reg [31:0] GEN_400;\n  wire  ieReg_clock;\n  wire  ieReg_reset;\n  wire [31:0] ieReg_io_d;\n  wire [31:0] ieReg_io_q;\n  wire  ieReg_io_en;\n  wire [31:0] inVal;\n  wire  T_3188_0;\n  wire  T_3188_1;\n  wire  T_3188_2;\n  wire  T_3188_3;\n  wire  T_3188_4;\n  wire  T_3188_5;\n  wire  T_3188_6;\n  wire  T_3188_7;\n  wire  T_3188_8;\n  wire  T_3188_9;\n  wire  T_3188_10;\n  wire  T_3188_11;\n  wire  T_3188_12;\n  wire  T_3188_13;\n  wire  T_3188_14;\n  wire  T_3188_15;\n  wire  T_3188_16;\n  wire  T_3188_17;\n  wire  T_3188_18;\n  wire  T_3188_19;\n  wire  T_3188_20;\n  wire  T_3188_21;\n  wire  T_3188_22;\n  wire  T_3188_23;\n  wire  T_3188_24;\n  wire  T_3188_25;\n  wire  T_3188_26;\n  wire  T_3188_27;\n  wire  T_3188_28;\n  wire  T_3188_29;\n  wire  T_3188_30;\n  wire  T_3188_31;\n  wire [1:0] T_3223;\n  wire [1:0] T_3224;\n  wire [3:0] T_3225;\n  wire [1:0] T_3226;\n  wire [1:0] T_3227;\n  wire [3:0] T_3228;\n  wire [7:0] T_3229;\n  wire [1:0] T_3230;\n  wire [1:0] T_3231;\n  wire [3:0] T_3232;\n  wire [1:0] T_3233;\n  wire [1:0] T_3234;\n  wire [3:0] T_3235;\n  wire [7:0] T_3236;\n  wire [15:0] T_3237;\n  wire [1:0] T_3238;\n  wire [1:0] T_3239;\n  wire [3:0] T_3240;\n  wire [1:0] T_3241;\n  wire [1:0] T_3242;\n  wire [3:0] T_3243;\n  wire [7:0] T_3244;\n  wire [1:0] T_3245;\n  wire [1:0] T_3246;\n  wire [3:0] T_3247;\n  wire [1:0] T_3248;\n  wire [1:0] T_3249;\n  wire [3:0] T_3250;\n  wire [7:0] T_3251;\n  wire [15:0] T_3252;\n  wire [31:0] T_3253;\n  reg [31:0] T_3256;\n  reg [31:0] GEN_401;\n  reg [31:0] T_3257;\n  reg [31:0] GEN_402;\n  reg [31:0] inSyncReg;\n  reg [31:0] GEN_403;\n  reg [31:0] valueReg;\n  reg [31:0] GEN_404;\n  reg [31:0] highIeReg;\n  reg [31:0] GEN_405;\n  reg [31:0] lowIeReg;\n  reg [31:0] GEN_406;\n  reg [31:0] riseIeReg;\n  reg [31:0] GEN_407;\n  reg [31:0] fallIeReg;\n  reg [31:0] GEN_408;\n  reg [31:0] highIpReg;\n  reg [31:0] GEN_409;\n  reg [31:0] lowIpReg;\n  reg [31:0] GEN_410;\n  reg [31:0] riseIpReg;\n  reg [31:0] GEN_411;\n  reg [31:0] fallIpReg;\n  reg [31:0] GEN_412;\n  wire  iofEnReg_clock;\n  wire  iofEnReg_reset;\n  wire [31:0] iofEnReg_io_d;\n  wire [31:0] iofEnReg_io_q;\n  wire  iofEnReg_io_en;\n  reg [31:0] iofSelReg;\n  reg [31:0] GEN_413;\n  reg [31:0] xorReg;\n  reg [31:0] GEN_414;\n  wire [31:0] T_3269;\n  wire [31:0] rise;\n  wire [31:0] T_3270;\n  wire [31:0] fall;\n  wire  T_3295_ready;\n  wire  T_3295_valid;\n  wire  T_3295_bits_read;\n  wire [9:0] T_3295_bits_index;\n  wire [31:0] T_3295_bits_data;\n  wire [3:0] T_3295_bits_mask;\n  wire [9:0] T_3295_bits_extra;\n  wire  T_3312;\n  wire [26:0] T_3313;\n  wire [1:0] T_3314;\n  wire [6:0] T_3315;\n  wire [9:0] T_3316;\n  wire  T_3334_ready;\n  wire  T_3334_valid;\n  wire  T_3334_bits_read;\n  wire [31:0] T_3334_bits_data;\n  wire [9:0] T_3334_bits_extra;\n  wire  T_3370_ready;\n  wire  T_3370_valid;\n  wire  T_3370_bits_read;\n  wire [9:0] T_3370_bits_index;\n  wire [31:0] T_3370_bits_data;\n  wire [3:0] T_3370_bits_mask;\n  wire [9:0] T_3370_bits_extra;\n  wire [9:0] T_3455;\n  wire  T_3457;\n  wire [9:0] T_3463;\n  wire [9:0] T_3464;\n  wire  T_3466;\n  wire [9:0] T_3472;\n  wire [9:0] T_3473;\n  wire  T_3475;\n  wire [9:0] T_3481;\n  wire [9:0] T_3482;\n  wire  T_3484;\n  wire [9:0] T_3490;\n  wire [9:0] T_3491;\n  wire  T_3493;\n  wire [9:0] T_3499;\n  wire [9:0] T_3500;\n  wire  T_3502;\n  wire [9:0] T_3508;\n  wire [9:0] T_3509;\n  wire  T_3511;\n  wire [9:0] T_3517;\n  wire [9:0] T_3518;\n  wire  T_3520;\n  wire [9:0] T_3526;\n  wire [9:0] T_3527;\n  wire  T_3529;\n  wire [9:0] T_3535;\n  wire [9:0] T_3536;\n  wire  T_3538;\n  wire [9:0] T_3544;\n  wire [9:0] T_3545;\n  wire  T_3547;\n  wire [9:0] T_3553;\n  wire [9:0] T_3554;\n  wire  T_3556;\n  wire [9:0] T_3562;\n  wire [9:0] T_3563;\n  wire  T_3565;\n  wire [9:0] T_3571;\n  wire [9:0] T_3572;\n  wire  T_3574;\n  wire [9:0] T_3580;\n  wire [9:0] T_3581;\n  wire  T_3583;\n  wire [9:0] T_3589;\n  wire [9:0] T_3590;\n  wire  T_3592;\n  wire [9:0] T_3598;\n  wire [9:0] T_3599;\n  wire  T_3601;\n  wire  T_3609_0;\n  wire  T_3609_1;\n  wire  T_3609_2;\n  wire  T_3609_3;\n  wire  T_3609_4;\n  wire  T_3609_5;\n  wire  T_3609_6;\n  wire  T_3609_7;\n  wire  T_3609_8;\n  wire  T_3609_9;\n  wire  T_3609_10;\n  wire  T_3609_11;\n  wire  T_3609_12;\n  wire  T_3609_13;\n  wire  T_3609_14;\n  wire  T_3609_15;\n  wire  T_3609_16;\n  wire  T_3614_0;\n  wire  T_3614_1;\n  wire  T_3614_2;\n  wire  T_3614_3;\n  wire  T_3614_4;\n  wire  T_3614_5;\n  wire  T_3614_6;\n  wire  T_3614_7;\n  wire  T_3614_8;\n  wire  T_3614_9;\n  wire  T_3614_10;\n  wire  T_3614_11;\n  wire  T_3614_12;\n  wire  T_3614_13;\n  wire  T_3614_14;\n  wire  T_3614_15;\n  wire  T_3614_16;\n  wire  T_3619_0;\n  wire  T_3619_1;\n  wire  T_3619_2;\n  wire  T_3619_3;\n  wire  T_3619_4;\n  wire  T_3619_5;\n  wire  T_3619_6;\n  wire  T_3619_7;\n  wire  T_3619_8;\n  wire  T_3619_9;\n  wire  T_3619_10;\n  wire  T_3619_11;\n  wire  T_3619_12;\n  wire  T_3619_13;\n  wire  T_3619_14;\n  wire  T_3619_15;\n  wire  T_3619_16;\n  wire  T_3624_0;\n  wire  T_3624_1;\n  wire  T_3624_2;\n  wire  T_3624_3;\n  wire  T_3624_4;\n  wire  T_3624_5;\n  wire  T_3624_6;\n  wire  T_3624_7;\n  wire  T_3624_8;\n  wire  T_3624_9;\n  wire  T_3624_10;\n  wire  T_3624_11;\n  wire  T_3624_12;\n  wire  T_3624_13;\n  wire  T_3624_14;\n  wire  T_3624_15;\n  wire  T_3624_16;\n  wire  T_3629_0;\n  wire  T_3629_1;\n  wire  T_3629_2;\n  wire  T_3629_3;\n  wire  T_3629_4;\n  wire  T_3629_5;\n  wire  T_3629_6;\n  wire  T_3629_7;\n  wire  T_3629_8;\n  wire  T_3629_9;\n  wire  T_3629_10;\n  wire  T_3629_11;\n  wire  T_3629_12;\n  wire  T_3629_13;\n  wire  T_3629_14;\n  wire  T_3629_15;\n  wire  T_3629_16;\n  wire  T_3634_0;\n  wire  T_3634_1;\n  wire  T_3634_2;\n  wire  T_3634_3;\n  wire  T_3634_4;\n  wire  T_3634_5;\n  wire  T_3634_6;\n  wire  T_3634_7;\n  wire  T_3634_8;\n  wire  T_3634_9;\n  wire  T_3634_10;\n  wire  T_3634_11;\n  wire  T_3634_12;\n  wire  T_3634_13;\n  wire  T_3634_14;\n  wire  T_3634_15;\n  wire  T_3634_16;\n  wire  T_3639_0;\n  wire  T_3639_1;\n  wire  T_3639_2;\n  wire  T_3639_3;\n  wire  T_3639_4;\n  wire  T_3639_5;\n  wire  T_3639_6;\n  wire  T_3639_7;\n  wire  T_3639_8;\n  wire  T_3639_9;\n  wire  T_3639_10;\n  wire  T_3639_11;\n  wire  T_3639_12;\n  wire  T_3639_13;\n  wire  T_3639_14;\n  wire  T_3639_15;\n  wire  T_3639_16;\n  wire  T_3644_0;\n  wire  T_3644_1;\n  wire  T_3644_2;\n  wire  T_3644_3;\n  wire  T_3644_4;\n  wire  T_3644_5;\n  wire  T_3644_6;\n  wire  T_3644_7;\n  wire  T_3644_8;\n  wire  T_3644_9;\n  wire  T_3644_10;\n  wire  T_3644_11;\n  wire  T_3644_12;\n  wire  T_3644_13;\n  wire  T_3644_14;\n  wire  T_3644_15;\n  wire  T_3644_16;\n  wire  T_3806;\n  wire  T_3807;\n  wire  T_3808;\n  wire  T_3809;\n  wire [7:0] T_3813;\n  wire [7:0] T_3817;\n  wire [7:0] T_3821;\n  wire [7:0] T_3825;\n  wire [15:0] T_3826;\n  wire [15:0] T_3827;\n  wire [31:0] T_3828;\n  wire [31:0] T_3856;\n  wire  T_3858;\n  wire  T_3911;\n  wire [31:0] GEN_7;\n  wire  T_3951;\n  wire [31:0] GEN_8;\n  wire  T_3991;\n  wire [31:0] T_4007;\n  wire  T_4031;\n  wire [31:0] T_4047;\n  wire  T_4071;\n  wire [31:0] GEN_9;\n  wire  T_4111;\n  wire [31:0] T_4114;\n  wire [31:0] T_4116;\n  wire [31:0] T_4117;\n  wire [31:0] T_4118;\n  wire [31:0] T_4119;\n  wire  T_4157;\n  wire [31:0] T_4160;\n  wire [31:0] T_4162;\n  wire [31:0] T_4163;\n  wire [31:0] T_4164;\n  wire [31:0] T_4165;\n  wire  T_4203;\n  wire [31:0] T_4219;\n  wire  T_4243;\n  wire [31:0] GEN_10;\n  wire  T_4283;\n  wire [31:0] T_4286;\n  wire [31:0] T_4288;\n  wire [31:0] T_4289;\n  wire [31:0] T_4290;\n  wire [31:0] T_4291;\n  wire  T_4329;\n  wire [31:0] GEN_11;\n  wire  T_4369;\n  wire [31:0] GEN_12;\n  wire  T_4409;\n  wire [31:0] T_4412;\n  wire [31:0] T_4414;\n  wire [31:0] T_4415;\n  wire [31:0] T_4416;\n  wire [31:0] T_4417;\n  wire  T_4455;\n  wire [31:0] GEN_13;\n  wire  T_4495;\n  wire [31:0] T_4511;\n  wire  T_4535;\n  wire [31:0] GEN_14;\n  wire  T_4557;\n  wire  T_4559;\n  wire  T_4561;\n  wire  T_4563;\n  wire  T_4565;\n  wire  T_4567;\n  wire  T_4569;\n  wire  T_4571;\n  wire  T_4573;\n  wire  T_4575;\n  wire  T_4577;\n  wire  T_4579;\n  wire  T_4581;\n  wire  T_4583;\n  wire  T_4585;\n  wire  T_4587;\n  wire  T_4589;\n  wire  T_4591;\n  wire  T_4593;\n  wire  T_4595;\n  wire  T_4597;\n  wire  T_4599;\n  wire  T_4601;\n  wire  T_4603;\n  wire  T_4605;\n  wire  T_4607;\n  wire  T_4609;\n  wire  T_4611;\n  wire  T_4613;\n  wire  T_4615;\n  wire  T_4617;\n  wire  T_4619;\n  wire  T_4621;\n  wire  T_4623;\n  wire  T_4704_0;\n  wire  T_4704_1;\n  wire  T_4704_2;\n  wire  T_4704_3;\n  wire  T_4704_4;\n  wire  T_4704_5;\n  wire  T_4704_6;\n  wire  T_4704_7;\n  wire  T_4704_8;\n  wire  T_4704_9;\n  wire  T_4704_10;\n  wire  T_4704_11;\n  wire  T_4704_12;\n  wire  T_4704_13;\n  wire  T_4704_14;\n  wire  T_4704_15;\n  wire  T_4704_16;\n  wire  T_4704_17;\n  wire  T_4704_18;\n  wire  T_4704_19;\n  wire  T_4704_20;\n  wire  T_4704_21;\n  wire  T_4704_22;\n  wire  T_4704_23;\n  wire  T_4704_24;\n  wire  T_4704_25;\n  wire  T_4704_26;\n  wire  T_4704_27;\n  wire  T_4704_28;\n  wire  T_4704_29;\n  wire  T_4704_30;\n  wire  T_4704_31;\n  wire  T_4742;\n  wire  T_4746;\n  wire  T_4750;\n  wire  T_4754;\n  wire  T_4758;\n  wire  T_4762;\n  wire  T_4766;\n  wire  T_4770;\n  wire  T_4774;\n  wire  T_4778;\n  wire  T_4782;\n  wire  T_4786;\n  wire  T_4790;\n  wire  T_4794;\n  wire  T_4798;\n  wire  T_4802;\n  wire  T_4806;\n  wire  T_4887_0;\n  wire  T_4887_1;\n  wire  T_4887_2;\n  wire  T_4887_3;\n  wire  T_4887_4;\n  wire  T_4887_5;\n  wire  T_4887_6;\n  wire  T_4887_7;\n  wire  T_4887_8;\n  wire  T_4887_9;\n  wire  T_4887_10;\n  wire  T_4887_11;\n  wire  T_4887_12;\n  wire  T_4887_13;\n  wire  T_4887_14;\n  wire  T_4887_15;\n  wire  T_4887_16;\n  wire  T_4887_17;\n  wire  T_4887_18;\n  wire  T_4887_19;\n  wire  T_4887_20;\n  wire  T_4887_21;\n  wire  T_4887_22;\n  wire  T_4887_23;\n  wire  T_4887_24;\n  wire  T_4887_25;\n  wire  T_4887_26;\n  wire  T_4887_27;\n  wire  T_4887_28;\n  wire  T_4887_29;\n  wire  T_4887_30;\n  wire  T_4887_31;\n  wire  T_4925;\n  wire  T_4929;\n  wire  T_4933;\n  wire  T_4937;\n  wire  T_4941;\n  wire  T_4945;\n  wire  T_4949;\n  wire  T_4953;\n  wire  T_4957;\n  wire  T_4961;\n  wire  T_4965;\n  wire  T_4969;\n  wire  T_4973;\n  wire  T_4977;\n  wire  T_4981;\n  wire  T_4985;\n  wire  T_4989;\n  wire  T_5070_0;\n  wire  T_5070_1;\n  wire  T_5070_2;\n  wire  T_5070_3;\n  wire  T_5070_4;\n  wire  T_5070_5;\n  wire  T_5070_6;\n  wire  T_5070_7;\n  wire  T_5070_8;\n  wire  T_5070_9;\n  wire  T_5070_10;\n  wire  T_5070_11;\n  wire  T_5070_12;\n  wire  T_5070_13;\n  wire  T_5070_14;\n  wire  T_5070_15;\n  wire  T_5070_16;\n  wire  T_5070_17;\n  wire  T_5070_18;\n  wire  T_5070_19;\n  wire  T_5070_20;\n  wire  T_5070_21;\n  wire  T_5070_22;\n  wire  T_5070_23;\n  wire  T_5070_24;\n  wire  T_5070_25;\n  wire  T_5070_26;\n  wire  T_5070_27;\n  wire  T_5070_28;\n  wire  T_5070_29;\n  wire  T_5070_30;\n  wire  T_5070_31;\n  wire  T_5108;\n  wire  T_5112;\n  wire  T_5116;\n  wire  T_5120;\n  wire  T_5124;\n  wire  T_5128;\n  wire  T_5132;\n  wire  T_5136;\n  wire  T_5140;\n  wire  T_5144;\n  wire  T_5148;\n  wire  T_5152;\n  wire  T_5156;\n  wire  T_5160;\n  wire  T_5164;\n  wire  T_5168;\n  wire  T_5172;\n  wire  T_5253_0;\n  wire  T_5253_1;\n  wire  T_5253_2;\n  wire  T_5253_3;\n  wire  T_5253_4;\n  wire  T_5253_5;\n  wire  T_5253_6;\n  wire  T_5253_7;\n  wire  T_5253_8;\n  wire  T_5253_9;\n  wire  T_5253_10;\n  wire  T_5253_11;\n  wire  T_5253_12;\n  wire  T_5253_13;\n  wire  T_5253_14;\n  wire  T_5253_15;\n  wire  T_5253_16;\n  wire  T_5253_17;\n  wire  T_5253_18;\n  wire  T_5253_19;\n  wire  T_5253_20;\n  wire  T_5253_21;\n  wire  T_5253_22;\n  wire  T_5253_23;\n  wire  T_5253_24;\n  wire  T_5253_25;\n  wire  T_5253_26;\n  wire  T_5253_27;\n  wire  T_5253_28;\n  wire  T_5253_29;\n  wire  T_5253_30;\n  wire  T_5253_31;\n  wire  T_5288;\n  wire  T_5289;\n  wire  T_5290;\n  wire  T_5291;\n  wire  T_5292;\n  wire [1:0] T_5298;\n  wire [1:0] T_5299;\n  wire [2:0] T_5300;\n  wire [4:0] T_5301;\n  wire  GEN_0;\n  wire  GEN_15;\n  wire  GEN_16;\n  wire  GEN_17;\n  wire  GEN_18;\n  wire  GEN_19;\n  wire  GEN_20;\n  wire  GEN_21;\n  wire  GEN_22;\n  wire  GEN_23;\n  wire  GEN_24;\n  wire  GEN_25;\n  wire  GEN_26;\n  wire  GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_31;\n  wire  GEN_32;\n  wire  GEN_33;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  GEN_36;\n  wire  GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire  GEN_40;\n  wire  GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_1;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire  GEN_48;\n  wire  GEN_49;\n  wire  GEN_50;\n  wire  GEN_51;\n  wire  GEN_52;\n  wire  GEN_53;\n  wire  GEN_54;\n  wire  GEN_55;\n  wire  GEN_56;\n  wire  GEN_57;\n  wire  GEN_58;\n  wire  GEN_59;\n  wire  GEN_60;\n  wire  GEN_61;\n  wire  GEN_62;\n  wire  GEN_63;\n  wire  GEN_64;\n  wire  GEN_65;\n  wire  GEN_66;\n  wire  GEN_67;\n  wire  GEN_68;\n  wire  GEN_69;\n  wire  GEN_70;\n  wire  GEN_71;\n  wire  GEN_72;\n  wire  GEN_73;\n  wire  GEN_74;\n  wire  GEN_75;\n  wire  GEN_76;\n  wire  T_5318;\n  wire  GEN_2;\n  wire  GEN_77;\n  wire  GEN_78;\n  wire  GEN_79;\n  wire  GEN_80;\n  wire  GEN_81;\n  wire  GEN_82;\n  wire  GEN_83;\n  wire  GEN_84;\n  wire  GEN_85;\n  wire  GEN_86;\n  wire  GEN_87;\n  wire  GEN_88;\n  wire  GEN_89;\n  wire  GEN_90;\n  wire  GEN_91;\n  wire  GEN_92;\n  wire  GEN_93;\n  wire  GEN_94;\n  wire  GEN_95;\n  wire  GEN_96;\n  wire  GEN_97;\n  wire  GEN_98;\n  wire  GEN_99;\n  wire  GEN_100;\n  wire  GEN_101;\n  wire  GEN_102;\n  wire  GEN_103;\n  wire  GEN_104;\n  wire  GEN_105;\n  wire  GEN_106;\n  wire  GEN_107;\n  wire  GEN_3;\n  wire  GEN_108;\n  wire  GEN_109;\n  wire  GEN_110;\n  wire  GEN_111;\n  wire  GEN_112;\n  wire  GEN_113;\n  wire  GEN_114;\n  wire  GEN_115;\n  wire  GEN_116;\n  wire  GEN_117;\n  wire  GEN_118;\n  wire  GEN_119;\n  wire  GEN_120;\n  wire  GEN_121;\n  wire  GEN_122;\n  wire  GEN_123;\n  wire  GEN_124;\n  wire  GEN_125;\n  wire  GEN_126;\n  wire  GEN_127;\n  wire  GEN_128;\n  wire  GEN_129;\n  wire  GEN_130;\n  wire  GEN_131;\n  wire  GEN_132;\n  wire  GEN_133;\n  wire  GEN_134;\n  wire  GEN_135;\n  wire  GEN_136;\n  wire  GEN_137;\n  wire  GEN_138;\n  wire  T_5321;\n  wire  T_5322;\n  wire  T_5323;\n  wire  T_5324;\n  wire  T_5325;\n  wire [31:0] T_5327;\n  wire [1:0] T_5328;\n  wire [1:0] T_5329;\n  wire [3:0] T_5330;\n  wire [1:0] T_5331;\n  wire [1:0] T_5332;\n  wire [3:0] T_5333;\n  wire [7:0] T_5334;\n  wire [1:0] T_5335;\n  wire [1:0] T_5336;\n  wire [3:0] T_5337;\n  wire [1:0] T_5338;\n  wire [1:0] T_5339;\n  wire [3:0] T_5340;\n  wire [7:0] T_5341;\n  wire [15:0] T_5342;\n  wire [1:0] T_5343;\n  wire [3:0] T_5345;\n  wire [7:0] T_5349;\n  wire [15:0] T_5357;\n  wire [31:0] T_5358;\n  wire [31:0] T_5359;\n  wire  T_5394;\n  wire  T_5395;\n  wire  T_5396;\n  wire  T_5397;\n  wire  T_5400;\n  wire  T_5401;\n  wire  T_5403;\n  wire  T_5404;\n  wire  T_5405;\n  wire  T_5407;\n  wire  T_5411;\n  wire  T_5413;\n  wire  T_5416;\n  wire  T_5417;\n  wire  T_5423;\n  wire  T_5427;\n  wire  T_5433;\n  wire  T_5436;\n  wire  T_5437;\n  wire  T_5443;\n  wire  T_5447;\n  wire  T_5453;\n  wire  T_5456;\n  wire  T_5457;\n  wire  T_5463;\n  wire  T_5467;\n  wire  T_5473;\n  wire  T_5476;\n  wire  T_5477;\n  wire  T_5483;\n  wire  T_5487;\n  wire  T_5493;\n  wire  T_5496;\n  wire  T_5497;\n  wire  T_5503;\n  wire  T_5507;\n  wire  T_5513;\n  wire  T_5516;\n  wire  T_5517;\n  wire  T_5523;\n  wire  T_5527;\n  wire  T_5533;\n  wire  T_5536;\n  wire  T_5537;\n  wire  T_5543;\n  wire  T_5547;\n  wire  T_5553;\n  wire  T_5556;\n  wire  T_5557;\n  wire  T_5563;\n  wire  T_5567;\n  wire  T_5573;\n  wire  T_5576;\n  wire  T_5577;\n  wire  T_5583;\n  wire  T_5587;\n  wire  T_5593;\n  wire  T_5596;\n  wire  T_5597;\n  wire  T_5603;\n  wire  T_5607;\n  wire  T_5613;\n  wire  T_5616;\n  wire  T_5617;\n  wire  T_5623;\n  wire  T_5627;\n  wire  T_5633;\n  wire  T_5636;\n  wire  T_5637;\n  wire  T_5643;\n  wire  T_5647;\n  wire  T_5653;\n  wire  T_5656;\n  wire  T_5657;\n  wire  T_5663;\n  wire  T_5667;\n  wire  T_5673;\n  wire  T_5676;\n  wire  T_5677;\n  wire  T_5683;\n  wire  T_5687;\n  wire  T_5693;\n  wire  T_5696;\n  wire  T_5697;\n  wire  T_5703;\n  wire  T_5707;\n  wire  T_5713;\n  wire  T_5716;\n  wire  T_5717;\n  wire  T_5723;\n  wire  T_5727;\n  wire  T_5733;\n  wire  T_6137_0;\n  wire  T_6137_1;\n  wire  T_6137_2;\n  wire  T_6137_3;\n  wire  T_6137_4;\n  wire  T_6137_5;\n  wire  T_6137_6;\n  wire  T_6137_7;\n  wire  T_6137_8;\n  wire  T_6137_9;\n  wire  T_6137_10;\n  wire  T_6137_11;\n  wire  T_6137_12;\n  wire  T_6137_13;\n  wire  T_6137_14;\n  wire  T_6137_15;\n  wire  T_6137_16;\n  wire  T_6137_17;\n  wire  T_6137_18;\n  wire  T_6137_19;\n  wire  T_6137_20;\n  wire  T_6137_21;\n  wire  T_6137_22;\n  wire  T_6137_23;\n  wire  T_6137_24;\n  wire  T_6137_25;\n  wire  T_6137_26;\n  wire  T_6137_27;\n  wire  T_6137_28;\n  wire  T_6137_29;\n  wire  T_6137_30;\n  wire  T_6137_31;\n  wire [31:0] T_6208_0;\n  wire [31:0] T_6208_1;\n  wire [31:0] T_6208_2;\n  wire [31:0] T_6208_3;\n  wire [31:0] T_6208_4;\n  wire [31:0] T_6208_5;\n  wire [31:0] T_6208_6;\n  wire [31:0] T_6208_7;\n  wire [31:0] T_6208_8;\n  wire [31:0] T_6208_9;\n  wire [31:0] T_6208_10;\n  wire [31:0] T_6208_11;\n  wire [31:0] T_6208_12;\n  wire [31:0] T_6208_13;\n  wire [31:0] T_6208_14;\n  wire [31:0] T_6208_15;\n  wire [31:0] T_6208_16;\n  wire [31:0] T_6208_17;\n  wire [31:0] T_6208_18;\n  wire [31:0] T_6208_19;\n  wire [31:0] T_6208_20;\n  wire [31:0] T_6208_21;\n  wire [31:0] T_6208_22;\n  wire [31:0] T_6208_23;\n  wire [31:0] T_6208_24;\n  wire [31:0] T_6208_25;\n  wire [31:0] T_6208_26;\n  wire [31:0] T_6208_27;\n  wire [31:0] T_6208_28;\n  wire [31:0] T_6208_29;\n  wire [31:0] T_6208_30;\n  wire [31:0] T_6208_31;\n  wire  GEN_4;\n  wire  GEN_139;\n  wire  GEN_140;\n  wire  GEN_141;\n  wire  GEN_142;\n  wire  GEN_143;\n  wire  GEN_144;\n  wire  GEN_145;\n  wire  GEN_146;\n  wire  GEN_147;\n  wire  GEN_148;\n  wire  GEN_149;\n  wire  GEN_150;\n  wire  GEN_151;\n  wire  GEN_152;\n  wire  GEN_153;\n  wire  GEN_154;\n  wire  GEN_155;\n  wire  GEN_156;\n  wire  GEN_157;\n  wire  GEN_158;\n  wire  GEN_159;\n  wire  GEN_160;\n  wire  GEN_161;\n  wire  GEN_162;\n  wire  GEN_163;\n  wire  GEN_164;\n  wire  GEN_165;\n  wire  GEN_166;\n  wire  GEN_167;\n  wire  GEN_168;\n  wire  GEN_169;\n  wire [31:0] GEN_5;\n  wire [31:0] GEN_170;\n  wire [31:0] GEN_171;\n  wire [31:0] GEN_172;\n  wire [31:0] GEN_173;\n  wire [31:0] GEN_174;\n  wire [31:0] GEN_175;\n  wire [31:0] GEN_176;\n  wire [31:0] GEN_177;\n  wire [31:0] GEN_178;\n  wire [31:0] GEN_179;\n  wire [31:0] GEN_180;\n  wire [31:0] GEN_181;\n  wire [31:0] GEN_182;\n  wire [31:0] GEN_183;\n  wire [31:0] GEN_184;\n  wire [31:0] GEN_185;\n  wire [31:0] GEN_186;\n  wire [31:0] GEN_187;\n  wire [31:0] GEN_188;\n  wire [31:0] GEN_189;\n  wire [31:0] GEN_190;\n  wire [31:0] GEN_191;\n  wire [31:0] GEN_192;\n  wire [31:0] GEN_193;\n  wire [31:0] GEN_194;\n  wire [31:0] GEN_195;\n  wire [31:0] GEN_196;\n  wire [31:0] GEN_197;\n  wire [31:0] GEN_198;\n  wire [31:0] GEN_199;\n  wire [31:0] GEN_200;\n  wire [31:0] T_6245;\n  wire [1:0] T_6246;\n  wire [4:0] T_6248;\n  wire [2:0] T_6249;\n  wire [2:0] T_6260_opcode;\n  wire [1:0] T_6260_param;\n  wire [2:0] T_6260_size;\n  wire [4:0] T_6260_source;\n  wire  T_6260_sink;\n  wire [1:0] T_6260_addr_lo;\n  wire [31:0] T_6260_data;\n  wire  T_6260_error;\n  wire  swPinCtrl_0_oval;\n  wire  swPinCtrl_0_oe;\n  wire  swPinCtrl_0_ie;\n  wire  swPinCtrl_0_pue;\n  wire  swPinCtrl_0_ds;\n  wire  swPinCtrl_1_oval;\n  wire  swPinCtrl_1_oe;\n  wire  swPinCtrl_1_ie;\n  wire  swPinCtrl_1_pue;\n  wire  swPinCtrl_1_ds;\n  wire  swPinCtrl_2_oval;\n  wire  swPinCtrl_2_oe;\n  w"}
{"text": "ire  swPinCtrl_2_ie;\n  wire  swPinCtrl_2_pue;\n  wire  swPinCtrl_2_ds;\n  wire  swPinCtrl_3_oval;\n  wire  swPinCtrl_3_oe;\n  wire  swPinCtrl_3_ie;\n  wire  swPinCtrl_3_pue;\n  wire  swPinCtrl_3_ds;\n  wire  swPinCtrl_4_oval;\n  wire  swPinCtrl_4_oe;\n  wire  swPinCtrl_4_ie;\n  wire  swPinCtrl_4_pue;\n  wire  swPinCtrl_4_ds;\n  wire  swPinCtrl_5_oval;\n  wire  swPinCtrl_5_oe;\n  wire  swPinCtrl_5_ie;\n  wire  swPinCtrl_5_pue;\n  wire  swPinCtrl_5_ds;\n  wire  swPinCtrl_6_oval;\n  wire  swPinCtrl_6_oe;\n  wire  swPinCtrl_6_ie;\n  wire  swPinCtrl_6_pue;\n  wire  swPinCtrl_6_ds;\n  wire  swPinCtrl_7_oval;\n  wire  swPinCtrl_7_oe;\n  wire  swPinCtrl_7_ie;\n  wire  swPinCtrl_7_pue;\n  wire  swPinCtrl_7_ds;\n  wire  swPinCtrl_8_oval;\n  wire  swPinCtrl_8_oe;\n  wire  swPinCtrl_8_ie;\n  wire  swPinCtrl_8_pue;\n  wire  swPinCtrl_8_ds;\n  wire  swPinCtrl_9_oval;\n  wire  swPinCtrl_9_oe;\n  wire  swPinCtrl_9_ie;\n  wire  swPinCtrl_9_pue;\n  wire  swPinCtrl_9_ds;\n  wire  swPinCtrl_10_oval;\n  wire  swPinCtrl_10_oe;\n  wire  swPinCtrl_10_ie;\n  wire  swPinCtrl_10_pue;\n  wire  swPinCtrl_10_ds;\n  wire  swPinCtrl_11_oval;\n  wire  swPinCtrl_11_oe;\n  wire  swPinCtrl_11_ie;\n  wire  swPinCtrl_11_pue;\n  wire  swPinCtrl_11_ds;\n  wire  swPinCtrl_12_oval;\n  wire  swPinCtrl_12_oe;\n  wire  swPinCtrl_12_ie;\n  wire  swPinCtrl_12_pue;\n  wire  swPinCtrl_12_ds;\n  wire  swPinCtrl_13_oval;\n  wire  swPinCtrl_13_oe;\n  wire  swPinCtrl_13_ie;\n  wire  swPinCtrl_13_pue;\n  wire  swPinCtrl_13_ds;\n  wire  swPinCtrl_14_oval;\n  wire  swPinCtrl_14_oe;\n  wire  swPinCtrl_14_ie;\n  wire  swPinCtrl_14_pue;\n  wire  swPinCtrl_14_ds;\n  wire  swPinCtrl_15_oval;\n  wire  swPinCtrl_15_oe;\n  wire  swPinCtrl_15_ie;\n  wire  swPinCtrl_15_pue;\n  wire  swPinCtrl_15_ds;\n  wire  swPinCtrl_16_oval;\n  wire  swPinCtrl_16_oe;\n  wire  swPinCtrl_16_ie;\n  wire  swPinCtrl_16_pue;\n  wire  swPinCtrl_16_ds;\n  wire  swPinCtrl_17_oval;\n  wire  swPinCtrl_17_oe;\n  wire  swPinCtrl_17_ie;\n  wire  swPinCtrl_17_pue;\n  wire  swPinCtrl_17_ds;\n  wire  swPinCtrl_18_oval;\n  wire  swPinCtrl_18_oe;\n  wire  swPinCtrl_18_ie;\n  wire  swPinCtrl_18_pue;\n  wire  swPinCtrl_18_ds;\n  wire  swPinCtrl_19_oval;\n  wire  swPinCtrl_19_oe;\n  wire  swPinCtrl_19_ie;\n  wire  swPinCtrl_19_pue;\n  wire  swPinCtrl_19_ds;\n  wire  swPinCtrl_20_oval;\n  wire  swPinCtrl_20_oe;\n  wire  swPinCtrl_20_ie;\n  wire  swPinCtrl_20_pue;\n  wire  swPinCtrl_20_ds;\n  wire  swPinCtrl_21_oval;\n  wire  swPinCtrl_21_oe;\n  wire  swPinCtrl_21_ie;\n  wire  swPinCtrl_21_pue;\n  wire  swPinCtrl_21_ds;\n  wire  swPinCtrl_22_oval;\n  wire  swPinCtrl_22_oe;\n  wire  swPinCtrl_22_ie;\n  wire  swPinCtrl_22_pue;\n  wire  swPinCtrl_22_ds;\n  wire  swPinCtrl_23_oval;\n  wire  swPinCtrl_23_oe;\n  wire  swPinCtrl_23_ie;\n  wire  swPinCtrl_23_pue;\n  wire  swPinCtrl_23_ds;\n  wire  swPinCtrl_24_oval;\n  wire  swPinCtrl_24_oe;\n  wire  swPinCtrl_24_ie;\n  wire  swPinCtrl_24_pue;\n  wire  swPinCtrl_24_ds;\n  wire  swPinCtrl_25_oval;\n  wire  swPinCtrl_25_oe;\n  wire  swPinCtrl_25_ie;\n  wire  swPinCtrl_25_pue;\n  wire  swPinCtrl_25_ds;\n  wire  swPinCtrl_26_oval;\n  wire  swPinCtrl_26_oe;\n  wire  swPinCtrl_26_ie;\n  wire  swPinCtrl_26_pue;\n  wire  swPinCtrl_26_ds;\n  wire  swPinCtrl_27_oval;\n  wire  swPinCtrl_27_oe;\n  wire  swPinCtrl_27_ie;\n  wire  swPinCtrl_27_pue;\n  wire  swPinCtrl_27_ds;\n  wire  swPinCtrl_28_oval;\n  wire  swPinCtrl_28_oe;\n  wire  swPinCtrl_28_ie;\n  wire  swPinCtrl_28_pue;\n  wire  swPinCtrl_28_ds;\n  wire  swPinCtrl_29_oval;\n  wire  swPinCtrl_29_oe;\n  wire  swPinCtrl_29_ie;\n  wire  swPinCtrl_29_pue;\n  wire  swPinCtrl_29_ds;\n  wire  swPinCtrl_30_oval;\n  wire  swPinCtrl_30_oe;\n  wire  swPinCtrl_30_ie;\n  wire  swPinCtrl_30_pue;\n  wire  swPinCtrl_30_ds;\n  wire  swPinCtrl_31_oval;\n  wire  swPinCtrl_31_oe;\n  wire  swPinCtrl_31_ie;\n  wire  swPinCtrl_31_pue;\n  wire  swPinCtrl_31_ds;\n  wire  iof0Ctrl_0_oval;\n  wire  iof0Ctrl_0_oe;\n  wire  iof0Ctrl_0_ie;\n  wire  iof0Ctrl_1_oval;\n  wire  iof0Ctrl_1_oe;\n  wire  iof0Ctrl_1_ie;\n  wire  iof0Ctrl_2_oval;\n  wire  iof0Ctrl_2_oe;\n  wire  iof0Ctrl_2_ie;\n  wire  iof0Ctrl_3_oval;\n  wire  iof0Ctrl_3_oe;\n  wire  iof0Ctrl_3_ie;\n  wire  iof0Ctrl_4_oval;\n  wire  iof0Ctrl_4_oe;\n  wire  iof0Ctrl_4_ie;\n  wire  iof0Ctrl_5_oval;\n  wire  iof0Ctrl_5_oe;\n  wire  iof0Ctrl_5_ie;\n  wire  iof0Ctrl_6_oval;\n  wire  iof0Ctrl_6_oe;\n  wire  iof0Ctrl_6_ie;\n  wire  iof0Ctrl_7_oval;\n  wire  iof0Ctrl_7_oe;\n  wire  iof0Ctrl_7_ie;\n  wire  iof0Ctrl_8_oval;\n  wire  iof0Ctrl_8_oe;\n  wire  iof0Ctrl_8_ie;\n  wire  iof0Ctrl_9_oval;\n  wire  iof0Ctrl_9_oe;\n  wire  iof0Ctrl_9_ie;\n  wire  iof0Ctrl_10_oval;\n  wire  iof0Ctrl_10_oe;\n  wire  iof0Ctrl_10_ie;\n  wire  iof0Ctrl_11_oval;\n  wire  iof0Ctrl_11_oe;\n  wire  iof0Ctrl_11_ie;\n  wire  iof0Ctrl_12_oval;\n  wire  iof0Ctrl_12_oe;\n  wire  iof0Ctrl_12_ie;\n  wire  iof0Ctrl_13_oval;\n  wire  iof0Ctrl_13_oe;\n  wire  iof0Ctrl_13_ie;\n  wire  iof0Ctrl_14_oval;\n  wire  iof0Ctrl_14_oe;\n  wire  iof0Ctrl_14_ie;\n  wire  iof0Ctrl_15_oval;\n  wire  iof0Ctrl_15_oe;\n  wire  iof0Ctrl_15_ie;\n  wire  iof0Ctrl_16_oval;\n  wire  iof0Ctrl_16_oe;\n  wire  iof0Ctrl_16_ie;\n  wire  iof0Ctrl_17_oval;\n  wire  iof0Ctrl_17_oe;\n  wire  iof0Ctrl_17_ie;\n  wire  iof0Ctrl_18_oval;\n  wire  iof0Ctrl_18_oe;\n  wire  iof0Ctrl_18_ie;\n  wire  iof0Ctrl_19_oval;\n  wire  iof0Ctrl_19_oe;\n  wire  iof0Ctrl_19_ie;\n  wire  iof0Ctrl_20_oval;\n  wire  iof0Ctrl_20_oe;\n  wire  iof0Ctrl_20_ie;\n  wire  iof0Ctrl_21_oval;\n  wire  iof0Ctrl_21_oe;\n  wire  iof0Ctrl_21_ie;\n  wire  iof0Ctrl_22_oval;\n  wire  iof0Ctrl_22_oe;\n  wire  iof0Ctrl_22_ie;\n  wire  iof0Ctrl_23_oval;\n  wire  iof0Ctrl_23_oe;\n  wire  iof0Ctrl_23_ie;\n  wire  iof0Ctrl_24_oval;\n  wire  iof0Ctrl_24_oe;\n  wire  iof0Ctrl_24_ie;\n  wire  iof0Ctrl_25_oval;\n  wire  iof0Ctrl_25_oe;\n  wire  iof0Ctrl_25_ie;\n  wire  iof0Ctrl_26_oval;\n  wire  iof0Ctrl_26_oe;\n  wire  iof0Ctrl_26_ie;\n  wire  iof0Ctrl_27_oval;\n  wire  iof0Ctrl_27_oe;\n  wire  iof0Ctrl_27_ie;\n  wire  iof0Ctrl_28_oval;\n  wire  iof0Ctrl_28_oe;\n  wire  iof0Ctrl_28_ie;\n  wire  iof0Ctrl_29_oval;\n  wire  iof0Ctrl_29_oe;\n  wire  iof0Ctrl_29_ie;\n  wire  iof0Ctrl_30_oval;\n  wire  iof0Ctrl_30_oe;\n  wire  iof0Ctrl_30_ie;\n  wire  iof0Ctrl_31_oval;\n  wire  iof0Ctrl_31_oe;\n  wire  iof0Ctrl_31_ie;\n  wire  iof1Ctrl_0_oval;\n  wire  iof1Ctrl_0_oe;\n  wire  iof1Ctrl_0_ie;\n  wire  iof1Ctrl_1_oval;\n  wire  iof1Ctrl_1_oe;\n  wire  iof1Ctrl_1_ie;\n  wire  iof1Ctrl_2_oval;\n  wire  iof1Ctrl_2_oe;\n  wire  iof1Ctrl_2_ie;\n  wire  iof1Ctrl_3_oval;\n  wire  iof1Ctrl_3_oe;\n  wire  iof1Ctrl_3_ie;\n  wire  iof1Ctrl_4_oval;\n  wire  iof1Ctrl_4_oe;\n  wire  iof1Ctrl_4_ie;\n  wire  iof1Ctrl_5_oval;\n  wire  iof1Ctrl_5_oe;\n  wire  iof1Ctrl_5_ie;\n  wire  iof1Ctrl_6_oval;\n  wire  iof1Ctrl_6_oe;\n  wire  iof1Ctrl_6_ie;\n  wire  iof1Ctrl_7_oval;\n  wire  iof1Ctrl_7_oe;\n  wire  iof1Ctrl_7_ie;\n  wire  iof1Ctrl_8_oval;\n  wire  iof1Ctrl_8_oe;\n  wire  iof1Ctrl_8_ie;\n  wire  iof1Ctrl_9_oval;\n  wire  iof1Ctrl_9_oe;\n  wire  iof1Ctrl_9_ie;\n  wire  iof1Ctrl_10_oval;\n  wire  iof1Ctrl_10_oe;\n  wire  iof1Ctrl_10_ie;\n  wire  iof1Ctrl_11_oval;\n  wire  iof1Ctrl_11_oe;\n  wire  iof1Ctrl_11_ie;\n  wire  iof1Ctrl_12_oval;\n  wire  iof1Ctrl_12_oe;\n  wire  iof1Ctrl_12_ie;\n  wire  iof1Ctrl_13_oval;\n  wire  iof1Ctrl_13_oe;\n  wire  iof1Ctrl_13_ie;\n  wire  iof1Ctrl_14_oval;\n  wire  iof1Ctrl_14_oe;\n  wire  iof1Ctrl_14_ie;\n  wire  iof1Ctrl_15_oval;\n  wire  iof1Ctrl_15_oe;\n  wire  iof1Ctrl_15_ie;\n  wire  iof1Ctrl_16_oval;\n  wire  iof1Ctrl_16_oe;\n  wire  iof1Ctrl_16_ie;\n  wire  iof1Ctrl_17_oval;\n  wire  iof1Ctrl_17_oe;\n  wire  iof1Ctrl_17_ie;\n  wire  iof1Ctrl_18_oval;\n  wire  iof1Ctrl_18_oe;\n  wire  iof1Ctrl_18_ie;\n  wire  iof1Ctrl_19_oval;\n  wire  iof1Ctrl_19_oe;\n  wire  iof1Ctrl_19_ie;\n  wire  iof1Ctrl_20_oval;\n  wire  iof1Ctrl_20_oe;\n  wire  iof1Ctrl_20_ie;\n  wire  iof1Ctrl_21_oval;\n  wire  iof1Ctrl_21_oe;\n  wire  iof1Ctrl_21_ie;\n  wire  iof1Ctrl_22_oval;\n  wire  iof1Ctrl_22_oe;\n  wire  iof1Ctrl_22_ie;\n  wire  iof1Ctrl_23_oval;\n  wire  iof1Ctrl_23_oe;\n  wire  iof1Ctrl_23_ie;\n  wire  iof1Ctrl_24_oval;\n  wire  iof1Ctrl_24_oe;\n  wire  iof1Ctrl_24_ie;\n  wire  iof1Ctrl_25_oval;\n  wire  iof1Ctrl_25_oe;\n  wire  iof1Ctrl_25_ie;\n  wire  iof1Ctrl_26_oval;\n  wire  iof1Ctrl_26_oe;\n  wire  iof1Ctrl_26_ie;\n  wire  iof1Ctrl_27_oval;\n  wire  iof1Ctrl_27_oe;\n  wire  iof1Ctrl_27_ie;\n  wire  iof1Ctrl_28_oval;\n  wire  iof1Ctrl_28_oe;\n  wire  iof1Ctrl_28_ie;\n  wire  iof1Ctrl_29_oval;\n  wire  iof1Ctrl_29_oe;\n  wire  iof1Ctrl_29_ie;\n  wire  iof1Ctrl_30_oval;\n  wire  iof1Ctrl_30_oe;\n  wire  iof1Ctrl_30_ie;\n  wire  iof1Ctrl_31_oval;\n  wire  iof1Ctrl_31_oe;\n  wire  iof1Ctrl_31_ie;\n  wire  iofCtrl_0_oval;\n  wire  iofCtrl_0_oe;\n  wire  iofCtrl_0_ie;\n  wire  iofCtrl_1_oval;\n  wire  iofCtrl_1_oe;\n  wire  iofCtrl_1_ie;\n  wire  iofCtrl_2_oval;\n  wire  iofCtrl_2_oe;\n  wire  iofCtrl_2_ie;\n  wire  iofCtrl_3_oval;\n  wire  iofCtrl_3_oe;\n  wire  iofCtrl_3_ie;\n  wire  iofCtrl_4_oval;\n  wire  iofCtrl_4_oe;\n  wire  iofCtrl_4_ie;\n  wire  iofCtrl_5_oval;\n  wire  iofCtrl_5_oe;\n  wire  iofCtrl_5_ie;\n  wire  iofCtrl_6_oval;\n  wire  iofCtrl_6_oe;\n  wire  iofCtrl_6_ie;\n  wire  iofCtrl_7_oval;\n  wire  iofCtrl_7_oe;\n  wire  iofCtrl_7_ie;\n  wire  iofCtrl_8_oval;\n  wire  iofCtrl_8_oe;\n  wire  iofCtrl_8_ie;\n  wire  iofCtrl_9_oval;\n  wire  iofCtrl_9_oe;\n  wire  iofCtrl_9_ie;\n  wire  iofCtrl_10_oval;\n  wire  iofCtrl_10_oe;\n  wire  iofCtrl_10_ie;\n  wire  iofCtrl_11_oval;\n  wire  iofCtrl_11_oe;\n  wire  iofCtrl_11_ie;\n  wire  iofCtrl_12_oval;\n  wire  iofCtrl_12_oe;\n  wire  iofCtrl_12_ie;\n  wire  iofCtrl_13_oval;\n  wire  iofCtrl_13_oe;\n  wire  iofCtrl_13_ie;\n  wire  iofCtrl_14_oval;\n  wire  iofCtrl_14_oe;\n  wire  iofCtrl_14_ie;\n  wire  iofCtrl_15_oval;\n  wire  iofCtrl_15_oe;\n  wire  iofCtrl_15_ie;\n  wire  iofCtrl_16_oval;\n  wire  iofCtrl_16_oe;\n  wire  iofCtrl_16_ie;\n  wire  iofCtrl_17_oval;\n  wire  iofCtrl_17_oe;\n  wire  iofCtrl_17_ie;\n  wire  iofCtrl_18_oval;\n  wire  iofCtrl_18_oe;\n  wire  iofCtrl_18_ie;\n  wire  iofCtrl_19_oval;\n  wire  iofCtrl_19_oe;\n  wire  iofCtrl_19_ie;\n  wire  iofCtrl_20_oval;\n  wire  iofCtrl_20_oe;\n  wire  iofCtrl_20_ie;\n  wire  iofCtrl_21_oval;\n  wire  iofCtrl_21_oe;\n  wire  iofCtrl_21_ie;\n  wire  iofCtrl_22_oval;\n  wire  iofCtrl_22_oe;\n  wire  iofCtrl_22_ie;\n  wire  iofCtrl_23_oval;\n  wire  iofCtrl_23_oe;\n  wire  iofCtrl_23_ie;\n  wire  iofCtrl_24_oval;\n  wire  iofCtrl_24_oe;\n  wire  iofCtrl_24_ie;\n  wire  iofCtrl_25_oval;\n  wire  iofCtrl_25_oe;\n  wire  iofCtrl_25_ie;\n  wire  iofCtrl_26_oval;\n  wire  iofCtrl_26_oe;\n  wire  iofCtrl_26_ie;\n  wire  iofCtrl_27_oval;\n  wire  iofCtrl_27_oe;\n  wire  iofCtrl_27_ie;\n  wire  iofCtrl_28_oval;\n  wire  iofCtrl_28_oe;\n  wire  iofCtrl_28_ie;\n  wire  iofCtrl_29_oval;\n  wire  iofCtrl_29_oe;\n  wire  iofCtrl_29_ie;\n  wire  iofCtrl_30_oval;\n  wire  iofCtrl_30_oe;\n  wire  iofCtrl_30_ie;\n  wire  iofCtrl_31_oval;\n  wire  iofCtrl_31_oe;\n  wire  iofCtrl_31_ie;\n  wire  iofPlusSwPinCtrl_0_oval;\n  wire  iofPlusSwPinCtrl_0_oe;\n  wire  iofPlusSwPinCtrl_0_ie;\n  wire  iofPlusSwPinCtrl_0_pue;\n  wire  iofPlusSwPinCtrl_0_ds;\n  wire  iofPlusSwPinCtrl_1_oval;\n  wire  iofPlusSwPinCtrl_1_oe;\n  wire  iofPlusSwPinCtrl_1_ie;\n  wire  iofPlusSwPinCtrl_1_pue;\n  wire  iofPlusSwPinCtrl_1_ds;\n  wire  iofPlusSwPinCtrl_2_oval;\n  wire  iofPlusSwPinCtrl_2_oe;\n  wire  iofPlusSwPinCtrl_2_ie;\n  wire  iofPlusSwPinCtrl_2_pue;\n  wire  iofPlusSwPinCtrl_2_ds;\n  wire  iofPlusSwPinCtrl_3_oval;\n  wire  iofPlusSwPinCtrl_3_oe;\n  wire  iofPlusSwPinCtrl_3_ie;\n  wire  iofPlusSwPinCtrl_3_pue;\n  wire  iofPlusSwPinCtrl_3_ds;\n  wire  iofPlusSwPinCtrl_4_oval;\n  wire  iofPlusSwPinCtrl_4_oe;\n  wire  iofPlusSwPinCtrl_4_ie;\n  wire  iofPlusSwPinCtrl_4_pue;\n  wire  iofPlusSwPinCtrl_4_ds;\n  wire  iofPlusSwPinCtrl_5_oval;\n  wire  iofPlusSwPinCtrl_5_oe;\n  wire  iofPlusSwPinCtrl_5_ie;\n  wire  iofPlusSwPinCtrl_5_pue;\n  wire  iofPlusSwPinCtrl_5_ds;\n  wire  iofPlusSwPinCtrl_6_oval;\n  wire  iofPlusSwPinCtrl_6_oe;\n  wire  iofPlusSwPinCtrl_6_ie;\n  wire  iofPlusSwPinCtrl_6_pue;\n  wire  iofPlusSwPinCtrl_6_ds;\n  wire  iofPlusSwPinCtrl_7_oval;\n  wire  iofPlusSwPinCtrl_7_oe;\n  wire  iofPlusSwPinCtrl_7_ie;\n  wire  iofPlusSwPinCtrl_7_pue;\n  wire  iofPlusSwPinCtrl_7_ds;\n  wire  iofPlusSwPinCtrl_8_oval;\n  wire  iofPlusSwPinCtrl_8_oe;\n  wire  iofPlusSwPinCtrl_8_ie;\n  wire  iofPlusSwPinCtrl_8_pue;\n  wire  iofPlusSwPinCtrl_8_ds;\n  wire  iofPlusSwPinCtrl_9_oval;\n  wire  iofPlusSwPinCtrl_9_oe;\n  wire  iofPlusSwPinCtrl_9_ie;\n  wire  iofPlusSwPinCtrl_9_pue;\n  wire  iofPlusSwPinCtrl_9_ds;\n  wire  iofPlusSwPinCtrl_10_oval;\n  wire  iofPlusSwPinCtrl_10_oe;\n  wire  iofPlusSwPinCtrl_10_ie;\n  wire  iofPlusSwPinCtrl_10_pue;\n  wire  iofPlusSwPinCtrl_10_ds;\n  wire  iofPlusSwPinCtrl_11_oval;\n  wire  iofPlusSwPinCtrl_11_oe;\n  wire  iofPlusSwPinCtrl_11_ie;\n  wire  iofPlusSwPinCtrl_11_pue;\n  wire  iofPlusSwPinCtrl_11_ds;\n  wire  iofPlusSwPinCtrl_12_oval;\n  wire  iofPlusSwPinCtrl_12_oe;\n  wire  iofPlusSwPinCtrl_12_ie;\n  wire  iofPlusSwPinCtrl_12_pue;\n  wire  iofPlusSwPinCtrl_12_ds;\n  wire  iofPlusSwPinCtrl_13_oval;\n  wire  iofPlusSwPinCtrl_13_oe;\n  wire  iofPlusSwPinCtrl_13_ie;\n  wire  iofPlusSwPinCtrl_13_pue;\n  wire  iofPlusSwPinCtrl_13_ds;\n  wire  iofPlusSwPinCtrl_14_oval;\n  wire  iofPlusSwPinCtrl_14_oe;\n  wire  iofPlusSwPinCtrl_14_ie;\n  wire  iofPlusSwPinCtrl_14_pue;\n  wire  iofPlusSwPinCtrl_14_ds;\n  wire  iofPlusSwPinCtrl_15_oval;\n  wire  iofPlusSwPinCtrl_15_oe;\n  wire  iofPlusSwPinCtrl_15_ie;\n  wire  iofPlusSwPinCtrl_15_pue;\n  wire  iofPlusSwPinCtrl_15_ds;\n  wire  iofPlusSwPinCtrl_16_oval;\n  wire  iofPlusSwPinCtrl_16_oe;\n  wire  iofPlusSwPinCtrl_16_ie;\n  wire  iofPlusSwPinCtrl_16_pue;\n  wire  iofPlusSwPinCtrl_16_ds;\n  wire  iofPlusSwPinCtrl_17_oval;\n  wire  iofPlusSwPinCtrl_17_oe;\n  wire  iofPlusSwPinCtrl_17_ie;\n  wire  iofPlusSwPinCtrl_17_pue;\n  wire  iofPlusSwPinCtrl_17_ds;\n  wire  iofPlusSwPinCtrl_18_oval;\n  wire  iofPlusSwPinCtrl_18_oe;\n  wire  iofPlusSwPinCtrl_18_ie;\n  wire  iofPlusSwPinCtrl_18_pue;\n  wire  iofPlusSwPinCtrl_18_ds;\n  wire  iofPlusSwPinCtrl_19_oval;\n  wire  iofPlusSwPinCtrl_19_oe;\n  wire  iofPlusSwPinCtrl_19_ie;\n  wire  iofPlusSwPinCtrl_19_pue;\n  wire  iofPlusSwPinCtrl_19_ds;\n  wire  iofPlusSwPinCtrl_20_oval;\n  wire  iofPlusSwPinCtrl_20_oe;\n  wire  iofPlusSwPinCtrl_20_ie;\n  wire  iofPlusSwPinCtrl_20_pue;\n  wire  iofPlusSwPinCtrl_20_ds;\n  wire  iofPlusSwPinCtrl_21_oval;\n  wire  iofPlusSwPinCtrl_21_oe;\n  wire  iofPlusSwPinCtrl_21_ie;\n  wire  iofPlusSwPinCtrl_21_pue;\n  wire  iofPlusSwPinCtrl_21_ds;\n  wire  iofPlusSwPinCtrl_22_oval;\n  wire  iofPlusSwPinCtrl_22_oe;\n  wire  iofPlusSwPinCtrl_22_ie;\n  wire  iofPlusSwPinCtrl_22_pue;\n  wire  iofPlusSwPinCtrl_22_ds;\n  wire  iofPlusSwPinCtrl_23_oval;\n  wire  iofPlusSwPinCtrl_23_oe;\n  wire  iofPlusSwPinCtrl_23_ie;\n  wire  iofPlusSwPinCtrl_23_pue;\n  wire  iofPlusSwPinCtrl_23_ds;\n  wire  iofPlusSwPinCtrl_24_oval;\n  wire  iofPlusSwPinCtrl_24_oe;\n  wire  iofPlusSwPinCtrl_24_ie;\n  wire  iofPlusSwPinCtrl_24_pue;\n  wire  iofPlusSwPinCtrl_24_ds;\n  wire  iofPlusSwPinCtrl_25_oval;\n  wire  iofPlusSwPinCtrl_25_oe;\n  wire  iofPlusSwPinCtrl_25_ie;\n  wire  iofPlusSwPinCtrl_25_pue;\n  wire  iofPlusSwPinCtrl_25_ds;\n  wire  iofPlusSwPinCtrl_26_oval;\n  wire  iofPlusSwPinCtrl_26_oe;\n  wire  iofPlusSwPinCtrl_26_ie;\n  wire  iofPlusSwPinCtrl_26_pue;\n  wire  iofPlusSwPinCtrl_26_ds;\n  wire  iofPlusSwPinCtrl_27_oval;\n  wire  iofPlusSwPinCtrl_27_oe;\n  wire  iofPlusSwPinCtrl_27_ie;\n  wire  iofPlusSwPinCtrl_27_pue;\n  wire  iofPlusSwPinCtrl_27_ds;\n  wire  iofPlusSwPinCtrl_28_oval;\n  wire  iofPlusSwPinCtrl_28_oe;\n  wire  iofPlusSwPinCtrl_28_ie;\n  wire  iofPlusSwPinCtrl_28_pue;\n  wire  iofPlusSwPinCtrl_28_ds;\n  wire  iofPlusSwPinCtrl_29_oval;\n  wire  iofPlusSwPinCtrl_29_oe;\n  wire  iofPlusSwPinCtrl_29_ie;\n  wire  iofPlusSwPinCtrl_29_pue;\n  wire  iofPlusSwPinCtrl_29_ds;\n  wire  iofPlusSwPinCtrl_30_oval;\n  wire  iofPlusSwPinCtrl_30_oe;\n  wire  iofPlusSwPinCtrl_30_ie;\n  wire  iofPlusSwPinCtrl_30_pue;\n  wire  iofPlusSwPinCtrl_30_ds;\n  wire  iofPlusSwPinCtrl_31_oval;\n  wire  iofPlusSwPinCtrl_31_oe;\n  wire  iofPlusSwPinCtrl_31_ie;\n  wire  iofPlusSwPinCtrl_31_pue;\n  wire  iofPlusSwPinCtrl_31_ds;\n  wire  T_7569;\n  wire  T_7570;\n  wire  T_7571;\n  wire  T_7572;\n  wire  T_7573;\n  wire  GEN_201;\n  wire  GEN_202;\n  wire  GEN_203;\n  wire  GEN_204;\n  wire  GEN_205;\n  wire  GEN_206;\n  wire  T_7574;\n  wire  T_7575_oval;\n  wire  T_7575_oe;\n  wire  T_7575_ie;\n  wire  T_7579;\n  wire  T_7580_oval;\n  wire  T_7580_oe;\n  wire  T_7580_ie;\n  wire  T_7580_pue;\n  wire  T_7580_ds;\n  wire  T_7586;\n  wire  T_7587;\n  wire  T_7588;\n  wire  T_7589;\n  wire  T_7590;\n  wire  T_7591;\n  wire  T_7592;\n  wire  T_7593;\n  wire  T_7594;\n  wire  T_7595;\n  wire  T_7596;\n  wire  T_7597;\n  wire  T_7598;\n  wire  T_7599;\n  wire  T_7600;\n  wire  T_7601;\n  wire  T_7602;\n  wire  T_7603;\n  wire  T_7605;\n  wire  T_7606;\n  wire  T_7607;\n  wire  T_7608;\n  wire  T_7609;\n  wire  GEN_207;\n  wire  GEN_208;\n  wire  GEN_209;\n  wire  GEN_210;\n  wire  GEN_211;\n  wire  GEN_212;\n  wire  T_7610;\n  wire  T_7611_oval;\n  wire  T_7611_oe;\n  wire  T_7611_ie;\n  wire  T_7615;\n  wire  T_7616_oval;\n  wire  T_7616_oe;\n  wire  T_7616_ie;\n  wire  T_7616_pue;\n  wire  T_7616_ds;\n  wire  T_7622;\n  wire  T_7623;\n  wire  T_7624;\n  wire  T_7625;\n  wire  T_7626;\n  wire  T_7627;\n  wire  T_7628;\n  wire  T_7629;\n  wire  T_7630;\n  wire  T_7631;\n  wire  T_7632;\n  wire  T_7633;\n  wire  T_7634;\n  wire  T_7635;\n  wire  T_7636;\n  wire  T_7637;\n  wire  T_7638;\n  wire  T_7639;\n  wire  T_7641;\n  wire  T_7642;\n  wire  T_7643;\n  wire  T_7644;\n  wire  T_7645;\n  wire  GEN_213;\n  wire  GEN_214;\n  wire  GEN_215;\n  wire  GEN_216;\n  wire  GEN_217;\n  wire  GEN_218;\n  wire  T_7646;\n  wire  T_7647_oval;\n  wire  T_7647_oe;\n  wire  T_7647_ie;\n  wire  T_7651;\n  wire  T_7652_oval;\n  wire  T_7652_oe;\n  wire  T_7652_ie;\n  wire  T_7652_pue;\n  wire  T_7652_ds;\n  wire  T_7658;\n  wire  T_7659;\n  wire  T_7660;\n  wire  T_7661;\n  wire  T_7662;\n  wire  T_7663;\n  wire  T_7664;\n  wire  T_7665;\n  wire  T_7666;\n  wire  T_7667;\n  wire  T_7668;\n  wire  T_7669;\n  wire  T_7670;\n  wire  T_7671;\n  wire  T_7672;\n  wire  T_7673;\n  wire  T_7674;\n  wire  T_7675;\n  wire  T_7677;\n  wire  T_7678;\n  wire  T_7679;\n  wire  T_7680;\n  wire  T_7681;\n  wire  GEN_219;\n  wire  GEN_220;\n  wire  GEN_221;\n  wire  GEN_222;\n  wire  GEN_223;\n  wire  GEN_224;\n  wire  T_7682;\n  wire  T_7683_oval;\n  wire  T_7683_oe;\n  wire  T_7683_ie;\n  wire  T_7687;\n  wire  T_7688_oval;\n  wire  T_7688_oe;\n  wire  T_7688_ie;\n  wire  T_7688_pue;\n  wire  T_7688_ds;\n  wire  T_7694;\n  wire  T_7695;\n  wire  T_7696;\n  wire  T_7697;\n  wire  T_7698;\n  wire  T_7699;\n  wire  T_7700;\n  wire  T_7701;\n  wire  T_7702;\n  wire  T_7703;\n  wire  T_7704;\n  wire  T_7705;\n  wire  T_7706;\n  wire  T_7707;\n  wire  T_7708;\n  wire  T_7709;\n  wire  T_7710;\n  wire  T_7711;\n  wire  T_7713;\n  wire  T_7714;\n  wire  T_7715;\n  wire  T_7716;\n  wire  T_7717;\n  wire  GEN_225;\n  wire  GEN_226;\n  wire  GEN_227;\n  wire  GEN_228;\n  wire  GEN_229;\n  wire  GEN_230;\n  wire  T_7718;\n  wire  T_7719_oval;\n  wire  T_7719_oe;\n  wire  T_7719_ie;\n  wire  T_7723;\n  wire  T_7724_oval;\n  wire  T_7724_oe;\n  wire  T_7724_ie;\n  wire  T_7724_pue;\n  wire  T_7724_ds;\n  wire  T_7730;\n  wire  T_7731;\n  wire  T_7732;\n  wire  T_7733;\n  wire  T_7734;\n  wire  T_7735;\n  wire  T_7736;\n  wire  T_7737;\n  wire  T_7738;\n  wire  T_7739;\n  wire  T_7740;\n  wire  T_7741;\n  wire  T_7742;\n  wire  T_7743;\n  wire  T_7744;\n  wire  T_7745;\n  wire  T_7746;\n  wire  T_7747;\n  wire  T_7749;\n  wire  T_7750;\n  wire  T_7751;\n  wire  T_7752;\n  wire  T_7753;\n  wire  GEN_231;\n  wire  GEN_232;\n  wire  GEN_233;\n  wire  GEN_234;\n  wire  GEN_235;\n  wire  GEN_236;\n  wire  T_7754;\n  wire  T_7755_oval;\n  wire  T_7755_oe;\n  wire  T_7755_ie;\n  wire  T_7759;\n  wire  T_7760_oval;\n  wire  T_7760_oe;\n  wire  T_7760_ie;\n  wire  T_7760_pue;\n  wire  T_7760_ds;\n  wire  T_7766;\n  wire  T_7767;\n  wire  T_7768;\n  wire  T_7769;\n  wire  T_7770;\n  wire  T_7771;\n  wire  T_7772;\n  wire  T_7773;\n  wire  T_7774;\n  wire  T_7775;\n  wire  T_7776;\n  wire  T_7777;\n  wire  T_7778;\n  wire  T_7779;\n  wire  T_7780;\n  wire  T_7781;\n  wire  T_7782;\n  wire  T_7783;\n  wire  T_7785;\n  wire  T_7786;\n  wire  T_7787;\n  wire  T_7788;\n  wire  T_7789;\n  wire  GEN_237;\n  wire  GEN_238;\n  wire  GEN_239;\n  wire  GEN_240;\n  wire  GEN_241;\n  wire  GEN_242;\n  wire  T_7790;\n  wire  T_7791_ov"}
{"text": "al;\n  wire  T_7791_oe;\n  wire  T_7791_ie;\n  wire  T_7795;\n  wire  T_7796_oval;\n  wire  T_7796_oe;\n  wire  T_7796_ie;\n  wire  T_7796_pue;\n  wire  T_7796_ds;\n  wire  T_7802;\n  wire  T_7803;\n  wire  T_7804;\n  wire  T_7805;\n  wire  T_7806;\n  wire  T_7807;\n  wire  T_7808;\n  wire  T_7809;\n  wire  T_7810;\n  wire  T_7811;\n  wire  T_7812;\n  wire  T_7813;\n  wire  T_7814;\n  wire  T_7815;\n  wire  T_7816;\n  wire  T_7817;\n  wire  T_7818;\n  wire  T_7819;\n  wire  T_7821;\n  wire  T_7822;\n  wire  T_7823;\n  wire  T_7824;\n  wire  T_7825;\n  wire  GEN_243;\n  wire  GEN_244;\n  wire  GEN_245;\n  wire  GEN_246;\n  wire  GEN_247;\n  wire  GEN_248;\n  wire  T_7826;\n  wire  T_7827_oval;\n  wire  T_7827_oe;\n  wire  T_7827_ie;\n  wire  T_7831;\n  wire  T_7832_oval;\n  wire  T_7832_oe;\n  wire  T_7832_ie;\n  wire  T_7832_pue;\n  wire  T_7832_ds;\n  wire  T_7838;\n  wire  T_7839;\n  wire  T_7840;\n  wire  T_7841;\n  wire  T_7842;\n  wire  T_7843;\n  wire  T_7844;\n  wire  T_7845;\n  wire  T_7846;\n  wire  T_7847;\n  wire  T_7848;\n  wire  T_7849;\n  wire  T_7850;\n  wire  T_7851;\n  wire  T_7852;\n  wire  T_7853;\n  wire  T_7854;\n  wire  T_7855;\n  wire  T_7857;\n  wire  T_7858;\n  wire  T_7859;\n  wire  T_7860;\n  wire  T_7861;\n  wire  GEN_249;\n  wire  GEN_250;\n  wire  GEN_251;\n  wire  GEN_252;\n  wire  GEN_253;\n  wire  GEN_254;\n  wire  T_7862;\n  wire  T_7863_oval;\n  wire  T_7863_oe;\n  wire  T_7863_ie;\n  wire  T_7867;\n  wire  T_7868_oval;\n  wire  T_7868_oe;\n  wire  T_7868_ie;\n  wire  T_7868_pue;\n  wire  T_7868_ds;\n  wire  T_7874;\n  wire  T_7875;\n  wire  T_7876;\n  wire  T_7877;\n  wire  T_7878;\n  wire  T_7879;\n  wire  T_7880;\n  wire  T_7881;\n  wire  T_7882;\n  wire  T_7883;\n  wire  T_7884;\n  wire  T_7885;\n  wire  T_7886;\n  wire  T_7887;\n  wire  T_7888;\n  wire  T_7889;\n  wire  T_7890;\n  wire  T_7891;\n  wire  T_7893;\n  wire  T_7894;\n  wire  T_7895;\n  wire  T_7896;\n  wire  T_7897;\n  wire  GEN_255;\n  wire  GEN_256;\n  wire  GEN_257;\n  wire  GEN_258;\n  wire  GEN_259;\n  wire  GEN_260;\n  wire  T_7898;\n  wire  T_7899_oval;\n  wire  T_7899_oe;\n  wire  T_7899_ie;\n  wire  T_7903;\n  wire  T_7904_oval;\n  wire  T_7904_oe;\n  wire  T_7904_ie;\n  wire  T_7904_pue;\n  wire  T_7904_ds;\n  wire  T_7910;\n  wire  T_7911;\n  wire  T_7912;\n  wire  T_7913;\n  wire  T_7914;\n  wire  T_7915;\n  wire  T_7916;\n  wire  T_7917;\n  wire  T_7918;\n  wire  T_7919;\n  wire  T_7920;\n  wire  T_7921;\n  wire  T_7922;\n  wire  T_7923;\n  wire  T_7924;\n  wire  T_7925;\n  wire  T_7926;\n  wire  T_7927;\n  wire  T_7929;\n  wire  T_7930;\n  wire  T_7931;\n  wire  T_7932;\n  wire  T_7933;\n  wire  GEN_261;\n  wire  GEN_262;\n  wire  GEN_263;\n  wire  GEN_264;\n  wire  GEN_265;\n  wire  GEN_266;\n  wire  T_7934;\n  wire  T_7935_oval;\n  wire  T_7935_oe;\n  wire  T_7935_ie;\n  wire  T_7939;\n  wire  T_7940_oval;\n  wire  T_7940_oe;\n  wire  T_7940_ie;\n  wire  T_7940_pue;\n  wire  T_7940_ds;\n  wire  T_7946;\n  wire  T_7947;\n  wire  T_7948;\n  wire  T_7949;\n  wire  T_7950;\n  wire  T_7951;\n  wire  T_7952;\n  wire  T_7953;\n  wire  T_7954;\n  wire  T_7955;\n  wire  T_7956;\n  wire  T_7957;\n  wire  T_7958;\n  wire  T_7959;\n  wire  T_7960;\n  wire  T_7961;\n  wire  T_7962;\n  wire  T_7963;\n  wire  T_7965;\n  wire  T_7966;\n  wire  T_7967;\n  wire  T_7968;\n  wire  T_7969;\n  wire  GEN_267;\n  wire  GEN_268;\n  wire  GEN_269;\n  wire  GEN_270;\n  wire  GEN_271;\n  wire  GEN_272;\n  wire  T_7970;\n  wire  T_7971_oval;\n  wire  T_7971_oe;\n  wire  T_7971_ie;\n  wire  T_7975;\n  wire  T_7976_oval;\n  wire  T_7976_oe;\n  wire  T_7976_ie;\n  wire  T_7976_pue;\n  wire  T_7976_ds;\n  wire  T_7982;\n  wire  T_7983;\n  wire  T_7984;\n  wire  T_7985;\n  wire  T_7986;\n  wire  T_7987;\n  wire  T_7988;\n  wire  T_7989;\n  wire  T_7990;\n  wire  T_7991;\n  wire  T_7992;\n  wire  T_7993;\n  wire  T_7994;\n  wire  T_7995;\n  wire  T_7996;\n  wire  T_7997;\n  wire  T_7998;\n  wire  T_7999;\n  wire  T_8001;\n  wire  T_8002;\n  wire  T_8003;\n  wire  T_8004;\n  wire  T_8005;\n  wire  GEN_273;\n  wire  GEN_274;\n  wire  GEN_275;\n  wire  GEN_276;\n  wire  GEN_277;\n  wire  GEN_278;\n  wire  T_8006;\n  wire  T_8007_oval;\n  wire  T_8007_oe;\n  wire  T_8007_ie;\n  wire  T_8011;\n  wire  T_8012_oval;\n  wire  T_8012_oe;\n  wire  T_8012_ie;\n  wire  T_8012_pue;\n  wire  T_8012_ds;\n  wire  T_8018;\n  wire  T_8019;\n  wire  T_8020;\n  wire  T_8021;\n  wire  T_8022;\n  wire  T_8023;\n  wire  T_8024;\n  wire  T_8025;\n  wire  T_8026;\n  wire  T_8027;\n  wire  T_8028;\n  wire  T_8029;\n  wire  T_8030;\n  wire  T_8031;\n  wire  T_8032;\n  wire  T_8033;\n  wire  T_8034;\n  wire  T_8035;\n  wire  T_8037;\n  wire  T_8038;\n  wire  T_8039;\n  wire  T_8040;\n  wire  T_8041;\n  wire  GEN_279;\n  wire  GEN_280;\n  wire  GEN_281;\n  wire  GEN_282;\n  wire  GEN_283;\n  wire  GEN_284;\n  wire  T_8042;\n  wire  T_8043_oval;\n  wire  T_8043_oe;\n  wire  T_8043_ie;\n  wire  T_8047;\n  wire  T_8048_oval;\n  wire  T_8048_oe;\n  wire  T_8048_ie;\n  wire  T_8048_pue;\n  wire  T_8048_ds;\n  wire  T_8054;\n  wire  T_8055;\n  wire  T_8056;\n  wire  T_8057;\n  wire  T_8058;\n  wire  T_8059;\n  wire  T_8060;\n  wire  T_8061;\n  wire  T_8062;\n  wire  T_8063;\n  wire  T_8064;\n  wire  T_8065;\n  wire  T_8066;\n  wire  T_8067;\n  wire  T_8068;\n  wire  T_8069;\n  wire  T_8070;\n  wire  T_8071;\n  wire  T_8073;\n  wire  T_8074;\n  wire  T_8075;\n  wire  T_8076;\n  wire  T_8077;\n  wire  GEN_285;\n  wire  GEN_286;\n  wire  GEN_287;\n  wire  GEN_288;\n  wire  GEN_289;\n  wire  GEN_290;\n  wire  T_8078;\n  wire  T_8079_oval;\n  wire  T_8079_oe;\n  wire  T_8079_ie;\n  wire  T_8083;\n  wire  T_8084_oval;\n  wire  T_8084_oe;\n  wire  T_8084_ie;\n  wire  T_8084_pue;\n  wire  T_8084_ds;\n  wire  T_8090;\n  wire  T_8091;\n  wire  T_8092;\n  wire  T_8093;\n  wire  T_8094;\n  wire  T_8095;\n  wire  T_8096;\n  wire  T_8097;\n  wire  T_8098;\n  wire  T_8099;\n  wire  T_8100;\n  wire  T_8101;\n  wire  T_8102;\n  wire  T_8103;\n  wire  T_8104;\n  wire  T_8105;\n  wire  T_8106;\n  wire  T_8107;\n  wire  T_8109;\n  wire  T_8110;\n  wire  T_8111;\n  wire  T_8112;\n  wire  T_8113;\n  wire  GEN_291;\n  wire  GEN_292;\n  wire  GEN_293;\n  wire  GEN_294;\n  wire  GEN_295;\n  wire  GEN_296;\n  wire  T_8114;\n  wire  T_8115_oval;\n  wire  T_8115_oe;\n  wire  T_8115_ie;\n  wire  T_8119;\n  wire  T_8120_oval;\n  wire  T_8120_oe;\n  wire  T_8120_ie;\n  wire  T_8120_pue;\n  wire  T_8120_ds;\n  wire  T_8126;\n  wire  T_8127;\n  wire  T_8128;\n  wire  T_8129;\n  wire  T_8130;\n  wire  T_8131;\n  wire  T_8132;\n  wire  T_8133;\n  wire  T_8134;\n  wire  T_8135;\n  wire  T_8136;\n  wire  T_8137;\n  wire  T_8138;\n  wire  T_8139;\n  wire  T_8140;\n  wire  T_8141;\n  wire  T_8142;\n  wire  T_8143;\n  wire  T_8145;\n  wire  T_8146;\n  wire  T_8147;\n  wire  T_8148;\n  wire  T_8149;\n  wire  GEN_297;\n  wire  GEN_298;\n  wire  GEN_299;\n  wire  GEN_300;\n  wire  GEN_301;\n  wire  GEN_302;\n  wire  T_8150;\n  wire  T_8151_oval;\n  wire  T_8151_oe;\n  wire  T_8151_ie;\n  wire  T_8155;\n  wire  T_8156_oval;\n  wire  T_8156_oe;\n  wire  T_8156_ie;\n  wire  T_8156_pue;\n  wire  T_8156_ds;\n  wire  T_8162;\n  wire  T_8163;\n  wire  T_8164;\n  wire  T_8165;\n  wire  T_8166;\n  wire  T_8167;\n  wire  T_8168;\n  wire  T_8169;\n  wire  T_8170;\n  wire  T_8171;\n  wire  T_8172;\n  wire  T_8173;\n  wire  T_8174;\n  wire  T_8175;\n  wire  T_8176;\n  wire  T_8177;\n  wire  T_8178;\n  wire  T_8179;\n  wire  T_8181;\n  wire  T_8182;\n  wire  T_8183;\n  wire  T_8184;\n  wire  T_8185;\n  wire  GEN_303;\n  wire  GEN_304;\n  wire  GEN_305;\n  wire  GEN_306;\n  wire  GEN_307;\n  wire  GEN_308;\n  wire  T_8186;\n  wire  T_8187_oval;\n  wire  T_8187_oe;\n  wire  T_8187_ie;\n  wire  T_8191;\n  wire  T_8192_oval;\n  wire  T_8192_oe;\n  wire  T_8192_ie;\n  wire  T_8192_pue;\n  wire  T_8192_ds;\n  wire  T_8198;\n  wire  T_8199;\n  wire  T_8200;\n  wire  T_8201;\n  wire  T_8202;\n  wire  T_8203;\n  wire  T_8204;\n  wire  T_8205;\n  wire  T_8206;\n  wire  T_8207;\n  wire  T_8208;\n  wire  T_8209;\n  wire  T_8210;\n  wire  T_8211;\n  wire  T_8212;\n  wire  T_8213;\n  wire  T_8214;\n  wire  T_8215;\n  wire  T_8217;\n  wire  T_8218;\n  wire  T_8219;\n  wire  T_8220;\n  wire  T_8221;\n  wire  GEN_309;\n  wire  GEN_310;\n  wire  GEN_311;\n  wire  GEN_312;\n  wire  GEN_313;\n  wire  GEN_314;\n  wire  T_8222;\n  wire  T_8223_oval;\n  wire  T_8223_oe;\n  wire  T_8223_ie;\n  wire  T_8227;\n  wire  T_8228_oval;\n  wire  T_8228_oe;\n  wire  T_8228_ie;\n  wire  T_8228_pue;\n  wire  T_8228_ds;\n  wire  T_8234;\n  wire  T_8235;\n  wire  T_8236;\n  wire  T_8237;\n  wire  T_8238;\n  wire  T_8239;\n  wire  T_8240;\n  wire  T_8241;\n  wire  T_8242;\n  wire  T_8243;\n  wire  T_8244;\n  wire  T_8245;\n  wire  T_8246;\n  wire  T_8247;\n  wire  T_8248;\n  wire  T_8249;\n  wire  T_8250;\n  wire  T_8251;\n  wire  T_8253;\n  wire  T_8254;\n  wire  T_8255;\n  wire  T_8256;\n  wire  T_8257;\n  wire  GEN_315;\n  wire  GEN_316;\n  wire  GEN_317;\n  wire  GEN_318;\n  wire  GEN_319;\n  wire  GEN_320;\n  wire  T_8258;\n  wire  T_8259_oval;\n  wire  T_8259_oe;\n  wire  T_8259_ie;\n  wire  T_8263;\n  wire  T_8264_oval;\n  wire  T_8264_oe;\n  wire  T_8264_ie;\n  wire  T_8264_pue;\n  wire  T_8264_ds;\n  wire  T_8270;\n  wire  T_8271;\n  wire  T_8272;\n  wire  T_8273;\n  wire  T_8274;\n  wire  T_8275;\n  wire  T_8276;\n  wire  T_8277;\n  wire  T_8278;\n  wire  T_8279;\n  wire  T_8280;\n  wire  T_8281;\n  wire  T_8282;\n  wire  T_8283;\n  wire  T_8284;\n  wire  T_8285;\n  wire  T_8286;\n  wire  T_8287;\n  wire  T_8289;\n  wire  T_8290;\n  wire  T_8291;\n  wire  T_8292;\n  wire  T_8293;\n  wire  GEN_321;\n  wire  GEN_322;\n  wire  GEN_323;\n  wire  GEN_324;\n  wire  GEN_325;\n  wire  GEN_326;\n  wire  T_8294;\n  wire  T_8295_oval;\n  wire  T_8295_oe;\n  wire  T_8295_ie;\n  wire  T_8299;\n  wire  T_8300_oval;\n  wire  T_8300_oe;\n  wire  T_8300_ie;\n  wire  T_8300_pue;\n  wire  T_8300_ds;\n  wire  T_8306;\n  wire  T_8307;\n  wire  T_8308;\n  wire  T_8309;\n  wire  T_8310;\n  wire  T_8311;\n  wire  T_8312;\n  wire  T_8313;\n  wire  T_8314;\n  wire  T_8315;\n  wire  T_8316;\n  wire  T_8317;\n  wire  T_8318;\n  wire  T_8319;\n  wire  T_8320;\n  wire  T_8321;\n  wire  T_8322;\n  wire  T_8323;\n  wire  T_8325;\n  wire  T_8326;\n  wire  T_8327;\n  wire  T_8328;\n  wire  T_8329;\n  wire  GEN_327;\n  wire  GEN_328;\n  wire  GEN_329;\n  wire  GEN_330;\n  wire  GEN_331;\n  wire  GEN_332;\n  wire  T_8330;\n  wire  T_8331_oval;\n  wire  T_8331_oe;\n  wire  T_8331_ie;\n  wire  T_8335;\n  wire  T_8336_oval;\n  wire  T_8336_oe;\n  wire  T_8336_ie;\n  wire  T_8336_pue;\n  wire  T_8336_ds;\n  wire  T_8342;\n  wire  T_8343;\n  wire  T_8344;\n  wire  T_8345;\n  wire  T_8346;\n  wire  T_8347;\n  wire  T_8348;\n  wire  T_8349;\n  wire  T_8350;\n  wire  T_8351;\n  wire  T_8352;\n  wire  T_8353;\n  wire  T_8354;\n  wire  T_8355;\n  wire  T_8356;\n  wire  T_8357;\n  wire  T_8358;\n  wire  T_8359;\n  wire  T_8361;\n  wire  T_8362;\n  wire  T_8363;\n  wire  T_8364;\n  wire  T_8365;\n  wire  GEN_333;\n  wire  GEN_334;\n  wire  GEN_335;\n  wire  GEN_336;\n  wire  GEN_337;\n  wire  GEN_338;\n  wire  T_8366;\n  wire  T_8367_oval;\n  wire  T_8367_oe;\n  wire  T_8367_ie;\n  wire  T_8371;\n  wire  T_8372_oval;\n  wire  T_8372_oe;\n  wire  T_8372_ie;\n  wire  T_8372_pue;\n  wire  T_8372_ds;\n  wire  T_8378;\n  wire  T_8379;\n  wire  T_8380;\n  wire  T_8381;\n  wire  T_8382;\n  wire  T_8383;\n  wire  T_8384;\n  wire  T_8385;\n  wire  T_8386;\n  wire  T_8387;\n  wire  T_8388;\n  wire  T_8389;\n  wire  T_8390;\n  wire  T_8391;\n  wire  T_8392;\n  wire  T_8393;\n  wire  T_8394;\n  wire  T_8395;\n  wire  T_8397;\n  wire  T_8398;\n  wire  T_8399;\n  wire  T_8400;\n  wire  T_8401;\n  wire  GEN_339;\n  wire  GEN_340;\n  wire  GEN_341;\n  wire  GEN_342;\n  wire  GEN_343;\n  wire  GEN_344;\n  wire  T_8402;\n  wire  T_8403_oval;\n  wire  T_8403_oe;\n  wire  T_8403_ie;\n  wire  T_8407;\n  wire  T_8408_oval;\n  wire  T_8408_oe;\n  wire  T_8408_ie;\n  wire  T_8408_pue;\n  wire  T_8408_ds;\n  wire  T_8414;\n  wire  T_8415;\n  wire  T_8416;\n  wire  T_8417;\n  wire  T_8418;\n  wire  T_8419;\n  wire  T_8420;\n  wire  T_8421;\n  wire  T_8422;\n  wire  T_8423;\n  wire  T_8424;\n  wire  T_8425;\n  wire  T_8426;\n  wire  T_8427;\n  wire  T_8428;\n  wire  T_8429;\n  wire  T_8430;\n  wire  T_8431;\n  wire  T_8433;\n  wire  T_8434;\n  wire  T_8435;\n  wire  T_8436;\n  wire  T_8437;\n  wire  GEN_345;\n  wire  GEN_346;\n  wire  GEN_347;\n  wire  GEN_348;\n  wire  GEN_349;\n  wire  GEN_350;\n  wire  T_8438;\n  wire  T_8439_oval;\n  wire  T_8439_oe;\n  wire  T_8439_ie;\n  wire  T_8443;\n  wire  T_8444_oval;\n  wire  T_8444_oe;\n  wire  T_8444_ie;\n  wire  T_8444_pue;\n  wire  T_8444_ds;\n  wire  T_8450;\n  wire  T_8451;\n  wire  T_8452;\n  wire  T_8453;\n  wire  T_8454;\n  wire  T_8455;\n  wire  T_8456;\n  wire  T_8457;\n  wire  T_8458;\n  wire  T_8459;\n  wire  T_8460;\n  wire  T_8461;\n  wire  T_8462;\n  wire  T_8463;\n  wire  T_8464;\n  wire  T_8465;\n  wire  T_8466;\n  wire  T_8467;\n  wire  T_8469;\n  wire  T_8470;\n  wire  T_8471;\n  wire  T_8472;\n  wire  T_8473;\n  wire  GEN_351;\n  wire  GEN_352;\n  wire  GEN_353;\n  wire  GEN_354;\n  wire  GEN_355;\n  wire  GEN_356;\n  wire  T_8474;\n  wire  T_8475_oval;\n  wire  T_8475_oe;\n  wire  T_8475_ie;\n  wire  T_8479;\n  wire  T_8480_oval;\n  wire  T_8480_oe;\n  wire  T_8480_ie;\n  wire  T_8480_pue;\n  wire  T_8480_ds;\n  wire  T_8486;\n  wire  T_8487;\n  wire  T_8488;\n  wire  T_8489;\n  wire  T_8490;\n  wire  T_8491;\n  wire  T_8492;\n  wire  T_8493;\n  wire  T_8494;\n  wire  T_8495;\n  wire  T_8496;\n  wire  T_8497;\n  wire  T_8498;\n  wire  T_8499;\n  wire  T_8500;\n  wire  T_8501;\n  wire  T_8502;\n  wire  T_8503;\n  wire  T_8505;\n  wire  T_8506;\n  wire  T_8507;\n  wire  T_8508;\n  wire  T_8509;\n  wire  GEN_357;\n  wire  GEN_358;\n  wire  GEN_359;\n  wire  GEN_360;\n  wire  GEN_361;\n  wire  GEN_362;\n  wire  T_8510;\n  wire  T_8511_oval;\n  wire  T_8511_oe;\n  wire  T_8511_ie;\n  wire  T_8515;\n  wire  T_8516_oval;\n  wire  T_8516_oe;\n  wire  T_8516_ie;\n  wire  T_8516_pue;\n  wire  T_8516_ds;\n  wire  T_8522;\n  wire  T_8523;\n  wire  T_8524;\n  wire  T_8525;\n  wire  T_8526;\n  wire  T_8527;\n  wire  T_8528;\n  wire  T_8529;\n  wire  T_8530;\n  wire  T_8531;\n  wire  T_8532;\n  wire  T_8533;\n  wire  T_8534;\n  wire  T_8535;\n  wire  T_8536;\n  wire  T_8537;\n  wire  T_8538;\n  wire  T_8539;\n  wire  T_8541;\n  wire  T_8542;\n  wire  T_8543;\n  wire  T_8544;\n  wire  T_8545;\n  wire  GEN_363;\n  wire  GEN_364;\n  wire  GEN_365;\n  wire  GEN_366;\n  wire  GEN_367;\n  wire  GEN_368;\n  wire  T_8546;\n  wire  T_8547_oval;\n  wire  T_8547_oe;\n  wire  T_8547_ie;\n  wire  T_8551;\n  wire  T_8552_oval;\n  wire  T_8552_oe;\n  wire  T_8552_ie;\n  wire  T_8552_pue;\n  wire  T_8552_ds;\n  wire  T_8558;\n  wire  T_8559;\n  wire  T_8560;\n  wire  T_8561;\n  wire  T_8562;\n  wire  T_8563;\n  wire  T_8564;\n  wire  T_8565;\n  wire  T_8566;\n  wire  T_8567;\n  wire  T_8568;\n  wire  T_8569;\n  wire  T_8570;\n  wire  T_8571;\n  wire  T_8572;\n  wire  T_8573;\n  wire  T_8574;\n  wire  T_8575;\n  wire  T_8577;\n  wire  T_8578;\n  wire  T_8579;\n  wire  T_8580;\n  wire  T_8581;\n  wire  GEN_369;\n  wire  GEN_370;\n  wire  GEN_371;\n  wire  GEN_372;\n  wire  GEN_373;\n  wire  GEN_374;\n  wire  T_8582;\n  wire  T_8583_oval;\n  wire  T_8583_oe;\n  wire  T_8583_ie;\n  wire  T_8587;\n  wire  T_8588_oval;\n  wire  T_8588_oe;\n  wire  T_8588_ie;\n  wire  T_8588_pue;\n  wire  T_8588_ds;\n  wire  T_8594;\n  wire  T_8595;\n  wire  T_8596;\n  wire  T_8597;\n  wire  T_8598;\n  wire  T_8599;\n  wire  T_8600;\n  wire  T_8601;\n  wire  T_8602;\n  wire  T_8603;\n  wire  T_8604;\n  wire  T_8605;\n  wire  T_8606;\n  wire  T_8607;\n  wire  T_8608;\n  wire  T_8609;\n  wire  T_8610;\n  wire  T_8611;\n  wire  T_8613;\n  wire  T_8614;\n  wire  T_8615;\n  wire  T_8616;\n  wire  T_8617;\n  wire  GEN_375;\n  wire  GEN_376;\n  wire  GEN_377;\n  wire  GEN_378;\n  wire  GEN_379;\n  wire  GEN_380;\n  wire  T_8618;\n  wire  T_8619_oval;\n  wire  T_8619_oe;\n  wire  T_8619_ie;\n  wire  T_8623;\n  wire  T_8624_oval;\n  wire  T_8624_oe;\n  wire  T_8624_ie;\n  wire  T_8624_pue;\n  wire  T_8624_ds;\n  wire  T_8630;\n  wire  T_8631;\n  wire  T_8632;\n  wire  T_8633;\n  wire  T_8634;\n  wire  T_8635;\n  wire  T_8636;\n  wire  T_8637;\n  wire  T_8638;\n  wire  T_8639;\n  wire  T_8640;\n  wire  T_8641;\n  wire  T_8642;\n  wire  T_8643;\n  wire  T_8644;\n  wire  T_8645;\n  wire  T_8646;\n  wire  T_8647;\n  wire  T_8649;\n  wire  T_8650;\n  wire  T_8651;\n  wire  T_8652;\n  wire  T_8653;\n  wire  GEN_381;\n  wire  GEN_382;\n  wire  GEN_383;\n  wire  GEN_384;\n  wire  GEN_385;\n  wire  GEN_386;\n  wire  T_8654;\n  wire  T_8655_oval;\n  wire  T_8655_oe;\n  wire  T_8655_ie;\n  wire  T_8659;\n  wire  T_8660_oval;\n  wire  T_8660_oe;\n  wire  T_8660_ie;\n  wire  T_8660_pue;\n  wire  T_8660_ds;\n  wire  T_8666;\n  wire  T_8667;\n  wire  T_8668;\n  wire  T_8669;\n  wire  T_8670;\n  wire  T_8671;\n  wire  T_8672;\n  wire  T_8673;\n  wire  T_8674;\n  wire  T_8675;\n  wire  T_8676;\n  wire  T_8677;\n  wire  T_8678;\n  wire  T_8679;\n  wire  T_8680;\n  wire  T_8681;\n  wire  T_8682;\n  wire  T_8683;\n  wire  T_8685;\n  wire  T_8686;\n  wire  T_8687;\n  wire  T_8688;\n  wire  T_8689;\n  wire  GEN_387;\n  wire  GEN_388;\n  wire  GEN_389;\n  wire  GEN_390;\n  wire  GEN_391;\n  wire  GEN_392;\n  wire  T_8690;\n  wire  T_8691_oval;\n  wire  T_8691_oe;\n  wire  T_8691_ie;\n  wire  T_8695;\n  wire  T_8696_oval;\n  wire  T_8696_oe;\n  wire  T_8696_ie;\n  wire  T_8696_pue;\n  wire  T_8696_ds;\n  wire  T_8702;\n  wire  T_8703;\n  wire  T_8704;\n  wire  T_8705;\n  wire  T_8706;\n  wire  T_8707;\n  wire  T_8708;\n  wire  T_8709;\n  wire  T_8710;\n  wire  T_8711;\n  wire  T_8712;\n  wire  T_8713;\n  wire  T_8714;\n  wire  T_8715;\n  wire  T_8716;\n  wire  T_8717;\n  wire  T_8718;\n  wire  T_8719;\n  wire [2:0] GEN_6 = 3'b0;\n  wire [1:0] GEN_393 = 2'b0;\n  wire [2:0] GEN_394 = 3'b0;\n  wire [4:0] GEN_395 = 5'b0;\n  wire [28:0] GEN_396 = 29'b0;\n  wire [3:0] GEN_397 = 4'b0;\n  wire [31:0] GEN_398 = 32'b0;\n  sirv_AsyncResetRegVec_67 u_oeReg (\n    .clock(oeReg_clock),\n    .reset(oeReg_reset),\n    .io_d(oeReg_io_d),\n    .io_q(oeReg_io_q),\n    .io_en(oeReg_io_en)\n  );\n  sirv_AsyncResetRegVec_67 u_pueReg (\n    .clock(pueReg_clock),\n    .reset(pueReg_reset),\n    .io_d(pueReg_io_d),\n    .io_q(pueReg_io_q),\n    .io_en(pueReg_io_en)\n  );\n  sirv_AsyncResetRegVec_67 u_ieReg (\n    .clock(ieReg_clock),\n    .reset(ieReg_reset),\n    .io_d(ieReg_io_d),\n    .io_q(ieReg_io_q),\n    .io_en(ieReg_io_en)\n  );\n  sirv_AsyncResetRegVec_67 u_iofEnReg (\n    .clock(iofEnReg_clock),\n    .reset(iofEnReg_reset),\n    .io_d(iofEnReg_io_d),\n    .io_q(iofEnReg_io_q),\n    .io_en(iofEnReg_io_en)\n  );\n  assign io_interrupts_0_0 = T_7602;\n  assign io_interrupts_0_1 = T_7638;\n  assign io_interrupts_0_2 = T_7674;\n  assign io_interrupts_0_3 = T_7710;\n  assign io_interrupts_0_4 = T_7746;\n  assign io_interrupts_0_5 = T_7782;\n  assign io_interrupts_0_6 = T_7818;\n  assign io_interrupts_0_7 = T_7854;\n  assign io_interrupts_0_8 = T_7890;\n  assign io_interrupts_0_9 = T_7926;\n  assign io_interrupts_0_10 = T_7962;\n  assign io_interrupts_0_11 = T_7998;\n  assign io_interrupts_0_12 = T_8034;\n  assign io_interrupts_0_13 = T_8070;\n  assign io_interrupts_0_14 = T_8106;\n  assign io_interrupts_0_15 = T_8142;\n  assign io_interrupts_0_16 = T_8178;\n  assign io_interrupts_0_17 = T_8214;\n  assign io_interrupts_0_18 = T_8250;\n  assign io_interrupts_0_19 = T_8286;\n  assign io_interrupts_0_20 = T_8322;\n  assign io_interrupts_0_21 = T_8358;\n  assign io_interrupts_0_22 = T_8394;\n  assign io_interrupts_0_23 = T_8430;\n  assign io_interrupts_0_24 = T_8466;\n  assign io_interrupts_0_25 = T_8502;\n  assign io_interrupts_0_26 = T_8538;\n  assign io_interrupts_0_27 = T_8574;\n  assign io_interrupts_0_28 = T_8610;\n  assign io_interrupts_0_29 = T_8646;\n  assign io_interrupts_0_30 = T_8682;\n  assign io_interrupts_0_31 = T_8718;\n  assign io_in_0_a_ready = T_3295_ready;\n  assign io_in_0_b_valid = 1'h0;\n  assign io_in_0_b_bits_opcode = GEN_6;\n  assign io_in_0_b_bits_param = GEN_393;\n  assign io_in_0_b_bits_size = GEN_394;\n  assign io_in_0_b_bits_source = GEN_395;\n  assign io_in_0_b_bits_address = GEN_396;\n  assign io_in_0_b_bits_mask = GEN_397;\n  assign io_in_0_b_bits_data = GEN_398;\n  assign io_in_0_c_ready = 1'h1;\n  assign io_in_0_d_valid = T_3334_valid;\n  assign io_in_0_d_bits_opcode = {{2'd0}, T_3334_bits_read};\n  assign io_in_0_d_bits_param = T_6260_param;\n  assign io_in_0_d_bits_size = T_6260_size;\n  assign io_in_0_d_bits_source = T_6260_source;\n  assign io_in_0_d_bits_sink = T_6260_sink;\n  assign io_in_0_d_bits_addr_lo = T_6260_addr_lo;\n  assign io_in_0_d_bits_data = T_3334_bits_data;\n  assign io_in_0_d_bits_error = T_6260_error;\n  assign io_in_0_e_ready = 1'h1;\n  assign io_port_pins_0_o_oval = T_7587;\n  assign io_port_pins_0_o_oe = T_7580_oe;\n  assign io_port_pins_0_o_ie = T_7580_ie;\n  assign io_port_p"}
{"text": "ins_0_o_pue = T_7580_pue;\n  assign io_port_pins_0_o_ds = T_7580_ds;\n  assign io_port_pins_1_o_oval = T_7623;\n  assign io_port_pins_1_o_oe = T_7616_oe;\n  assign io_port_pins_1_o_ie = T_7616_ie;\n  assign io_port_pins_1_o_pue = T_7616_pue;\n  assign io_port_pins_1_o_ds = T_7616_ds;\n  assign io_port_pins_2_o_oval = T_7659;\n  assign io_port_pins_2_o_oe = T_7652_oe;\n  assign io_port_pins_2_o_ie = T_7652_ie;\n  assign io_port_pins_2_o_pue = T_7652_pue;\n  assign io_port_pins_2_o_ds = T_7652_ds;\n  assign io_port_pins_3_o_oval = T_7695;\n  assign io_port_pins_3_o_oe = T_7688_oe;\n  assign io_port_pins_3_o_ie = T_7688_ie;\n  assign io_port_pins_3_o_pue = T_7688_pue;\n  assign io_port_pins_3_o_ds = T_7688_ds;\n  assign io_port_pins_4_o_oval = T_7731;\n  assign io_port_pins_4_o_oe = T_7724_oe;\n  assign io_port_pins_4_o_ie = T_7724_ie;\n  assign io_port_pins_4_o_pue = T_7724_pue;\n  assign io_port_pins_4_o_ds = T_7724_ds;\n  assign io_port_pins_5_o_oval = T_7767;\n  assign io_port_pins_5_o_oe = T_7760_oe;\n  assign io_port_pins_5_o_ie = T_7760_ie;\n  assign io_port_pins_5_o_pue = T_7760_pue;\n  assign io_port_pins_5_o_ds = T_7760_ds;\n  assign io_port_pins_6_o_oval = T_7803;\n  assign io_port_pins_6_o_oe = T_7796_oe;\n  assign io_port_pins_6_o_ie = T_7796_ie;\n  assign io_port_pins_6_o_pue = T_7796_pue;\n  assign io_port_pins_6_o_ds = T_7796_ds;\n  assign io_port_pins_7_o_oval = T_7839;\n  assign io_port_pins_7_o_oe = T_7832_oe;\n  assign io_port_pins_7_o_ie = T_7832_ie;\n  assign io_port_pins_7_o_pue = T_7832_pue;\n  assign io_port_pins_7_o_ds = T_7832_ds;\n  assign io_port_pins_8_o_oval = T_7875;\n  assign io_port_pins_8_o_oe = T_7868_oe;\n  assign io_port_pins_8_o_ie = T_7868_ie;\n  assign io_port_pins_8_o_pue = T_7868_pue;\n  assign io_port_pins_8_o_ds = T_7868_ds;\n  assign io_port_pins_9_o_oval = T_7911;\n  assign io_port_pins_9_o_oe = T_7904_oe;\n  assign io_port_pins_9_o_ie = T_7904_ie;\n  assign io_port_pins_9_o_pue = T_7904_pue;\n  assign io_port_pins_9_o_ds = T_7904_ds;\n  assign io_port_pins_10_o_oval = T_7947;\n  assign io_port_pins_10_o_oe = T_7940_oe;\n  assign io_port_pins_10_o_ie = T_7940_ie;\n  assign io_port_pins_10_o_pue = T_7940_pue;\n  assign io_port_pins_10_o_ds = T_7940_ds;\n  assign io_port_pins_11_o_oval = T_7983;\n  assign io_port_pins_11_o_oe = T_7976_oe;\n  assign io_port_pins_11_o_ie = T_7976_ie;\n  assign io_port_pins_11_o_pue = T_7976_pue;\n  assign io_port_pins_11_o_ds = T_7976_ds;\n  assign io_port_pins_12_o_oval = T_8019;\n  assign io_port_pins_12_o_oe = T_8012_oe;\n  assign io_port_pins_12_o_ie = T_8012_ie;\n  assign io_port_pins_12_o_pue = T_8012_pue;\n  assign io_port_pins_12_o_ds = T_8012_ds;\n  assign io_port_pins_13_o_oval = T_8055;\n  assign io_port_pins_13_o_oe = T_8048_oe;\n  assign io_port_pins_13_o_ie = T_8048_ie;\n  assign io_port_pins_13_o_pue = T_8048_pue;\n  assign io_port_pins_13_o_ds = T_8048_ds;\n  assign io_port_pins_14_o_oval = T_8091;\n  assign io_port_pins_14_o_oe = T_8084_oe;\n  assign io_port_pins_14_o_ie = T_8084_ie;\n  assign io_port_pins_14_o_pue = T_8084_pue;\n  assign io_port_pins_14_o_ds = T_8084_ds;\n  assign io_port_pins_15_o_oval = T_8127;\n  assign io_port_pins_15_o_oe = T_8120_oe;\n  assign io_port_pins_15_o_ie = T_8120_ie;\n  assign io_port_pins_15_o_pue = T_8120_pue;\n  assign io_port_pins_15_o_ds = T_8120_ds;\n  assign io_port_pins_16_o_oval = T_8163;\n  assign io_port_pins_16_o_oe = T_8156_oe;\n  assign io_port_pins_16_o_ie = T_8156_ie;\n  assign io_port_pins_16_o_pue = T_8156_pue;\n  assign io_port_pins_16_o_ds = T_8156_ds;\n  assign io_port_pins_17_o_oval = T_8199;\n  assign io_port_pins_17_o_oe = T_8192_oe;\n  assign io_port_pins_17_o_ie = T_8192_ie;\n  assign io_port_pins_17_o_pue = T_8192_pue;\n  assign io_port_pins_17_o_ds = T_8192_ds;\n  assign io_port_pins_18_o_oval = T_8235;\n  assign io_port_pins_18_o_oe = T_8228_oe;\n  assign io_port_pins_18_o_ie = T_8228_ie;\n  assign io_port_pins_18_o_pue = T_8228_pue;\n  assign io_port_pins_18_o_ds = T_8228_ds;\n  assign io_port_pins_19_o_oval = T_8271;\n  assign io_port_pins_19_o_oe = T_8264_oe;\n  assign io_port_pins_19_o_ie = T_8264_ie;\n  assign io_port_pins_19_o_pue = T_8264_pue;\n  assign io_port_pins_19_o_ds = T_8264_ds;\n  assign io_port_pins_20_o_oval = T_8307;\n  assign io_port_pins_20_o_oe = T_8300_oe;\n  assign io_port_pins_20_o_ie = T_8300_ie;\n  assign io_port_pins_20_o_pue = T_8300_pue;\n  assign io_port_pins_20_o_ds = T_8300_ds;\n  assign io_port_pins_21_o_oval = T_8343;\n  assign io_port_pins_21_o_oe = T_8336_oe;\n  assign io_port_pins_21_o_ie = T_8336_ie;\n  assign io_port_pins_21_o_pue = T_8336_pue;\n  assign io_port_pins_21_o_ds = T_8336_ds;\n  assign io_port_pins_22_o_oval = T_8379;\n  assign io_port_pins_22_o_oe = T_8372_oe;\n  assign io_port_pins_22_o_ie = T_8372_ie;\n  assign io_port_pins_22_o_pue = T_8372_pue;\n  assign io_port_pins_22_o_ds = T_8372_ds;\n  assign io_port_pins_23_o_oval = T_8415;\n  assign io_port_pins_23_o_oe = T_8408_oe;\n  assign io_port_pins_23_o_ie = T_8408_ie;\n  assign io_port_pins_23_o_pue = T_8408_pue;\n  assign io_port_pins_23_o_ds = T_8408_ds;\n  assign io_port_pins_24_o_oval = T_8451;\n  assign io_port_pins_24_o_oe = T_8444_oe;\n  assign io_port_pins_24_o_ie = T_8444_ie;\n  assign io_port_pins_24_o_pue = T_8444_pue;\n  assign io_port_pins_24_o_ds = T_8444_ds;\n  assign io_port_pins_25_o_oval = T_8487;\n  assign io_port_pins_25_o_oe = T_8480_oe;\n  assign io_port_pins_25_o_ie = T_8480_ie;\n  assign io_port_pins_25_o_pue = T_8480_pue;\n  assign io_port_pins_25_o_ds = T_8480_ds;\n  assign io_port_pins_26_o_oval = T_8523;\n  assign io_port_pins_26_o_oe = T_8516_oe;\n  assign io_port_pins_26_o_ie = T_8516_ie;\n  assign io_port_pins_26_o_pue = T_8516_pue;\n  assign io_port_pins_26_o_ds = T_8516_ds;\n  assign io_port_pins_27_o_oval = T_8559;\n  assign io_port_pins_27_o_oe = T_8552_oe;\n  assign io_port_pins_27_o_ie = T_8552_ie;\n  assign io_port_pins_27_o_pue = T_8552_pue;\n  assign io_port_pins_27_o_ds = T_8552_ds;\n  assign io_port_pins_28_o_oval = T_8595;\n  assign io_port_pins_28_o_oe = T_8588_oe;\n  assign io_port_pins_28_o_ie = T_8588_ie;\n  assign io_port_pins_28_o_pue = T_8588_pue;\n  assign io_port_pins_28_o_ds = T_8588_ds;\n  assign io_port_pins_29_o_oval = T_8631;\n  assign io_port_pins_29_o_oe = T_8624_oe;\n  assign io_port_pins_29_o_ie = T_8624_ie;\n  assign io_port_pins_29_o_pue = T_8624_pue;\n  assign io_port_pins_29_o_ds = T_8624_ds;\n  assign io_port_pins_30_o_oval = T_8667;\n  assign io_port_pins_30_o_oe = T_8660_oe;\n  assign io_port_pins_30_o_ie = T_8660_ie;\n  assign io_port_pins_30_o_pue = T_8660_pue;\n  assign io_port_pins_30_o_ds = T_8660_ds;\n  assign io_port_pins_31_o_oval = T_8703;\n  assign io_port_pins_31_o_oe = T_8696_oe;\n  assign io_port_pins_31_o_ie = T_8696_ie;\n  assign io_port_pins_31_o_pue = T_8696_pue;\n  assign io_port_pins_31_o_ds = T_8696_ds;\n  assign io_port_iof_0_0_i_ival = T_7603;\n  assign io_port_iof_0_1_i_ival = T_7639;\n  assign io_port_iof_0_2_i_ival = T_7675;\n  assign io_port_iof_0_3_i_ival = T_7711;\n  assign io_port_iof_0_4_i_ival = T_7747;\n  assign io_port_iof_0_5_i_ival = T_7783;\n  assign io_port_iof_0_6_i_ival = T_7819;\n  assign io_port_iof_0_7_i_ival = T_7855;\n  assign io_port_iof_0_8_i_ival = T_7891;\n  assign io_port_iof_0_9_i_ival = T_7927;\n  assign io_port_iof_0_10_i_ival = T_7963;\n  assign io_port_iof_0_11_i_ival = T_7999;\n  assign io_port_iof_0_12_i_ival = T_8035;\n  assign io_port_iof_0_13_i_ival = T_8071;\n  assign io_port_iof_0_14_i_ival = T_8107;\n  assign io_port_iof_0_15_i_ival = T_8143;\n  assign io_port_iof_0_16_i_ival = T_8179;\n  assign io_port_iof_0_17_i_ival = T_8215;\n  assign io_port_iof_0_18_i_ival = T_8251;\n  assign io_port_iof_0_19_i_ival = T_8287;\n  assign io_port_iof_0_20_i_ival = T_8323;\n  assign io_port_iof_0_21_i_ival = T_8359;\n  assign io_port_iof_0_22_i_ival = T_8395;\n  assign io_port_iof_0_23_i_ival = T_8431;\n  assign io_port_iof_0_24_i_ival = T_8467;\n  assign io_port_iof_0_25_i_ival = T_8503;\n  assign io_port_iof_0_26_i_ival = T_8539;\n  assign io_port_iof_0_27_i_ival = T_8575;\n  assign io_port_iof_0_28_i_ival = T_8611;\n  assign io_port_iof_0_29_i_ival = T_8647;\n  assign io_port_iof_0_30_i_ival = T_8683;\n  assign io_port_iof_0_31_i_ival = T_8719;\n  assign io_port_iof_1_0_i_ival = T_7603;\n  assign io_port_iof_1_1_i_ival = T_7639;\n  assign io_port_iof_1_2_i_ival = T_7675;\n  assign io_port_iof_1_3_i_ival = T_7711;\n  assign io_port_iof_1_4_i_ival = T_7747;\n  assign io_port_iof_1_5_i_ival = T_7783;\n  assign io_port_iof_1_6_i_ival = T_7819;\n  assign io_port_iof_1_7_i_ival = T_7855;\n  assign io_port_iof_1_8_i_ival = T_7891;\n  assign io_port_iof_1_9_i_ival = T_7927;\n  assign io_port_iof_1_10_i_ival = T_7963;\n  assign io_port_iof_1_11_i_ival = T_7999;\n  assign io_port_iof_1_12_i_ival = T_8035;\n  assign io_port_iof_1_13_i_ival = T_8071;\n  assign io_port_iof_1_14_i_ival = T_8107;\n  assign io_port_iof_1_15_i_ival = T_8143;\n  assign io_port_iof_1_16_i_ival = T_8179;\n  assign io_port_iof_1_17_i_ival = T_8215;\n  assign io_port_iof_1_18_i_ival = T_8251;\n  assign io_port_iof_1_19_i_ival = T_8287;\n  assign io_port_iof_1_20_i_ival = T_8323;\n  assign io_port_iof_1_21_i_ival = T_8359;\n  assign io_port_iof_1_22_i_ival = T_8395;\n  assign io_port_iof_1_23_i_ival = T_8431;\n  assign io_port_iof_1_24_i_ival = T_8467;\n  assign io_port_iof_1_25_i_ival = T_8503;\n  assign io_port_iof_1_26_i_ival = T_8539;\n  assign io_port_iof_1_27_i_ival = T_8575;\n  assign io_port_iof_1_28_i_ival = T_8611;\n  assign io_port_iof_1_29_i_ival = T_8647;\n  assign io_port_iof_1_30_i_ival = T_8683;\n  assign io_port_iof_1_31_i_ival = T_8719;\n  assign oeReg_clock = clock;\n  assign oeReg_reset = reset;\n  assign oeReg_io_d = T_3370_bits_data;\n  assign oeReg_io_en = T_4203;\n  assign pueReg_clock = clock;\n  assign pueReg_reset = reset;\n  assign pueReg_io_d = T_3370_bits_data;\n  assign pueReg_io_en = T_4495;\n  assign ieReg_clock = clock;\n  assign ieReg_reset = reset;\n  assign ieReg_io_d = T_3370_bits_data;\n  assign ieReg_io_en = T_4031;\n  assign inVal = T_3253;\n  assign T_3188_0 = io_port_pins_0_i_ival;\n  assign T_3188_1 = io_port_pins_1_i_ival;\n  assign T_3188_2 = io_port_pins_2_i_ival;\n  assign T_3188_3 = io_port_pins_3_i_ival;\n  assign T_3188_4 = io_port_pins_4_i_ival;\n  assign T_3188_5 = io_port_pins_5_i_ival;\n  assign T_3188_6 = io_port_pins_6_i_ival;\n  assign T_3188_7 = io_port_pins_7_i_ival;\n  assign T_3188_8 = io_port_pins_8_i_ival;\n  assign T_3188_9 = io_port_pins_9_i_ival;\n  assign T_3188_10 = io_port_pins_10_i_ival;\n  assign T_3188_11 = io_port_pins_11_i_ival;\n  assign T_3188_12 = io_port_pins_12_i_ival;\n  assign T_3188_13 = io_port_pins_13_i_ival;\n  assign T_3188_14 = io_port_pins_14_i_ival;\n  assign T_3188_15 = io_port_pins_15_i_ival;\n  assign T_3188_16 = io_port_pins_16_i_ival;\n  assign T_3188_17 = io_port_pins_17_i_ival;\n  assign T_3188_18 = io_port_pins_18_i_ival;\n  assign T_3188_19 = io_port_pins_19_i_ival;\n  assign T_3188_20 = io_port_pins_20_i_ival;\n  assign T_3188_21 = io_port_pins_21_i_ival;\n  assign T_3188_22 = io_port_pins_22_i_ival;\n  assign T_3188_23 = io_port_pins_23_i_ival;\n  assign T_3188_24 = io_port_pins_24_i_ival;\n  assign T_3188_25 = io_port_pins_25_i_ival;\n  assign T_3188_26 = io_port_pins_26_i_ival;\n  assign T_3188_27 = io_port_pins_27_i_ival;\n  assign T_3188_28 = io_port_pins_28_i_ival;\n  assign T_3188_29 = io_port_pins_29_i_ival;\n  assign T_3188_30 = io_port_pins_30_i_ival;\n  assign T_3188_31 = io_port_pins_31_i_ival;\n  assign T_3223 = {T_3188_1,T_3188_0};\n  assign T_3224 = {T_3188_3,T_3188_2};\n  assign T_3225 = {T_3224,T_3223};\n  assign T_3226 = {T_3188_5,T_3188_4};\n  assign T_3227 = {T_3188_7,T_3188_6};\n  assign T_3228 = {T_3227,T_3226};\n  assign T_3229 = {T_3228,T_3225};\n  assign T_3230 = {T_3188_9,T_3188_8};\n  assign T_3231 = {T_3188_11,T_3188_10};\n  assign T_3232 = {T_3231,T_3230};\n  assign T_3233 = {T_3188_13,T_3188_12};\n  assign T_3234 = {T_3188_15,T_3188_14};\n  assign T_3235 = {T_3234,T_3233};\n  assign T_3236 = {T_3235,T_3232};\n  assign T_3237 = {T_3236,T_3229};\n  assign T_3238 = {T_3188_17,T_3188_16};\n  assign T_3239 = {T_3188_19,T_3188_18};\n  assign T_3240 = {T_3239,T_3238};\n  assign T_3241 = {T_3188_21,T_3188_20};\n  assign T_3242 = {T_3188_23,T_3188_22};\n  assign T_3243 = {T_3242,T_3241};\n  assign T_3244 = {T_3243,T_3240};\n  assign T_3245 = {T_3188_25,T_3188_24};\n  assign T_3246 = {T_3188_27,T_3188_26};\n  assign T_3247 = {T_3246,T_3245};\n  assign T_3248 = {T_3188_29,T_3188_28};\n  assign T_3249 = {T_3188_31,T_3188_30};\n  assign T_3250 = {T_3249,T_3248};\n  assign T_3251 = {T_3250,T_3247};\n  assign T_3252 = {T_3251,T_3244};\n  assign T_3253 = {T_3252,T_3237};\n  assign iofEnReg_clock = clock;\n  assign iofEnReg_reset = reset;\n  assign iofEnReg_io_d = T_3370_bits_data;\n  assign iofEnReg_io_en = T_3991;\n  assign T_3269 = ~ valueReg;\n  assign rise = T_3269 & inSyncReg;\n  assign T_3270 = ~ inSyncReg;\n  assign fall = valueReg & T_3270;\n  assign T_3295_ready = T_5322;\n  assign T_3295_valid = io_in_0_a_valid;\n  assign T_3295_bits_read = T_3312;\n  assign T_3295_bits_index = T_3313[9:0];\n  assign T_3295_bits_data = io_in_0_a_bits_data;\n  assign T_3295_bits_mask = io_in_0_a_bits_mask;\n  assign T_3295_bits_extra = T_3316;\n  assign T_3312 = io_in_0_a_bits_opcode == 3'h4;\n  assign T_3313 = io_in_0_a_bits_address[28:2];\n  assign T_3314 = io_in_0_a_bits_address[1:0];\n  assign T_3315 = {T_3314,io_in_0_a_bits_source};\n  assign T_3316 = {T_3315,io_in_0_a_bits_size};\n  assign T_3334_ready = io_in_0_d_ready;\n  assign T_3334_valid = T_5325;\n  assign T_3334_bits_read = T_3370_bits_read;\n  assign T_3334_bits_data = T_6245;\n  assign T_3334_bits_extra = T_3370_bits_extra;\n  assign T_3370_ready = T_5324;\n  assign T_3370_valid = T_5323;\n  assign T_3370_bits_read = T_3295_bits_read;\n  assign T_3370_bits_index = T_3295_bits_index;\n  assign T_3370_bits_data = T_3295_bits_data;\n  assign T_3370_bits_mask = T_3295_bits_mask;\n  assign T_3370_bits_extra = T_3295_bits_extra;\n  assign T_3455 = T_3370_bits_index & 10'h3e0;\n  assign T_3457 = T_3455 == 10'h0;\n  assign T_3463 = T_3370_bits_index ^ 10'h5;\n  assign T_3464 = T_3463 & 10'h3e0;\n  assign T_3466 = T_3464 == 10'h0;\n  assign T_3472 = T_3370_bits_index ^ 10'ha;\n  assign T_3473 = T_3472 & 10'h3e0;\n  assign T_3475 = T_3473 == 10'h0;\n  assign T_3481 = T_3370_bits_index ^ 10'he;\n  assign T_3482 = T_3481 & 10'h3e0;\n  assign T_3484 = T_3482 == 10'h0;\n  assign T_3490 = T_3370_bits_index ^ 10'h1;\n  assign T_3491 = T_3490 & 10'h3e0;\n  assign T_3493 = T_3491 == 10'h0;\n  assign T_3499 = T_3370_bits_index ^ 10'h6;\n  assign T_3500 = T_3499 & 10'h3e0;\n  assign T_3502 = T_3500 == 10'h0;\n  assign T_3508 = T_3370_bits_index ^ 10'h9;\n  assign T_3509 = T_3508 & 10'h3e0;\n  assign T_3511 = T_3509 == 10'h0;\n  assign T_3517 = T_3370_bits_index ^ 10'hd;\n  assign T_3518 = T_3517 & 10'h3e0;\n  assign T_3520 = T_3518 == 10'h0;\n  assign T_3526 = T_3370_bits_index ^ 10'h2;\n  assign T_3527 = T_3526 & 10'h3e0;\n  assign T_3529 = T_3527 == 10'h0;\n  assign T_3535 = T_3370_bits_index ^ 10'hc;\n  assign T_3536 = T_3535 & 10'h3e0;\n  assign T_3538 = T_3536 == 10'h0;\n  assign T_3544 = T_3370_bits_index ^ 10'h7;\n  assign T_3545 = T_3544 & 10'h3e0;\n  assign T_3547 = T_3545 == 10'h0;\n  assign T_3553 = T_3370_bits_index ^ 10'h3;\n  assign T_3554 = T_3553 & 10'h3e0;\n  assign T_3556 = T_3554 == 10'h0;\n  assign T_3562 = T_3370_bits_index ^ 10'h10;\n  assign T_3563 = T_3562 & 10'h3e0;\n  assign T_3565 = T_3563 == 10'h0;\n  assign T_3571 = T_3370_bits_index ^ 10'hb;\n  assign T_3572 = T_3571 & 10'h3e0;\n  assign T_3574 = T_3572 == 10'h0;\n  assign T_3580 = T_3370_bits_index ^ 10'h8;\n  assign T_3581 = T_3580 & 10'h3e0;\n  assign T_3583 = T_3581 == 10'h0;\n  assign T_3589 = T_3370_bits_index ^ 10'h4;\n  assign T_3590 = T_3589 & 10'h3e0;\n  assign T_3592 = T_3590 == 10'h0;\n  assign T_3598 = T_3370_bits_index ^ 10'hf;\n  assign T_3599 = T_3598 & 10'h3e0;\n  assign T_3601 = T_3599 == 10'h0;\n  assign T_3609_0 = T_5397;\n  assign T_3609_1 = T_5497;\n  assign T_3609_2 = T_5597;\n  assign T_3609_3 = T_5677;\n  assign T_3609_4 = T_5417;\n  assign T_3609_5 = T_5517;\n  assign T_3609_6 = T_5577;\n  assign T_3609_7 = T_5657;\n  assign T_3609_8 = T_5437;\n  assign T_3609_9 = T_5637;\n  assign T_3609_10 = T_5537;\n  assign T_3609_11 = T_5457;\n  assign T_3609_12 = T_5717;\n  assign T_3609_13 = T_5617;\n  assign T_3609_14 = T_5557;\n  assign T_3609_15 = T_5477;\n  assign T_3609_16 = T_5697;\n  assign T_3614_0 = T_5403;\n  assign T_3614_1 = T_5503;\n  assign T_3614_2 = T_5603;\n  assign T_3614_3 = T_5683;\n  assign T_3614_4 = T_5423;\n  assign T_3614_5 = T_5523;\n  assign T_3614_6 = T_5583;\n  assign T_3614_7 = T_5663;\n  assign T_3614_8 = T_5443;\n  assign T_3614_9 = T_5643;\n  assign T_3614_10 = T_5543;\n  assign T_3614_11 = T_5463;\n  assign T_3614_12 = T_5723;\n  assign T_3614_13 = T_5623;\n  assign T_3614_14 = T_5563;\n  assign T_3614_15 = T_5483;\n  assign T_3614_16 = T_5703;\n  assign T_3619_0 = 1'h1;\n  assign T_3619_1 = 1'h1;\n  assign T_3619_2 = 1'h1;\n  assign T_3619_3 = 1'h1;\n  assign T_3619_4 = 1'h1;\n  assign T_3619_5 = 1'h1;\n  assign T_3619_6 = 1'h1;\n  assign T_3619_7 = 1'h1;\n  assign T_3619_8 = 1'h1;\n  assign T_3619_9 = 1'h1;\n  assign T_3619_10 = 1'h1;\n  assign T_3619_11 = 1'h1;\n  assign T_3619_12 = 1'h1;\n  assign T_3619_13 = 1'h1;\n  assign T_3619_14 = 1'h1;\n  assign T_3619_15 = 1'h1;\n  assign T_3619_16 = 1'h1;\n  assign T_3624_0 = 1'h1;\n  assign T_3624_1 = 1'h1;\n  assign T_3624_2 = 1'h1;\n  assign T_3624_3 = 1'h1;\n  assign T_3624_4 = 1'h1;\n  assign T_3624_5 = 1'h1;\n  assign T_3624_6 = 1'h1;\n  assign T_3624_7 = 1'h1;\n  assign T_3624_8 = 1'h1;\n  assign T_3624_9 = 1'h1;\n  assign T_3624_10 = 1'h1;\n  assign T_3624_11 = 1'h1;\n  assign T_3624_12 = 1'h1;\n  assign T_3624_13 = 1'h1;\n  assign T_3624_14 = 1'h1;\n  assign T_3624_15 = 1'h1;\n  assign T_3624_16 = 1'h1;\n  assign T_3629_0 = 1'h1;\n  assign T_3629_1 = 1'h1;\n  assign T_3629_2 = 1'h1;\n  assign T_3629_3 = 1'h1;\n  assign T_3629_4 = 1'h1;\n  assign T_3629_5 = 1'h1;\n  assign T_3629_6 = 1'h1;\n  assign T_3629_7 = 1'h1;\n  assign T_3629_8 = 1'h1;\n  assign T_3629_9 = 1'h1;\n  assign T_3629_10 = 1'h1;\n  assign T_3629_11 = 1'h1;\n  assign T_3629_12 = 1'h1;\n  assign T_3629_13 = 1'h1;\n  assign T_3629_14 = 1'h1;\n  assign T_3629_15 = 1'h1;\n  assign T_3629_16 = 1'h1;\n  assign T_3634_0 = 1'h1;\n  assign T_3634_1 = 1'h1;\n  assign T_3634_2 = 1'h1;\n  assign T_3634_3 = 1'h1;\n  assign T_3634_4 = 1'h1;\n  assign T_3634_5 = 1'h1;\n  assign T_3634_6 = 1'h1;\n  assign T_3634_7 = 1'h1;\n  assign T_3634_8 = 1'h1;\n  assign T_3634_9 = 1'h1;\n  assign T_3634_10 = 1'h1;\n  assign T_3634_11 = 1'h1;\n  assign T_3634_12 = 1'h1;\n  assign T_3634_13 = 1'h1;\n  assign T_3634_14 = 1'h1;\n  assign T_3634_15 = 1'h1;\n  assign T_3634_16 = 1'h1;\n  assign T_3639_0 = T_5407;\n  assign T_3639_1 = T_5507;\n  assign T_3639_2 = T_5607;\n  assign T_3639_3 = T_5687;\n  assign T_3639_4 = T_5427;\n  assign T_3639_5 = T_5527;\n  assign T_3639_6 = T_5587;\n  assign T_3639_7 = T_5667;\n  assign T_3639_8 = T_5447;\n  assign T_3639_9 = T_5647;\n  assign T_3639_10 = T_5547;\n  assign T_3639_11 = T_5467;\n  assign T_3639_12 = T_5727;\n  assign T_3639_13 = T_5627;\n  assign T_3639_14 = T_5567;\n  assign T_3639_15 = T_5487;\n  assign T_3639_16 = T_5707;\n  assign T_3644_0 = T_5413;\n  assign T_3644_1 = T_5513;\n  assign T_3644_2 = T_5613;\n  assign T_3644_3 = T_5693;\n  assign T_3644_4 = T_5433;\n  assign T_3644_5 = T_5533;\n  assign T_3644_6 = T_5593;\n  assign T_3644_7 = T_5673;\n  assign T_3644_8 = T_5453;\n  assign T_3644_9 = T_5653;\n  assign T_3644_10 = T_5553;\n  assign T_3644_11 = T_5473;\n  assign T_3644_12 = T_5733;\n  assign T_3644_13 = T_5633;\n  assign T_3644_14 = T_5573;\n  assign T_3644_15 = T_5493;\n  assign T_3644_16 = T_5713;\n  assign T_3806 = T_3370_bits_mask[0];\n  assign T_3807 = T_3370_bits_mask[1];\n  assign T_3808 = T_3370_bits_mask[2];\n  assign T_3809 = T_3370_bits_mask[3];\n  assign T_3813 = T_3806 ? 8'hff : 8'h0;\n  assign T_3817 = T_3807 ? 8'hff : 8'h0;\n  assign T_3821 = T_3808 ? 8'hff : 8'h0;\n  assign T_3825 = T_3809 ? 8'hff : 8'h0;\n  assign T_3826 = {T_3817,T_3813};\n  assign T_3827 = {T_3825,T_3821};\n  assign T_3828 = {T_3827,T_3826};\n  assign T_3856 = ~ T_3828;\n  assign T_3858 = T_3856 == 32'h0;\n  assign T_3911 = T_3644_1 & T_3858;\n  assign GEN_7 = T_3911 ? T_3370_bits_da"}
{"text": "ta : dsReg;\n  assign T_3951 = T_3644_2 & T_3858;\n  assign GEN_8 = T_3951 ? T_3370_bits_data : highIeReg;\n  assign T_3991 = T_3644_3 & T_3858;\n  assign T_4007 = iofEnReg_io_q;\n  assign T_4031 = T_3644_4 & T_3858;\n  assign T_4047 = ieReg_io_q;\n  assign T_4071 = T_3644_5 & T_3858;\n  assign GEN_9 = T_4071 ? T_3370_bits_data : riseIeReg;\n  assign T_4111 = T_3644_6 & T_3858;\n  assign T_4114 = ~ fallIpReg;\n  assign T_4116 = T_4111 ? T_3370_bits_data : 32'h0;\n  assign T_4117 = T_4114 | T_4116;\n  assign T_4118 = ~ T_4117;\n  assign T_4119 = T_4118 | fall;\n  assign T_4157 = T_3644_7 & T_3858;\n  assign T_4160 = ~ lowIpReg;\n  assign T_4162 = T_4157 ? T_3370_bits_data : 32'h0;\n  assign T_4163 = T_4160 | T_4162;\n  assign T_4164 = ~ T_4163;\n  assign T_4165 = T_4164 | T_3269;\n  assign T_4203 = T_3644_8 & T_3858;\n  assign T_4219 = oeReg_io_q;\n  assign T_4243 = T_3644_9 & T_3858;\n  assign GEN_10 = T_4243 ? T_3370_bits_data : lowIeReg;\n  assign T_4283 = T_3644_10 & T_3858;\n  assign T_4286 = ~ riseIpReg;\n  assign T_4288 = T_4283 ? T_3370_bits_data : 32'h0;\n  assign T_4289 = T_4286 | T_4288;\n  assign T_4290 = ~ T_4289;\n  assign T_4291 = T_4290 | rise;\n  assign T_4329 = T_3644_11 & T_3858;\n  assign GEN_11 = T_4329 ? T_3370_bits_data : portReg;\n  assign T_4369 = T_3644_12 & T_3858;\n  assign GEN_12 = T_4369 ? T_3370_bits_data : xorReg;\n  assign T_4409 = T_3644_13 & T_3858;\n  assign T_4412 = ~ highIpReg;\n  assign T_4414 = T_4409 ? T_3370_bits_data : 32'h0;\n  assign T_4415 = T_4412 | T_4414;\n  assign T_4416 = ~ T_4415;\n  assign T_4417 = T_4416 | valueReg;\n  assign T_4455 = T_3644_14 & T_3858;\n  assign GEN_13 = T_4455 ? T_3370_bits_data : fallIeReg;\n  assign T_4495 = T_3644_15 & T_3858;\n  assign T_4511 = pueReg_io_q;\n  assign T_4535 = T_3644_16 & T_3858;\n  assign GEN_14 = T_4535 ? T_3370_bits_data : iofSelReg;\n  assign T_4557 = T_3457 == 1'h0;\n  assign T_4559 = T_4557 | T_3619_0;\n  assign T_4561 = T_3493 == 1'h0;\n  assign T_4563 = T_4561 | T_3619_4;\n  assign T_4565 = T_3529 == 1'h0;\n  assign T_4567 = T_4565 | T_3619_8;\n  assign T_4569 = T_3556 == 1'h0;\n  assign T_4571 = T_4569 | T_3619_11;\n  assign T_4573 = T_3592 == 1'h0;\n  assign T_4575 = T_4573 | T_3619_15;\n  assign T_4577 = T_3466 == 1'h0;\n  assign T_4579 = T_4577 | T_3619_1;\n  assign T_4581 = T_3502 == 1'h0;\n  assign T_4583 = T_4581 | T_3619_5;\n  assign T_4585 = T_3547 == 1'h0;\n  assign T_4587 = T_4585 | T_3619_10;\n  assign T_4589 = T_3583 == 1'h0;\n  assign T_4591 = T_4589 | T_3619_14;\n  assign T_4593 = T_3511 == 1'h0;\n  assign T_4595 = T_4593 | T_3619_6;\n  assign T_4597 = T_3475 == 1'h0;\n  assign T_4599 = T_4597 | T_3619_2;\n  assign T_4601 = T_3574 == 1'h0;\n  assign T_4603 = T_4601 | T_3619_13;\n  assign T_4605 = T_3538 == 1'h0;\n  assign T_4607 = T_4605 | T_3619_9;\n  assign T_4609 = T_3520 == 1'h0;\n  assign T_4611 = T_4609 | T_3619_7;\n  assign T_4613 = T_3484 == 1'h0;\n  assign T_4615 = T_4613 | T_3619_3;\n  assign T_4617 = T_3601 == 1'h0;\n  assign T_4619 = T_4617 | T_3619_16;\n  assign T_4621 = T_3565 == 1'h0;\n  assign T_4623 = T_4621 | T_3619_12;\n  assign T_4704_0 = T_4559;\n  assign T_4704_1 = T_4563;\n  assign T_4704_2 = T_4567;\n  assign T_4704_3 = T_4571;\n  assign T_4704_4 = T_4575;\n  assign T_4704_5 = T_4579;\n  assign T_4704_6 = T_4583;\n  assign T_4704_7 = T_4587;\n  assign T_4704_8 = T_4591;\n  assign T_4704_9 = T_4595;\n  assign T_4704_10 = T_4599;\n  assign T_4704_11 = T_4603;\n  assign T_4704_12 = T_4607;\n  assign T_4704_13 = T_4611;\n  assign T_4704_14 = T_4615;\n  assign T_4704_15 = T_4619;\n  assign T_4704_16 = T_4623;\n  assign T_4704_17 = 1'h1;\n  assign T_4704_18 = 1'h1;\n  assign T_4704_19 = 1'h1;\n  assign T_4704_20 = 1'h1;\n  assign T_4704_21 = 1'h1;\n  assign T_4704_22 = 1'h1;\n  assign T_4704_23 = 1'h1;\n  assign T_4704_24 = 1'h1;\n  assign T_4704_25 = 1'h1;\n  assign T_4704_26 = 1'h1;\n  assign T_4704_27 = 1'h1;\n  assign T_4704_28 = 1'h1;\n  assign T_4704_29 = 1'h1;\n  assign T_4704_30 = 1'h1;\n  assign T_4704_31 = 1'h1;\n  assign T_4742 = T_4557 | T_3624_0;\n  assign T_4746 = T_4561 | T_3624_4;\n  assign T_4750 = T_4565 | T_3624_8;\n  assign T_4754 = T_4569 | T_3624_11;\n  assign T_4758 = T_4573 | T_3624_15;\n  assign T_4762 = T_4577 | T_3624_1;\n  assign T_4766 = T_4581 | T_3624_5;\n  assign T_4770 = T_4585 | T_3624_10;\n  assign T_4774 = T_4589 | T_3624_14;\n  assign T_4778 = T_4593 | T_3624_6;\n  assign T_4782 = T_4597 | T_3624_2;\n  assign T_4786 = T_4601 | T_3624_13;\n  assign T_4790 = T_4605 | T_3624_9;\n  assign T_4794 = T_4609 | T_3624_7;\n  assign T_4798 = T_4613 | T_3624_3;\n  assign T_4802 = T_4617 | T_3624_16;\n  assign T_4806 = T_4621 | T_3624_12;\n  assign T_4887_0 = T_4742;\n  assign T_4887_1 = T_4746;\n  assign T_4887_2 = T_4750;\n  assign T_4887_3 = T_4754;\n  assign T_4887_4 = T_4758;\n  assign T_4887_5 = T_4762;\n  assign T_4887_6 = T_4766;\n  assign T_4887_7 = T_4770;\n  assign T_4887_8 = T_4774;\n  assign T_4887_9 = T_4778;\n  assign T_4887_10 = T_4782;\n  assign T_4887_11 = T_4786;\n  assign T_4887_12 = T_4790;\n  assign T_4887_13 = T_4794;\n  assign T_4887_14 = T_4798;\n  assign T_4887_15 = T_4802;\n  assign T_4887_16 = T_4806;\n  assign T_4887_17 = 1'h1;\n  assign T_4887_18 = 1'h1;\n  assign T_4887_19 = 1'h1;\n  assign T_4887_20 = 1'h1;\n  assign T_4887_21 = 1'h1;\n  assign T_4887_22 = 1'h1;\n  assign T_4887_23 = 1'h1;\n  assign T_4887_24 = 1'h1;\n  assign T_4887_25 = 1'h1;\n  assign T_4887_26 = 1'h1;\n  assign T_4887_27 = 1'h1;\n  assign T_4887_28 = 1'h1;\n  assign T_4887_29 = 1'h1;\n  assign T_4887_30 = 1'h1;\n  assign T_4887_31 = 1'h1;\n  assign T_4925 = T_4557 | T_3629_0;\n  assign T_4929 = T_4561 | T_3629_4;\n  assign T_4933 = T_4565 | T_3629_8;\n  assign T_4937 = T_4569 | T_3629_11;\n  assign T_4941 = T_4573 | T_3629_15;\n  assign T_4945 = T_4577 | T_3629_1;\n  assign T_4949 = T_4581 | T_3629_5;\n  assign T_4953 = T_4585 | T_3629_10;\n  assign T_4957 = T_4589 | T_3629_14;\n  assign T_4961 = T_4593 | T_3629_6;\n  assign T_4965 = T_4597 | T_3629_2;\n  assign T_4969 = T_4601 | T_3629_13;\n  assign T_4973 = T_4605 | T_3629_9;\n  assign T_4977 = T_4609 | T_3629_7;\n  assign T_4981 = T_4613 | T_3629_3;\n  assign T_4985 = T_4617 | T_3629_16;\n  assign T_4989 = T_4621 | T_3629_12;\n  assign T_5070_0 = T_4925;\n  assign T_5070_1 = T_4929;\n  assign T_5070_2 = T_4933;\n  assign T_5070_3 = T_4937;\n  assign T_5070_4 = T_4941;\n  assign T_5070_5 = T_4945;\n  assign T_5070_6 = T_4949;\n  assign T_5070_7 = T_4953;\n  assign T_5070_8 = T_4957;\n  assign T_5070_9 = T_4961;\n  assign T_5070_10 = T_4965;\n  assign T_5070_11 = T_4969;\n  assign T_5070_12 = T_4973;\n  assign T_5070_13 = T_4977;\n  assign T_5070_14 = T_4981;\n  assign T_5070_15 = T_4985;\n  assign T_5070_16 = T_4989;\n  assign T_5070_17 = 1'h1;\n  assign T_5070_18 = 1'h1;\n  assign T_5070_19 = 1'h1;\n  assign T_5070_20 = 1'h1;\n  assign T_5070_21 = 1'h1;\n  assign T_5070_22 = 1'h1;\n  assign T_5070_23 = 1'h1;\n  assign T_5070_24 = 1'h1;\n  assign T_5070_25 = 1'h1;\n  assign T_5070_26 = 1'h1;\n  assign T_5070_27 = 1'h1;\n  assign T_5070_28 = 1'h1;\n  assign T_5070_29 = 1'h1;\n  assign T_5070_30 = 1'h1;\n  assign T_5070_31 = 1'h1;\n  assign T_5108 = T_4557 | T_3634_0;\n  assign T_5112 = T_4561 | T_3634_4;\n  assign T_5116 = T_4565 | T_3634_8;\n  assign T_5120 = T_4569 | T_3634_11;\n  assign T_5124 = T_4573 | T_3634_15;\n  assign T_5128 = T_4577 | T_3634_1;\n  assign T_5132 = T_4581 | T_3634_5;\n  assign T_5136 = T_4585 | T_3634_10;\n  assign T_5140 = T_4589 | T_3634_14;\n  assign T_5144 = T_4593 | T_3634_6;\n  assign T_5148 = T_4597 | T_3634_2;\n  assign T_5152 = T_4601 | T_3634_13;\n  assign T_5156 = T_4605 | T_3634_9;\n  assign T_5160 = T_4609 | T_3634_7;\n  assign T_5164 = T_4613 | T_3634_3;\n  assign T_5168 = T_4617 | T_3634_16;\n  assign T_5172 = T_4621 | T_3634_12;\n  assign T_5253_0 = T_5108;\n  assign T_5253_1 = T_5112;\n  assign T_5253_2 = T_5116;\n  assign T_5253_3 = T_5120;\n  assign T_5253_4 = T_5124;\n  assign T_5253_5 = T_5128;\n  assign T_5253_6 = T_5132;\n  assign T_5253_7 = T_5136;\n  assign T_5253_8 = T_5140;\n  assign T_5253_9 = T_5144;\n  assign T_5253_10 = T_5148;\n  assign T_5253_11 = T_5152;\n  assign T_5253_12 = T_5156;\n  assign T_5253_13 = T_5160;\n  assign T_5253_14 = T_5164;\n  assign T_5253_15 = T_5168;\n  assign T_5253_16 = T_5172;\n  assign T_5253_17 = 1'h1;\n  assign T_5253_18 = 1'h1;\n  assign T_5253_19 = 1'h1;\n  assign T_5253_20 = 1'h1;\n  assign T_5253_21 = 1'h1;\n  assign T_5253_22 = 1'h1;\n  assign T_5253_23 = 1'h1;\n  assign T_5253_24 = 1'h1;\n  assign T_5253_25 = 1'h1;\n  assign T_5253_26 = 1'h1;\n  assign T_5253_27 = 1'h1;\n  assign T_5253_28 = 1'h1;\n  assign T_5253_29 = 1'h1;\n  assign T_5253_30 = 1'h1;\n  assign T_5253_31 = 1'h1;\n  assign T_5288 = T_3370_bits_index[0];\n  assign T_5289 = T_3370_bits_index[1];\n  assign T_5290 = T_3370_bits_index[2];\n  assign T_5291 = T_3370_bits_index[3];\n  assign T_5292 = T_3370_bits_index[4];\n  assign T_5298 = {T_5289,T_5288};\n  assign T_5299 = {T_5292,T_5291};\n  assign T_5300 = {T_5299,T_5290};\n  assign T_5301 = {T_5300,T_5298};\n  assign GEN_0 = GEN_45;\n  assign GEN_15 = 5'h1 == T_5301 ? T_4704_1 : T_4704_0;\n  assign GEN_16 = 5'h2 == T_5301 ? T_4704_2 : GEN_15;\n  assign GEN_17 = 5'h3 == T_5301 ? T_4704_3 : GEN_16;\n  assign GEN_18 = 5'h4 == T_5301 ? T_4704_4 : GEN_17;\n  assign GEN_19 = 5'h5 == T_5301 ? T_4704_5 : GEN_18;\n  assign GEN_20 = 5'h6 == T_5301 ? T_4704_6 : GEN_19;\n  assign GEN_21 = 5'h7 == T_5301 ? T_4704_7 : GEN_20;\n  assign GEN_22 = 5'h8 == T_5301 ? T_4704_8 : GEN_21;\n  assign GEN_23 = 5'h9 == T_5301 ? T_4704_9 : GEN_22;\n  assign GEN_24 = 5'ha == T_5301 ? T_4704_10 : GEN_23;\n  assign GEN_25 = 5'hb == T_5301 ? T_4704_11 : GEN_24;\n  assign GEN_26 = 5'hc == T_5301 ? T_4704_12 : GEN_25;\n  assign GEN_27 = 5'hd == T_5301 ? T_4704_13 : GEN_26;\n  assign GEN_28 = 5'he == T_5301 ? T_4704_14 : GEN_27;\n  assign GEN_29 = 5'hf == T_5301 ? T_4704_15 : GEN_28;\n  assign GEN_30 = 5'h10 == T_5301 ? T_4704_16 : GEN_29;\n  assign GEN_31 = 5'h11 == T_5301 ? T_4704_17 : GEN_30;\n  assign GEN_32 = 5'h12 == T_5301 ? T_4704_18 : GEN_31;\n  assign GEN_33 = 5'h13 == T_5301 ? T_4704_19 : GEN_32;\n  assign GEN_34 = 5'h14 == T_5301 ? T_4704_20 : GEN_33;\n  assign GEN_35 = 5'h15 == T_5301 ? T_4704_21 : GEN_34;\n  assign GEN_36 = 5'h16 == T_5301 ? T_4704_22 : GEN_35;\n  assign GEN_37 = 5'h17 == T_5301 ? T_4704_23 : GEN_36;\n  assign GEN_38 = 5'h18 == T_5301 ? T_4704_24 : GEN_37;\n  assign GEN_39 = 5'h19 == T_5301 ? T_4704_25 : GEN_38;\n  assign GEN_40 = 5'h1a == T_5301 ? T_4704_26 : GEN_39;\n  assign GEN_41 = 5'h1b == T_5301 ? T_4704_27 : GEN_40;\n  assign GEN_42 = 5'h1c == T_5301 ? T_4704_28 : GEN_41;\n  assign GEN_43 = 5'h1d == T_5301 ? T_4704_29 : GEN_42;\n  assign GEN_44 = 5'h1e == T_5301 ? T_4704_30 : GEN_43;\n  assign GEN_45 = 5'h1f == T_5301 ? T_4704_31 : GEN_44;\n  assign GEN_1 = GEN_76;\n  assign GEN_46 = 5'h1 == T_5301 ? T_4887_1 : T_4887_0;\n  assign GEN_47 = 5'h2 == T_5301 ? T_4887_2 : GEN_46;\n  assign GEN_48 = 5'h3 == T_5301 ? T_4887_3 : GEN_47;\n  assign GEN_49 = 5'h4 == T_5301 ? T_4887_4 : GEN_48;\n  assign GEN_50 = 5'h5 == T_5301 ? T_4887_5 : GEN_49;\n  assign GEN_51 = 5'h6 == T_5301 ? T_4887_6 : GEN_50;\n  assign GEN_52 = 5'h7 == T_5301 ? T_4887_7 : GEN_51;\n  assign GEN_53 = 5'h8 == T_5301 ? T_4887_8 : GEN_52;\n  assign GEN_54 = 5'h9 == T_5301 ? T_4887_9 : GEN_53;\n  assign GEN_55 = 5'ha == T_5301 ? T_4887_10 : GEN_54;\n  assign GEN_56 = 5'hb == T_5301 ? T_4887_11 : GEN_55;\n  assign GEN_57 = 5'hc == T_5301 ? T_4887_12 : GEN_56;\n  assign GEN_58 = 5'hd == T_5301 ? T_4887_13 : GEN_57;\n  assign GEN_59 = 5'he == T_5301 ? T_4887_14 : GEN_58;\n  assign GEN_60 = 5'hf == T_5301 ? T_4887_15 : GEN_59;\n  assign GEN_61 = 5'h10 == T_5301 ? T_4887_16 : GEN_60;\n  assign GEN_62 = 5'h11 == T_5301 ? T_4887_17 : GEN_61;\n  assign GEN_63 = 5'h12 == T_5301 ? T_4887_18 : GEN_62;\n  assign GEN_64 = 5'h13 == T_5301 ? T_4887_19 : GEN_63;\n  assign GEN_65 = 5'h14 == T_5301 ? T_4887_20 : GEN_64;\n  assign GEN_66 = 5'h15 == T_5301 ? T_4887_21 : GEN_65;\n  assign GEN_67 = 5'h16 == T_5301 ? T_4887_22 : GEN_66;\n  assign GEN_68 = 5'h17 == T_5301 ? T_4887_23 : GEN_67;\n  assign GEN_69 = 5'h18 == T_5301 ? T_4887_24 : GEN_68;\n  assign GEN_70 = 5'h19 == T_5301 ? T_4887_25 : GEN_69;\n  assign GEN_71 = 5'h1a == T_5301 ? T_4887_26 : GEN_70;\n  assign GEN_72 = 5'h1b == T_5301 ? T_4887_27 : GEN_71;\n  assign GEN_73 = 5'h1c == T_5301 ? T_4887_28 : GEN_72;\n  assign GEN_74 = 5'h1d == T_5301 ? T_4887_29 : GEN_73;\n  assign GEN_75 = 5'h1e == T_5301 ? T_4887_30 : GEN_74;\n  assign GEN_76 = 5'h1f == T_5301 ? T_4887_31 : GEN_75;\n  assign T_5318 = T_3370_bits_read ? GEN_0 : GEN_1;\n  assign GEN_2 = GEN_107;\n  assign GEN_77 = 5'h1 == T_5301 ? T_5070_1 : T_5070_0;\n  assign GEN_78 = 5'h2 == T_5301 ? T_5070_2 : GEN_77;\n  assign GEN_79 = 5'h3 == T_5301 ? T_5070_3 : GEN_78;\n  assign GEN_80 = 5'h4 == T_5301 ? T_5070_4 : GEN_79;\n  assign GEN_81 = 5'h5 == T_5301 ? T_5070_5 : GEN_80;\n  assign GEN_82 = 5'h6 == T_5301 ? T_5070_6 : GEN_81;\n  assign GEN_83 = 5'h7 == T_5301 ? T_5070_7 : GEN_82;\n  assign GEN_84 = 5'h8 == T_5301 ? T_5070_8 : GEN_83;\n  assign GEN_85 = 5'h9 == T_5301 ? T_5070_9 : GEN_84;\n  assign GEN_86 = 5'ha == T_5301 ? T_5070_10 : GEN_85;\n  assign GEN_87 = 5'hb == T_5301 ? T_5070_11 : GEN_86;\n  assign GEN_88 = 5'hc == T_5301 ? T_5070_12 : GEN_87;\n  assign GEN_89 = 5'hd == T_5301 ? T_5070_13 : GEN_88;\n  assign GEN_90 = 5'he == T_5301 ? T_5070_14 : GEN_89;\n  assign GEN_91 = 5'hf == T_5301 ? T_5070_15 : GEN_90;\n  assign GEN_92 = 5'h10 == T_5301 ? T_5070_16 : GEN_91;\n  assign GEN_93 = 5'h11 == T_5301 ? T_5070_17 : GEN_92;\n  assign GEN_94 = 5'h12 == T_5301 ? T_5070_18 : GEN_93;\n  assign GEN_95 = 5'h13 == T_5301 ? T_5070_19 : GEN_94;\n  assign GEN_96 = 5'h14 == T_5301 ? T_5070_20 : GEN_95;\n  assign GEN_97 = 5'h15 == T_5301 ? T_5070_21 : GEN_96;\n  assign GEN_98 = 5'h16 == T_5301 ? T_5070_22 : GEN_97;\n  assign GEN_99 = 5'h17 == T_5301 ? T_5070_23 : GEN_98;\n  assign GEN_100 = 5'h18 == T_5301 ? T_5070_24 : GEN_99;\n  assign GEN_101 = 5'h19 == T_5301 ? T_5070_25 : GEN_100;\n  assign GEN_102 = 5'h1a == T_5301 ? T_5070_26 : GEN_101;\n  assign GEN_103 = 5'h1b == T_5301 ? T_5070_27 : GEN_102;\n  assign GEN_104 = 5'h1c == T_5301 ? T_5070_28 : GEN_103;\n  assign GEN_105 = 5'h1d == T_5301 ? T_5070_29 : GEN_104;\n  assign GEN_106 = 5'h1e == T_5301 ? T_5070_30 : GEN_105;\n  assign GEN_107 = 5'h1f == T_5301 ? T_5070_31 : GEN_106;\n  assign GEN_3 = GEN_138;\n  assign GEN_108 = 5'h1 == T_5301 ? T_5253_1 : T_5253_0;\n  assign GEN_109 = 5'h2 == T_5301 ? T_5253_2 : GEN_108;\n  assign GEN_110 = 5'h3 == T_5301 ? T_5253_3 : GEN_109;\n  assign GEN_111 = 5'h4 == T_5301 ? T_5253_4 : GEN_110;\n  assign GEN_112 = 5'h5 == T_5301 ? T_5253_5 : GEN_111;\n  assign GEN_113 = 5'h6 == T_5301 ? T_5253_6 : GEN_112;\n  assign GEN_114 = 5'h7 == T_5301 ? T_5253_7 : GEN_113;\n  assign GEN_115 = 5'h8 == T_5301 ? T_5253_8 : GEN_114;\n  assign GEN_116 = 5'h9 == T_5301 ? T_5253_9 : GEN_115;\n  assign GEN_117 = 5'ha == T_5301 ? T_5253_10 : GEN_116;\n  assign GEN_118 = 5'hb == T_5301 ? T_5253_11 : GEN_117;\n  assign GEN_119 = 5'hc == T_5301 ? T_5253_12 : GEN_118;\n  assign GEN_120 = 5'hd == T_5301 ? T_5253_13 : GEN_119;\n  assign GEN_121 = 5'he == T_5301 ? T_5253_14 : GEN_120;\n  assign GEN_122 = 5'hf == T_5301 ? T_5253_15 : GEN_121;\n  assign GEN_123 = 5'h10 == T_5301 ? T_5253_16 : GEN_122;\n  assign GEN_124 = 5'h11 == T_5301 ? T_5253_17 : GEN_123;\n  assign GEN_125 = 5'h12 == T_5301 ? T_5253_18 : GEN_124;\n  assign GEN_126 = 5'h13 == T_5301 ? T_5253_19 : GEN_125;\n  assign GEN_127 = 5'h14 == T_5301 ? T_5253_20 : GEN_126;\n  assign GEN_128 = 5'h15 == T_5301 ? T_5253_21 : GEN_127;\n  assign GEN_129 = 5'h16 == T_5301 ? T_5253_22 : GEN_128;\n  assign GEN_130 = 5'h17 == T_5301 ? T_5253_23 : GEN_129;\n  assign GEN_131 = 5'h18 == T_5301 ? T_5253_24 : GEN_130;\n  assign GEN_132 = 5'h19 == T_5301 ? T_5253_25 : GEN_131;\n  assign GEN_133 = 5'h1a == T_5301 ? T_5253_26 : GEN_132;\n  assign GEN_134 = 5'h1b == T_5301 ? T_5253_27 : GEN_133;\n  assign GEN_135 = 5'h1c == T_5301 ? T_5253_28 : GEN_134;\n  assign GEN_136 = 5'h1d == T_5301 ? T_5253_29 : GEN_135;\n  assign GEN_137 = 5'h1e == T_5301 ? T_5253_30 : GEN_136;\n  assign GEN_138 = 5'h1f == T_5301 ? T_5253_31 : GEN_137;\n  assign T_5321 = T_3370_bits_read ? GEN_2 : GEN_3;\n  assign T_5322 = T_3370_ready & T_5318;\n  assign T_5323 = T_3295_valid & T_5318;\n  assign T_5324 = T_3334_ready & T_5321;\n  assign T_5325 = T_3370_valid & T_5321;\n  assign T_5327 = 32'h1 << T_5301;\n  assign T_5328 = {T_3493,T_3457};\n  assign T_5329 = {T_3556,T_3529};\n  assign T_5330 = {T_5329,T_5328};\n  assign T_5331 = {T_3466,T_3592};\n  assign T_5332 = {T_3547,T_3502};\n  assign T_5333 = {T_5332,T_5331};\n  assign T_5334 = {T_5333,T_5330};\n  assign T_5335 = {T_3511,T_3583};\n  assign T_5336 = {T_3574,T_3475};\n  assign T_5337 = {T_5336,T_5335};\n  assign T_5338 = {T_3520,T_3538};\n  assign T_5339 = {T_3601,T_3484};\n  assign T_5340 = {T_5339,T_5338};\n  assign T_5341 = {T_5340,T_5337};\n  assign T_5342 = {T_5341,T_5334};\n  assign T_5343 = {1'h1,T_3565};\n  assign T_5345 = {2'h3,T_5343};\n  assign T_5349 = {4'hf,T_5345};\n  assign T_5357 = {8'hff,T_5349};\n  assign T_5358 = {T_5357,T_5342};\n  assign T_5359 = T_5327 & T_5358;\n  assign T_5394 = T_3295_valid & T_3370_ready;\n  assign T_5395 = T_5394 & T_3370_bits_read;\n  assign T_5396 = T_5359[0];\n  assign T_5397 = T_5395 & T_5396;\n  assign T_5400 = T_3370_bits_read == 1'h0;\n  assign T_5401 = T_5394 & T_5400;\n  assign T_5403 = T_5401 & T_5396;\n  assign T_5404 = T_3370_valid & T_3334_ready;\n  assign T_5405 = T_5404 & T_3370_bits_read;\n  assign T_5407 = T_5405 & T_5396;\n  assign T_5411 = T_5404 & T_5400;\n  assign T_5413 = T_5411 & T_5396;\n  assign T_5416 = T_5359[1];\n  assign T_5417 = T_5395 & T_5416;\n  assign T_5423 = T_5401 & T_5416;\n  assign T_5427 = T_5405 & T_5416;\n  assign T_5433 = T_5411 & T_5416;\n  assign T_5436 = T_5359[2];\n  assign T_5437 = T_5395 & T_5436;\n  assign T_5443 = T_5401 & T_5436;\n  assign T_5447 = T_5405 & T_5436;\n  assign T_5453 = T_5411 & T_5436;\n  assign T_5456 = T_5359[3];\n  assign T_5457 = T_5395 & T_5456;\n  assign T_5463 = T_5401 & T_5456;\n  assign T_5467 = T_5405 & T_5456;\n  assign T_5473 = T_5411 & T_5456;\n  assign T_5476 = T_5359[4];\n  assign T_5477 = T_5395 & T_5476;\n  assign T_5483 = T_5401 & T_5476;\n  assign T_5487 = T_5405 & T_5476;\n  assign T_5493 = T_5411 & T_5476;\n  assign T_5496 = T_5359[5];\n  assign T_5497 = T_5395 & T_5496;\n  assign T_5503 = T_5401 & T_5496;\n  assign T_5507 = T_5405 & T_5496;\n  assign T_5513 = T_5411 & T_5496;\n  assign T_5516 = T_5359[6];\n  assign T_5517 = T_5395 & T_5516;\n  assign T_5523 = T_5401 & T_5516;\n  assign T_5527 = T_5405 & T_5516;\n  assign T_5533 = T_5411 & T_5516;\n  assign T_5536 = T_5359[7];\n  assign T_5537 = T_5395 & T_5536;\n  assign T_5543 = T_5401 & T_5536;\n  assign T_5547 = T_5405 & T_5536;\n  assign T_5553 = T_5411 & T_5536;\n  assign T_5556 = T_5359[8];\n  assign T_5557 = T_5395 & T_5556;\n  assign T_5563 = T_5401 & T_5556;\n  assign T_5567 = T_5405 & T_5556;\n  assign T_5573 = T_5411 & T_5556;\n  assign T_5576 = T_5359[9];\n  assign T_5577 = T_5395 & T_5576;\n  assign T_5583 = T_5401 & T_5576;\n  assign T_5587 = T_5405 & T_5576;\n  assign T_5593 = T_5411 & T_5576;\n  assign T_5596 = T_5359[10];\n  assign T_5597 = T_5395 & T_5596;\n  assign T_5603 = T_5401 & T_5596;\n  assign T_5607 = T_5405 & T_5596;\n  assign T_5613 = T_5411 & T_5596;\n  assign T_5616 = T_5359[11];\n  assign T_5617 = T_5395 & T_5616;\n  assign T_5623 = T_5401 & T_5616;\n  assign T_5627 = T_5405 & T_5616;\n  assign T_5633 = T_5411 & T_5616;\n  assign T_5636 = T_5359[12];\n  assign T_5637 = T_5395 & T_5636;\n  assign T_5643 = T_5401 & T_5636;\n  assign T_5647 = T_5405 & T_5636;\n  assign T_5653 = T_5411 & T_5636;\n  assign T_5656 = T_5359[13];\n  assign T_5657 = T_5395 & T_5656;\n  assign T_5663 = T_5401 & T_5656;\n  assign T_5667 = T_5405 & T_5656;\n  assign T_5673 = T_5411 & T_5656;\n  assign T_5676 = T_5359[14];\n  assign T_5677 = T_5395 & T_5676;\n  assign T_5683 = T_5401 & T_5676;\n  assign T_5687 = T_5405 & T_5676;\n  assign T_5693 = T_5411 & T_5676;\n  assign T_5696 = T_5359[15];\n  assign T_5697 = T_5395 & T_5696;\n  assign T_5703 = T_5401 & T_5696;\n  assign T_5707 = T_5405 & T_5696;\n  assign T_5713 = T_5411 & T_5696;\n  assign T_5716 = T_5359[16];\n  assign T_5717 = T_5395 & T_5716;\n  assign T_5723 = T_5401 & T_5716;"}
{"text": "\n  assign T_5727 = T_5405 & T_5716;\n  assign T_5733 = T_5411 & T_5716;\n  assign T_6137_0 = T_3457;\n  assign T_6137_1 = T_3493;\n  assign T_6137_2 = T_3529;\n  assign T_6137_3 = T_3556;\n  assign T_6137_4 = T_3592;\n  assign T_6137_5 = T_3466;\n  assign T_6137_6 = T_3502;\n  assign T_6137_7 = T_3547;\n  assign T_6137_8 = T_3583;\n  assign T_6137_9 = T_3511;\n  assign T_6137_10 = T_3475;\n  assign T_6137_11 = T_3574;\n  assign T_6137_12 = T_3538;\n  assign T_6137_13 = T_3520;\n  assign T_6137_14 = T_3484;\n  assign T_6137_15 = T_3601;\n  assign T_6137_16 = T_3565;\n  assign T_6137_17 = 1'h1;\n  assign T_6137_18 = 1'h1;\n  assign T_6137_19 = 1'h1;\n  assign T_6137_20 = 1'h1;\n  assign T_6137_21 = 1'h1;\n  assign T_6137_22 = 1'h1;\n  assign T_6137_23 = 1'h1;\n  assign T_6137_24 = 1'h1;\n  assign T_6137_25 = 1'h1;\n  assign T_6137_26 = 1'h1;\n  assign T_6137_27 = 1'h1;\n  assign T_6137_28 = 1'h1;\n  assign T_6137_29 = 1'h1;\n  assign T_6137_30 = 1'h1;\n  assign T_6137_31 = 1'h1;\n  assign T_6208_0 = valueReg;\n  assign T_6208_1 = T_4047;\n  assign T_6208_2 = T_4219;\n  assign T_6208_3 = portReg;\n  assign T_6208_4 = T_4511;\n  assign T_6208_5 = dsReg;\n  assign T_6208_6 = riseIeReg;\n  assign T_6208_7 = riseIpReg;\n  assign T_6208_8 = fallIeReg;\n  assign T_6208_9 = fallIpReg;\n  assign T_6208_10 = highIeReg;\n  assign T_6208_11 = highIpReg;\n  assign T_6208_12 = lowIeReg;\n  assign T_6208_13 = lowIpReg;\n  assign T_6208_14 = T_4007;\n  assign T_6208_15 = iofSelReg;\n  assign T_6208_16 = xorReg;\n  assign T_6208_17 = 32'h0;\n  assign T_6208_18 = 32'h0;\n  assign T_6208_19 = 32'h0;\n  assign T_6208_20 = 32'h0;\n  assign T_6208_21 = 32'h0;\n  assign T_6208_22 = 32'h0;\n  assign T_6208_23 = 32'h0;\n  assign T_6208_24 = 32'h0;\n  assign T_6208_25 = 32'h0;\n  assign T_6208_26 = 32'h0;\n  assign T_6208_27 = 32'h0;\n  assign T_6208_28 = 32'h0;\n  assign T_6208_29 = 32'h0;\n  assign T_6208_30 = 32'h0;\n  assign T_6208_31 = 32'h0;\n  assign GEN_4 = GEN_169;\n  assign GEN_139 = 5'h1 == T_5301 ? T_6137_1 : T_6137_0;\n  assign GEN_140 = 5'h2 == T_5301 ? T_6137_2 : GEN_139;\n  assign GEN_141 = 5'h3 == T_5301 ? T_6137_3 : GEN_140;\n  assign GEN_142 = 5'h4 == T_5301 ? T_6137_4 : GEN_141;\n  assign GEN_143 = 5'h5 == T_5301 ? T_6137_5 : GEN_142;\n  assign GEN_144 = 5'h6 == T_5301 ? T_6137_6 : GEN_143;\n  assign GEN_145 = 5'h7 == T_5301 ? T_6137_7 : GEN_144;\n  assign GEN_146 = 5'h8 == T_5301 ? T_6137_8 : GEN_145;\n  assign GEN_147 = 5'h9 == T_5301 ? T_6137_9 : GEN_146;\n  assign GEN_148 = 5'ha == T_5301 ? T_6137_10 : GEN_147;\n  assign GEN_149 = 5'hb == T_5301 ? T_6137_11 : GEN_148;\n  assign GEN_150 = 5'hc == T_5301 ? T_6137_12 : GEN_149;\n  assign GEN_151 = 5'hd == T_5301 ? T_6137_13 : GEN_150;\n  assign GEN_152 = 5'he == T_5301 ? T_6137_14 : GEN_151;\n  assign GEN_153 = 5'hf == T_5301 ? T_6137_15 : GEN_152;\n  assign GEN_154 = 5'h10 == T_5301 ? T_6137_16 : GEN_153;\n  assign GEN_155 = 5'h11 == T_5301 ? T_6137_17 : GEN_154;\n  assign GEN_156 = 5'h12 == T_5301 ? T_6137_18 : GEN_155;\n  assign GEN_157 = 5'h13 == T_5301 ? T_6137_19 : GEN_156;\n  assign GEN_158 = 5'h14 == T_5301 ? T_6137_20 : GEN_157;\n  assign GEN_159 = 5'h15 == T_5301 ? T_6137_21 : GEN_158;\n  assign GEN_160 = 5'h16 == T_5301 ? T_6137_22 : GEN_159;\n  assign GEN_161 = 5'h17 == T_5301 ? T_6137_23 : GEN_160;\n  assign GEN_162 = 5'h18 == T_5301 ? T_6137_24 : GEN_161;\n  assign GEN_163 = 5'h19 == T_5301 ? T_6137_25 : GEN_162;\n  assign GEN_164 = 5'h1a == T_5301 ? T_6137_26 : GEN_163;\n  assign GEN_165 = 5'h1b == T_5301 ? T_6137_27 : GEN_164;\n  assign GEN_166 = 5'h1c == T_5301 ? T_6137_28 : GEN_165;\n  assign GEN_167 = 5'h1d == T_5301 ? T_6137_29 : GEN_166;\n  assign GEN_168 = 5'h1e == T_5301 ? T_6137_30 : GEN_167;\n  assign GEN_169 = 5'h1f == T_5301 ? T_6137_31 : GEN_168;\n  assign GEN_5 = GEN_200;\n  assign GEN_170 = 5'h1 == T_5301 ? T_6208_1 : T_6208_0;\n  assign GEN_171 = 5'h2 == T_5301 ? T_6208_2 : GEN_170;\n  assign GEN_172 = 5'h3 == T_5301 ? T_6208_3 : GEN_171;\n  assign GEN_173 = 5'h4 == T_5301 ? T_6208_4 : GEN_172;\n  assign GEN_174 = 5'h5 == T_5301 ? T_6208_5 : GEN_173;\n  assign GEN_175 = 5'h6 == T_5301 ? T_6208_6 : GEN_174;\n  assign GEN_176 = 5'h7 == T_5301 ? T_6208_7 : GEN_175;\n  assign GEN_177 = 5'h8 == T_5301 ? T_6208_8 : GEN_176;\n  assign GEN_178 = 5'h9 == T_5301 ? T_6208_9 : GEN_177;\n  assign GEN_179 = 5'ha == T_5301 ? T_6208_10 : GEN_178;\n  assign GEN_180 = 5'hb == T_5301 ? T_6208_11 : GEN_179;\n  assign GEN_181 = 5'hc == T_5301 ? T_6208_12 : GEN_180;\n  assign GEN_182 = 5'hd == T_5301 ? T_6208_13 : GEN_181;\n  assign GEN_183 = 5'he == T_5301 ? T_6208_14 : GEN_182;\n  assign GEN_184 = 5'hf == T_5301 ? T_6208_15 : GEN_183;\n  assign GEN_185 = 5'h10 == T_5301 ? T_6208_16 : GEN_184;\n  assign GEN_186 = 5'h11 == T_5301 ? T_6208_17 : GEN_185;\n  assign GEN_187 = 5'h12 == T_5301 ? T_6208_18 : GEN_186;\n  assign GEN_188 = 5'h13 == T_5301 ? T_6208_19 : GEN_187;\n  assign GEN_189 = 5'h14 == T_5301 ? T_6208_20 : GEN_188;\n  assign GEN_190 = 5'h15 == T_5301 ? T_6208_21 : GEN_189;\n  assign GEN_191 = 5'h16 == T_5301 ? T_6208_22 : GEN_190;\n  assign GEN_192 = 5'h17 == T_5301 ? T_6208_23 : GEN_191;\n  assign GEN_193 = 5'h18 == T_5301 ? T_6208_24 : GEN_192;\n  assign GEN_194 = 5'h19 == T_5301 ? T_6208_25 : GEN_193;\n  assign GEN_195 = 5'h1a == T_5301 ? T_6208_26 : GEN_194;\n  assign GEN_196 = 5'h1b == T_5301 ? T_6208_27 : GEN_195;\n  assign GEN_197 = 5'h1c == T_5301 ? T_6208_28 : GEN_196;\n  assign GEN_198 = 5'h1d == T_5301 ? T_6208_29 : GEN_197;\n  assign GEN_199 = 5'h1e == T_5301 ? T_6208_30 : GEN_198;\n  assign GEN_200 = 5'h1f == T_5301 ? T_6208_31 : GEN_199;\n  assign T_6245 = GEN_4 ? GEN_5 : 32'h0;\n  assign T_6246 = T_3334_bits_extra[9:8];\n  assign T_6248 = T_3334_bits_extra[7:3];\n  assign T_6249 = T_3334_bits_extra[2:0];\n  assign T_6260_opcode = 3'h0;\n  assign T_6260_param = 2'h0;\n  assign T_6260_size = T_6249;\n  assign T_6260_source = T_6248;\n  assign T_6260_sink = 1'h0;\n  assign T_6260_addr_lo = T_6246;\n  assign T_6260_data = 32'h0;\n  assign T_6260_error = 1'h0;\n  assign swPinCtrl_0_oval = T_7570;\n  assign swPinCtrl_0_oe = T_7571;\n  assign swPinCtrl_0_ie = T_7573;\n  assign swPinCtrl_0_pue = T_7569;\n  assign swPinCtrl_0_ds = T_7572;\n  assign swPinCtrl_1_oval = T_7606;\n  assign swPinCtrl_1_oe = T_7607;\n  assign swPinCtrl_1_ie = T_7609;\n  assign swPinCtrl_1_pue = T_7605;\n  assign swPinCtrl_1_ds = T_7608;\n  assign swPinCtrl_2_oval = T_7642;\n  assign swPinCtrl_2_oe = T_7643;\n  assign swPinCtrl_2_ie = T_7645;\n  assign swPinCtrl_2_pue = T_7641;\n  assign swPinCtrl_2_ds = T_7644;\n  assign swPinCtrl_3_oval = T_7678;\n  assign swPinCtrl_3_oe = T_7679;\n  assign swPinCtrl_3_ie = T_7681;\n  assign swPinCtrl_3_pue = T_7677;\n  assign swPinCtrl_3_ds = T_7680;\n  assign swPinCtrl_4_oval = T_7714;\n  assign swPinCtrl_4_oe = T_7715;\n  assign swPinCtrl_4_ie = T_7717;\n  assign swPinCtrl_4_pue = T_7713;\n  assign swPinCtrl_4_ds = T_7716;\n  assign swPinCtrl_5_oval = T_7750;\n  assign swPinCtrl_5_oe = T_7751;\n  assign swPinCtrl_5_ie = T_7753;\n  assign swPinCtrl_5_pue = T_7749;\n  assign swPinCtrl_5_ds = T_7752;\n  assign swPinCtrl_6_oval = T_7786;\n  assign swPinCtrl_6_oe = T_7787;\n  assign swPinCtrl_6_ie = T_7789;\n  assign swPinCtrl_6_pue = T_7785;\n  assign swPinCtrl_6_ds = T_7788;\n  assign swPinCtrl_7_oval = T_7822;\n  assign swPinCtrl_7_oe = T_7823;\n  assign swPinCtrl_7_ie = T_7825;\n  assign swPinCtrl_7_pue = T_7821;\n  assign swPinCtrl_7_ds = T_7824;\n  assign swPinCtrl_8_oval = T_7858;\n  assign swPinCtrl_8_oe = T_7859;\n  assign swPinCtrl_8_ie = T_7861;\n  assign swPinCtrl_8_pue = T_7857;\n  assign swPinCtrl_8_ds = T_7860;\n  assign swPinCtrl_9_oval = T_7894;\n  assign swPinCtrl_9_oe = T_7895;\n  assign swPinCtrl_9_ie = T_7897;\n  assign swPinCtrl_9_pue = T_7893;\n  assign swPinCtrl_9_ds = T_7896;\n  assign swPinCtrl_10_oval = T_7930;\n  assign swPinCtrl_10_oe = T_7931;\n  assign swPinCtrl_10_ie = T_7933;\n  assign swPinCtrl_10_pue = T_7929;\n  assign swPinCtrl_10_ds = T_7932;\n  assign swPinCtrl_11_oval = T_7966;\n  assign swPinCtrl_11_oe = T_7967;\n  assign swPinCtrl_11_ie = T_7969;\n  assign swPinCtrl_11_pue = T_7965;\n  assign swPinCtrl_11_ds = T_7968;\n  assign swPinCtrl_12_oval = T_8002;\n  assign swPinCtrl_12_oe = T_8003;\n  assign swPinCtrl_12_ie = T_8005;\n  assign swPinCtrl_12_pue = T_8001;\n  assign swPinCtrl_12_ds = T_8004;\n  assign swPinCtrl_13_oval = T_8038;\n  assign swPinCtrl_13_oe = T_8039;\n  assign swPinCtrl_13_ie = T_8041;\n  assign swPinCtrl_13_pue = T_8037;\n  assign swPinCtrl_13_ds = T_8040;\n  assign swPinCtrl_14_oval = T_8074;\n  assign swPinCtrl_14_oe = T_8075;\n  assign swPinCtrl_14_ie = T_8077;\n  assign swPinCtrl_14_pue = T_8073;\n  assign swPinCtrl_14_ds = T_8076;\n  assign swPinCtrl_15_oval = T_8110;\n  assign swPinCtrl_15_oe = T_8111;\n  assign swPinCtrl_15_ie = T_8113;\n  assign swPinCtrl_15_pue = T_8109;\n  assign swPinCtrl_15_ds = T_8112;\n  assign swPinCtrl_16_oval = T_8146;\n  assign swPinCtrl_16_oe = T_8147;\n  assign swPinCtrl_16_ie = T_8149;\n  assign swPinCtrl_16_pue = T_8145;\n  assign swPinCtrl_16_ds = T_8148;\n  assign swPinCtrl_17_oval = T_8182;\n  assign swPinCtrl_17_oe = T_8183;\n  assign swPinCtrl_17_ie = T_8185;\n  assign swPinCtrl_17_pue = T_8181;\n  assign swPinCtrl_17_ds = T_8184;\n  assign swPinCtrl_18_oval = T_8218;\n  assign swPinCtrl_18_oe = T_8219;\n  assign swPinCtrl_18_ie = T_8221;\n  assign swPinCtrl_18_pue = T_8217;\n  assign swPinCtrl_18_ds = T_8220;\n  assign swPinCtrl_19_oval = T_8254;\n  assign swPinCtrl_19_oe = T_8255;\n  assign swPinCtrl_19_ie = T_8257;\n  assign swPinCtrl_19_pue = T_8253;\n  assign swPinCtrl_19_ds = T_8256;\n  assign swPinCtrl_20_oval = T_8290;\n  assign swPinCtrl_20_oe = T_8291;\n  assign swPinCtrl_20_ie = T_8293;\n  assign swPinCtrl_20_pue = T_8289;\n  assign swPinCtrl_20_ds = T_8292;\n  assign swPinCtrl_21_oval = T_8326;\n  assign swPinCtrl_21_oe = T_8327;\n  assign swPinCtrl_21_ie = T_8329;\n  assign swPinCtrl_21_pue = T_8325;\n  assign swPinCtrl_21_ds = T_8328;\n  assign swPinCtrl_22_oval = T_8362;\n  assign swPinCtrl_22_oe = T_8363;\n  assign swPinCtrl_22_ie = T_8365;\n  assign swPinCtrl_22_pue = T_8361;\n  assign swPinCtrl_22_ds = T_8364;\n  assign swPinCtrl_23_oval = T_8398;\n  assign swPinCtrl_23_oe = T_8399;\n  assign swPinCtrl_23_ie = T_8401;\n  assign swPinCtrl_23_pue = T_8397;\n  assign swPinCtrl_23_ds = T_8400;\n  assign swPinCtrl_24_oval = T_8434;\n  assign swPinCtrl_24_oe = T_8435;\n  assign swPinCtrl_24_ie = T_8437;\n  assign swPinCtrl_24_pue = T_8433;\n  assign swPinCtrl_24_ds = T_8436;\n  assign swPinCtrl_25_oval = T_8470;\n  assign swPinCtrl_25_oe = T_8471;\n  assign swPinCtrl_25_ie = T_8473;\n  assign swPinCtrl_25_pue = T_8469;\n  assign swPinCtrl_25_ds = T_8472;\n  assign swPinCtrl_26_oval = T_8506;\n  assign swPinCtrl_26_oe = T_8507;\n  assign swPinCtrl_26_ie = T_8509;\n  assign swPinCtrl_26_pue = T_8505;\n  assign swPinCtrl_26_ds = T_8508;\n  assign swPinCtrl_27_oval = T_8542;\n  assign swPinCtrl_27_oe = T_8543;\n  assign swPinCtrl_27_ie = T_8545;\n  assign swPinCtrl_27_pue = T_8541;\n  assign swPinCtrl_27_ds = T_8544;\n  assign swPinCtrl_28_oval = T_8578;\n  assign swPinCtrl_28_oe = T_8579;\n  assign swPinCtrl_28_ie = T_8581;\n  assign swPinCtrl_28_pue = T_8577;\n  assign swPinCtrl_28_ds = T_8580;\n  assign swPinCtrl_29_oval = T_8614;\n  assign swPinCtrl_29_oe = T_8615;\n  assign swPinCtrl_29_ie = T_8617;\n  assign swPinCtrl_29_pue = T_8613;\n  assign swPinCtrl_29_ds = T_8616;\n  assign swPinCtrl_30_oval = T_8650;\n  assign swPinCtrl_30_oe = T_8651;\n  assign swPinCtrl_30_ie = T_8653;\n  assign swPinCtrl_30_pue = T_8649;\n  assign swPinCtrl_30_ds = T_8652;\n  assign swPinCtrl_31_oval = T_8686;\n  assign swPinCtrl_31_oe = T_8687;\n  assign swPinCtrl_31_ie = T_8689;\n  assign swPinCtrl_31_pue = T_8685;\n  assign swPinCtrl_31_ds = T_8688;\n  assign iof0Ctrl_0_oval = GEN_201;\n  assign iof0Ctrl_0_oe = GEN_202;\n  assign iof0Ctrl_0_ie = GEN_203;\n  assign iof0Ctrl_1_oval = GEN_207;\n  assign iof0Ctrl_1_oe = GEN_208;\n  assign iof0Ctrl_1_ie = GEN_209;\n  assign iof0Ctrl_2_oval = GEN_213;\n  assign iof0Ctrl_2_oe = GEN_214;\n  assign iof0Ctrl_2_ie = GEN_215;\n  assign iof0Ctrl_3_oval = GEN_219;\n  assign iof0Ctrl_3_oe = GEN_220;\n  assign iof0Ctrl_3_ie = GEN_221;\n  assign iof0Ctrl_4_oval = GEN_225;\n  assign iof0Ctrl_4_oe = GEN_226;\n  assign iof0Ctrl_4_ie = GEN_227;\n  assign iof0Ctrl_5_oval = GEN_231;\n  assign iof0Ctrl_5_oe = GEN_232;\n  assign iof0Ctrl_5_ie = GEN_233;\n  assign iof0Ctrl_6_oval = GEN_237;\n  assign iof0Ctrl_6_oe = GEN_238;\n  assign iof0Ctrl_6_ie = GEN_239;\n  assign iof0Ctrl_7_oval = GEN_243;\n  assign iof0Ctrl_7_oe = GEN_244;\n  assign iof0Ctrl_7_ie = GEN_245;\n  assign iof0Ctrl_8_oval = GEN_249;\n  assign iof0Ctrl_8_oe = GEN_250;\n  assign iof0Ctrl_8_ie = GEN_251;\n  assign iof0Ctrl_9_oval = GEN_255;\n  assign iof0Ctrl_9_oe = GEN_256;\n  assign iof0Ctrl_9_ie = GEN_257;\n  assign iof0Ctrl_10_oval = GEN_261;\n  assign iof0Ctrl_10_oe = GEN_262;\n  assign iof0Ctrl_10_ie = GEN_263;\n  assign iof0Ctrl_11_oval = GEN_267;\n  assign iof0Ctrl_11_oe = GEN_268;\n  assign iof0Ctrl_11_ie = GEN_269;\n  assign iof0Ctrl_12_oval = GEN_273;\n  assign iof0Ctrl_12_oe = GEN_274;\n  assign iof0Ctrl_12_ie = GEN_275;\n  assign iof0Ctrl_13_oval = GEN_279;\n  assign iof0Ctrl_13_oe = GEN_280;\n  assign iof0Ctrl_13_ie = GEN_281;\n  assign iof0Ctrl_14_oval = GEN_285;\n  assign iof0Ctrl_14_oe = GEN_286;\n  assign iof0Ctrl_14_ie = GEN_287;\n  assign iof0Ctrl_15_oval = GEN_291;\n  assign iof0Ctrl_15_oe = GEN_292;\n  assign iof0Ctrl_15_ie = GEN_293;\n  assign iof0Ctrl_16_oval = GEN_297;\n  assign iof0Ctrl_16_oe = GEN_298;\n  assign iof0Ctrl_16_ie = GEN_299;\n  assign iof0Ctrl_17_oval = GEN_303;\n  assign iof0Ctrl_17_oe = GEN_304;\n  assign iof0Ctrl_17_ie = GEN_305;\n  assign iof0Ctrl_18_oval = GEN_309;\n  assign iof0Ctrl_18_oe = GEN_310;\n  assign iof0Ctrl_18_ie = GEN_311;\n  assign iof0Ctrl_19_oval = GEN_315;\n  assign iof0Ctrl_19_oe = GEN_316;\n  assign iof0Ctrl_19_ie = GEN_317;\n  assign iof0Ctrl_20_oval = GEN_321;\n  assign iof0Ctrl_20_oe = GEN_322;\n  assign iof0Ctrl_20_ie = GEN_323;\n  assign iof0Ctrl_21_oval = GEN_327;\n  assign iof0Ctrl_21_oe = GEN_328;\n  assign iof0Ctrl_21_ie = GEN_329;\n  assign iof0Ctrl_22_oval = GEN_333;\n  assign iof0Ctrl_22_oe = GEN_334;\n  assign iof0Ctrl_22_ie = GEN_335;\n  assign iof0Ctrl_23_oval = GEN_339;\n  assign iof0Ctrl_23_oe = GEN_340;\n  assign iof0Ctrl_23_ie = GEN_341;\n  assign iof0Ctrl_24_oval = GEN_345;\n  assign iof0Ctrl_24_oe = GEN_346;\n  assign iof0Ctrl_24_ie = GEN_347;\n  assign iof0Ctrl_25_oval = GEN_351;\n  assign iof0Ctrl_25_oe = GEN_352;\n  assign iof0Ctrl_25_ie = GEN_353;\n  assign iof0Ctrl_26_oval = GEN_357;\n  assign iof0Ctrl_26_oe = GEN_358;\n  assign iof0Ctrl_26_ie = GEN_359;\n  assign iof0Ctrl_27_oval = GEN_363;\n  assign iof0Ctrl_27_oe = GEN_364;\n  assign iof0Ctrl_27_ie = GEN_365;\n  assign iof0Ctrl_28_oval = GEN_369;\n  assign iof0Ctrl_28_oe = GEN_370;\n  assign iof0Ctrl_28_ie = GEN_371;\n  assign iof0Ctrl_29_oval = GEN_375;\n  assign iof0Ctrl_29_oe = GEN_376;\n  assign iof0Ctrl_29_ie = GEN_377;\n  assign iof0Ctrl_30_oval = GEN_381;\n  assign iof0Ctrl_30_oe = GEN_382;\n  assign iof0Ctrl_30_ie = GEN_383;\n  assign iof0Ctrl_31_oval = GEN_387;\n  assign iof0Ctrl_31_oe = GEN_388;\n  assign iof0Ctrl_31_ie = GEN_389;\n  assign iof1Ctrl_0_oval = GEN_204;\n  assign iof1Ctrl_0_oe = GEN_205;\n  assign iof1Ctrl_0_ie = GEN_206;\n  assign iof1Ctrl_1_oval = GEN_210;\n  assign iof1Ctrl_1_oe = GEN_211;\n  assign iof1Ctrl_1_ie = GEN_212;\n  assign iof1Ctrl_2_oval = GEN_216;\n  assign iof1Ctrl_2_oe = GEN_217;\n  assign iof1Ctrl_2_ie = GEN_218;\n  assign iof1Ctrl_3_oval = GEN_222;\n  assign iof1Ctrl_3_oe = GEN_223;\n  assign iof1Ctrl_3_ie = GEN_224;\n  assign iof1Ctrl_4_oval = GEN_228;\n  assign iof1Ctrl_4_oe = GEN_229;\n  assign iof1Ctrl_4_ie = GEN_230;\n  assign iof1Ctrl_5_oval = GEN_234;\n  assign iof1Ctrl_5_oe = GEN_235;\n  assign iof1Ctrl_5_ie = GEN_236;\n  assign iof1Ctrl_6_oval = GEN_240;\n  assign iof1Ctrl_6_oe = GEN_241;\n  assign iof1Ctrl_6_ie = GEN_242;\n  assign iof1Ctrl_7_oval = GEN_246;\n  assign iof1Ctrl_7_oe = GEN_247;\n  assign iof1Ctrl_7_ie = GEN_248;\n  assign iof1Ctrl_8_oval = GEN_252;\n  assign iof1Ctrl_8_oe = GEN_253;\n  assign iof1Ctrl_8_ie = GEN_254;\n  assign iof1Ctrl_9_oval = GEN_258;\n  assign iof1Ctrl_9_oe = GEN_259;\n  assign iof1Ctrl_9_ie = GEN_260;\n  assign iof1Ctrl_10_oval = GEN_264;\n  assign iof1Ctrl_10_oe = GEN_265;\n  assign iof1Ctrl_10_ie = GEN_266;\n  assign iof1Ctrl_11_oval = GEN_270;\n  assign iof1Ctrl_11_oe = GEN_271;\n  assign iof1Ctrl_11_ie = GEN_272;\n  assign iof1Ctrl_12_oval = GEN_276;\n  assign iof1Ctrl_12_oe = GEN_277;\n  assign iof1Ctrl_12_ie = GEN_278;\n  assign iof1Ctrl_13_oval = GEN_282;\n  assign iof1Ctrl_13_oe = GEN_283;\n  assign iof1Ctrl_13_ie = GEN_284;\n  assign iof1Ctrl_14_oval = GEN_288;\n  assign iof1Ctrl_14_oe = GEN_289;\n  assign iof1Ctrl_14_ie = GEN_290;\n  assign iof1Ctrl_15_oval = GEN_294;\n  assign iof1Ctrl_15_oe = GEN_295;\n  assign iof1Ctrl_15_ie = GEN_296;\n  assign iof1Ctrl_16_oval = GEN_300;\n  assign iof1Ctrl_16_oe = GEN_301;\n  assign iof1Ctrl_16_ie = GEN_302;\n  assign iof1Ctrl_17_oval = GEN_306;\n  assign iof1Ctrl_17_oe = GEN_307;\n  assign iof1Ctrl_17_ie = GEN_308;\n  assign iof1Ctrl_18_oval = GEN_312;\n  assign iof1Ctrl_18_oe = GEN_313;\n  assign iof1Ctrl_18_ie = GEN_314;\n  assign iof1Ctrl_19_oval = GEN_318;\n  assign iof1Ctrl_19_oe = GEN_319;\n  assign iof1Ctrl_19_ie = GEN_320;\n  assign iof1Ctrl_20_oval = GEN_324;\n  assign iof1Ctrl_20_oe = GEN_325;\n  assign iof1Ctrl_20_ie = GEN_326;\n  assign iof1Ctrl_21_oval = GEN_330;\n  assign iof1Ctrl_21_oe = GEN_331;\n  assign iof1Ctrl_21_ie = GEN_332;\n  assign iof1Ctrl_22_oval = GEN_336;\n  assign iof1Ctrl_22_oe = GEN_337;\n  assign iof1Ctrl_22_ie = GEN_338;\n  assign iof1Ctrl_23_oval = GEN_342;\n  assign iof1Ctrl_23_oe = GEN_343;\n  assign iof1Ctrl_23_ie = GEN_344;\n  assign iof1Ctrl_24_oval = GEN_348;\n  assign iof1Ctrl_24_oe = GEN_349;\n  assign iof1Ctrl_24_ie = GEN_350;\n  assign iof1Ctrl_25_oval = GEN_354;\n  assign iof1Ctrl_25_oe = GEN_355;\n  assign iof1Ctrl_25_ie = GEN_356;\n  assign iof1Ctrl_26_oval = GEN_360;\n  assign iof1Ctrl_26_oe = GEN_361;\n  assign iof1Ctrl_26_ie = GEN_362;\n  assign iof1Ctrl_27_oval = GEN_366;\n  assign iof1Ctrl_27_oe = GEN_367;\n  assign iof1Ctrl_27_ie = GEN_368;\n  assign iof1Ctrl_28_oval = GEN_372;\n  assign iof1Ctrl_28_oe = GEN_373;\n  assign iof1Ctrl_28_ie = GEN_374;\n  assign iof1Ctrl_29_oval = GEN_378;\n  assign iof1Ctrl_29_oe = GEN_379;\n  assign iof1Ctrl_29_ie = GEN_380;\n  assign iof1Ctrl_30_oval = GEN_384;\n  assign iof1Ctrl_30_oe = GEN_385;\n  assign iof1Ctrl_30_ie = GEN_386;\n  assign iof1Ctrl_31_oval = GEN_390;\n  assign iof1Ctrl_31_oe = GEN_391;\n  assign iof1Ctrl_31_ie = GEN_392;\n  assign iofCtrl_0_oval = T_7575_oval;\n  assign iofCtrl_0_oe = T_7575_oe;\n  assign iofCtrl_0_ie = T_7575_ie;\n  assign iofCtrl_1_oval = T_7611_oval;\n  assign iofCtrl_1_oe = T_7611_oe;\n  assign iofCtrl_1_ie = T_7611_ie;\n  assign iofCtrl_2_oval = T_7647_oval;\n  assign iofCtrl_2_oe = T_7647_oe;\n  assign iofCtrl_2_ie = T_7647_ie;\n  assign iofCtrl_3_oval = T_7683_oval;\n  assign iofCtrl_3_oe = T_7683_oe;\n  assign iofCtrl_3_ie = T_7683_ie;\n  assign iofCtrl_4_oval = T_7719_oval;\n  assign iofCtrl_4_oe = T_7719_oe;\n  assign iofCtrl_4_ie = T_7719_ie;\n  assign iofCtrl_5_oval = T_7755_oval;\n  assign iofCtrl_5_oe = T_7755_oe;\n  assign iofCtrl_5_ie = T_7755_ie;\n  assign iofCtrl_6_oval = T_7791_oval;\n  assign iofCtrl_6_oe = T_7791_oe;\n  assign iofCtrl_6_ie = T_7791_ie;\n  assign iofCtrl_7_oval = T_7827_oval;\n  assign iofCtrl_7_oe = T_7827_oe;\n  assign iofCtrl_7_ie = T_7827_ie;\n  assign iofCtrl_8_oval = T_7863_oval;\n  assign iofCtrl_8_oe = T_7863_oe;\n  assign iofCtrl_8_ie = T_7863_ie;\n  assign iofCtrl_9_oval = T_7899_oval;\n  assign iofCtrl_9_oe = T_7899_oe;\n  assign iofCtrl_9_ie = T_7899_ie;\n  assign iofCtrl_10_oval = T_7935_oval;\n  assign iofCtrl_10_oe = T_7935_oe;\n  assign iofCtrl_10_ie = T_7935_ie;\n  assign iofCtrl_11_oval = T_7971_oval;\n  assign iofCtrl_11_oe = T_7971_oe;\n  assign iofCtrl_11_ie = T_7971_ie;\n  assign iofCtrl_12_oval = T_8007_oval;\n  assign iofCtrl_12_oe = T_8007_oe;\n  assign iofCtrl_12_ie = T_8007_ie;\n  assign iofCtrl_13_oval = T_8043_oval;\n  assign iofCtrl_13_oe = T_8043_oe;\n  assign iofCtrl_13_ie = T_8043_ie;\n  assign iofCtrl_14_oval = T_8079_oval;\n  assign iofCtrl_14_oe = T_8079_oe;\n  assign iofCtrl_14_ie = T_8079_ie;\n  assign i"}
{"text": "ofCtrl_15_oval = T_8115_oval;\n  assign iofCtrl_15_oe = T_8115_oe;\n  assign iofCtrl_15_ie = T_8115_ie;\n  assign iofCtrl_16_oval = T_8151_oval;\n  assign iofCtrl_16_oe = T_8151_oe;\n  assign iofCtrl_16_ie = T_8151_ie;\n  assign iofCtrl_17_oval = T_8187_oval;\n  assign iofCtrl_17_oe = T_8187_oe;\n  assign iofCtrl_17_ie = T_8187_ie;\n  assign iofCtrl_18_oval = T_8223_oval;\n  assign iofCtrl_18_oe = T_8223_oe;\n  assign iofCtrl_18_ie = T_8223_ie;\n  assign iofCtrl_19_oval = T_8259_oval;\n  assign iofCtrl_19_oe = T_8259_oe;\n  assign iofCtrl_19_ie = T_8259_ie;\n  assign iofCtrl_20_oval = T_8295_oval;\n  assign iofCtrl_20_oe = T_8295_oe;\n  assign iofCtrl_20_ie = T_8295_ie;\n  assign iofCtrl_21_oval = T_8331_oval;\n  assign iofCtrl_21_oe = T_8331_oe;\n  assign iofCtrl_21_ie = T_8331_ie;\n  assign iofCtrl_22_oval = T_8367_oval;\n  assign iofCtrl_22_oe = T_8367_oe;\n  assign iofCtrl_22_ie = T_8367_ie;\n  assign iofCtrl_23_oval = T_8403_oval;\n  assign iofCtrl_23_oe = T_8403_oe;\n  assign iofCtrl_23_ie = T_8403_ie;\n  assign iofCtrl_24_oval = T_8439_oval;\n  assign iofCtrl_24_oe = T_8439_oe;\n  assign iofCtrl_24_ie = T_8439_ie;\n  assign iofCtrl_25_oval = T_8475_oval;\n  assign iofCtrl_25_oe = T_8475_oe;\n  assign iofCtrl_25_ie = T_8475_ie;\n  assign iofCtrl_26_oval = T_8511_oval;\n  assign iofCtrl_26_oe = T_8511_oe;\n  assign iofCtrl_26_ie = T_8511_ie;\n  assign iofCtrl_27_oval = T_8547_oval;\n  assign iofCtrl_27_oe = T_8547_oe;\n  assign iofCtrl_27_ie = T_8547_ie;\n  assign iofCtrl_28_oval = T_8583_oval;\n  assign iofCtrl_28_oe = T_8583_oe;\n  assign iofCtrl_28_ie = T_8583_ie;\n  assign iofCtrl_29_oval = T_8619_oval;\n  assign iofCtrl_29_oe = T_8619_oe;\n  assign iofCtrl_29_ie = T_8619_ie;\n  assign iofCtrl_30_oval = T_8655_oval;\n  assign iofCtrl_30_oe = T_8655_oe;\n  assign iofCtrl_30_ie = T_8655_ie;\n  assign iofCtrl_31_oval = T_8691_oval;\n  assign iofCtrl_31_oe = T_8691_oe;\n  assign iofCtrl_31_ie = T_8691_ie;\n  assign iofPlusSwPinCtrl_0_oval = iofCtrl_0_oval;\n  assign iofPlusSwPinCtrl_0_oe = iofCtrl_0_oe;\n  assign iofPlusSwPinCtrl_0_ie = iofCtrl_0_ie;\n  assign iofPlusSwPinCtrl_0_pue = swPinCtrl_0_pue;\n  assign iofPlusSwPinCtrl_0_ds = swPinCtrl_0_ds;\n  assign iofPlusSwPinCtrl_1_oval = iofCtrl_1_oval;\n  assign iofPlusSwPinCtrl_1_oe = iofCtrl_1_oe;\n  assign iofPlusSwPinCtrl_1_ie = iofCtrl_1_ie;\n  assign iofPlusSwPinCtrl_1_pue = swPinCtrl_1_pue;\n  assign iofPlusSwPinCtrl_1_ds = swPinCtrl_1_ds;\n  assign iofPlusSwPinCtrl_2_oval = iofCtrl_2_oval;\n  assign iofPlusSwPinCtrl_2_oe = iofCtrl_2_oe;\n  assign iofPlusSwPinCtrl_2_ie = iofCtrl_2_ie;\n  assign iofPlusSwPinCtrl_2_pue = swPinCtrl_2_pue;\n  assign iofPlusSwPinCtrl_2_ds = swPinCtrl_2_ds;\n  assign iofPlusSwPinCtrl_3_oval = iofCtrl_3_oval;\n  assign iofPlusSwPinCtrl_3_oe = iofCtrl_3_oe;\n  assign iofPlusSwPinCtrl_3_ie = iofCtrl_3_ie;\n  assign iofPlusSwPinCtrl_3_pue = swPinCtrl_3_pue;\n  assign iofPlusSwPinCtrl_3_ds = swPinCtrl_3_ds;\n  assign iofPlusSwPinCtrl_4_oval = iofCtrl_4_oval;\n  assign iofPlusSwPinCtrl_4_oe = iofCtrl_4_oe;\n  assign iofPlusSwPinCtrl_4_ie = iofCtrl_4_ie;\n  assign iofPlusSwPinCtrl_4_pue = swPinCtrl_4_pue;\n  assign iofPlusSwPinCtrl_4_ds = swPinCtrl_4_ds;\n  assign iofPlusSwPinCtrl_5_oval = iofCtrl_5_oval;\n  assign iofPlusSwPinCtrl_5_oe = iofCtrl_5_oe;\n  assign iofPlusSwPinCtrl_5_ie = iofCtrl_5_ie;\n  assign iofPlusSwPinCtrl_5_pue = swPinCtrl_5_pue;\n  assign iofPlusSwPinCtrl_5_ds = swPinCtrl_5_ds;\n  assign iofPlusSwPinCtrl_6_oval = iofCtrl_6_oval;\n  assign iofPlusSwPinCtrl_6_oe = iofCtrl_6_oe;\n  assign iofPlusSwPinCtrl_6_ie = iofCtrl_6_ie;\n  assign iofPlusSwPinCtrl_6_pue = swPinCtrl_6_pue;\n  assign iofPlusSwPinCtrl_6_ds = swPinCtrl_6_ds;\n  assign iofPlusSwPinCtrl_7_oval = iofCtrl_7_oval;\n  assign iofPlusSwPinCtrl_7_oe = iofCtrl_7_oe;\n  assign iofPlusSwPinCtrl_7_ie = iofCtrl_7_ie;\n  assign iofPlusSwPinCtrl_7_pue = swPinCtrl_7_pue;\n  assign iofPlusSwPinCtrl_7_ds = swPinCtrl_7_ds;\n  assign iofPlusSwPinCtrl_8_oval = iofCtrl_8_oval;\n  assign iofPlusSwPinCtrl_8_oe = iofCtrl_8_oe;\n  assign iofPlusSwPinCtrl_8_ie = iofCtrl_8_ie;\n  assign iofPlusSwPinCtrl_8_pue = swPinCtrl_8_pue;\n  assign iofPlusSwPinCtrl_8_ds = swPinCtrl_8_ds;\n  assign iofPlusSwPinCtrl_9_oval = iofCtrl_9_oval;\n  assign iofPlusSwPinCtrl_9_oe = iofCtrl_9_oe;\n  assign iofPlusSwPinCtrl_9_ie = iofCtrl_9_ie;\n  assign iofPlusSwPinCtrl_9_pue = swPinCtrl_9_pue;\n  assign iofPlusSwPinCtrl_9_ds = swPinCtrl_9_ds;\n  assign iofPlusSwPinCtrl_10_oval = iofCtrl_10_oval;\n  assign iofPlusSwPinCtrl_10_oe = iofCtrl_10_oe;\n  assign iofPlusSwPinCtrl_10_ie = iofCtrl_10_ie;\n  assign iofPlusSwPinCtrl_10_pue = swPinCtrl_10_pue;\n  assign iofPlusSwPinCtrl_10_ds = swPinCtrl_10_ds;\n  assign iofPlusSwPinCtrl_11_oval = iofCtrl_11_oval;\n  assign iofPlusSwPinCtrl_11_oe = iofCtrl_11_oe;\n  assign iofPlusSwPinCtrl_11_ie = iofCtrl_11_ie;\n  assign iofPlusSwPinCtrl_11_pue = swPinCtrl_11_pue;\n  assign iofPlusSwPinCtrl_11_ds = swPinCtrl_11_ds;\n  assign iofPlusSwPinCtrl_12_oval = iofCtrl_12_oval;\n  assign iofPlusSwPinCtrl_12_oe = iofCtrl_12_oe;\n  assign iofPlusSwPinCtrl_12_ie = iofCtrl_12_ie;\n  assign iofPlusSwPinCtrl_12_pue = swPinCtrl_12_pue;\n  assign iofPlusSwPinCtrl_12_ds = swPinCtrl_12_ds;\n  assign iofPlusSwPinCtrl_13_oval = iofCtrl_13_oval;\n  assign iofPlusSwPinCtrl_13_oe = iofCtrl_13_oe;\n  assign iofPlusSwPinCtrl_13_ie = iofCtrl_13_ie;\n  assign iofPlusSwPinCtrl_13_pue = swPinCtrl_13_pue;\n  assign iofPlusSwPinCtrl_13_ds = swPinCtrl_13_ds;\n  assign iofPlusSwPinCtrl_14_oval = iofCtrl_14_oval;\n  assign iofPlusSwPinCtrl_14_oe = iofCtrl_14_oe;\n  assign iofPlusSwPinCtrl_14_ie = iofCtrl_14_ie;\n  assign iofPlusSwPinCtrl_14_pue = swPinCtrl_14_pue;\n  assign iofPlusSwPinCtrl_14_ds = swPinCtrl_14_ds;\n  assign iofPlusSwPinCtrl_15_oval = iofCtrl_15_oval;\n  assign iofPlusSwPinCtrl_15_oe = iofCtrl_15_oe;\n  assign iofPlusSwPinCtrl_15_ie = iofCtrl_15_ie;\n  assign iofPlusSwPinCtrl_15_pue = swPinCtrl_15_pue;\n  assign iofPlusSwPinCtrl_15_ds = swPinCtrl_15_ds;\n  assign iofPlusSwPinCtrl_16_oval = iofCtrl_16_oval;\n  assign iofPlusSwPinCtrl_16_oe = iofCtrl_16_oe;\n  assign iofPlusSwPinCtrl_16_ie = iofCtrl_16_ie;\n  assign iofPlusSwPinCtrl_16_pue = swPinCtrl_16_pue;\n  assign iofPlusSwPinCtrl_16_ds = swPinCtrl_16_ds;\n  assign iofPlusSwPinCtrl_17_oval = iofCtrl_17_oval;\n  assign iofPlusSwPinCtrl_17_oe = iofCtrl_17_oe;\n  assign iofPlusSwPinCtrl_17_ie = iofCtrl_17_ie;\n  assign iofPlusSwPinCtrl_17_pue = swPinCtrl_17_pue;\n  assign iofPlusSwPinCtrl_17_ds = swPinCtrl_17_ds;\n  assign iofPlusSwPinCtrl_18_oval = iofCtrl_18_oval;\n  assign iofPlusSwPinCtrl_18_oe = iofCtrl_18_oe;\n  assign iofPlusSwPinCtrl_18_ie = iofCtrl_18_ie;\n  assign iofPlusSwPinCtrl_18_pue = swPinCtrl_18_pue;\n  assign iofPlusSwPinCtrl_18_ds = swPinCtrl_18_ds;\n  assign iofPlusSwPinCtrl_19_oval = iofCtrl_19_oval;\n  assign iofPlusSwPinCtrl_19_oe = iofCtrl_19_oe;\n  assign iofPlusSwPinCtrl_19_ie = iofCtrl_19_ie;\n  assign iofPlusSwPinCtrl_19_pue = swPinCtrl_19_pue;\n  assign iofPlusSwPinCtrl_19_ds = swPinCtrl_19_ds;\n  assign iofPlusSwPinCtrl_20_oval = iofCtrl_20_oval;\n  assign iofPlusSwPinCtrl_20_oe = iofCtrl_20_oe;\n  assign iofPlusSwPinCtrl_20_ie = iofCtrl_20_ie;\n  assign iofPlusSwPinCtrl_20_pue = swPinCtrl_20_pue;\n  assign iofPlusSwPinCtrl_20_ds = swPinCtrl_20_ds;\n  assign iofPlusSwPinCtrl_21_oval = iofCtrl_21_oval;\n  assign iofPlusSwPinCtrl_21_oe = iofCtrl_21_oe;\n  assign iofPlusSwPinCtrl_21_ie = iofCtrl_21_ie;\n  assign iofPlusSwPinCtrl_21_pue = swPinCtrl_21_pue;\n  assign iofPlusSwPinCtrl_21_ds = swPinCtrl_21_ds;\n  assign iofPlusSwPinCtrl_22_oval = iofCtrl_22_oval;\n  assign iofPlusSwPinCtrl_22_oe = iofCtrl_22_oe;\n  assign iofPlusSwPinCtrl_22_ie = iofCtrl_22_ie;\n  assign iofPlusSwPinCtrl_22_pue = swPinCtrl_22_pue;\n  assign iofPlusSwPinCtrl_22_ds = swPinCtrl_22_ds;\n  assign iofPlusSwPinCtrl_23_oval = iofCtrl_23_oval;\n  assign iofPlusSwPinCtrl_23_oe = iofCtrl_23_oe;\n  assign iofPlusSwPinCtrl_23_ie = iofCtrl_23_ie;\n  assign iofPlusSwPinCtrl_23_pue = swPinCtrl_23_pue;\n  assign iofPlusSwPinCtrl_23_ds = swPinCtrl_23_ds;\n  assign iofPlusSwPinCtrl_24_oval = iofCtrl_24_oval;\n  assign iofPlusSwPinCtrl_24_oe = iofCtrl_24_oe;\n  assign iofPlusSwPinCtrl_24_ie = iofCtrl_24_ie;\n  assign iofPlusSwPinCtrl_24_pue = swPinCtrl_24_pue;\n  assign iofPlusSwPinCtrl_24_ds = swPinCtrl_24_ds;\n  assign iofPlusSwPinCtrl_25_oval = iofCtrl_25_oval;\n  assign iofPlusSwPinCtrl_25_oe = iofCtrl_25_oe;\n  assign iofPlusSwPinCtrl_25_ie = iofCtrl_25_ie;\n  assign iofPlusSwPinCtrl_25_pue = swPinCtrl_25_pue;\n  assign iofPlusSwPinCtrl_25_ds = swPinCtrl_25_ds;\n  assign iofPlusSwPinCtrl_26_oval = iofCtrl_26_oval;\n  assign iofPlusSwPinCtrl_26_oe = iofCtrl_26_oe;\n  assign iofPlusSwPinCtrl_26_ie = iofCtrl_26_ie;\n  assign iofPlusSwPinCtrl_26_pue = swPinCtrl_26_pue;\n  assign iofPlusSwPinCtrl_26_ds = swPinCtrl_26_ds;\n  assign iofPlusSwPinCtrl_27_oval = iofCtrl_27_oval;\n  assign iofPlusSwPinCtrl_27_oe = iofCtrl_27_oe;\n  assign iofPlusSwPinCtrl_27_ie = iofCtrl_27_ie;\n  assign iofPlusSwPinCtrl_27_pue = swPinCtrl_27_pue;\n  assign iofPlusSwPinCtrl_27_ds = swPinCtrl_27_ds;\n  assign iofPlusSwPinCtrl_28_oval = iofCtrl_28_oval;\n  assign iofPlusSwPinCtrl_28_oe = iofCtrl_28_oe;\n  assign iofPlusSwPinCtrl_28_ie = iofCtrl_28_ie;\n  assign iofPlusSwPinCtrl_28_pue = swPinCtrl_28_pue;\n  assign iofPlusSwPinCtrl_28_ds = swPinCtrl_28_ds;\n  assign iofPlusSwPinCtrl_29_oval = iofCtrl_29_oval;\n  assign iofPlusSwPinCtrl_29_oe = iofCtrl_29_oe;\n  assign iofPlusSwPinCtrl_29_ie = iofCtrl_29_ie;\n  assign iofPlusSwPinCtrl_29_pue = swPinCtrl_29_pue;\n  assign iofPlusSwPinCtrl_29_ds = swPinCtrl_29_ds;\n  assign iofPlusSwPinCtrl_30_oval = iofCtrl_30_oval;\n  assign iofPlusSwPinCtrl_30_oe = iofCtrl_30_oe;\n  assign iofPlusSwPinCtrl_30_ie = iofCtrl_30_ie;\n  assign iofPlusSwPinCtrl_30_pue = swPinCtrl_30_pue;\n  assign iofPlusSwPinCtrl_30_ds = swPinCtrl_30_ds;\n  assign iofPlusSwPinCtrl_31_oval = iofCtrl_31_oval;\n  assign iofPlusSwPinCtrl_31_oe = iofCtrl_31_oe;\n  assign iofPlusSwPinCtrl_31_ie = iofCtrl_31_ie;\n  assign iofPlusSwPinCtrl_31_pue = swPinCtrl_31_pue;\n  assign iofPlusSwPinCtrl_31_ds = swPinCtrl_31_ds;\n  assign T_7569 = pueReg_io_q[0];\n  assign T_7570 = portReg[0];\n  assign T_7571 = oeReg_io_q[0];\n  assign T_7572 = dsReg[0];\n  assign T_7573 = ieReg_io_q[0];\n  assign GEN_201 = io_port_iof_0_0_o_valid ? io_port_iof_0_0_o_oval : swPinCtrl_0_oval;\n  assign GEN_202 = io_port_iof_0_0_o_valid ? io_port_iof_0_0_o_oe : swPinCtrl_0_oe;\n  assign GEN_203 = io_port_iof_0_0_o_valid ? io_port_iof_0_0_o_ie : swPinCtrl_0_ie;\n  assign GEN_204 = io_port_iof_1_0_o_valid ? io_port_iof_1_0_o_oval : swPinCtrl_0_oval;\n  assign GEN_205 = io_port_iof_1_0_o_valid ? io_port_iof_1_0_o_oe : swPinCtrl_0_oe;\n  assign GEN_206 = io_port_iof_1_0_o_valid ? io_port_iof_1_0_o_ie : swPinCtrl_0_ie;\n  assign T_7574 = iofSelReg[0];\n  assign T_7575_oval = T_7574 ? iof1Ctrl_0_oval : iof0Ctrl_0_oval;\n  assign T_7575_oe = T_7574 ? iof1Ctrl_0_oe : iof0Ctrl_0_oe;\n  assign T_7575_ie = T_7574 ? iof1Ctrl_0_ie : iof0Ctrl_0_ie;\n  assign T_7579 = iofEnReg_io_q[0];\n  assign T_7580_oval = T_7579 ? iofPlusSwPinCtrl_0_oval : swPinCtrl_0_oval;\n  assign T_7580_oe = T_7579 ? iofPlusSwPinCtrl_0_oe : swPinCtrl_0_oe;\n  assign T_7580_ie = T_7579 ? iofPlusSwPinCtrl_0_ie : swPinCtrl_0_ie;\n  assign T_7580_pue = T_7579 ? iofPlusSwPinCtrl_0_pue : swPinCtrl_0_pue;\n  assign T_7580_ds = T_7579 ? iofPlusSwPinCtrl_0_ds : swPinCtrl_0_ds;\n  assign T_7586 = xorReg[0];\n  assign T_7587 = T_7580_oval ^ T_7586;\n  assign T_7588 = riseIpReg[0];\n  assign T_7589 = riseIeReg[0];\n  assign T_7590 = T_7588 & T_7589;\n  assign T_7591 = fallIpReg[0];\n  assign T_7592 = fallIeReg[0];\n  assign T_7593 = T_7591 & T_7592;\n  assign T_7594 = T_7590 | T_7593;\n  assign T_7595 = highIpReg[0];\n  assign T_7596 = highIeReg[0];\n  assign T_7597 = T_7595 & T_7596;\n  assign T_7598 = T_7594 | T_7597;\n  assign T_7599 = lowIpReg[0];\n  assign T_7600 = lowIeReg[0];\n  assign T_7601 = T_7599 & T_7600;\n  assign T_7602 = T_7598 | T_7601;\n  assign T_7603 = inSyncReg[0];\n  assign T_7605 = pueReg_io_q[1];\n  assign T_7606 = portReg[1];\n  assign T_7607 = oeReg_io_q[1];\n  assign T_7608 = dsReg[1];\n  assign T_7609 = ieReg_io_q[1];\n  assign GEN_207 = io_port_iof_0_1_o_valid ? io_port_iof_0_1_o_oval : swPinCtrl_1_oval;\n  assign GEN_208 = io_port_iof_0_1_o_valid ? io_port_iof_0_1_o_oe : swPinCtrl_1_oe;\n  assign GEN_209 = io_port_iof_0_1_o_valid ? io_port_iof_0_1_o_ie : swPinCtrl_1_ie;\n  assign GEN_210 = io_port_iof_1_1_o_valid ? io_port_iof_1_1_o_oval : swPinCtrl_1_oval;\n  assign GEN_211 = io_port_iof_1_1_o_valid ? io_port_iof_1_1_o_oe : swPinCtrl_1_oe;\n  assign GEN_212 = io_port_iof_1_1_o_valid ? io_port_iof_1_1_o_ie : swPinCtrl_1_ie;\n  assign T_7610 = iofSelReg[1];\n  assign T_7611_oval = T_7610 ? iof1Ctrl_1_oval : iof0Ctrl_1_oval;\n  assign T_7611_oe = T_7610 ? iof1Ctrl_1_oe : iof0Ctrl_1_oe;\n  assign T_7611_ie = T_7610 ? iof1Ctrl_1_ie : iof0Ctrl_1_ie;\n  assign T_7615 = iofEnReg_io_q[1];\n  assign T_7616_oval = T_7615 ? iofPlusSwPinCtrl_1_oval : swPinCtrl_1_oval;\n  assign T_7616_oe = T_7615 ? iofPlusSwPinCtrl_1_oe : swPinCtrl_1_oe;\n  assign T_7616_ie = T_7615 ? iofPlusSwPinCtrl_1_ie : swPinCtrl_1_ie;\n  assign T_7616_pue = T_7615 ? iofPlusSwPinCtrl_1_pue : swPinCtrl_1_pue;\n  assign T_7616_ds = T_7615 ? iofPlusSwPinCtrl_1_ds : swPinCtrl_1_ds;\n  assign T_7622 = xorReg[1];\n  assign T_7623 = T_7616_oval ^ T_7622;\n  assign T_7624 = riseIpReg[1];\n  assign T_7625 = riseIeReg[1];\n  assign T_7626 = T_7624 & T_7625;\n  assign T_7627 = fallIpReg[1];\n  assign T_7628 = fallIeReg[1];\n  assign T_7629 = T_7627 & T_7628;\n  assign T_7630 = T_7626 | T_7629;\n  assign T_7631 = highIpReg[1];\n  assign T_7632 = highIeReg[1];\n  assign T_7633 = T_7631 & T_7632;\n  assign T_7634 = T_7630 | T_7633;\n  assign T_7635 = lowIpReg[1];\n  assign T_7636 = lowIeReg[1];\n  assign T_7637 = T_7635 & T_7636;\n  assign T_7638 = T_7634 | T_7637;\n  assign T_7639 = inSyncReg[1];\n  assign T_7641 = pueReg_io_q[2];\n  assign T_7642 = portReg[2];\n  assign T_7643 = oeReg_io_q[2];\n  assign T_7644 = dsReg[2];\n  assign T_7645 = ieReg_io_q[2];\n  assign GEN_213 = io_port_iof_0_2_o_valid ? io_port_iof_0_2_o_oval : swPinCtrl_2_oval;\n  assign GEN_214 = io_port_iof_0_2_o_valid ? io_port_iof_0_2_o_oe : swPinCtrl_2_oe;\n  assign GEN_215 = io_port_iof_0_2_o_valid ? io_port_iof_0_2_o_ie : swPinCtrl_2_ie;\n  assign GEN_216 = io_port_iof_1_2_o_valid ? io_port_iof_1_2_o_oval : swPinCtrl_2_oval;\n  assign GEN_217 = io_port_iof_1_2_o_valid ? io_port_iof_1_2_o_oe : swPinCtrl_2_oe;\n  assign GEN_218 = io_port_iof_1_2_o_valid ? io_port_iof_1_2_o_ie : swPinCtrl_2_ie;\n  assign T_7646 = iofSelReg[2];\n  assign T_7647_oval = T_7646 ? iof1Ctrl_2_oval : iof0Ctrl_2_oval;\n  assign T_7647_oe = T_7646 ? iof1Ctrl_2_oe : iof0Ctrl_2_oe;\n  assign T_7647_ie = T_7646 ? iof1Ctrl_2_ie : iof0Ctrl_2_ie;\n  assign T_7651 = iofEnReg_io_q[2];\n  assign T_7652_oval = T_7651 ? iofPlusSwPinCtrl_2_oval : swPinCtrl_2_oval;\n  assign T_7652_oe = T_7651 ? iofPlusSwPinCtrl_2_oe : swPinCtrl_2_oe;\n  assign T_7652_ie = T_7651 ? iofPlusSwPinCtrl_2_ie : swPinCtrl_2_ie;\n  assign T_7652_pue = T_7651 ? iofPlusSwPinCtrl_2_pue : swPinCtrl_2_pue;\n  assign T_7652_ds = T_7651 ? iofPlusSwPinCtrl_2_ds : swPinCtrl_2_ds;\n  assign T_7658 = xorReg[2];\n  assign T_7659 = T_7652_oval ^ T_7658;\n  assign T_7660 = riseIpReg[2];\n  assign T_7661 = riseIeReg[2];\n  assign T_7662 = T_7660 & T_7661;\n  assign T_7663 = fallIpReg[2];\n  assign T_7664 = fallIeReg[2];\n  assign T_7665 = T_7663 & T_7664;\n  assign T_7666 = T_7662 | T_7665;\n  assign T_7667 = highIpReg[2];\n  assign T_7668 = highIeReg[2];\n  assign T_7669 = T_7667 & T_7668;\n  assign T_7670 = T_7666 | T_7669;\n  assign T_7671 = lowIpReg[2];\n  assign T_7672 = lowIeReg[2];\n  assign T_7673 = T_7671 & T_7672;\n  assign T_7674 = T_7670 | T_7673;\n  assign T_7675 = inSyncReg[2];\n  assign T_7677 = pueReg_io_q[3];\n  assign T_7678 = portReg[3];\n  assign T_7679 = oeReg_io_q[3];\n  assign T_7680 = dsReg[3];\n  assign T_7681 = ieReg_io_q[3];\n  assign GEN_219 = io_port_iof_0_3_o_valid ? io_port_iof_0_3_o_oval : swPinCtrl_3_oval;\n  assign GEN_220 = io_port_iof_0_3_o_valid ? io_port_iof_0_3_o_oe : swPinCtrl_3_oe;\n  assign GEN_221 = io_port_iof_0_3_o_valid ? io_port_iof_0_3_o_ie : swPinCtrl_3_ie;\n  assign GEN_222 = io_port_iof_1_3_o_valid ? io_port_iof_1_3_o_oval : swPinCtrl_3_oval;\n  assign GEN_223 = io_port_iof_1_3_o_valid ? io_port_iof_1_3_o_oe : swPinCtrl_3_oe;\n  assign GEN_224 = io_port_iof_1_3_o_valid ? io_port_iof_1_3_o_ie : swPinCtrl_3_ie;\n  assign T_7682 = iofSelReg[3];\n  assign T_7683_oval = T_7682 ? iof1Ctrl_3_oval : iof0Ctrl_3_oval;\n  assign T_7683_oe = T_7682 ? iof1Ctrl_3_oe : iof0Ctrl_3_oe;\n  assign T_7683_ie = T_7682 ? iof1Ctrl_3_ie : iof0Ctrl_3_ie;\n  assign T_7687 = iofEnReg_io_q[3];\n  assign T_7688_oval = T_7687 ? iofPlusSwPinCtrl_3_oval : swPinCtrl_3_oval;\n  assign T_7688_oe = T_7687 ? iofPlusSwPinCtrl_3_oe : swPinCtrl_3_oe;\n  assign T_7688_ie = T_7687 ? iofPlusSwPinCtrl_3_ie : swPinCtrl_3_ie;\n  assign T_7688_pue = T_7687 ? iofPlusSwPinCtrl_3_pue : swPinCtrl_3_pue;\n  assign T_7688_ds = T_7687 ? iofPlusSwPinCtrl_3_ds : swPinCtrl_3_ds;\n  assign T_7694 = xorReg[3];\n  assign T_7695 = T_7688_oval ^ T_7694;\n  assign T_7696 = riseIpReg[3];\n  assign T_7697 = riseIeReg[3];\n  assign T_7698 = T_7696 & T_7697;\n  assign T_7699 = fallIpReg[3];\n  assign T_7700 = fallIeReg[3];\n  assign T_7701 = T_7699 & T_7700;\n  assign T_7702 = T_7698 | T_7701;\n  assign T_7703 = highIpReg[3];\n  assign T_7704 = highIeReg[3];\n  assign T_7705 = T_7703 & T_7704;\n  assign T_7706 = T_7702 | T_7705;\n  assign T_7707 = lowIpReg[3];\n  assign T_7708 = lowIeReg[3];\n  assign T_7709 = T_7707 & T_7708;\n  assign T_7710 = T_7706 | T_7709;\n  assign T_7711 = inSyncReg[3];\n  assign T_7713 = pueReg_io_q[4];\n  assign T_7714 = portReg[4];\n  assign T_7715 = oeReg_io_q[4];\n  assign T_7716 = dsReg[4];\n  assign T_7717 = ieReg_io_q[4];\n  assign GEN_225 = io_port_iof_0_4_o_valid ? io_port_iof_0_4_o_oval : swPinCtrl_4_oval;\n  assign GEN_226 = io_port_iof_0_4_o_valid ? io_port_iof_0_4_o_oe : swPinCtrl_4_oe;\n  assign GEN_227 = io_port_iof_0_4_o_valid ? io_port_iof_0_4_o_ie : swPinCtrl_4_ie;\n  assign GEN_228 = io_port_iof_1_4_o_valid ? io_port_iof_1_4_o_oval : swPinCtrl_4_oval;\n  assign GEN_229 = io_port_iof_1_4_o_valid ? io_port_iof_1_4_o_oe : swPinCtrl_4_oe;\n  assign GEN_230 = io_port_iof_1_4_o_valid ? io_port_iof_1_4_o_ie : swPinCtrl_4_ie;\n  assign T_7718 = iofSelReg[4];\n  assign T_7719_oval = T_7718 ? iof1Ctrl_4_oval : iof0Ctrl_4_oval;\n  assign T_7719_oe = T_7718 ? iof1Ctrl_4_oe : iof0Ctrl_4_oe;\n  assign T_7719_ie = T_7718 ? iof1Ctrl_4_ie : iof0Ctrl_4_ie;\n  assign T_7723 = iofEnReg_io_q[4];\n  assign T_7724_oval = T_7723 ? iofPlusSwPinCtrl_4_oval : swPinCtrl_4_oval;\n  assign T_7724_oe = T_7723 ? iofPlusSwPinCtrl_4_oe : swPinCtrl_4_oe;\n  assign T_7724_ie = T_7723 ? iofPlusSwPinCtrl_4_ie : swPinCtrl_4_ie;\n  assign T_7724_pue = T_7723 ? iofPlusSwPinCtrl_4_pue : swPinCtrl_4_pue;\n  assign T_7724_ds = T_7723 ? iofPlusSwPinCtrl_4_ds : swPinCtrl_4_ds;\n  assign T_7730 = xorReg[4];\n  assign T_7731 = T_7724_oval ^ T_7730;\n  assign T_7732 = riseIpReg[4];\n  assign T_7733 = riseIeReg[4];\n  assign T_7734 = T_7732 & T_7733;\n  assign T_7735 = fallIpReg[4];\n  assign T_7736 = fallIeReg[4];\n  assign T_7737 = T_7735 & T_7736;\n  assign T_7738 = T_7734 | T_7737;\n  assign T_7739 = highIpReg[4];\n  assign T_7740 = highIeReg[4];\n  assign T_7741 = T_7739 & T_7740;\n  assign T_7742 = T_7738 | T_7741;\n  assign T_7743 = lowIpReg[4];\n  assign T_7744 = lowIeReg[4];\n  assign T_7745 = T_7743 & T_7744;\n  assign T_7746 = T_7742 | T_7745;\n  assign T_7747 = inSyncReg[4];\n  assign T_7749 = pueReg_io_q[5];\n  assign T_7750 = portReg[5];\n  assign T_7751 = oeReg_io_q[5];\n  assign T_7752 = dsReg[5];\n  assign T_7753 = ieReg_io_q[5];\n  assign GEN_231 = io_port_iof_0_5_o_valid ? io_port_iof_0_5_o_oval : swPinCtrl_5_oval;\n  assign GEN_232 = io_port_iof_0_5_o_valid ? io_port_iof_0_5_o_oe : swPinCtrl_5_oe;\n  assign GEN_233 = io_port_iof_0_5_o_valid ? io_port_iof_0_5_o_ie : swPinCtrl_5_ie;\n  assign GEN_234 = io_port_iof_1_5_o_valid ? io_port_iof_1_5_o_oval : swPinCtrl_5_oval;\n  assign GEN_235 = io_port_iof_1_5_o_valid ? io_port_iof_1_5_o_oe : swPinCtrl_5_oe;\n  assign GEN_236 = io_port_iof"}
{"text": "_1_5_o_valid ? io_port_iof_1_5_o_ie : swPinCtrl_5_ie;\n  assign T_7754 = iofSelReg[5];\n  assign T_7755_oval = T_7754 ? iof1Ctrl_5_oval : iof0Ctrl_5_oval;\n  assign T_7755_oe = T_7754 ? iof1Ctrl_5_oe : iof0Ctrl_5_oe;\n  assign T_7755_ie = T_7754 ? iof1Ctrl_5_ie : iof0Ctrl_5_ie;\n  assign T_7759 = iofEnReg_io_q[5];\n  assign T_7760_oval = T_7759 ? iofPlusSwPinCtrl_5_oval : swPinCtrl_5_oval;\n  assign T_7760_oe = T_7759 ? iofPlusSwPinCtrl_5_oe : swPinCtrl_5_oe;\n  assign T_7760_ie = T_7759 ? iofPlusSwPinCtrl_5_ie : swPinCtrl_5_ie;\n  assign T_7760_pue = T_7759 ? iofPlusSwPinCtrl_5_pue : swPinCtrl_5_pue;\n  assign T_7760_ds = T_7759 ? iofPlusSwPinCtrl_5_ds : swPinCtrl_5_ds;\n  assign T_7766 = xorReg[5];\n  assign T_7767 = T_7760_oval ^ T_7766;\n  assign T_7768 = riseIpReg[5];\n  assign T_7769 = riseIeReg[5];\n  assign T_7770 = T_7768 & T_7769;\n  assign T_7771 = fallIpReg[5];\n  assign T_7772 = fallIeReg[5];\n  assign T_7773 = T_7771 & T_7772;\n  assign T_7774 = T_7770 | T_7773;\n  assign T_7775 = highIpReg[5];\n  assign T_7776 = highIeReg[5];\n  assign T_7777 = T_7775 & T_7776;\n  assign T_7778 = T_7774 | T_7777;\n  assign T_7779 = lowIpReg[5];\n  assign T_7780 = lowIeReg[5];\n  assign T_7781 = T_7779 & T_7780;\n  assign T_7782 = T_7778 | T_7781;\n  assign T_7783 = inSyncReg[5];\n  assign T_7785 = pueReg_io_q[6];\n  assign T_7786 = portReg[6];\n  assign T_7787 = oeReg_io_q[6];\n  assign T_7788 = dsReg[6];\n  assign T_7789 = ieReg_io_q[6];\n  assign GEN_237 = io_port_iof_0_6_o_valid ? io_port_iof_0_6_o_oval : swPinCtrl_6_oval;\n  assign GEN_238 = io_port_iof_0_6_o_valid ? io_port_iof_0_6_o_oe : swPinCtrl_6_oe;\n  assign GEN_239 = io_port_iof_0_6_o_valid ? io_port_iof_0_6_o_ie : swPinCtrl_6_ie;\n  assign GEN_240 = io_port_iof_1_6_o_valid ? io_port_iof_1_6_o_oval : swPinCtrl_6_oval;\n  assign GEN_241 = io_port_iof_1_6_o_valid ? io_port_iof_1_6_o_oe : swPinCtrl_6_oe;\n  assign GEN_242 = io_port_iof_1_6_o_valid ? io_port_iof_1_6_o_ie : swPinCtrl_6_ie;\n  assign T_7790 = iofSelReg[6];\n  assign T_7791_oval = T_7790 ? iof1Ctrl_6_oval : iof0Ctrl_6_oval;\n  assign T_7791_oe = T_7790 ? iof1Ctrl_6_oe : iof0Ctrl_6_oe;\n  assign T_7791_ie = T_7790 ? iof1Ctrl_6_ie : iof0Ctrl_6_ie;\n  assign T_7795 = iofEnReg_io_q[6];\n  assign T_7796_oval = T_7795 ? iofPlusSwPinCtrl_6_oval : swPinCtrl_6_oval;\n  assign T_7796_oe = T_7795 ? iofPlusSwPinCtrl_6_oe : swPinCtrl_6_oe;\n  assign T_7796_ie = T_7795 ? iofPlusSwPinCtrl_6_ie : swPinCtrl_6_ie;\n  assign T_7796_pue = T_7795 ? iofPlusSwPinCtrl_6_pue : swPinCtrl_6_pue;\n  assign T_7796_ds = T_7795 ? iofPlusSwPinCtrl_6_ds : swPinCtrl_6_ds;\n  assign T_7802 = xorReg[6];\n  assign T_7803 = T_7796_oval ^ T_7802;\n  assign T_7804 = riseIpReg[6];\n  assign T_7805 = riseIeReg[6];\n  assign T_7806 = T_7804 & T_7805;\n  assign T_7807 = fallIpReg[6];\n  assign T_7808 = fallIeReg[6];\n  assign T_7809 = T_7807 & T_7808;\n  assign T_7810 = T_7806 | T_7809;\n  assign T_7811 = highIpReg[6];\n  assign T_7812 = highIeReg[6];\n  assign T_7813 = T_7811 & T_7812;\n  assign T_7814 = T_7810 | T_7813;\n  assign T_7815 = lowIpReg[6];\n  assign T_7816 = lowIeReg[6];\n  assign T_7817 = T_7815 & T_7816;\n  assign T_7818 = T_7814 | T_7817;\n  assign T_7819 = inSyncReg[6];\n  assign T_7821 = pueReg_io_q[7];\n  assign T_7822 = portReg[7];\n  assign T_7823 = oeReg_io_q[7];\n  assign T_7824 = dsReg[7];\n  assign T_7825 = ieReg_io_q[7];\n  assign GEN_243 = io_port_iof_0_7_o_valid ? io_port_iof_0_7_o_oval : swPinCtrl_7_oval;\n  assign GEN_244 = io_port_iof_0_7_o_valid ? io_port_iof_0_7_o_oe : swPinCtrl_7_oe;\n  assign GEN_245 = io_port_iof_0_7_o_valid ? io_port_iof_0_7_o_ie : swPinCtrl_7_ie;\n  assign GEN_246 = io_port_iof_1_7_o_valid ? io_port_iof_1_7_o_oval : swPinCtrl_7_oval;\n  assign GEN_247 = io_port_iof_1_7_o_valid ? io_port_iof_1_7_o_oe : swPinCtrl_7_oe;\n  assign GEN_248 = io_port_iof_1_7_o_valid ? io_port_iof_1_7_o_ie : swPinCtrl_7_ie;\n  assign T_7826 = iofSelReg[7];\n  assign T_7827_oval = T_7826 ? iof1Ctrl_7_oval : iof0Ctrl_7_oval;\n  assign T_7827_oe = T_7826 ? iof1Ctrl_7_oe : iof0Ctrl_7_oe;\n  assign T_7827_ie = T_7826 ? iof1Ctrl_7_ie : iof0Ctrl_7_ie;\n  assign T_7831 = iofEnReg_io_q[7];\n  assign T_7832_oval = T_7831 ? iofPlusSwPinCtrl_7_oval : swPinCtrl_7_oval;\n  assign T_7832_oe = T_7831 ? iofPlusSwPinCtrl_7_oe : swPinCtrl_7_oe;\n  assign T_7832_ie = T_7831 ? iofPlusSwPinCtrl_7_ie : swPinCtrl_7_ie;\n  assign T_7832_pue = T_7831 ? iofPlusSwPinCtrl_7_pue : swPinCtrl_7_pue;\n  assign T_7832_ds = T_7831 ? iofPlusSwPinCtrl_7_ds : swPinCtrl_7_ds;\n  assign T_7838 = xorReg[7];\n  assign T_7839 = T_7832_oval ^ T_7838;\n  assign T_7840 = riseIpReg[7];\n  assign T_7841 = riseIeReg[7];\n  assign T_7842 = T_7840 & T_7841;\n  assign T_7843 = fallIpReg[7];\n  assign T_7844 = fallIeReg[7];\n  assign T_7845 = T_7843 & T_7844;\n  assign T_7846 = T_7842 | T_7845;\n  assign T_7847 = highIpReg[7];\n  assign T_7848 = highIeReg[7];\n  assign T_7849 = T_7847 & T_7848;\n  assign T_7850 = T_7846 | T_7849;\n  assign T_7851 = lowIpReg[7];\n  assign T_7852 = lowIeReg[7];\n  assign T_7853 = T_7851 & T_7852;\n  assign T_7854 = T_7850 | T_7853;\n  assign T_7855 = inSyncReg[7];\n  assign T_7857 = pueReg_io_q[8];\n  assign T_7858 = portReg[8];\n  assign T_7859 = oeReg_io_q[8];\n  assign T_7860 = dsReg[8];\n  assign T_7861 = ieReg_io_q[8];\n  assign GEN_249 = io_port_iof_0_8_o_valid ? io_port_iof_0_8_o_oval : swPinCtrl_8_oval;\n  assign GEN_250 = io_port_iof_0_8_o_valid ? io_port_iof_0_8_o_oe : swPinCtrl_8_oe;\n  assign GEN_251 = io_port_iof_0_8_o_valid ? io_port_iof_0_8_o_ie : swPinCtrl_8_ie;\n  assign GEN_252 = io_port_iof_1_8_o_valid ? io_port_iof_1_8_o_oval : swPinCtrl_8_oval;\n  assign GEN_253 = io_port_iof_1_8_o_valid ? io_port_iof_1_8_o_oe : swPinCtrl_8_oe;\n  assign GEN_254 = io_port_iof_1_8_o_valid ? io_port_iof_1_8_o_ie : swPinCtrl_8_ie;\n  assign T_7862 = iofSelReg[8];\n  assign T_7863_oval = T_7862 ? iof1Ctrl_8_oval : iof0Ctrl_8_oval;\n  assign T_7863_oe = T_7862 ? iof1Ctrl_8_oe : iof0Ctrl_8_oe;\n  assign T_7863_ie = T_7862 ? iof1Ctrl_8_ie : iof0Ctrl_8_ie;\n  assign T_7867 = iofEnReg_io_q[8];\n  assign T_7868_oval = T_7867 ? iofPlusSwPinCtrl_8_oval : swPinCtrl_8_oval;\n  assign T_7868_oe = T_7867 ? iofPlusSwPinCtrl_8_oe : swPinCtrl_8_oe;\n  assign T_7868_ie = T_7867 ? iofPlusSwPinCtrl_8_ie : swPinCtrl_8_ie;\n  assign T_7868_pue = T_7867 ? iofPlusSwPinCtrl_8_pue : swPinCtrl_8_pue;\n  assign T_7868_ds = T_7867 ? iofPlusSwPinCtrl_8_ds : swPinCtrl_8_ds;\n  assign T_7874 = xorReg[8];\n  assign T_7875 = T_7868_oval ^ T_7874;\n  assign T_7876 = riseIpReg[8];\n  assign T_7877 = riseIeReg[8];\n  assign T_7878 = T_7876 & T_7877;\n  assign T_7879 = fallIpReg[8];\n  assign T_7880 = fallIeReg[8];\n  assign T_7881 = T_7879 & T_7880;\n  assign T_7882 = T_7878 | T_7881;\n  assign T_7883 = highIpReg[8];\n  assign T_7884 = highIeReg[8];\n  assign T_7885 = T_7883 & T_7884;\n  assign T_7886 = T_7882 | T_7885;\n  assign T_7887 = lowIpReg[8];\n  assign T_7888 = lowIeReg[8];\n  assign T_7889 = T_7887 & T_7888;\n  assign T_7890 = T_7886 | T_7889;\n  assign T_7891 = inSyncReg[8];\n  assign T_7893 = pueReg_io_q[9];\n  assign T_7894 = portReg[9];\n  assign T_7895 = oeReg_io_q[9];\n  assign T_7896 = dsReg[9];\n  assign T_7897 = ieReg_io_q[9];\n  assign GEN_255 = io_port_iof_0_9_o_valid ? io_port_iof_0_9_o_oval : swPinCtrl_9_oval;\n  assign GEN_256 = io_port_iof_0_9_o_valid ? io_port_iof_0_9_o_oe : swPinCtrl_9_oe;\n  assign GEN_257 = io_port_iof_0_9_o_valid ? io_port_iof_0_9_o_ie : swPinCtrl_9_ie;\n  assign GEN_258 = io_port_iof_1_9_o_valid ? io_port_iof_1_9_o_oval : swPinCtrl_9_oval;\n  assign GEN_259 = io_port_iof_1_9_o_valid ? io_port_iof_1_9_o_oe : swPinCtrl_9_oe;\n  assign GEN_260 = io_port_iof_1_9_o_valid ? io_port_iof_1_9_o_ie : swPinCtrl_9_ie;\n  assign T_7898 = iofSelReg[9];\n  assign T_7899_oval = T_7898 ? iof1Ctrl_9_oval : iof0Ctrl_9_oval;\n  assign T_7899_oe = T_7898 ? iof1Ctrl_9_oe : iof0Ctrl_9_oe;\n  assign T_7899_ie = T_7898 ? iof1Ctrl_9_ie : iof0Ctrl_9_ie;\n  assign T_7903 = iofEnReg_io_q[9];\n  assign T_7904_oval = T_7903 ? iofPlusSwPinCtrl_9_oval : swPinCtrl_9_oval;\n  assign T_7904_oe = T_7903 ? iofPlusSwPinCtrl_9_oe : swPinCtrl_9_oe;\n  assign T_7904_ie = T_7903 ? iofPlusSwPinCtrl_9_ie : swPinCtrl_9_ie;\n  assign T_7904_pue = T_7903 ? iofPlusSwPinCtrl_9_pue : swPinCtrl_9_pue;\n  assign T_7904_ds = T_7903 ? iofPlusSwPinCtrl_9_ds : swPinCtrl_9_ds;\n  assign T_7910 = xorReg[9];\n  assign T_7911 = T_7904_oval ^ T_7910;\n  assign T_7912 = riseIpReg[9];\n  assign T_7913 = riseIeReg[9];\n  assign T_7914 = T_7912 & T_7913;\n  assign T_7915 = fallIpReg[9];\n  assign T_7916 = fallIeReg[9];\n  assign T_7917 = T_7915 & T_7916;\n  assign T_7918 = T_7914 | T_7917;\n  assign T_7919 = highIpReg[9];\n  assign T_7920 = highIeReg[9];\n  assign T_7921 = T_7919 & T_7920;\n  assign T_7922 = T_7918 | T_7921;\n  assign T_7923 = lowIpReg[9];\n  assign T_7924 = lowIeReg[9];\n  assign T_7925 = T_7923 & T_7924;\n  assign T_7926 = T_7922 | T_7925;\n  assign T_7927 = inSyncReg[9];\n  assign T_7929 = pueReg_io_q[10];\n  assign T_7930 = portReg[10];\n  assign T_7931 = oeReg_io_q[10];\n  assign T_7932 = dsReg[10];\n  assign T_7933 = ieReg_io_q[10];\n  assign GEN_261 = io_port_iof_0_10_o_valid ? io_port_iof_0_10_o_oval : swPinCtrl_10_oval;\n  assign GEN_262 = io_port_iof_0_10_o_valid ? io_port_iof_0_10_o_oe : swPinCtrl_10_oe;\n  assign GEN_263 = io_port_iof_0_10_o_valid ? io_port_iof_0_10_o_ie : swPinCtrl_10_ie;\n  assign GEN_264 = io_port_iof_1_10_o_valid ? io_port_iof_1_10_o_oval : swPinCtrl_10_oval;\n  assign GEN_265 = io_port_iof_1_10_o_valid ? io_port_iof_1_10_o_oe : swPinCtrl_10_oe;\n  assign GEN_266 = io_port_iof_1_10_o_valid ? io_port_iof_1_10_o_ie : swPinCtrl_10_ie;\n  assign T_7934 = iofSelReg[10];\n  assign T_7935_oval = T_7934 ? iof1Ctrl_10_oval : iof0Ctrl_10_oval;\n  assign T_7935_oe = T_7934 ? iof1Ctrl_10_oe : iof0Ctrl_10_oe;\n  assign T_7935_ie = T_7934 ? iof1Ctrl_10_ie : iof0Ctrl_10_ie;\n  assign T_7939 = iofEnReg_io_q[10];\n  assign T_7940_oval = T_7939 ? iofPlusSwPinCtrl_10_oval : swPinCtrl_10_oval;\n  assign T_7940_oe = T_7939 ? iofPlusSwPinCtrl_10_oe : swPinCtrl_10_oe;\n  assign T_7940_ie = T_7939 ? iofPlusSwPinCtrl_10_ie : swPinCtrl_10_ie;\n  assign T_7940_pue = T_7939 ? iofPlusSwPinCtrl_10_pue : swPinCtrl_10_pue;\n  assign T_7940_ds = T_7939 ? iofPlusSwPinCtrl_10_ds : swPinCtrl_10_ds;\n  assign T_7946 = xorReg[10];\n  assign T_7947 = T_7940_oval ^ T_7946;\n  assign T_7948 = riseIpReg[10];\n  assign T_7949 = riseIeReg[10];\n  assign T_7950 = T_7948 & T_7949;\n  assign T_7951 = fallIpReg[10];\n  assign T_7952 = fallIeReg[10];\n  assign T_7953 = T_7951 & T_7952;\n  assign T_7954 = T_7950 | T_7953;\n  assign T_7955 = highIpReg[10];\n  assign T_7956 = highIeReg[10];\n  assign T_7957 = T_7955 & T_7956;\n  assign T_7958 = T_7954 | T_7957;\n  assign T_7959 = lowIpReg[10];\n  assign T_7960 = lowIeReg[10];\n  assign T_7961 = T_7959 & T_7960;\n  assign T_7962 = T_7958 | T_7961;\n  assign T_7963 = inSyncReg[10];\n  assign T_7965 = pueReg_io_q[11];\n  assign T_7966 = portReg[11];\n  assign T_7967 = oeReg_io_q[11];\n  assign T_7968 = dsReg[11];\n  assign T_7969 = ieReg_io_q[11];\n  assign GEN_267 = io_port_iof_0_11_o_valid ? io_port_iof_0_11_o_oval : swPinCtrl_11_oval;\n  assign GEN_268 = io_port_iof_0_11_o_valid ? io_port_iof_0_11_o_oe : swPinCtrl_11_oe;\n  assign GEN_269 = io_port_iof_0_11_o_valid ? io_port_iof_0_11_o_ie : swPinCtrl_11_ie;\n  assign GEN_270 = io_port_iof_1_11_o_valid ? io_port_iof_1_11_o_oval : swPinCtrl_11_oval;\n  assign GEN_271 = io_port_iof_1_11_o_valid ? io_port_iof_1_11_o_oe : swPinCtrl_11_oe;\n  assign GEN_272 = io_port_iof_1_11_o_valid ? io_port_iof_1_11_o_ie : swPinCtrl_11_ie;\n  assign T_7970 = iofSelReg[11];\n  assign T_7971_oval = T_7970 ? iof1Ctrl_11_oval : iof0Ctrl_11_oval;\n  assign T_7971_oe = T_7970 ? iof1Ctrl_11_oe : iof0Ctrl_11_oe;\n  assign T_7971_ie = T_7970 ? iof1Ctrl_11_ie : iof0Ctrl_11_ie;\n  assign T_7975 = iofEnReg_io_q[11];\n  assign T_7976_oval = T_7975 ? iofPlusSwPinCtrl_11_oval : swPinCtrl_11_oval;\n  assign T_7976_oe = T_7975 ? iofPlusSwPinCtrl_11_oe : swPinCtrl_11_oe;\n  assign T_7976_ie = T_7975 ? iofPlusSwPinCtrl_11_ie : swPinCtrl_11_ie;\n  assign T_7976_pue = T_7975 ? iofPlusSwPinCtrl_11_pue : swPinCtrl_11_pue;\n  assign T_7976_ds = T_7975 ? iofPlusSwPinCtrl_11_ds : swPinCtrl_11_ds;\n  assign T_7982 = xorReg[11];\n  assign T_7983 = T_7976_oval ^ T_7982;\n  assign T_7984 = riseIpReg[11];\n  assign T_7985 = riseIeReg[11];\n  assign T_7986 = T_7984 & T_7985;\n  assign T_7987 = fallIpReg[11];\n  assign T_7988 = fallIeReg[11];\n  assign T_7989 = T_7987 & T_7988;\n  assign T_7990 = T_7986 | T_7989;\n  assign T_7991 = highIpReg[11];\n  assign T_7992 = highIeReg[11];\n  assign T_7993 = T_7991 & T_7992;\n  assign T_7994 = T_7990 | T_7993;\n  assign T_7995 = lowIpReg[11];\n  assign T_7996 = lowIeReg[11];\n  assign T_7997 = T_7995 & T_7996;\n  assign T_7998 = T_7994 | T_7997;\n  assign T_7999 = inSyncReg[11];\n  assign T_8001 = pueReg_io_q[12];\n  assign T_8002 = portReg[12];\n  assign T_8003 = oeReg_io_q[12];\n  assign T_8004 = dsReg[12];\n  assign T_8005 = ieReg_io_q[12];\n  assign GEN_273 = io_port_iof_0_12_o_valid ? io_port_iof_0_12_o_oval : swPinCtrl_12_oval;\n  assign GEN_274 = io_port_iof_0_12_o_valid ? io_port_iof_0_12_o_oe : swPinCtrl_12_oe;\n  assign GEN_275 = io_port_iof_0_12_o_valid ? io_port_iof_0_12_o_ie : swPinCtrl_12_ie;\n  assign GEN_276 = io_port_iof_1_12_o_valid ? io_port_iof_1_12_o_oval : swPinCtrl_12_oval;\n  assign GEN_277 = io_port_iof_1_12_o_valid ? io_port_iof_1_12_o_oe : swPinCtrl_12_oe;\n  assign GEN_278 = io_port_iof_1_12_o_valid ? io_port_iof_1_12_o_ie : swPinCtrl_12_ie;\n  assign T_8006 = iofSelReg[12];\n  assign T_8007_oval = T_8006 ? iof1Ctrl_12_oval : iof0Ctrl_12_oval;\n  assign T_8007_oe = T_8006 ? iof1Ctrl_12_oe : iof0Ctrl_12_oe;\n  assign T_8007_ie = T_8006 ? iof1Ctrl_12_ie : iof0Ctrl_12_ie;\n  assign T_8011 = iofEnReg_io_q[12];\n  assign T_8012_oval = T_8011 ? iofPlusSwPinCtrl_12_oval : swPinCtrl_12_oval;\n  assign T_8012_oe = T_8011 ? iofPlusSwPinCtrl_12_oe : swPinCtrl_12_oe;\n  assign T_8012_ie = T_8011 ? iofPlusSwPinCtrl_12_ie : swPinCtrl_12_ie;\n  assign T_8012_pue = T_8011 ? iofPlusSwPinCtrl_12_pue : swPinCtrl_12_pue;\n  assign T_8012_ds = T_8011 ? iofPlusSwPinCtrl_12_ds : swPinCtrl_12_ds;\n  assign T_8018 = xorReg[12];\n  assign T_8019 = T_8012_oval ^ T_8018;\n  assign T_8020 = riseIpReg[12];\n  assign T_8021 = riseIeReg[12];\n  assign T_8022 = T_8020 & T_8021;\n  assign T_8023 = fallIpReg[12];\n  assign T_8024 = fallIeReg[12];\n  assign T_8025 = T_8023 & T_8024;\n  assign T_8026 = T_8022 | T_8025;\n  assign T_8027 = highIpReg[12];\n  assign T_8028 = highIeReg[12];\n  assign T_8029 = T_8027 & T_8028;\n  assign T_8030 = T_8026 | T_8029;\n  assign T_8031 = lowIpReg[12];\n  assign T_8032 = lowIeReg[12];\n  assign T_8033 = T_8031 & T_8032;\n  assign T_8034 = T_8030 | T_8033;\n  assign T_8035 = inSyncReg[12];\n  assign T_8037 = pueReg_io_q[13];\n  assign T_8038 = portReg[13];\n  assign T_8039 = oeReg_io_q[13];\n  assign T_8040 = dsReg[13];\n  assign T_8041 = ieReg_io_q[13];\n  assign GEN_279 = io_port_iof_0_13_o_valid ? io_port_iof_0_13_o_oval : swPinCtrl_13_oval;\n  assign GEN_280 = io_port_iof_0_13_o_valid ? io_port_iof_0_13_o_oe : swPinCtrl_13_oe;\n  assign GEN_281 = io_port_iof_0_13_o_valid ? io_port_iof_0_13_o_ie : swPinCtrl_13_ie;\n  assign GEN_282 = io_port_iof_1_13_o_valid ? io_port_iof_1_13_o_oval : swPinCtrl_13_oval;\n  assign GEN_283 = io_port_iof_1_13_o_valid ? io_port_iof_1_13_o_oe : swPinCtrl_13_oe;\n  assign GEN_284 = io_port_iof_1_13_o_valid ? io_port_iof_1_13_o_ie : swPinCtrl_13_ie;\n  assign T_8042 = iofSelReg[13];\n  assign T_8043_oval = T_8042 ? iof1Ctrl_13_oval : iof0Ctrl_13_oval;\n  assign T_8043_oe = T_8042 ? iof1Ctrl_13_oe : iof0Ctrl_13_oe;\n  assign T_8043_ie = T_8042 ? iof1Ctrl_13_ie : iof0Ctrl_13_ie;\n  assign T_8047 = iofEnReg_io_q[13];\n  assign T_8048_oval = T_8047 ? iofPlusSwPinCtrl_13_oval : swPinCtrl_13_oval;\n  assign T_8048_oe = T_8047 ? iofPlusSwPinCtrl_13_oe : swPinCtrl_13_oe;\n  assign T_8048_ie = T_8047 ? iofPlusSwPinCtrl_13_ie : swPinCtrl_13_ie;\n  assign T_8048_pue = T_8047 ? iofPlusSwPinCtrl_13_pue : swPinCtrl_13_pue;\n  assign T_8048_ds = T_8047 ? iofPlusSwPinCtrl_13_ds : swPinCtrl_13_ds;\n  assign T_8054 = xorReg[13];\n  assign T_8055 = T_8048_oval ^ T_8054;\n  assign T_8056 = riseIpReg[13];\n  assign T_8057 = riseIeReg[13];\n  assign T_8058 = T_8056 & T_8057;\n  assign T_8059 = fallIpReg[13];\n  assign T_8060 = fallIeReg[13];\n  assign T_8061 = T_8059 & T_8060;\n  assign T_8062 = T_8058 | T_8061;\n  assign T_8063 = highIpReg[13];\n  assign T_8064 = highIeReg[13];\n  assign T_8065 = T_8063 & T_8064;\n  assign T_8066 = T_8062 | T_8065;\n  assign T_8067 = lowIpReg[13];\n  assign T_8068 = lowIeReg[13];\n  assign T_8069 = T_8067 & T_8068;\n  assign T_8070 = T_8066 | T_8069;\n  assign T_8071 = inSyncReg[13];\n  assign T_8073 = pueReg_io_q[14];\n  assign T_8074 = portReg[14];\n  assign T_8075 = oeReg_io_q[14];\n  assign T_8076 = dsReg[14];\n  assign T_8077 = ieReg_io_q[14];\n  assign GEN_285 = io_port_iof_0_14_o_valid ? io_port_iof_0_14_o_oval : swPinCtrl_14_oval;\n  assign GEN_286 = io_port_iof_0_14_o_valid ? io_port_iof_0_14_o_oe : swPinCtrl_14_oe;\n  assign GEN_287 = io_port_iof_0_14_o_valid ? io_port_iof_0_14_o_ie : swPinCtrl_14_ie;\n  assign GEN_288 = io_port_iof_1_14_o_valid ? io_port_iof_1_14_o_oval : swPinCtrl_14_oval;\n  assign GEN_289 = io_port_iof_1_14_o_valid ? io_port_iof_1_14_o_oe : swPinCtrl_14_oe;\n  assign GEN_290 = io_port_iof_1_14_o_valid ? io_port_iof_1_14_o_ie : swPinCtrl_14_ie;\n  assign T_8078 = iofSelReg[14];\n  assign T_8079_oval = T_8078 ? iof1Ctrl_14_oval : iof0Ctrl_14_oval;\n  assign T_8079_oe = T_8078 ? iof1Ctrl_14_oe : iof0Ctrl_14_oe;\n  assign T_8079_ie = T_8078 ? iof1Ctrl_14_ie : iof0Ctrl_14_ie;\n  assign T_8083 = iofEnReg_io_q[14];\n  assign T_8084_oval = T_8083 ? iofPlusSwPinCtrl_14_oval : swPinCtrl_14_oval;\n  assign T_8084_oe = T_8083 ? iofPlusSwPinCtrl_14_oe : swPinCtrl_14_oe;\n  assign T_8084_ie = T_8083 ? iofPlusSwPinCtrl_14_ie : swPinCtrl_14_ie;\n  assign T_8084_pue = T_8083 ? iofPlusSwPinCtrl_14_pue : swPinCtrl_14_pue;\n  assign T_8084_ds = T_8083 ? iofPlusSwPinCtrl_14_ds : swPinCtrl_14_ds;\n  assign T_8090 = xorReg[14];\n  assign T_8091 = T_8084_oval ^ T_8090;\n  assign T_8092 = riseIpReg[14];\n  assign T_8093 = riseIeReg[14];\n  assign T_8094 = T_8092 & T_8093;\n  assign T_8095 = fallIpReg[14];\n  assign T_8096 = fallIeReg[14];\n  assign T_8097 = T_8095 & T_8096;\n  assign T_8098 = T_8094 | T_8097;\n  assign T_8099 = highIpReg[14];\n  assign T_8100 = highIeReg[14];\n  assign T_8101 = T_8099 & T_8100;\n  assign T_8102 = T_8098 | T_8101;\n  assign T_8103 = lowIpReg[14];\n  assign T_8104 = lowIeReg[14];\n  assign T_8105 = T_8103 & T_8104;\n  assign T_8106 = T_8102 | T_8105;\n  assign T_8107 = inSyncReg[14];\n  assign T_8109 = pueReg_io_q[15];\n  assign T_8110 = portReg[15];\n  assign T_8111 = oeReg_io_q[15];\n  assign T_8112 = dsReg[15];\n  assign T_8113 = ieReg_io_q[15];\n  assign GEN_291 = io_port_iof_0_15_o_valid ? io_port_iof_0_15_o_oval : swPinCtrl_15_oval;\n  assign GEN_292 = io_port_iof_0_15_o_valid ? io_port_iof_0_15_o_oe : swPinCtrl_15_oe;\n  assign GEN_293 = io_port_iof_0_15_o_valid ? io_port_iof_0_15_o_ie : swPinCtrl_15_ie;\n  assign GEN_294 = io_port_iof_1_15_o_valid ? io_port_iof_1_15_o_oval : swPinCtrl_15_oval;\n  assign GEN_295 = io_port_iof_1_15_o_valid ? io_port_iof_1_15_o_oe : swPinCtrl_15_oe;\n  assign GEN_296 = io_port_iof_1_15_o_valid ? io_port_iof_1_15_o_ie : swPinCtrl_15_ie;\n  assign T_8114 = iofSelReg[15];\n  assign T_8115_oval = T_8114 ? iof1Ctrl_15_oval : iof0Ctrl_15_oval;\n  assign T_8115_oe = T_8114 ? iof1Ctrl_15_oe : iof0Ctrl_15_oe;\n  assign T_8115_ie = T_8114 ? iof1Ctrl_15_ie : iof0Ctrl_15_ie;\n  assign T_8119 = iofEnReg_io_q[15];\n  assign T_8120_oval = T_8119 ? iofPlusSwPinCtrl_15_oval : swPinCtrl_15_oval;\n  assign T_8120_oe = T_8119 ? iofPlusSwPinCtrl_15_oe : swPinCtrl_15_oe;\n  assign T_8120_ie = T_8119 ? iofPlusSwPinCtrl_15_ie : swPinCtrl_15_ie;\n  assign T_8120_pue = T_8119 ? iofPlusSwPinCtrl_15_pue : swPinCtrl_15_pue;\n  assign T_8120_ds = T_8119 ? iofPlusSwPinCtrl_15_ds : swPinCtrl_15_ds;\n  assign T_8126 = xorReg[15];\n  assign T_8127 = T_8120_oval ^ T_8126;\n  assign T_8128 = riseIpReg[15];\n  assign T_8129 = riseIeReg[15];\n  assign T_8130 = T_8128 & T_8129;\n  a"}
{"text": "ssign T_8131 = fallIpReg[15];\n  assign T_8132 = fallIeReg[15];\n  assign T_8133 = T_8131 & T_8132;\n  assign T_8134 = T_8130 | T_8133;\n  assign T_8135 = highIpReg[15];\n  assign T_8136 = highIeReg[15];\n  assign T_8137 = T_8135 & T_8136;\n  assign T_8138 = T_8134 | T_8137;\n  assign T_8139 = lowIpReg[15];\n  assign T_8140 = lowIeReg[15];\n  assign T_8141 = T_8139 & T_8140;\n  assign T_8142 = T_8138 | T_8141;\n  assign T_8143 = inSyncReg[15];\n  assign T_8145 = pueReg_io_q[16];\n  assign T_8146 = portReg[16];\n  assign T_8147 = oeReg_io_q[16];\n  assign T_8148 = dsReg[16];\n  assign T_8149 = ieReg_io_q[16];\n  assign GEN_297 = io_port_iof_0_16_o_valid ? io_port_iof_0_16_o_oval : swPinCtrl_16_oval;\n  assign GEN_298 = io_port_iof_0_16_o_valid ? io_port_iof_0_16_o_oe : swPinCtrl_16_oe;\n  assign GEN_299 = io_port_iof_0_16_o_valid ? io_port_iof_0_16_o_ie : swPinCtrl_16_ie;\n  assign GEN_300 = io_port_iof_1_16_o_valid ? io_port_iof_1_16_o_oval : swPinCtrl_16_oval;\n  assign GEN_301 = io_port_iof_1_16_o_valid ? io_port_iof_1_16_o_oe : swPinCtrl_16_oe;\n  assign GEN_302 = io_port_iof_1_16_o_valid ? io_port_iof_1_16_o_ie : swPinCtrl_16_ie;\n  assign T_8150 = iofSelReg[16];\n  assign T_8151_oval = T_8150 ? iof1Ctrl_16_oval : iof0Ctrl_16_oval;\n  assign T_8151_oe = T_8150 ? iof1Ctrl_16_oe : iof0Ctrl_16_oe;\n  assign T_8151_ie = T_8150 ? iof1Ctrl_16_ie : iof0Ctrl_16_ie;\n  assign T_8155 = iofEnReg_io_q[16];\n  assign T_8156_oval = T_8155 ? iofPlusSwPinCtrl_16_oval : swPinCtrl_16_oval;\n  assign T_8156_oe = T_8155 ? iofPlusSwPinCtrl_16_oe : swPinCtrl_16_oe;\n  assign T_8156_ie = T_8155 ? iofPlusSwPinCtrl_16_ie : swPinCtrl_16_ie;\n  assign T_8156_pue = T_8155 ? iofPlusSwPinCtrl_16_pue : swPinCtrl_16_pue;\n  assign T_8156_ds = T_8155 ? iofPlusSwPinCtrl_16_ds : swPinCtrl_16_ds;\n  assign T_8162 = xorReg[16];\n  assign T_8163 = T_8156_oval ^ T_8162;\n  assign T_8164 = riseIpReg[16];\n  assign T_8165 = riseIeReg[16];\n  assign T_8166 = T_8164 & T_8165;\n  assign T_8167 = fallIpReg[16];\n  assign T_8168 = fallIeReg[16];\n  assign T_8169 = T_8167 & T_8168;\n  assign T_8170 = T_8166 | T_8169;\n  assign T_8171 = highIpReg[16];\n  assign T_8172 = highIeReg[16];\n  assign T_8173 = T_8171 & T_8172;\n  assign T_8174 = T_8170 | T_8173;\n  assign T_8175 = lowIpReg[16];\n  assign T_8176 = lowIeReg[16];\n  assign T_8177 = T_8175 & T_8176;\n  assign T_8178 = T_8174 | T_8177;\n  assign T_8179 = inSyncReg[16];\n  assign T_8181 = pueReg_io_q[17];\n  assign T_8182 = portReg[17];\n  assign T_8183 = oeReg_io_q[17];\n  assign T_8184 = dsReg[17];\n  assign T_8185 = ieReg_io_q[17];\n  assign GEN_303 = io_port_iof_0_17_o_valid ? io_port_iof_0_17_o_oval : swPinCtrl_17_oval;\n  assign GEN_304 = io_port_iof_0_17_o_valid ? io_port_iof_0_17_o_oe : swPinCtrl_17_oe;\n  assign GEN_305 = io_port_iof_0_17_o_valid ? io_port_iof_0_17_o_ie : swPinCtrl_17_ie;\n  assign GEN_306 = io_port_iof_1_17_o_valid ? io_port_iof_1_17_o_oval : swPinCtrl_17_oval;\n  assign GEN_307 = io_port_iof_1_17_o_valid ? io_port_iof_1_17_o_oe : swPinCtrl_17_oe;\n  assign GEN_308 = io_port_iof_1_17_o_valid ? io_port_iof_1_17_o_ie : swPinCtrl_17_ie;\n  assign T_8186 = iofSelReg[17];\n  assign T_8187_oval = T_8186 ? iof1Ctrl_17_oval : iof0Ctrl_17_oval;\n  assign T_8187_oe = T_8186 ? iof1Ctrl_17_oe : iof0Ctrl_17_oe;\n  assign T_8187_ie = T_8186 ? iof1Ctrl_17_ie : iof0Ctrl_17_ie;\n  assign T_8191 = iofEnReg_io_q[17];\n  assign T_8192_oval = T_8191 ? iofPlusSwPinCtrl_17_oval : swPinCtrl_17_oval;\n  assign T_8192_oe = T_8191 ? iofPlusSwPinCtrl_17_oe : swPinCtrl_17_oe;\n  assign T_8192_ie = T_8191 ? iofPlusSwPinCtrl_17_ie : swPinCtrl_17_ie;\n  assign T_8192_pue = T_8191 ? iofPlusSwPinCtrl_17_pue : swPinCtrl_17_pue;\n  assign T_8192_ds = T_8191 ? iofPlusSwPinCtrl_17_ds : swPinCtrl_17_ds;\n  assign T_8198 = xorReg[17];\n  assign T_8199 = T_8192_oval ^ T_8198;\n  assign T_8200 = riseIpReg[17];\n  assign T_8201 = riseIeReg[17];\n  assign T_8202 = T_8200 & T_8201;\n  assign T_8203 = fallIpReg[17];\n  assign T_8204 = fallIeReg[17];\n  assign T_8205 = T_8203 & T_8204;\n  assign T_8206 = T_8202 | T_8205;\n  assign T_8207 = highIpReg[17];\n  assign T_8208 = highIeReg[17];\n  assign T_8209 = T_8207 & T_8208;\n  assign T_8210 = T_8206 | T_8209;\n  assign T_8211 = lowIpReg[17];\n  assign T_8212 = lowIeReg[17];\n  assign T_8213 = T_8211 & T_8212;\n  assign T_8214 = T_8210 | T_8213;\n  assign T_8215 = inSyncReg[17];\n  assign T_8217 = pueReg_io_q[18];\n  assign T_8218 = portReg[18];\n  assign T_8219 = oeReg_io_q[18];\n  assign T_8220 = dsReg[18];\n  assign T_8221 = ieReg_io_q[18];\n  assign GEN_309 = io_port_iof_0_18_o_valid ? io_port_iof_0_18_o_oval : swPinCtrl_18_oval;\n  assign GEN_310 = io_port_iof_0_18_o_valid ? io_port_iof_0_18_o_oe : swPinCtrl_18_oe;\n  assign GEN_311 = io_port_iof_0_18_o_valid ? io_port_iof_0_18_o_ie : swPinCtrl_18_ie;\n  assign GEN_312 = io_port_iof_1_18_o_valid ? io_port_iof_1_18_o_oval : swPinCtrl_18_oval;\n  assign GEN_313 = io_port_iof_1_18_o_valid ? io_port_iof_1_18_o_oe : swPinCtrl_18_oe;\n  assign GEN_314 = io_port_iof_1_18_o_valid ? io_port_iof_1_18_o_ie : swPinCtrl_18_ie;\n  assign T_8222 = iofSelReg[18];\n  assign T_8223_oval = T_8222 ? iof1Ctrl_18_oval : iof0Ctrl_18_oval;\n  assign T_8223_oe = T_8222 ? iof1Ctrl_18_oe : iof0Ctrl_18_oe;\n  assign T_8223_ie = T_8222 ? iof1Ctrl_18_ie : iof0Ctrl_18_ie;\n  assign T_8227 = iofEnReg_io_q[18];\n  assign T_8228_oval = T_8227 ? iofPlusSwPinCtrl_18_oval : swPinCtrl_18_oval;\n  assign T_8228_oe = T_8227 ? iofPlusSwPinCtrl_18_oe : swPinCtrl_18_oe;\n  assign T_8228_ie = T_8227 ? iofPlusSwPinCtrl_18_ie : swPinCtrl_18_ie;\n  assign T_8228_pue = T_8227 ? iofPlusSwPinCtrl_18_pue : swPinCtrl_18_pue;\n  assign T_8228_ds = T_8227 ? iofPlusSwPinCtrl_18_ds : swPinCtrl_18_ds;\n  assign T_8234 = xorReg[18];\n  assign T_8235 = T_8228_oval ^ T_8234;\n  assign T_8236 = riseIpReg[18];\n  assign T_8237 = riseIeReg[18];\n  assign T_8238 = T_8236 & T_8237;\n  assign T_8239 = fallIpReg[18];\n  assign T_8240 = fallIeReg[18];\n  assign T_8241 = T_8239 & T_8240;\n  assign T_8242 = T_8238 | T_8241;\n  assign T_8243 = highIpReg[18];\n  assign T_8244 = highIeReg[18];\n  assign T_8245 = T_8243 & T_8244;\n  assign T_8246 = T_8242 | T_8245;\n  assign T_8247 = lowIpReg[18];\n  assign T_8248 = lowIeReg[18];\n  assign T_8249 = T_8247 & T_8248;\n  assign T_8250 = T_8246 | T_8249;\n  assign T_8251 = inSyncReg[18];\n  assign T_8253 = pueReg_io_q[19];\n  assign T_8254 = portReg[19];\n  assign T_8255 = oeReg_io_q[19];\n  assign T_8256 = dsReg[19];\n  assign T_8257 = ieReg_io_q[19];\n  assign GEN_315 = io_port_iof_0_19_o_valid ? io_port_iof_0_19_o_oval : swPinCtrl_19_oval;\n  assign GEN_316 = io_port_iof_0_19_o_valid ? io_port_iof_0_19_o_oe : swPinCtrl_19_oe;\n  assign GEN_317 = io_port_iof_0_19_o_valid ? io_port_iof_0_19_o_ie : swPinCtrl_19_ie;\n  assign GEN_318 = io_port_iof_1_19_o_valid ? io_port_iof_1_19_o_oval : swPinCtrl_19_oval;\n  assign GEN_319 = io_port_iof_1_19_o_valid ? io_port_iof_1_19_o_oe : swPinCtrl_19_oe;\n  assign GEN_320 = io_port_iof_1_19_o_valid ? io_port_iof_1_19_o_ie : swPinCtrl_19_ie;\n  assign T_8258 = iofSelReg[19];\n  assign T_8259_oval = T_8258 ? iof1Ctrl_19_oval : iof0Ctrl_19_oval;\n  assign T_8259_oe = T_8258 ? iof1Ctrl_19_oe : iof0Ctrl_19_oe;\n  assign T_8259_ie = T_8258 ? iof1Ctrl_19_ie : iof0Ctrl_19_ie;\n  assign T_8263 = iofEnReg_io_q[19];\n  assign T_8264_oval = T_8263 ? iofPlusSwPinCtrl_19_oval : swPinCtrl_19_oval;\n  assign T_8264_oe = T_8263 ? iofPlusSwPinCtrl_19_oe : swPinCtrl_19_oe;\n  assign T_8264_ie = T_8263 ? iofPlusSwPinCtrl_19_ie : swPinCtrl_19_ie;\n  assign T_8264_pue = T_8263 ? iofPlusSwPinCtrl_19_pue : swPinCtrl_19_pue;\n  assign T_8264_ds = T_8263 ? iofPlusSwPinCtrl_19_ds : swPinCtrl_19_ds;\n  assign T_8270 = xorReg[19];\n  assign T_8271 = T_8264_oval ^ T_8270;\n  assign T_8272 = riseIpReg[19];\n  assign T_8273 = riseIeReg[19];\n  assign T_8274 = T_8272 & T_8273;\n  assign T_8275 = fallIpReg[19];\n  assign T_8276 = fallIeReg[19];\n  assign T_8277 = T_8275 & T_8276;\n  assign T_8278 = T_8274 | T_8277;\n  assign T_8279 = highIpReg[19];\n  assign T_8280 = highIeReg[19];\n  assign T_8281 = T_8279 & T_8280;\n  assign T_8282 = T_8278 | T_8281;\n  assign T_8283 = lowIpReg[19];\n  assign T_8284 = lowIeReg[19];\n  assign T_8285 = T_8283 & T_8284;\n  assign T_8286 = T_8282 | T_8285;\n  assign T_8287 = inSyncReg[19];\n  assign T_8289 = pueReg_io_q[20];\n  assign T_8290 = portReg[20];\n  assign T_8291 = oeReg_io_q[20];\n  assign T_8292 = dsReg[20];\n  assign T_8293 = ieReg_io_q[20];\n  assign GEN_321 = io_port_iof_0_20_o_valid ? io_port_iof_0_20_o_oval : swPinCtrl_20_oval;\n  assign GEN_322 = io_port_iof_0_20_o_valid ? io_port_iof_0_20_o_oe : swPinCtrl_20_oe;\n  assign GEN_323 = io_port_iof_0_20_o_valid ? io_port_iof_0_20_o_ie : swPinCtrl_20_ie;\n  assign GEN_324 = io_port_iof_1_20_o_valid ? io_port_iof_1_20_o_oval : swPinCtrl_20_oval;\n  assign GEN_325 = io_port_iof_1_20_o_valid ? io_port_iof_1_20_o_oe : swPinCtrl_20_oe;\n  assign GEN_326 = io_port_iof_1_20_o_valid ? io_port_iof_1_20_o_ie : swPinCtrl_20_ie;\n  assign T_8294 = iofSelReg[20];\n  assign T_8295_oval = T_8294 ? iof1Ctrl_20_oval : iof0Ctrl_20_oval;\n  assign T_8295_oe = T_8294 ? iof1Ctrl_20_oe : iof0Ctrl_20_oe;\n  assign T_8295_ie = T_8294 ? iof1Ctrl_20_ie : iof0Ctrl_20_ie;\n  assign T_8299 = iofEnReg_io_q[20];\n  assign T_8300_oval = T_8299 ? iofPlusSwPinCtrl_20_oval : swPinCtrl_20_oval;\n  assign T_8300_oe = T_8299 ? iofPlusSwPinCtrl_20_oe : swPinCtrl_20_oe;\n  assign T_8300_ie = T_8299 ? iofPlusSwPinCtrl_20_ie : swPinCtrl_20_ie;\n  assign T_8300_pue = T_8299 ? iofPlusSwPinCtrl_20_pue : swPinCtrl_20_pue;\n  assign T_8300_ds = T_8299 ? iofPlusSwPinCtrl_20_ds : swPinCtrl_20_ds;\n  assign T_8306 = xorReg[20];\n  assign T_8307 = T_8300_oval ^ T_8306;\n  assign T_8308 = riseIpReg[20];\n  assign T_8309 = riseIeReg[20];\n  assign T_8310 = T_8308 & T_8309;\n  assign T_8311 = fallIpReg[20];\n  assign T_8312 = fallIeReg[20];\n  assign T_8313 = T_8311 & T_8312;\n  assign T_8314 = T_8310 | T_8313;\n  assign T_8315 = highIpReg[20];\n  assign T_8316 = highIeReg[20];\n  assign T_8317 = T_8315 & T_8316;\n  assign T_8318 = T_8314 | T_8317;\n  assign T_8319 = lowIpReg[20];\n  assign T_8320 = lowIeReg[20];\n  assign T_8321 = T_8319 & T_8320;\n  assign T_8322 = T_8318 | T_8321;\n  assign T_8323 = inSyncReg[20];\n  assign T_8325 = pueReg_io_q[21];\n  assign T_8326 = portReg[21];\n  assign T_8327 = oeReg_io_q[21];\n  assign T_8328 = dsReg[21];\n  assign T_8329 = ieReg_io_q[21];\n  assign GEN_327 = io_port_iof_0_21_o_valid ? io_port_iof_0_21_o_oval : swPinCtrl_21_oval;\n  assign GEN_328 = io_port_iof_0_21_o_valid ? io_port_iof_0_21_o_oe : swPinCtrl_21_oe;\n  assign GEN_329 = io_port_iof_0_21_o_valid ? io_port_iof_0_21_o_ie : swPinCtrl_21_ie;\n  assign GEN_330 = io_port_iof_1_21_o_valid ? io_port_iof_1_21_o_oval : swPinCtrl_21_oval;\n  assign GEN_331 = io_port_iof_1_21_o_valid ? io_port_iof_1_21_o_oe : swPinCtrl_21_oe;\n  assign GEN_332 = io_port_iof_1_21_o_valid ? io_port_iof_1_21_o_ie : swPinCtrl_21_ie;\n  assign T_8330 = iofSelReg[21];\n  assign T_8331_oval = T_8330 ? iof1Ctrl_21_oval : iof0Ctrl_21_oval;\n  assign T_8331_oe = T_8330 ? iof1Ctrl_21_oe : iof0Ctrl_21_oe;\n  assign T_8331_ie = T_8330 ? iof1Ctrl_21_ie : iof0Ctrl_21_ie;\n  assign T_8335 = iofEnReg_io_q[21];\n  assign T_8336_oval = T_8335 ? iofPlusSwPinCtrl_21_oval : swPinCtrl_21_oval;\n  assign T_8336_oe = T_8335 ? iofPlusSwPinCtrl_21_oe : swPinCtrl_21_oe;\n  assign T_8336_ie = T_8335 ? iofPlusSwPinCtrl_21_ie : swPinCtrl_21_ie;\n  assign T_8336_pue = T_8335 ? iofPlusSwPinCtrl_21_pue : swPinCtrl_21_pue;\n  assign T_8336_ds = T_8335 ? iofPlusSwPinCtrl_21_ds : swPinCtrl_21_ds;\n  assign T_8342 = xorReg[21];\n  assign T_8343 = T_8336_oval ^ T_8342;\n  assign T_8344 = riseIpReg[21];\n  assign T_8345 = riseIeReg[21];\n  assign T_8346 = T_8344 & T_8345;\n  assign T_8347 = fallIpReg[21];\n  assign T_8348 = fallIeReg[21];\n  assign T_8349 = T_8347 & T_8348;\n  assign T_8350 = T_8346 | T_8349;\n  assign T_8351 = highIpReg[21];\n  assign T_8352 = highIeReg[21];\n  assign T_8353 = T_8351 & T_8352;\n  assign T_8354 = T_8350 | T_8353;\n  assign T_8355 = lowIpReg[21];\n  assign T_8356 = lowIeReg[21];\n  assign T_8357 = T_8355 & T_8356;\n  assign T_8358 = T_8354 | T_8357;\n  assign T_8359 = inSyncReg[21];\n  assign T_8361 = pueReg_io_q[22];\n  assign T_8362 = portReg[22];\n  assign T_8363 = oeReg_io_q[22];\n  assign T_8364 = dsReg[22];\n  assign T_8365 = ieReg_io_q[22];\n  assign GEN_333 = io_port_iof_0_22_o_valid ? io_port_iof_0_22_o_oval : swPinCtrl_22_oval;\n  assign GEN_334 = io_port_iof_0_22_o_valid ? io_port_iof_0_22_o_oe : swPinCtrl_22_oe;\n  assign GEN_335 = io_port_iof_0_22_o_valid ? io_port_iof_0_22_o_ie : swPinCtrl_22_ie;\n  assign GEN_336 = io_port_iof_1_22_o_valid ? io_port_iof_1_22_o_oval : swPinCtrl_22_oval;\n  assign GEN_337 = io_port_iof_1_22_o_valid ? io_port_iof_1_22_o_oe : swPinCtrl_22_oe;\n  assign GEN_338 = io_port_iof_1_22_o_valid ? io_port_iof_1_22_o_ie : swPinCtrl_22_ie;\n  assign T_8366 = iofSelReg[22];\n  assign T_8367_oval = T_8366 ? iof1Ctrl_22_oval : iof0Ctrl_22_oval;\n  assign T_8367_oe = T_8366 ? iof1Ctrl_22_oe : iof0Ctrl_22_oe;\n  assign T_8367_ie = T_8366 ? iof1Ctrl_22_ie : iof0Ctrl_22_ie;\n  assign T_8371 = iofEnReg_io_q[22];\n  assign T_8372_oval = T_8371 ? iofPlusSwPinCtrl_22_oval : swPinCtrl_22_oval;\n  assign T_8372_oe = T_8371 ? iofPlusSwPinCtrl_22_oe : swPinCtrl_22_oe;\n  assign T_8372_ie = T_8371 ? iofPlusSwPinCtrl_22_ie : swPinCtrl_22_ie;\n  assign T_8372_pue = T_8371 ? iofPlusSwPinCtrl_22_pue : swPinCtrl_22_pue;\n  assign T_8372_ds = T_8371 ? iofPlusSwPinCtrl_22_ds : swPinCtrl_22_ds;\n  assign T_8378 = xorReg[22];\n  assign T_8379 = T_8372_oval ^ T_8378;\n  assign T_8380 = riseIpReg[22];\n  assign T_8381 = riseIeReg[22];\n  assign T_8382 = T_8380 & T_8381;\n  assign T_8383 = fallIpReg[22];\n  assign T_8384 = fallIeReg[22];\n  assign T_8385 = T_8383 & T_8384;\n  assign T_8386 = T_8382 | T_8385;\n  assign T_8387 = highIpReg[22];\n  assign T_8388 = highIeReg[22];\n  assign T_8389 = T_8387 & T_8388;\n  assign T_8390 = T_8386 | T_8389;\n  assign T_8391 = lowIpReg[22];\n  assign T_8392 = lowIeReg[22];\n  assign T_8393 = T_8391 & T_8392;\n  assign T_8394 = T_8390 | T_8393;\n  assign T_8395 = inSyncReg[22];\n  assign T_8397 = pueReg_io_q[23];\n  assign T_8398 = portReg[23];\n  assign T_8399 = oeReg_io_q[23];\n  assign T_8400 = dsReg[23];\n  assign T_8401 = ieReg_io_q[23];\n  assign GEN_339 = io_port_iof_0_23_o_valid ? io_port_iof_0_23_o_oval : swPinCtrl_23_oval;\n  assign GEN_340 = io_port_iof_0_23_o_valid ? io_port_iof_0_23_o_oe : swPinCtrl_23_oe;\n  assign GEN_341 = io_port_iof_0_23_o_valid ? io_port_iof_0_23_o_ie : swPinCtrl_23_ie;\n  assign GEN_342 = io_port_iof_1_23_o_valid ? io_port_iof_1_23_o_oval : swPinCtrl_23_oval;\n  assign GEN_343 = io_port_iof_1_23_o_valid ? io_port_iof_1_23_o_oe : swPinCtrl_23_oe;\n  assign GEN_344 = io_port_iof_1_23_o_valid ? io_port_iof_1_23_o_ie : swPinCtrl_23_ie;\n  assign T_8402 = iofSelReg[23];\n  assign T_8403_oval = T_8402 ? iof1Ctrl_23_oval : iof0Ctrl_23_oval;\n  assign T_8403_oe = T_8402 ? iof1Ctrl_23_oe : iof0Ctrl_23_oe;\n  assign T_8403_ie = T_8402 ? iof1Ctrl_23_ie : iof0Ctrl_23_ie;\n  assign T_8407 = iofEnReg_io_q[23];\n  assign T_8408_oval = T_8407 ? iofPlusSwPinCtrl_23_oval : swPinCtrl_23_oval;\n  assign T_8408_oe = T_8407 ? iofPlusSwPinCtrl_23_oe : swPinCtrl_23_oe;\n  assign T_8408_ie = T_8407 ? iofPlusSwPinCtrl_23_ie : swPinCtrl_23_ie;\n  assign T_8408_pue = T_8407 ? iofPlusSwPinCtrl_23_pue : swPinCtrl_23_pue;\n  assign T_8408_ds = T_8407 ? iofPlusSwPinCtrl_23_ds : swPinCtrl_23_ds;\n  assign T_8414 = xorReg[23];\n  assign T_8415 = T_8408_oval ^ T_8414;\n  assign T_8416 = riseIpReg[23];\n  assign T_8417 = riseIeReg[23];\n  assign T_8418 = T_8416 & T_8417;\n  assign T_8419 = fallIpReg[23];\n  assign T_8420 = fallIeReg[23];\n  assign T_8421 = T_8419 & T_8420;\n  assign T_8422 = T_8418 | T_8421;\n  assign T_8423 = highIpReg[23];\n  assign T_8424 = highIeReg[23];\n  assign T_8425 = T_8423 & T_8424;\n  assign T_8426 = T_8422 | T_8425;\n  assign T_8427 = lowIpReg[23];\n  assign T_8428 = lowIeReg[23];\n  assign T_8429 = T_8427 & T_8428;\n  assign T_8430 = T_8426 | T_8429;\n  assign T_8431 = inSyncReg[23];\n  assign T_8433 = pueReg_io_q[24];\n  assign T_8434 = portReg[24];\n  assign T_8435 = oeReg_io_q[24];\n  assign T_8436 = dsReg[24];\n  assign T_8437 = ieReg_io_q[24];\n  assign GEN_345 = io_port_iof_0_24_o_valid ? io_port_iof_0_24_o_oval : swPinCtrl_24_oval;\n  assign GEN_346 = io_port_iof_0_24_o_valid ? io_port_iof_0_24_o_oe : swPinCtrl_24_oe;\n  assign GEN_347 = io_port_iof_0_24_o_valid ? io_port_iof_0_24_o_ie : swPinCtrl_24_ie;\n  assign GEN_348 = io_port_iof_1_24_o_valid ? io_port_iof_1_24_o_oval : swPinCtrl_24_oval;\n  assign GEN_349 = io_port_iof_1_24_o_valid ? io_port_iof_1_24_o_oe : swPinCtrl_24_oe;\n  assign GEN_350 = io_port_iof_1_24_o_valid ? io_port_iof_1_24_o_ie : swPinCtrl_24_ie;\n  assign T_8438 = iofSelReg[24];\n  assign T_8439_oval = T_8438 ? iof1Ctrl_24_oval : iof0Ctrl_24_oval;\n  assign T_8439_oe = T_8438 ? iof1Ctrl_24_oe : iof0Ctrl_24_oe;\n  assign T_8439_ie = T_8438 ? iof1Ctrl_24_ie : iof0Ctrl_24_ie;\n  assign T_8443 = iofEnReg_io_q[24];\n  assign T_8444_oval = T_8443 ? iofPlusSwPinCtrl_24_oval : swPinCtrl_24_oval;\n  assign T_8444_oe = T_8443 ? iofPlusSwPinCtrl_24_oe : swPinCtrl_24_oe;\n  assign T_8444_ie = T_8443 ? iofPlusSwPinCtrl_24_ie : swPinCtrl_24_ie;\n  assign T_8444_pue = T_8443 ? iofPlusSwPinCtrl_24_pue : swPinCtrl_24_pue;\n  assign T_8444_ds = T_8443 ? iofPlusSwPinCtrl_24_ds : swPinCtrl_24_ds;\n  assign T_8450 = xorReg[24];\n  assign T_8451 = T_8444_oval ^ T_8450;\n  assign T_8452 = riseIpReg[24];\n  assign T_8453 = riseIeReg[24];\n  assign T_8454 = T_8452 & T_8453;\n  assign T_8455 = fallIpReg[24];\n  assign T_8456 = fallIeReg[24];\n  assign T_8457 = T_8455 & T_8456;\n  assign T_8458 = T_8454 | T_8457;\n  assign T_8459 = highIpReg[24];\n  assign T_8460 = highIeReg[24];\n  assign T_8461 = T_8459 & T_8460;\n  assign T_8462 = T_8458 | T_8461;\n  assign T_8463 = lowIpReg[24];\n  assign T_8464 = lowIeReg[24];\n  assign T_8465 = T_8463 & T_8464;\n  assign T_8466 = T_8462 | T_8465;\n  assign T_8467 = inSyncReg[24];\n  assign T_8469 = pueReg_io_q[25];\n  assign T_8470 = portReg[25];\n  assign T_8471 = oeReg_io_q[25];\n  assign T_8472 = dsReg[25];\n  assign T_8473 = ieReg_io_q[25];\n  assign GEN_351 = io_port_iof_0_25_o_valid ? io_port_iof_0_25_o_oval : swPinCtrl_25_oval;\n  assign GEN_352 = io_port_iof_0_25_o_valid ? io_port_iof_0_25_o_oe : swPinCtrl_25_oe;\n  assign GEN_353 = io_port_iof_0_25_o_valid ? io_port_iof_0_25_o_ie : swPinCtrl_25_ie;\n  assign GEN_354 = io_port_iof_1_25_o_valid ? io_port_iof_1_25_o_oval : swPinCtrl_25_oval;\n  assign GEN_355 = io_port_iof_1_25_o_valid ? io_port_iof_1_25_o_oe : swPinCtrl_25_oe;\n  assign GEN_356 = io_port_iof_1_25_o_valid ? io_port_iof_1_25_o_ie : swPinCtrl_25_ie;\n  assign T_8474 = iofSelReg[25];\n  assign T_8475_oval = T_8474 ? iof1Ctrl_25_oval : iof0Ctrl_25_oval;\n  assign T_8475_oe = T_8474 ? iof1Ctrl_25_oe : iof0Ctrl_25_oe;\n  assign T_8475_ie = T_8474 ? iof1Ctrl_25_ie : iof0Ctrl_25_ie;\n  assign T_8479 = iofEnReg_io_q[25];\n  assign T_8480_oval = T_8479 ? iofPlusSwPinCtrl_25_oval : swPinCtrl_25_oval;\n  assign T_8480_oe = T_8479 ? iofPlusSwPinCtrl_25_oe : swPinCtrl_25_oe;\n  assign T_8480_ie = T_8479 ? iofPlusSwPinCtrl_25_ie : swPinCtrl_25_ie;\n  assign T_8480_pue = T_8479 ? iofPlusSwPinCtrl_25_pue : swPinCtrl_25_pue;\n  assign T_8480_ds = T_8479 ? iofPlusSwPinCtrl_25_ds : swPinCtrl_25_ds;\n  assign T_8486 = xorReg[25];\n  assign T_8487 = T_8480_oval ^ T_8486;\n  assign T_8488 = riseIpReg[25];\n  assign T_8489 = riseIeReg[25];\n  assign T_8490 = T_8488 & T_8489;\n  assign T_8491 = fallIpReg[25];\n  assign T_8492 = fallIeReg[25];\n  assign T_8493 = T_8491 & T_8492;\n  assign T_8494 = T_8490 | T_8493;\n  assign T_8495 = highIpReg[25];\n  assign T_8496 = highIeReg[25];\n  assign T_8497 = T_8495 & T_8496;\n  assign T_8498 = T_8494 | T_8497;\n  assign T_8499 = lowIpReg[25];\n  assign T_8500 = lowIeReg[25];\n  assign T_8501 = T_8499 & T_8500;\n  assign T_8502 = T_8498 | T_8501;\n  assign T_8503 = inSyncReg[25];\n  assign T_8505 = pueReg_io_q[26];\n  assign T_8506 = portReg[26];\n  assign T_8507 = oeReg_io_q[26];\n  assign T_8508 = dsReg[26];\n  assign T_8509 = ieReg_io_q[26];\n  assign GEN_357 = io_port_iof_"}
{"text": "0_26_o_valid ? io_port_iof_0_26_o_oval : swPinCtrl_26_oval;\n  assign GEN_358 = io_port_iof_0_26_o_valid ? io_port_iof_0_26_o_oe : swPinCtrl_26_oe;\n  assign GEN_359 = io_port_iof_0_26_o_valid ? io_port_iof_0_26_o_ie : swPinCtrl_26_ie;\n  assign GEN_360 = io_port_iof_1_26_o_valid ? io_port_iof_1_26_o_oval : swPinCtrl_26_oval;\n  assign GEN_361 = io_port_iof_1_26_o_valid ? io_port_iof_1_26_o_oe : swPinCtrl_26_oe;\n  assign GEN_362 = io_port_iof_1_26_o_valid ? io_port_iof_1_26_o_ie : swPinCtrl_26_ie;\n  assign T_8510 = iofSelReg[26];\n  assign T_8511_oval = T_8510 ? iof1Ctrl_26_oval : iof0Ctrl_26_oval;\n  assign T_8511_oe = T_8510 ? iof1Ctrl_26_oe : iof0Ctrl_26_oe;\n  assign T_8511_ie = T_8510 ? iof1Ctrl_26_ie : iof0Ctrl_26_ie;\n  assign T_8515 = iofEnReg_io_q[26];\n  assign T_8516_oval = T_8515 ? iofPlusSwPinCtrl_26_oval : swPinCtrl_26_oval;\n  assign T_8516_oe = T_8515 ? iofPlusSwPinCtrl_26_oe : swPinCtrl_26_oe;\n  assign T_8516_ie = T_8515 ? iofPlusSwPinCtrl_26_ie : swPinCtrl_26_ie;\n  assign T_8516_pue = T_8515 ? iofPlusSwPinCtrl_26_pue : swPinCtrl_26_pue;\n  assign T_8516_ds = T_8515 ? iofPlusSwPinCtrl_26_ds : swPinCtrl_26_ds;\n  assign T_8522 = xorReg[26];\n  assign T_8523 = T_8516_oval ^ T_8522;\n  assign T_8524 = riseIpReg[26];\n  assign T_8525 = riseIeReg[26];\n  assign T_8526 = T_8524 & T_8525;\n  assign T_8527 = fallIpReg[26];\n  assign T_8528 = fallIeReg[26];\n  assign T_8529 = T_8527 & T_8528;\n  assign T_8530 = T_8526 | T_8529;\n  assign T_8531 = highIpReg[26];\n  assign T_8532 = highIeReg[26];\n  assign T_8533 = T_8531 & T_8532;\n  assign T_8534 = T_8530 | T_8533;\n  assign T_8535 = lowIpReg[26];\n  assign T_8536 = lowIeReg[26];\n  assign T_8537 = T_8535 & T_8536;\n  assign T_8538 = T_8534 | T_8537;\n  assign T_8539 = inSyncReg[26];\n  assign T_8541 = pueReg_io_q[27];\n  assign T_8542 = portReg[27];\n  assign T_8543 = oeReg_io_q[27];\n  assign T_8544 = dsReg[27];\n  assign T_8545 = ieReg_io_q[27];\n  assign GEN_363 = io_port_iof_0_27_o_valid ? io_port_iof_0_27_o_oval : swPinCtrl_27_oval;\n  assign GEN_364 = io_port_iof_0_27_o_valid ? io_port_iof_0_27_o_oe : swPinCtrl_27_oe;\n  assign GEN_365 = io_port_iof_0_27_o_valid ? io_port_iof_0_27_o_ie : swPinCtrl_27_ie;\n  assign GEN_366 = io_port_iof_1_27_o_valid ? io_port_iof_1_27_o_oval : swPinCtrl_27_oval;\n  assign GEN_367 = io_port_iof_1_27_o_valid ? io_port_iof_1_27_o_oe : swPinCtrl_27_oe;\n  assign GEN_368 = io_port_iof_1_27_o_valid ? io_port_iof_1_27_o_ie : swPinCtrl_27_ie;\n  assign T_8546 = iofSelReg[27];\n  assign T_8547_oval = T_8546 ? iof1Ctrl_27_oval : iof0Ctrl_27_oval;\n  assign T_8547_oe = T_8546 ? iof1Ctrl_27_oe : iof0Ctrl_27_oe;\n  assign T_8547_ie = T_8546 ? iof1Ctrl_27_ie : iof0Ctrl_27_ie;\n  assign T_8551 = iofEnReg_io_q[27];\n  assign T_8552_oval = T_8551 ? iofPlusSwPinCtrl_27_oval : swPinCtrl_27_oval;\n  assign T_8552_oe = T_8551 ? iofPlusSwPinCtrl_27_oe : swPinCtrl_27_oe;\n  assign T_8552_ie = T_8551 ? iofPlusSwPinCtrl_27_ie : swPinCtrl_27_ie;\n  assign T_8552_pue = T_8551 ? iofPlusSwPinCtrl_27_pue : swPinCtrl_27_pue;\n  assign T_8552_ds = T_8551 ? iofPlusSwPinCtrl_27_ds : swPinCtrl_27_ds;\n  assign T_8558 = xorReg[27];\n  assign T_8559 = T_8552_oval ^ T_8558;\n  assign T_8560 = riseIpReg[27];\n  assign T_8561 = riseIeReg[27];\n  assign T_8562 = T_8560 & T_8561;\n  assign T_8563 = fallIpReg[27];\n  assign T_8564 = fallIeReg[27];\n  assign T_8565 = T_8563 & T_8564;\n  assign T_8566 = T_8562 | T_8565;\n  assign T_8567 = highIpReg[27];\n  assign T_8568 = highIeReg[27];\n  assign T_8569 = T_8567 & T_8568;\n  assign T_8570 = T_8566 | T_8569;\n  assign T_8571 = lowIpReg[27];\n  assign T_8572 = lowIeReg[27];\n  assign T_8573 = T_8571 & T_8572;\n  assign T_8574 = T_8570 | T_8573;\n  assign T_8575 = inSyncReg[27];\n  assign T_8577 = pueReg_io_q[28];\n  assign T_8578 = portReg[28];\n  assign T_8579 = oeReg_io_q[28];\n  assign T_8580 = dsReg[28];\n  assign T_8581 = ieReg_io_q[28];\n  assign GEN_369 = io_port_iof_0_28_o_valid ? io_port_iof_0_28_o_oval : swPinCtrl_28_oval;\n  assign GEN_370 = io_port_iof_0_28_o_valid ? io_port_iof_0_28_o_oe : swPinCtrl_28_oe;\n  assign GEN_371 = io_port_iof_0_28_o_valid ? io_port_iof_0_28_o_ie : swPinCtrl_28_ie;\n  assign GEN_372 = io_port_iof_1_28_o_valid ? io_port_iof_1_28_o_oval : swPinCtrl_28_oval;\n  assign GEN_373 = io_port_iof_1_28_o_valid ? io_port_iof_1_28_o_oe : swPinCtrl_28_oe;\n  assign GEN_374 = io_port_iof_1_28_o_valid ? io_port_iof_1_28_o_ie : swPinCtrl_28_ie;\n  assign T_8582 = iofSelReg[28];\n  assign T_8583_oval = T_8582 ? iof1Ctrl_28_oval : iof0Ctrl_28_oval;\n  assign T_8583_oe = T_8582 ? iof1Ctrl_28_oe : iof0Ctrl_28_oe;\n  assign T_8583_ie = T_8582 ? iof1Ctrl_28_ie : iof0Ctrl_28_ie;\n  assign T_8587 = iofEnReg_io_q[28];\n  assign T_8588_oval = T_8587 ? iofPlusSwPinCtrl_28_oval : swPinCtrl_28_oval;\n  assign T_8588_oe = T_8587 ? iofPlusSwPinCtrl_28_oe : swPinCtrl_28_oe;\n  assign T_8588_ie = T_8587 ? iofPlusSwPinCtrl_28_ie : swPinCtrl_28_ie;\n  assign T_8588_pue = T_8587 ? iofPlusSwPinCtrl_28_pue : swPinCtrl_28_pue;\n  assign T_8588_ds = T_8587 ? iofPlusSwPinCtrl_28_ds : swPinCtrl_28_ds;\n  assign T_8594 = xorReg[28];\n  assign T_8595 = T_8588_oval ^ T_8594;\n  assign T_8596 = riseIpReg[28];\n  assign T_8597 = riseIeReg[28];\n  assign T_8598 = T_8596 & T_8597;\n  assign T_8599 = fallIpReg[28];\n  assign T_8600 = fallIeReg[28];\n  assign T_8601 = T_8599 & T_8600;\n  assign T_8602 = T_8598 | T_8601;\n  assign T_8603 = highIpReg[28];\n  assign T_8604 = highIeReg[28];\n  assign T_8605 = T_8603 & T_8604;\n  assign T_8606 = T_8602 | T_8605;\n  assign T_8607 = lowIpReg[28];\n  assign T_8608 = lowIeReg[28];\n  assign T_8609 = T_8607 & T_8608;\n  assign T_8610 = T_8606 | T_8609;\n  assign T_8611 = inSyncReg[28];\n  assign T_8613 = pueReg_io_q[29];\n  assign T_8614 = portReg[29];\n  assign T_8615 = oeReg_io_q[29];\n  assign T_8616 = dsReg[29];\n  assign T_8617 = ieReg_io_q[29];\n  assign GEN_375 = io_port_iof_0_29_o_valid ? io_port_iof_0_29_o_oval : swPinCtrl_29_oval;\n  assign GEN_376 = io_port_iof_0_29_o_valid ? io_port_iof_0_29_o_oe : swPinCtrl_29_oe;\n  assign GEN_377 = io_port_iof_0_29_o_valid ? io_port_iof_0_29_o_ie : swPinCtrl_29_ie;\n  assign GEN_378 = io_port_iof_1_29_o_valid ? io_port_iof_1_29_o_oval : swPinCtrl_29_oval;\n  assign GEN_379 = io_port_iof_1_29_o_valid ? io_port_iof_1_29_o_oe : swPinCtrl_29_oe;\n  assign GEN_380 = io_port_iof_1_29_o_valid ? io_port_iof_1_29_o_ie : swPinCtrl_29_ie;\n  assign T_8618 = iofSelReg[29];\n  assign T_8619_oval = T_8618 ? iof1Ctrl_29_oval : iof0Ctrl_29_oval;\n  assign T_8619_oe = T_8618 ? iof1Ctrl_29_oe : iof0Ctrl_29_oe;\n  assign T_8619_ie = T_8618 ? iof1Ctrl_29_ie : iof0Ctrl_29_ie;\n  assign T_8623 = iofEnReg_io_q[29];\n  assign T_8624_oval = T_8623 ? iofPlusSwPinCtrl_29_oval : swPinCtrl_29_oval;\n  assign T_8624_oe = T_8623 ? iofPlusSwPinCtrl_29_oe : swPinCtrl_29_oe;\n  assign T_8624_ie = T_8623 ? iofPlusSwPinCtrl_29_ie : swPinCtrl_29_ie;\n  assign T_8624_pue = T_8623 ? iofPlusSwPinCtrl_29_pue : swPinCtrl_29_pue;\n  assign T_8624_ds = T_8623 ? iofPlusSwPinCtrl_29_ds : swPinCtrl_29_ds;\n  assign T_8630 = xorReg[29];\n  assign T_8631 = T_8624_oval ^ T_8630;\n  assign T_8632 = riseIpReg[29];\n  assign T_8633 = riseIeReg[29];\n  assign T_8634 = T_8632 & T_8633;\n  assign T_8635 = fallIpReg[29];\n  assign T_8636 = fallIeReg[29];\n  assign T_8637 = T_8635 & T_8636;\n  assign T_8638 = T_8634 | T_8637;\n  assign T_8639 = highIpReg[29];\n  assign T_8640 = highIeReg[29];\n  assign T_8641 = T_8639 & T_8640;\n  assign T_8642 = T_8638 | T_8641;\n  assign T_8643 = lowIpReg[29];\n  assign T_8644 = lowIeReg[29];\n  assign T_8645 = T_8643 & T_8644;\n  assign T_8646 = T_8642 | T_8645;\n  assign T_8647 = inSyncReg[29];\n  assign T_8649 = pueReg_io_q[30];\n  assign T_8650 = portReg[30];\n  assign T_8651 = oeReg_io_q[30];\n  assign T_8652 = dsReg[30];\n  assign T_8653 = ieReg_io_q[30];\n  assign GEN_381 = io_port_iof_0_30_o_valid ? io_port_iof_0_30_o_oval : swPinCtrl_30_oval;\n  assign GEN_382 = io_port_iof_0_30_o_valid ? io_port_iof_0_30_o_oe : swPinCtrl_30_oe;\n  assign GEN_383 = io_port_iof_0_30_o_valid ? io_port_iof_0_30_o_ie : swPinCtrl_30_ie;\n  assign GEN_384 = io_port_iof_1_30_o_valid ? io_port_iof_1_30_o_oval : swPinCtrl_30_oval;\n  assign GEN_385 = io_port_iof_1_30_o_valid ? io_port_iof_1_30_o_oe : swPinCtrl_30_oe;\n  assign GEN_386 = io_port_iof_1_30_o_valid ? io_port_iof_1_30_o_ie : swPinCtrl_30_ie;\n  assign T_8654 = iofSelReg[30];\n  assign T_8655_oval = T_8654 ? iof1Ctrl_30_oval : iof0Ctrl_30_oval;\n  assign T_8655_oe = T_8654 ? iof1Ctrl_30_oe : iof0Ctrl_30_oe;\n  assign T_8655_ie = T_8654 ? iof1Ctrl_30_ie : iof0Ctrl_30_ie;\n  assign T_8659 = iofEnReg_io_q[30];\n  assign T_8660_oval = T_8659 ? iofPlusSwPinCtrl_30_oval : swPinCtrl_30_oval;\n  assign T_8660_oe = T_8659 ? iofPlusSwPinCtrl_30_oe : swPinCtrl_30_oe;\n  assign T_8660_ie = T_8659 ? iofPlusSwPinCtrl_30_ie : swPinCtrl_30_ie;\n  assign T_8660_pue = T_8659 ? iofPlusSwPinCtrl_30_pue : swPinCtrl_30_pue;\n  assign T_8660_ds = T_8659 ? iofPlusSwPinCtrl_30_ds : swPinCtrl_30_ds;\n  assign T_8666 = xorReg[30];\n  assign T_8667 = T_8660_oval ^ T_8666;\n  assign T_8668 = riseIpReg[30];\n  assign T_8669 = riseIeReg[30];\n  assign T_8670 = T_8668 & T_8669;\n  assign T_8671 = fallIpReg[30];\n  assign T_8672 = fallIeReg[30];\n  assign T_8673 = T_8671 & T_8672;\n  assign T_8674 = T_8670 | T_8673;\n  assign T_8675 = highIpReg[30];\n  assign T_8676 = highIeReg[30];\n  assign T_8677 = T_8675 & T_8676;\n  assign T_8678 = T_8674 | T_8677;\n  assign T_8679 = lowIpReg[30];\n  assign T_8680 = lowIeReg[30];\n  assign T_8681 = T_8679 & T_8680;\n  assign T_8682 = T_8678 | T_8681;\n  assign T_8683 = inSyncReg[30];\n  assign T_8685 = pueReg_io_q[31];\n  assign T_8686 = portReg[31];\n  assign T_8687 = oeReg_io_q[31];\n  assign T_8688 = dsReg[31];\n  assign T_8689 = ieReg_io_q[31];\n  assign GEN_387 = io_port_iof_0_31_o_valid ? io_port_iof_0_31_o_oval : swPinCtrl_31_oval;\n  assign GEN_388 = io_port_iof_0_31_o_valid ? io_port_iof_0_31_o_oe : swPinCtrl_31_oe;\n  assign GEN_389 = io_port_iof_0_31_o_valid ? io_port_iof_0_31_o_ie : swPinCtrl_31_ie;\n  assign GEN_390 = io_port_iof_1_31_o_valid ? io_port_iof_1_31_o_oval : swPinCtrl_31_oval;\n  assign GEN_391 = io_port_iof_1_31_o_valid ? io_port_iof_1_31_o_oe : swPinCtrl_31_oe;\n  assign GEN_392 = io_port_iof_1_31_o_valid ? io_port_iof_1_31_o_ie : swPinCtrl_31_ie;\n  assign T_8690 = iofSelReg[31];\n  assign T_8691_oval = T_8690 ? iof1Ctrl_31_oval : iof0Ctrl_31_oval;\n  assign T_8691_oe = T_8690 ? iof1Ctrl_31_oe : iof0Ctrl_31_oe;\n  assign T_8691_ie = T_8690 ? iof1Ctrl_31_ie : iof0Ctrl_31_ie;\n  assign T_8695 = iofEnReg_io_q[31];\n  assign T_8696_oval = T_8695 ? iofPlusSwPinCtrl_31_oval : swPinCtrl_31_oval;\n  assign T_8696_oe = T_8695 ? iofPlusSwPinCtrl_31_oe : swPinCtrl_31_oe;\n  assign T_8696_ie = T_8695 ? iofPlusSwPinCtrl_31_ie : swPinCtrl_31_ie;\n  assign T_8696_pue = T_8695 ? iofPlusSwPinCtrl_31_pue : swPinCtrl_31_pue;\n  assign T_8696_ds = T_8695 ? iofPlusSwPinCtrl_31_ds : swPinCtrl_31_ds;\n  assign T_8702 = xorReg[31];\n  assign T_8703 = T_8696_oval ^ T_8702;\n  assign T_8704 = riseIpReg[31];\n  assign T_8705 = riseIeReg[31];\n  assign T_8706 = T_8704 & T_8705;\n  assign T_8707 = fallIpReg[31];\n  assign T_8708 = fallIeReg[31];\n  assign T_8709 = T_8707 & T_8708;\n  assign T_8710 = T_8706 | T_8709;\n  assign T_8711 = highIpReg[31];\n  assign T_8712 = highIeReg[31];\n  assign T_8713 = T_8711 & T_8712;\n  assign T_8714 = T_8710 | T_8713;\n  assign T_8715 = lowIpReg[31];\n  assign T_8716 = lowIeReg[31];\n  assign T_8717 = T_8715 & T_8716;\n  assign T_8718 = T_8714 | T_8717;\n  assign T_8719 = inSyncReg[31];\n\n  always @(posedge clock or posedge reset)\n    if(reset) begin\n      T_3256 <= 32'b0;\n      T_3257 <= 32'b0;\n      inSyncReg <= 32'b0;\n    end\n    else begin\n      T_3256 <= inVal;\n      T_3257 <= T_3256;\n      inSyncReg <= T_3257;\n    end\n\n  always @(posedge clock or posedge reset) \n    if (reset) begin\n      portReg <= 32'h0;\n    end else begin\n      if (T_4329) begin\n        portReg <= T_3370_bits_data;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      dsReg <= 32'h0;\n    end else begin\n      if (T_3911) begin\n        dsReg <= T_3370_bits_data;\n      end\n    end\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      valueReg <= 32'h0;\n    end else begin\n      valueReg <= inSyncReg;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      highIeReg <= 32'h0;\n    end else begin\n      if (T_3951) begin\n        highIeReg <= T_3370_bits_data;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      lowIeReg <= 32'h0;\n    end else begin\n      if (T_4243) begin\n        lowIeReg <= T_3370_bits_data;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      riseIeReg <= 32'h0;\n    end else begin\n      if (T_4071) begin\n        riseIeReg <= T_3370_bits_data;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      fallIeReg <= 32'h0;\n    end else begin\n      if (T_4455) begin\n        fallIeReg <= T_3370_bits_data;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      highIpReg <= 32'h0;\n    end else begin\n      highIpReg <= T_4417;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      lowIpReg <= 32'h0;\n    end else begin\n      lowIpReg <= T_4165;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      riseIpReg <= 32'h0;\n    end else begin\n      riseIpReg <= T_4291;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      fallIpReg <= 32'h0;\n    end else begin\n      fallIpReg <= T_4119;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      iofSelReg <= 32'h0;\n    end else begin\n      if (T_4535) begin\n        iofSelReg <= T_3370_bits_data;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      xorReg <= 32'h0;\n    end else begin\n      if (T_4369) begin\n        xorReg <= T_3370_bits_data;\n      end\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top level module of gpio\n//\n// ====================================================================\n\nmodule sirv_gpio_top(\n  input   clk,\n  input   rst_n,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [32-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n  output  gpio_irq_0,\n  output  gpio_irq_1,\n  output  gpio_irq_2,\n  output  gpio_irq_3,\n  output  gpio_irq_4,\n  output  gpio_irq_5,\n  output  gpio_irq_6,\n  output  gpio_irq_7,\n  output  gpio_irq_8,\n  output  gpio_irq_9,\n  output  gpio_irq_10,\n  output  gpio_irq_11,\n  output  gpio_irq_12,\n  output  gpio_irq_13,\n  output  gpio_irq_14,\n  output  gpio_irq_15,\n  output  gpio_irq_16,\n  output  gpio_irq_17,\n  output  gpio_irq_18,\n  output  gpio_irq_19,\n  output  gpio_irq_20,\n  output  gpio_irq_21,\n  output  gpio_irq_22,\n  output  gpio_irq_23,\n  output  gpio_irq_24,\n  output  gpio_irq_25,\n  output  gpio_irq_26,\n  output  gpio_irq_27,\n  output  gpio_irq_28,\n  output  gpio_irq_29,\n  output  gpio_irq_30,\n  output  gpio_irq_31,\n\n  input   io_port_pins_0_i_ival,\n  output  io_port_pins_0_o_oval,\n  output  io_port_pins_0_o_oe,\n  output  io_port_pins_0_o_ie,\n  output  io_port_pins_0_o_pue,\n  output  io_port_pins_0_o_ds,\n  input   io_port_pins_1_i_ival,\n  output  io_port_pins_1_o_oval,\n  output  io_port_pins_1_o_oe,\n  output  io_port_pins_1_o_ie,\n  output  io_port_pins_1_o_pue,\n  output  io_port_pins_1_o_ds,\n  input   io_port_pins_2_i_ival,\n  output  io_port_pins_2_o_oval,\n  output  io_port_pins_2_o_oe,\n  output  io_port_pins_2_o_ie,\n  output  io_port_pins_2_o_pue,\n  output  io_port_pins_2_o_ds,\n  input   io_port_pins_3_i_ival,\n  output  io_port_pins_3_o_oval,\n  output  io_port_pins_3_o_oe,\n  output  io_port_pins_3_o_ie,\n  output  io_port_pins_3_o_pue,\n  output  io_port_pins_3_o_ds,\n  input   io_port_pins_4_i_ival,\n  output  io_port_pins_4_o_oval,\n  output  io_port_pins_4_o_oe,\n  output  io_port_pins_4_o_ie,\n  output  io_port_pins_4_o_pue,\n  output  io_port_pins_4_o_ds,\n  input   io_port_pins_5_i_ival,\n  output  io_port_pins_5_o_oval,\n  output  io_port_pins_5_o_oe,\n  output  io_port_pins_5_o_ie,\n  output  io_port_pins_5_o_pue,\n  output  io_port_pins_5_o_ds,\n  input   io_port_pins_6_i_ival,\n  output  io_port_pins_6_o_oval,\n  output  io_port_pins_6_o_oe,\n  output  io_port_pins_6_o_ie,\n  output  io_port_pins_6_o_pue,\n  output  io_port_pins_6_o_ds,\n  input   io_port_pins_7_i_ival,\n  output  io_port_pins_7_o_oval,\n  output  io_port_pins_7_o_oe,\n  output  io_port_pins_7_o_ie,\n  output  io_port_pins_7_o_pue,\n  output  io_port_pins_7_o_ds,\n  input   io_port_pins_8_i_ival,\n  output  io_port_pins_8_o_oval,\n  output  io_port_pins_8_o_oe,\n  output  io_port_pins_8_o_ie,\n  output  io_port_pins_8_o_pue,\n  output  io_port_pins_8_o_ds,\n  input   io_port_pins_9_i_ival,\n  output  io_port_pins_9_o_oval,\n  output  io_port_pins_9_o_oe,\n  output  io_port_pins_9_o_ie,\n  output  io_port_pins_9_o_pue,\n  output  io_port_pins_9_o_ds,\n  input   io_port_pins_10_i_ival,\n  output  io_port_pins_10_o_oval,\n  output  io_port_pins_10_o_oe,\n  output  io_port_pins_10_o_ie,\n  output  io_port_pins_10_o_pue,\n  output  io_port_pins_10_o_ds,\n  input   io_port_pins_11_i_ival,\n  output  io_port_pins_11_o_oval,\n  output  io_port_pins_11_o_oe,\n  output  io_port_pins_11_o_ie,\n  output  io_port_pins_11_o_pue,\n  output  io_port_pins_11_o_ds,\n  input   io_port_pins_12_i_ival,\n  output  io_port_pins_12_o_oval,\n  output  io_port_pins_12_o_oe,\n  output  io_port_pins_12_o_ie,\n  output  io_port_pins_12_o_pue,\n  output  io_port_pins_12_o_ds,\n  input   io_port_pins_13_i_ival,\n  output  io_port_pins_13_o_oval,\n  output  io_port_pins_13_o_oe,\n  output  io_port_pins_13_o_ie,\n  output  io_port_pins_13_o_pue,\n  output  io_port_pins_13_o_ds,\n  input   io_port_pins_14_i_ival,\n  output  io_port_pins_14_o_oval,\n  output  io_port_pins_14_o_oe,\n  output  io_port_pins_14_o_ie,\n  output  io_port_pins_14_o_pue,\n  output  io_port_pins_14_o_ds,\n  input   io_port_pins_15_i_ival,\n  output  io_port_pins_15_o_oval,\n  output  io_port_pins_15_o_oe,\n  output  io_port_pins_15_o_ie,\n  output  io_port_pins_15_o_pue,\n  output  io_port_pins_15_o_ds,\n  input   io_port_pins_16_i_ival,\n  output  io_port_pins_16_o_oval,\n  output  io_port_pins_16_o_oe,\n  output  io_port_pins_16_o_ie,\n  output  io_port_pins_16_o_pue,\n  output  io_port_pins_16_o_ds,\n  input   io_port_pins_17_i_ival,\n  output  io_port_pins_17_o_oval,\n  output  io_port_pins_17_o_oe,\n  output  io_port_pins_17_o_ie,\n  output  io_port_pins_17_o_pue,\n  output  io_port_pins_17_o_ds,\n  input   io_port_pins_18_i_ival,\n  output  io_port_pins_18_o_oval,\n  output  io_port_pins_18_o_oe,\n  output  io_port_pins_18_o_ie,\n  output  io_port_pins_18_o_pue,\n  output  io_port_pins_18_o_ds,\n  input   io_port_pins_19_i_ival,\n  output  io_port_pins_19_o_oval,\n  output  io_port_pins_19_o_oe,\n  output  io_port_pins_19_o_ie,\n  output  io_port_pins_19_o_pue,\n  output  io_port_pins_19_o_ds,\n  input   io_port_pins_20_i_ival,\n  output  io_port_pins_20_o_oval,\n  output  io_port_pins_20_o_oe,\n  output  io_port_pins_20_o_ie,\n  output  io_port_pins_20_o_pue,\n  output  io_port_pins_20_o_ds,\n  input   io_port_pins_21_i_ival,\n  output  io_port_pins_21_o_oval,\n  output  io_port_pins_21_o_oe,\n  output  io_port_pins_21_o_ie,\n  output  io_port_pins_21_o_pue,\n  output  io_port_pins_21_o_ds,\n  input   io_port_pins_22_i_ival,\n  output  io_port_pins_22_o_oval,\n  output  io_port_pins_22_o_oe,\n  output  io_port_pins_22_o_ie,\n  output  io_port_pins_22_o_pue,\n  output  io_port_pins_22_o_ds,\n  input   io_port_pins_23_i_ival,\n  output  io_port_pins_23_o_oval,\n  output  io_port_pins_23_o_oe,\n  output  io_port_pins_23_o_ie,\n  output  io_port_pins_23_o_pue,\n  output  io_port_pins_23_o_ds,\n  input   io_port_pins_24_i_ival,\n  output  io_port_pins_24_o_oval,\n  output  io_port_pins_24_o_oe,\n  output  io_port_pins_24_o_ie,\n  output  io_port_pins_24_o_pue,\n  output  io_port_pins_24_o_ds,\n  input   io_port_pins_25_i_ival,\n  output  io_port_pins_25_o_oval,\n  output  io_port_pins_25_o_oe,\n  output  io_port_pins_25_o_ie,\n  output  io_port_pins_25_o_pue,\n  output  io_port_pins_25_o_ds,\n  input   io_port_pins_26_i_ival,\n  output  io_port_pins_26_o_oval,\n  output  io_port_pins_26_o_oe,\n  output  io_port_pins_26_o_ie,\n  output  io_port_pins_26_o_pue,\n  output  io_port_pins_26_o_ds,\n  input   io_port_pins_27_i_ival,\n  output  io_port_pins_27_o_oval,\n  output  io_port_pins_27_o_oe,\n  output  io_port_pins_27_o_ie,\n  output  io_port_pins_27_o_pue,\n  output  io_port_pins_27_o_ds,\n  input   io_port_pins_28_i_ival,\n  output  io_port_pins_28_o_oval,\n  output  io_port_pins_28_o_oe,\n  output  io_port_pins_28_o_ie,\n  output  io_port_pins_28_o_pue,\n  output  io_port_pins_28_o_ds,\n  input   io_port_pins_29_i_ival,\n  output  io_port_pins_29_o_oval,\n  output  io_port_pins_29_o_oe,\n  output  io_port_pins_29_o_ie,\n  output  io_port_pins_29_o_pue,\n  output  io_port_pins_29_o_ds,\n  input   io_port_pins_30_i_ival,\n  output  io_port_pins_30_o_oval,\n  output  io_port_pins_30_o_oe,\n  output  io_port_pins_30_o_ie,\n  output  io_port_pins_30_o_pue,\n  output  io_port_pins_30_o_ds,\n  input   io_port_pins_31_i_ival,\n  output  io_port_pins_31_o_oval,\n  output  io_port_pins_31_o_oe,\n  output  io_port_pins_31_o_ie,\n  output  io_port_pins_31_o_pue,\n  output  io_port_pins_31_o_ds,\n\n  output  io_port_iof_0_0_i_ival,\n  input   io_port_iof_0_0_o_oval,\n  input   io_port_iof_0_0_o_oe,\n  input   io_port_iof_0_0_o_ie,\n  input   io_port_iof_0_0_o_valid,\n  output  io_port_iof_0_1_i_ival,\n  input   io_port_iof_0_1_o_oval,\n  input   io_port_iof_0_1_o_oe,\n  input   io_port_iof_0_1_o_ie,\n  input   io_port_iof_0_1_o_valid,\n  output  io_port_iof_0_2_i_ival,\n  input   io_port_iof_0_2_o_oval,\n  input   io_port_iof_0_2_o_oe,\n  input   io_port_iof_0_2_o_ie,\n  input   io_port_iof_0_2_o_valid,\n  output  io_port_iof_0_3_i_ival,\n  input   io_port_iof_0_3_o_oval,\n  input   io_port_iof_0_3_o_oe,\n  input   io_port_iof_0_3_o_ie,\n  input   io_port_iof_0_3_o_valid,\n  output  io_port_iof_0_4_i_ival,\n  input   io_port_iof_0_4_o_oval,\n  input   io_port_iof_0_4_o_oe,\n  input   io_port_iof_0_4_o_ie,\n  input   io_port_iof_0_4_o_valid,\n  output  io_port_iof_0_5_i_ival,\n  input   io_port_iof_0_5_o_oval,\n  input   io_port_iof_0_5_o_oe,\n  input   io_port_iof_0_5_o_ie,\n  input   io_port_iof_0_5_o_valid,\n  output  io_port_iof_0_6_i_ival,\n  input   io_port_iof_0_6_o_oval,\n  input   io_port_iof_0_6_o_oe,\n  input   io_port_iof_0_6_o_ie,\n  input   io_port_iof_0_6_o_valid,\n  output  io_port_iof_0_7_i_ival,\n  input   io_port_iof_0_7_o_oval,\n  input   io_port_iof_0_7_o_oe,\n  input   io_port_iof_0_7_o_ie,\n  input   io_port_iof_0_7_o_valid,\n  output  io_port_iof_0_8_i_ival,\n  input   io_port_iof_0_8_o_oval,\n  input   io_port_iof_0_8_o_oe,\n  input   io_port_iof_0_8_o_ie,\n  input   io_port_iof_0_8_o_valid,\n  output  io_port_iof_0_9_i_ival,\n  input   io_port_iof_0_9_o_oval,\n  input   io_port_iof_0_9_o_oe,\n  input   io_port_iof_0_9_o_ie,\n  input   io_port_iof_0_9_o_valid,\n  output  io_port_iof_0_10_i_ival,\n  input   io_port_iof_0_10_o_oval,\n  input   io_port_iof_0_10_o_oe,\n  input   io_port_iof_0_10_o_ie,\n  input   io_port_iof_0_10_o_valid,\n  output  io_port_iof_0_11_i_ival,\n  input   io_port_iof_0_11_o_oval,\n  input   io_port_iof_0_11_o_oe,\n  input   io_port_iof_0_11_o_ie,\n  input   io_port_iof_0_11_o_valid,\n  output  io_port_iof_0_12_i_ival,\n  input   io_port_iof_0_12_o_oval,\n  input   io_port_iof_0_12_o_oe,\n  input   io_port_iof_0_12_o_ie,\n  input   io_port_iof_0_12_o_valid,\n  output  io_port_iof_0_13_i_ival,\n  input   io_port_iof_0_13_o_oval,\n  input   io_port_iof_0_13_o_oe,\n  input   io_port_iof_0_13_o_ie,\n  input   io_port_iof_0_13_o_valid,\n  output  io_port_iof_0_14_i_ival,\n  input   io_port_iof_0_14_o_oval,\n  input   io_port_iof_0_14_o_oe,\n  input   io_port_iof_0_14_o_ie,\n  input   io_port_iof_0_14_o_valid,\n  output  io_port_iof_0_15_i_ival,\n  input   io_port_iof_0_15_o_oval,\n  input   io_port_iof_0_15_o_oe,\n  input   io_port_iof_0_15_o_ie,\n  input   io_port_iof_0_15_o_valid,\n  output  io_port_iof_0_16_i_ival,\n  input   io_port_iof_0_16_o_oval,\n  input   io_port_iof_0_16_o_oe,\n  input   io_port_iof_0_16_o_ie,\n  input   io_port_iof_0_16_o_valid,\n  output  io_port_iof_0_17_i_ival,\n  input   io_port_iof_0_17_o_oval,\n  input   io_port_iof_0_17_o_oe,\n  input   io_port_iof_0_17_o_ie,\n  input   io_port_iof_0_17_o_valid,\n  output  io_port_iof_0_18_i_ival,\n  input   io_port_iof_0_18_o_oval,\n  input   io_port_iof_0_18_o_oe,\n  input   io_port_iof_0_18_o_ie,\n  input   io_port_iof_0_18_o_valid,\n  output  io_port_iof_0_19_i_ival,\n  input   io_port_iof_0_19_o_oval,\n  input   io_port_iof_0_19_o_oe,\n  input   io_port_iof_0_19_o_ie,\n  input   io_port_iof_0_19_o_valid,\n  output  io_port_iof_0_20_i_ival,\n  input   io_port_iof_0_20_o_oval,\n  input   io_port_iof_0_20_o_oe,\n  input   io_port_iof_0_20_o_ie,\n  input   io_port_iof_0_20_o_valid,\n  output  io_port_iof_0_21_i_ival,\n  input   io_port_iof_0_21_o_oval,\n  input   io_port_iof_0_21_o_oe,\n  input   io_port_iof_0_21_o_ie,\n  input   io_port_iof_0_21_o_valid,\n  output  io_port_iof_0_22_i_ival,\n  input   io_port_iof_0_22_o_oval,\n  input   io_port_iof_0_22_o_oe,\n  input   io_port_iof_0_22_o_ie,\n  input   io_port_iof_0_22_o_valid,\n  output  io_port_iof_0_23_i_ival,\n  input   io_port_iof_0_23_o_oval,\n  input   io_port_iof_0_23_o_oe,\n  input   io_port_iof_0_23_o_ie,\n  input   io_port_iof_0_23_o_valid,\n  output  io_port_iof_0_24_i_ival,\n  input   io_port_iof_0_24_o_oval,\n  input   io_port_iof_0_24_o_oe,\n  input   io_port_iof_0_24_o_ie,\n  input   io_port_iof_0_24_o_valid,\n  output  io_port_iof_0_25_i_ival,\n  input   io_port_iof_0_25_o_oval,\n  input   io_port_iof_0_25_o_oe,\n  input   io_port_iof_0_25_o_ie,\n  input   io_port_iof_0_25_o_valid,\n  output  io_port_iof_0_26_i_ival,\n  input   io_port_iof_0_26_o_oval,\n  input   io_port_iof_0_26_o_oe,\n  input   io_port_iof_0_26_o_ie,\n  input   io_port_iof_0_26_o_valid,\n  output  io_port_iof_0_27_i_ival,\n  input   io_port_iof_0_27_o_oval,\n  input   io_port_iof_0_27_o_oe,\n  input   io_port_iof_0_27_o_ie,\n  input   io_port_iof_0_27_o_valid,\n  output  io_port_iof_0_28_i_ival,\n  input   io_port_iof_0_28_o_oval,\n  input   io_port_iof_0_28_o_oe,\n  input   io_port_iof_0_28_o_ie,\n  input   io_port_iof_0_28_o_valid,\n  output  io_port_iof_0_29_i_ival,\n  input   io_port_iof_0_29_o_oval,\n  input   io_port_iof_0_29_o_oe,\n  input   io_port_iof_0_29_o_ie,\n  input   io_port_iof_0_29_o_valid,\n  output  io_port_iof_0_30_i_ival,\n  input   io_port_iof_0_30_o_oval,\n  input   io_port_iof_0_30_o_oe,\n  input   io_port_iof_0_30_o_ie,\n  input   io_port_iof_0_30_o_valid,\n  output  io_port_iof_0_31_i_ival,\n  input   io_port_iof_0_31_o_oval,\n  input   io_port_iof_0_31_o_oe,\n  input   io_port_iof_0_31_o_ie,\n  input   io_port_iof_0_31_o_valid,\n\n  output  io_port_iof_1_0_i_ival,\n  input   io_port_iof_1_0_o_oval,\n  input   io_port_iof_1_0_o_oe,\n  input   io_port_iof_1_0_o_ie,\n  input   io_port_iof_1_0_o_valid,\n  output  io_port_iof_1_1_i_ival,\n  input   io_port_iof_1_1_o_oval,\n  input   io_port_iof_1_1_o_oe,\n  input   io_port_iof_1_1_o_ie,\n  input   io_port_iof_1_1_o_valid,\n  output  io_port_iof_1_2_i_ival,\n  input   io_port_iof_1_2_o_oval,\n  input   io_port_iof_1_2_o_oe,\n  input   io_port_iof_1_2_o_ie,\n  input   io_port_iof_1_2_o_valid,\n  output  io_port_iof_1_3_i_ival,\n  input   io_port_iof_1_3_o_oval,\n  input   io_port_iof_1_3_o_oe,\n  input   io_port_iof_1_3_o_ie,\n  input   io_port_iof_1_3_o_valid,\n  output  io_port_iof_1_4_i_ival,\n  input   io_port_iof_1_4_o_oval,\n  input   io_port_iof_1_4_o_oe,\n  input   io_port_iof_1_4_o_ie,\n  input   io_port_iof_1_4_o_valid,\n  output  io_port_iof_1_5_i_ival,\n  input   io_port_iof_1_5_o_oval,\n  input   io_port_iof_1_5_o_oe,\n  input   io_port_iof_1_5_o_ie,\n  input   io_port_iof_1_5_o_valid,\n  output  io_port_iof_1_6_i_ival,\n  input   io_port_iof_1_6_o_oval,\n  input   io_port_iof_1_6_o_oe,\n  input   io_port_iof_1_6_o_ie,\n  input   io_port_iof_1_6_o_valid,\n  output  io_port_iof_1_7_i_ival,\n  input   io_port_iof_1_7_o_oval,\n  input   io_port_iof_1_7_o_oe,\n  input   io_port_iof_1_7_o_ie,\n  input   io_port_iof_1_7_o_valid,\n  output  io_port_iof_1_8_i_ival,\n  input   io_port_iof_1_8_o_oval,\n  input   io_port_iof_1_8_o_oe,\n  input   io_port_iof_1_8_o_ie,\n  input   io_port_iof_1_8_o_valid,\n  output  io_port_iof_1_9_i_ival,\n  input   io_port_iof_1_9_o_oval,\n  input   io_port_iof_1_9_o_oe,\n  input   io_port_iof_1_9_o_ie,\n  input   io_port_iof_1_9_o_valid,\n  output  io_port_iof_1_10_i_ival,\n  input   io_port_iof_1_10_o_oval,\n  input   io_port_iof_1_10_o_oe,\n  input   io_port_iof_1_10_o_ie,\n  input   io_port_iof_1_10_o_valid,\n  output  io_port_iof_1_11_i_ival,\n  input   io_port_iof_1_11_o_oval,\n  input   io_port_iof_1_11_o_oe,\n  input   io_port_iof_1_11_o_ie,\n  input   io_port_iof_1_11_o_valid,\n  output  io_port_iof_1_12_i_ival,\n  input   io_port_iof_1_12_o_oval,\n  input   io_port_iof_1_12_o_oe,\n  input   io_port_iof_1_12_o_ie,\n  input   io_port_iof_1_12_o_valid,\n  output  io_port_iof_1_13_i_ival,\n  input   io_port_iof_1_13_o_oval,\n  input   io_port_iof_1_13_o_oe,\n  input   io_port_iof_1_13_o_ie,\n  input   io_port_iof_1_13_o_valid,\n  output  io_port_iof_1_14_i_ival,\n  input   io_port_iof_1_14_o_oval,\n  input   io_port_iof_1_14_o_oe,\n  input   io_port_iof_1_14_o_ie,\n  input   io_port_iof_1_14_o_valid,\n  output  io_port_iof_1_15_i_ival,\n  input   io_port_iof_1_15_o_oval,\n  input   io_port_iof_1_15_o_oe,\n  input   io_port_iof_1_15_o_ie,\n  input   io_port_iof_1_15_o_valid,\n  output  io_port_iof_1_16_i_ival,\n  input   io_port_iof_1_16_o_oval,\n  input   io_port_iof_1_16_o_oe,\n  input   io_port_iof_1_16_o_ie,\n  input   io_port_iof_1_16_o_valid,\n  output  io_port_iof_1_17_i_ival,\n  input   io_port_iof_1_17_o_oval,\n  input   io_port_iof_1_17_o_oe,\n  input   io_port_iof_1_17_o_ie,\n  input   io_port_iof_1_17_o_valid,\n  output  io_port_iof_1_18_i_ival,\n  input   io_port_iof_1_18_o_oval,\n  input   io_port_iof_1_18_o_oe,\n  input   io_port_iof_1_18_o_ie,\n  input   io_port_iof_1_18_o_valid,\n  output  io_port_iof_1_19_i_ival,\n  input   io_port_iof_1_19_o_oval,\n  input   io_port_iof_1_19_o_oe,\n  input   io_port_iof_1_19_o_ie,\n  input   io_port_iof_1_19_o_valid,\n  output  io_port_iof_1_20_i_ival,\n  input   io_port_iof_1_20_o_oval,\n  input   io_port_iof_1_20_o_oe,\n  input   io_port_iof_1_20_o_ie,\n  input   io_port_iof_1_20_o_valid,\n  output  io_port_iof_1_21_i_ival,\n  input   io_port_iof_1_21_o_oval,\n  input   io_port_iof_1_21_o_oe,\n  input   io_port_iof_1_21_o_ie,\n  input   io_port_iof_1_21_o_valid,\n  output  io_port_iof_1_22_i_ival,\n  input   io_port_iof_1_22_o_oval,\n  input   io_port_iof_1_22_o_oe,\n  input   io_port_iof_1_22_o_ie,\n  input   io_port_iof_1_22_o_valid,\n  output  io_port_iof_1_23_i_ival,\n  input   io_port_iof_1_23_o_oval,\n  input   io_port_iof_1_23_o_oe,\n  input   io_port_iof_1_23_o_ie,\n  input   io_port_iof_1_23_o_valid,\n  output  io_port_iof_1_24_i_ival,\n  input   io_port_iof_1_24_o_oval,\n  input   io_port_iof_1_24_o_oe,\n  input   io_port_iof_1_24_o_ie,\n  input   io_port_iof_1_24_o_valid,\n  output  io_port_iof_1_25_i_ival,\n  input   io_port_iof_1_25_o_oval,\n  input   io_port_iof_1_25_o_oe,\n  input   io_port_iof_1_25_o_ie,\n  input   io_port_iof_1_25_o_valid,\n  output  io_port_iof_1_26_i_ival,\n  input   io_port_iof_1_26_o_oval,\n  input   io_port_iof_1_26_o_oe,\n  input   io_port_iof_1_26_o_ie,\n  input   io_port_iof_1_26_o_valid,\n  output  io_port_iof_1_27_i_ival,\n  input   io_port_iof_1_27_o_oval,\n  input   io_port_iof_1_27_o_oe,\n  input   io_port_iof_1_27_o_ie,\n  input   io_port_iof_1_27_o_valid,\n  output  io_port_iof_1_28_i_ival,\n  input   io_port_iof_1_28_o_oval,\n  input   io_port_iof_1_28_o_oe,\n  input   io_port_iof_1_28_o_ie,\n  input   io_port_iof_1_28_o_valid,\n  output  io_port_iof_1_29_i_ival,\n  input   io_port_iof_1_29_o_oval,\n  input   io_port_iof_1_29_o_oe,\n  input   io_port_iof_1_29_o_ie,\n  input   io_port_iof_1_29_o_valid,\n  output  io_port_iof_1_30_i_ival,\n  input   io_port_iof_1_30_o_oval,\n  input   io_port_iof_1_30_o_oe,\n  input   io_port_iof_1_30_o_ie,\n  input   io_port_iof_1_30_o_valid,\n  output  io_port_iof_1_31_i_ival,\n  input   io_port_iof_1_31_o_oval,\n  input   io_port_iof_1_31_o_oe,\n  input   io_port_iof_1_31_o_ie,\n  input   io_port_iof_1_31_o_valid\n);\n\n\n  wire  io_in_0_a_ready;\n  assign  i_icb_cmd_ready  = io_in_0_a_ready;\n  wire  io_in_0_a_valid  = i_icb_cmd_valid;\n  wire  [2:0] io_in_0_a_bi"}
{"text": "ts_opcode  = i_icb_cmd_read ? 3'h4 : 3'h0;\n  wire  [2:0] io_in_0_a_bits_param  = 3'b0;\n  wire  [2:0] io_in_0_a_bits_size = 3'd2;\n  wire  [4:0] io_in_0_a_bits_source  = 5'b0;\n  wire  [28:0] io_in_0_a_bits_address  = i_icb_cmd_addr[28:0];\n  wire  [3:0] io_in_0_a_bits_mask  = 4'b1111;\n  wire  [31:0] io_in_0_a_bits_data  = i_icb_cmd_wdata;\n\n  \n  wire  io_in_0_d_ready = i_icb_rsp_ready;\n\n  wire  [2:0] io_in_0_d_bits_opcode;\n  wire  [1:0] io_in_0_d_bits_param;\n  wire  [2:0] io_in_0_d_bits_size;\n  wire  [4:0] io_in_0_d_bits_source;\n  wire  io_in_0_d_bits_sink;\n  wire  [1:0] io_in_0_d_bits_addr_lo;\n  wire  [31:0] io_in_0_d_bits_data;\n  wire  io_in_0_d_bits_error;\n  wire  io_in_0_d_valid;\n\n  assign  i_icb_rsp_valid = io_in_0_d_valid;\n  assign  i_icb_rsp_rdata = io_in_0_d_bits_data;\n\n  // Not used\n  wire  io_in_0_b_ready = 1'b0;\n  wire  io_in_0_b_valid;\n  wire  [2:0] io_in_0_b_bits_opcode;\n  wire  [1:0] io_in_0_b_bits_param;\n  wire  [2:0] io_in_0_b_bits_size;\n  wire  [4:0] io_in_0_b_bits_source;\n  wire  [28:0] io_in_0_b_bits_address;\n  wire  [3:0] io_in_0_b_bits_mask;\n  wire  [31:0] io_in_0_b_bits_data;\n\n  // Not used\n  wire  io_in_0_c_ready;\n  wire  io_in_0_c_valid = 1'b0;\n  wire  [2:0] io_in_0_c_bits_opcode = 3'b0;\n  wire  [2:0] io_in_0_c_bits_param = 3'b0;\n  wire  [2:0] io_in_0_c_bits_size = 3'd2;\n  wire  [4:0] io_in_0_c_bits_source = 5'b0;\n  wire  [28:0] io_in_0_c_bits_address = 29'b0;\n  wire  [31:0] io_in_0_c_bits_data = 32'b0;\n  wire  io_in_0_c_bits_error = 1'b0;\n\n  // Not used\n  wire  io_in_0_e_ready;\n  wire  io_in_0_e_valid = 1'b0;\n  wire  io_in_0_e_bits_sink = 1'b0;\n\nsirv_gpio u_sirv_gpio(\n  .clock                            (clk                              ),\n  .reset                            (~rst_n                           ),\n\n  .io_in_0_a_ready                  (io_in_0_a_ready                  ),\n  .io_in_0_a_valid                  (io_in_0_a_valid                  ),\n  .io_in_0_a_bits_opcode            (io_in_0_a_bits_opcode            ),\n  .io_in_0_a_bits_param             (io_in_0_a_bits_param             ),\n  .io_in_0_a_bits_size              (io_in_0_a_bits_size              ),\n  .io_in_0_a_bits_source            (io_in_0_a_bits_source            ),\n  .io_in_0_a_bits_address           (io_in_0_a_bits_address           ),\n  .io_in_0_a_bits_mask              (io_in_0_a_bits_mask              ),\n  .io_in_0_a_bits_data              (io_in_0_a_bits_data              ),\n  .io_in_0_b_ready                  (io_in_0_b_ready                  ),\n  .io_in_0_b_valid                  (io_in_0_b_valid                  ),\n  .io_in_0_b_bits_opcode            (io_in_0_b_bits_opcode            ),\n  .io_in_0_b_bits_param             (io_in_0_b_bits_param             ),\n  .io_in_0_b_bits_size              (io_in_0_b_bits_size              ),\n  .io_in_0_b_bits_source            (io_in_0_b_bits_source            ),\n  .io_in_0_b_bits_address           (io_in_0_b_bits_address           ),\n  .io_in_0_b_bits_mask              (io_in_0_b_bits_mask              ),\n  .io_in_0_b_bits_data              (io_in_0_b_bits_data              ),\n  .io_in_0_c_ready                  (io_in_0_c_ready                  ),\n  .io_in_0_c_valid                  (io_in_0_c_valid                  ),\n  .io_in_0_c_bits_opcode            (io_in_0_c_bits_opcode            ),\n  .io_in_0_c_bits_param             (io_in_0_c_bits_param             ),\n  .io_in_0_c_bits_size              (io_in_0_c_bits_size              ),\n  .io_in_0_c_bits_source            (io_in_0_c_bits_source            ),\n  .io_in_0_c_bits_address           (io_in_0_c_bits_address           ),\n  .io_in_0_c_bits_data              (io_in_0_c_bits_data              ),\n  .io_in_0_c_bits_error             (io_in_0_c_bits_error             ),\n  .io_in_0_d_ready                  (io_in_0_d_ready                  ),\n  .io_in_0_d_valid                  (io_in_0_d_valid                  ),\n  .io_in_0_d_bits_opcode            (io_in_0_d_bits_opcode            ),\n  .io_in_0_d_bits_param             (io_in_0_d_bits_param             ),\n  .io_in_0_d_bits_size              (io_in_0_d_bits_size              ),\n  .io_in_0_d_bits_source            (io_in_0_d_bits_source            ),\n  .io_in_0_d_bits_sink              (io_in_0_d_bits_sink              ),\n  .io_in_0_d_bits_addr_lo           (io_in_0_d_bits_addr_lo           ),\n  .io_in_0_d_bits_data              (io_in_0_d_bits_data              ),\n  .io_in_0_d_bits_error             (io_in_0_d_bits_error             ),\n  .io_in_0_e_ready                  (io_in_0_e_ready                  ),\n  .io_in_0_e_valid                  (io_in_0_e_valid                  ),\n  .io_in_0_e_bits_sink              (io_in_0_e_bits_sink              ),\n\n  .io_interrupts_0_0               (gpio_irq_0),\n  .io_interrupts_0_1               (gpio_irq_1),\n  .io_interrupts_0_2               (gpio_irq_2),\n  .io_interrupts_0_3               (gpio_irq_3),\n  .io_interrupts_0_4               (gpio_irq_4),\n  .io_interrupts_0_5               (gpio_irq_5),\n  .io_interrupts_0_6               (gpio_irq_6),\n  .io_interrupts_0_7               (gpio_irq_7),\n  .io_interrupts_0_8               (gpio_irq_8),\n  .io_interrupts_0_9               (gpio_irq_9),\n  .io_interrupts_0_10              (gpio_irq_10),\n  .io_interrupts_0_11              (gpio_irq_11),\n  .io_interrupts_0_12              (gpio_irq_12),\n  .io_interrupts_0_13              (gpio_irq_13),\n  .io_interrupts_0_14              (gpio_irq_14),\n  .io_interrupts_0_15              (gpio_irq_15),\n  .io_interrupts_0_16              (gpio_irq_16),\n  .io_interrupts_0_17              (gpio_irq_17),\n  .io_interrupts_0_18              (gpio_irq_18),\n  .io_interrupts_0_19              (gpio_irq_19),\n  .io_interrupts_0_20              (gpio_irq_20),\n  .io_interrupts_0_21              (gpio_irq_21),\n  .io_interrupts_0_22              (gpio_irq_22),\n  .io_interrupts_0_23              (gpio_irq_23),\n  .io_interrupts_0_24              (gpio_irq_24),\n  .io_interrupts_0_25              (gpio_irq_25),\n  .io_interrupts_0_26              (gpio_irq_26),\n  .io_interrupts_0_27              (gpio_irq_27),\n  .io_interrupts_0_28              (gpio_irq_28),\n  .io_interrupts_0_29              (gpio_irq_29),\n  .io_interrupts_0_30              (gpio_irq_30),\n  .io_interrupts_0_31              (gpio_irq_31),\n \n  .io_port_pins_0_i_ival           (io_port_pins_0_i_ival),\n  .io_port_pins_0_o_oval           (io_port_pins_0_o_oval),\n  .io_port_pins_0_o_oe             (io_port_pins_0_o_oe),\n  .io_port_pins_0_o_ie             (io_port_pins_0_o_ie),\n  .io_port_pins_0_o_pue            (io_port_pins_0_o_pue),\n  .io_port_pins_0_o_ds             (io_port_pins_0_o_ds),\n  .io_port_pins_1_i_ival           (io_port_pins_1_i_ival),\n  .io_port_pins_1_o_oval           (io_port_pins_1_o_oval),\n  .io_port_pins_1_o_oe             (io_port_pins_1_o_oe),\n  .io_port_pins_1_o_ie             (io_port_pins_1_o_ie),\n  .io_port_pins_1_o_pue            (io_port_pins_1_o_pue),\n  .io_port_pins_1_o_ds             (io_port_pins_1_o_ds),\n  .io_port_pins_2_i_ival           (io_port_pins_2_i_ival),\n  .io_port_pins_2_o_oval           (io_port_pins_2_o_oval),\n  .io_port_pins_2_o_oe             (io_port_pins_2_o_oe),\n  .io_port_pins_2_o_ie             (io_port_pins_2_o_ie),\n  .io_port_pins_2_o_pue            (io_port_pins_2_o_pue),\n  .io_port_pins_2_o_ds             (io_port_pins_2_o_ds),\n  .io_port_pins_3_i_ival           (io_port_pins_3_i_ival),\n  .io_port_pins_3_o_oval           (io_port_pins_3_o_oval),\n  .io_port_pins_3_o_oe             (io_port_pins_3_o_oe),\n  .io_port_pins_3_o_ie             (io_port_pins_3_o_ie),\n  .io_port_pins_3_o_pue            (io_port_pins_3_o_pue),\n  .io_port_pins_3_o_ds             (io_port_pins_3_o_ds),\n  .io_port_pins_4_i_ival           (io_port_pins_4_i_ival),\n  .io_port_pins_4_o_oval           (io_port_pins_4_o_oval),\n  .io_port_pins_4_o_oe             (io_port_pins_4_o_oe),\n  .io_port_pins_4_o_ie             (io_port_pins_4_o_ie),\n  .io_port_pins_4_o_pue            (io_port_pins_4_o_pue),\n  .io_port_pins_4_o_ds             (io_port_pins_4_o_ds),\n  .io_port_pins_5_i_ival           (io_port_pins_5_i_ival),\n  .io_port_pins_5_o_oval           (io_port_pins_5_o_oval),\n  .io_port_pins_5_o_oe             (io_port_pins_5_o_oe),\n  .io_port_pins_5_o_ie             (io_port_pins_5_o_ie),\n  .io_port_pins_5_o_pue            (io_port_pins_5_o_pue),\n  .io_port_pins_5_o_ds             (io_port_pins_5_o_ds),\n  .io_port_pins_6_i_ival           (io_port_pins_6_i_ival),\n  .io_port_pins_6_o_oval           (io_port_pins_6_o_oval),\n  .io_port_pins_6_o_oe             (io_port_pins_6_o_oe),\n  .io_port_pins_6_o_ie             (io_port_pins_6_o_ie),\n  .io_port_pins_6_o_pue            (io_port_pins_6_o_pue),\n  .io_port_pins_6_o_ds             (io_port_pins_6_o_ds),\n  .io_port_pins_7_i_ival           (io_port_pins_7_i_ival),\n  .io_port_pins_7_o_oval           (io_port_pins_7_o_oval),\n  .io_port_pins_7_o_oe             (io_port_pins_7_o_oe),\n  .io_port_pins_7_o_ie             (io_port_pins_7_o_ie),\n  .io_port_pins_7_o_pue            (io_port_pins_7_o_pue),\n  .io_port_pins_7_o_ds             (io_port_pins_7_o_ds),\n  .io_port_pins_8_i_ival           (io_port_pins_8_i_ival),\n  .io_port_pins_8_o_oval           (io_port_pins_8_o_oval),\n  .io_port_pins_8_o_oe             (io_port_pins_8_o_oe),\n  .io_port_pins_8_o_ie             (io_port_pins_8_o_ie),\n  .io_port_pins_8_o_pue            (io_port_pins_8_o_pue),\n  .io_port_pins_8_o_ds             (io_port_pins_8_o_ds),\n  .io_port_pins_9_i_ival           (io_port_pins_9_i_ival),\n  .io_port_pins_9_o_oval           (io_port_pins_9_o_oval),\n  .io_port_pins_9_o_oe             (io_port_pins_9_o_oe),\n  .io_port_pins_9_o_ie             (io_port_pins_9_o_ie),\n  .io_port_pins_9_o_pue            (io_port_pins_9_o_pue),\n  .io_port_pins_9_o_ds             (io_port_pins_9_o_ds),\n  .io_port_pins_10_i_ival          (io_port_pins_10_i_ival),\n  .io_port_pins_10_o_oval          (io_port_pins_10_o_oval),\n  .io_port_pins_10_o_oe            (io_port_pins_10_o_oe),\n  .io_port_pins_10_o_ie            (io_port_pins_10_o_ie),\n  .io_port_pins_10_o_pue           (io_port_pins_10_o_pue),\n  .io_port_pins_10_o_ds            (io_port_pins_10_o_ds),\n  .io_port_pins_11_i_ival          (io_port_pins_11_i_ival),\n  .io_port_pins_11_o_oval          (io_port_pins_11_o_oval),\n  .io_port_pins_11_o_oe            (io_port_pins_11_o_oe),\n  .io_port_pins_11_o_ie            (io_port_pins_11_o_ie),\n  .io_port_pins_11_o_pue           (io_port_pins_11_o_pue),\n  .io_port_pins_11_o_ds            (io_port_pins_11_o_ds),\n  .io_port_pins_12_i_ival          (io_port_pins_12_i_ival),\n  .io_port_pins_12_o_oval          (io_port_pins_12_o_oval),\n  .io_port_pins_12_o_oe            (io_port_pins_12_o_oe),\n  .io_port_pins_12_o_ie            (io_port_pins_12_o_ie),\n  .io_port_pins_12_o_pue           (io_port_pins_12_o_pue),\n  .io_port_pins_12_o_ds            (io_port_pins_12_o_ds),\n  .io_port_pins_13_i_ival          (io_port_pins_13_i_ival),\n  .io_port_pins_13_o_oval          (io_port_pins_13_o_oval),\n  .io_port_pins_13_o_oe            (io_port_pins_13_o_oe),\n  .io_port_pins_13_o_ie            (io_port_pins_13_o_ie),\n  .io_port_pins_13_o_pue           (io_port_pins_13_o_pue),\n  .io_port_pins_13_o_ds            (io_port_pins_13_o_ds),\n  .io_port_pins_14_i_ival          (io_port_pins_14_i_ival),\n  .io_port_pins_14_o_oval          (io_port_pins_14_o_oval),\n  .io_port_pins_14_o_oe            (io_port_pins_14_o_oe),\n  .io_port_pins_14_o_ie            (io_port_pins_14_o_ie),\n  .io_port_pins_14_o_pue           (io_port_pins_14_o_pue),\n  .io_port_pins_14_o_ds            (io_port_pins_14_o_ds),\n  .io_port_pins_15_i_ival          (io_port_pins_15_i_ival),\n  .io_port_pins_15_o_oval          (io_port_pins_15_o_oval),\n  .io_port_pins_15_o_oe            (io_port_pins_15_o_oe),\n  .io_port_pins_15_o_ie            (io_port_pins_15_o_ie),\n  .io_port_pins_15_o_pue           (io_port_pins_15_o_pue),\n  .io_port_pins_15_o_ds            (io_port_pins_15_o_ds),\n  .io_port_pins_16_i_ival          (io_port_pins_16_i_ival),\n  .io_port_pins_16_o_oval          (io_port_pins_16_o_oval),\n  .io_port_pins_16_o_oe            (io_port_pins_16_o_oe),\n  .io_port_pins_16_o_ie            (io_port_pins_16_o_ie),\n  .io_port_pins_16_o_pue           (io_port_pins_16_o_pue),\n  .io_port_pins_16_o_ds            (io_port_pins_16_o_ds),\n  .io_port_pins_17_i_ival          (io_port_pins_17_i_ival),\n  .io_port_pins_17_o_oval          (io_port_pins_17_o_oval),\n  .io_port_pins_17_o_oe            (io_port_pins_17_o_oe),\n  .io_port_pins_17_o_ie            (io_port_pins_17_o_ie),\n  .io_port_pins_17_o_pue           (io_port_pins_17_o_pue),\n  .io_port_pins_17_o_ds            (io_port_pins_17_o_ds),\n  .io_port_pins_18_i_ival          (io_port_pins_18_i_ival),\n  .io_port_pins_18_o_oval          (io_port_pins_18_o_oval),\n  .io_port_pins_18_o_oe            (io_port_pins_18_o_oe),\n  .io_port_pins_18_o_ie            (io_port_pins_18_o_ie),\n  .io_port_pins_18_o_pue           (io_port_pins_18_o_pue),\n  .io_port_pins_18_o_ds            (io_port_pins_18_o_ds),\n  .io_port_pins_19_i_ival          (io_port_pins_19_i_ival),\n  .io_port_pins_19_o_oval          (io_port_pins_19_o_oval),\n  .io_port_pins_19_o_oe            (io_port_pins_19_o_oe),\n  .io_port_pins_19_o_ie            (io_port_pins_19_o_ie),\n  .io_port_pins_19_o_pue           (io_port_pins_19_o_pue),\n  .io_port_pins_19_o_ds            (io_port_pins_19_o_ds),\n  .io_port_pins_20_i_ival          (io_port_pins_20_i_ival),\n  .io_port_pins_20_o_oval          (io_port_pins_20_o_oval),\n  .io_port_pins_20_o_oe            (io_port_pins_20_o_oe),\n  .io_port_pins_20_o_ie            (io_port_pins_20_o_ie),\n  .io_port_pins_20_o_pue           (io_port_pins_20_o_pue),\n  .io_port_pins_20_o_ds            (io_port_pins_20_o_ds),\n  .io_port_pins_21_i_ival          (io_port_pins_21_i_ival),\n  .io_port_pins_21_o_oval          (io_port_pins_21_o_oval),\n  .io_port_pins_21_o_oe            (io_port_pins_21_o_oe),\n  .io_port_pins_21_o_ie            (io_port_pins_21_o_ie),\n  .io_port_pins_21_o_pue           (io_port_pins_21_o_pue),\n  .io_port_pins_21_o_ds            (io_port_pins_21_o_ds),\n  .io_port_pins_22_i_ival          (io_port_pins_22_i_ival),\n  .io_port_pins_22_o_oval          (io_port_pins_22_o_oval),\n  .io_port_pins_22_o_oe            (io_port_pins_22_o_oe),\n  .io_port_pins_22_o_ie            (io_port_pins_22_o_ie),\n  .io_port_pins_22_o_pue           (io_port_pins_22_o_pue),\n  .io_port_pins_22_o_ds            (io_port_pins_22_o_ds),\n  .io_port_pins_23_i_ival          (io_port_pins_23_i_ival),\n  .io_port_pins_23_o_oval          (io_port_pins_23_o_oval),\n  .io_port_pins_23_o_oe            (io_port_pins_23_o_oe),\n  .io_port_pins_23_o_ie            (io_port_pins_23_o_ie),\n  .io_port_pins_23_o_pue           (io_port_pins_23_o_pue),\n  .io_port_pins_23_o_ds            (io_port_pins_23_o_ds),\n  .io_port_pins_24_i_ival          (io_port_pins_24_i_ival),\n  .io_port_pins_24_o_oval          (io_port_pins_24_o_oval),\n  .io_port_pins_24_o_oe            (io_port_pins_24_o_oe),\n  .io_port_pins_24_o_ie            (io_port_pins_24_o_ie),\n  .io_port_pins_24_o_pue           (io_port_pins_24_o_pue),\n  .io_port_pins_24_o_ds            (io_port_pins_24_o_ds),\n  .io_port_pins_25_i_ival          (io_port_pins_25_i_ival),\n  .io_port_pins_25_o_oval          (io_port_pins_25_o_oval),\n  .io_port_pins_25_o_oe            (io_port_pins_25_o_oe),\n  .io_port_pins_25_o_ie            (io_port_pins_25_o_ie),\n  .io_port_pins_25_o_pue           (io_port_pins_25_o_pue),\n  .io_port_pins_25_o_ds            (io_port_pins_25_o_ds),\n  .io_port_pins_26_i_ival          (io_port_pins_26_i_ival),\n  .io_port_pins_26_o_oval          (io_port_pins_26_o_oval),\n  .io_port_pins_26_o_oe            (io_port_pins_26_o_oe),\n  .io_port_pins_26_o_ie            (io_port_pins_26_o_ie),\n  .io_port_pins_26_o_pue           (io_port_pins_26_o_pue),\n  .io_port_pins_26_o_ds            (io_port_pins_26_o_ds),\n  .io_port_pins_27_i_ival          (io_port_pins_27_i_ival),\n  .io_port_pins_27_o_oval          (io_port_pins_27_o_oval),\n  .io_port_pins_27_o_oe            (io_port_pins_27_o_oe),\n  .io_port_pins_27_o_ie            (io_port_pins_27_o_ie),\n  .io_port_pins_27_o_pue           (io_port_pins_27_o_pue),\n  .io_port_pins_27_o_ds            (io_port_pins_27_o_ds),\n  .io_port_pins_28_i_ival          (io_port_pins_28_i_ival),\n  .io_port_pins_28_o_oval          (io_port_pins_28_o_oval),\n  .io_port_pins_28_o_oe            (io_port_pins_28_o_oe),\n  .io_port_pins_28_o_ie            (io_port_pins_28_o_ie),\n  .io_port_pins_28_o_pue           (io_port_pins_28_o_pue),\n  .io_port_pins_28_o_ds            (io_port_pins_28_o_ds),\n  .io_port_pins_29_i_ival          (io_port_pins_29_i_ival),\n  .io_port_pins_29_o_oval          (io_port_pins_29_o_oval),\n  .io_port_pins_29_o_oe            (io_port_pins_29_o_oe),\n  .io_port_pins_29_o_ie            (io_port_pins_29_o_ie),\n  .io_port_pins_29_o_pue           (io_port_pins_29_o_pue),\n  .io_port_pins_29_o_ds            (io_port_pins_29_o_ds),\n  .io_port_pins_30_i_ival          (io_port_pins_30_i_ival),\n  .io_port_pins_30_o_oval          (io_port_pins_30_o_oval),\n  .io_port_pins_30_o_oe            (io_port_pins_30_o_oe),\n  .io_port_pins_30_o_ie            (io_port_pins_30_o_ie),\n  .io_port_pins_30_o_pue           (io_port_pins_30_o_pue),\n  .io_port_pins_30_o_ds            (io_port_pins_30_o_ds),\n  .io_port_pins_31_i_ival          (io_port_pins_31_i_ival),\n  .io_port_pins_31_o_oval          (io_port_pins_31_o_oval),\n  .io_port_pins_31_o_oe            (io_port_pins_31_o_oe),\n  .io_port_pins_31_o_ie            (io_port_pins_31_o_ie),\n  .io_port_pins_31_o_pue           (io_port_pins_31_o_pue),\n  .io_port_pins_31_o_ds            (io_port_pins_31_o_ds),\n  .io_port_iof_0_0_i_ival          (io_port_iof_0_0_i_ival),\n  .io_port_iof_0_0_o_oval          (io_port_iof_0_0_o_oval),\n  .io_port_iof_0_0_o_oe            (io_port_iof_0_0_o_oe),\n  .io_port_iof_0_0_o_ie            (io_port_iof_0_0_o_ie),\n  .io_port_iof_0_0_o_valid         (io_port_iof_0_0_o_valid),\n  .io_port_iof_0_1_i_ival          (io_port_iof_0_1_i_ival),\n  .io_port_iof_0_1_o_oval          (io_port_iof_0_1_o_oval),\n  .io_port_iof_0_1_o_oe            (io_port_iof_0_1_o_oe),\n  .io_port_iof_0_1_o_ie            (io_port_iof_0_1_o_ie),\n  .io_port_iof_0_1_o_valid         (io_port_iof_0_1_o_valid),\n  .io_port_iof_0_2_i_ival          (io_port_iof_0_2_i_ival),\n  .io_port_iof_0_2_o_oval          (io_port_iof_0_2_o_oval),\n  .io_port_iof_0_2_o_oe            (io_port_iof_0_2_o_oe),\n  .io_port_iof_0_2_o_ie            (io_port_iof_0_2_o_ie),\n  .io_port_iof_0_2_o_valid         (io_port_iof_0_2_o_valid),\n  .io_port_iof_0_3_i_ival          (io_port_iof_0_3_i_ival),\n  .io_port_iof_0_3_o_oval          (io_port_iof_0_3_o_oval),\n  .io_port_iof_0_3_o_oe            (io_port_iof_0_3_o_oe),\n  .io_port_iof_0_3_o_ie            (io_port_iof_0_3_o_ie),\n  .io_port_iof_0_3_o_valid         (io_port_iof_0_3_o_valid),\n  .io_port_iof_0_4_i_ival          (io_port_iof_0_4_i_ival),\n  .io_port_iof_0_4_o_oval          (io_port_iof_0_4_o_oval),\n  .io_port_iof_0_4_o_oe            (io_port_iof_0_4_o_oe),\n  .io_port_iof_0_4_o_ie            (io_port_iof_0_4_o_ie),\n  .io_port_iof_0_4_o_valid         (io_port_iof_0_4_o_valid),\n  .io_port_iof_0_5_i_ival          (io_port_iof_0_5_i_ival),\n  .io_port_iof_0_5_o_oval          (io_port_iof_0_5_o_oval),\n  .io_port_iof_0_5_o_oe            (io_port_iof_0_5_o_oe),\n  .io_port_iof_0_5_o_ie            (io_port_iof_0_5_o_ie),\n  .io_port_iof_0_5_o_valid         (io_port_iof_0_5_o_valid),\n  .io_port_iof_0_6_i_ival          (io_port_iof_0_6_i_ival),\n  .io_port_iof_0_6_o_oval          (io_port_iof_0_6_o_oval),\n  .io_port_iof_0_6_o_oe            (io_port_iof_0_6_o_oe),\n  .io_port_iof_0_6_o_ie            (io_port_iof_0_6_o_ie),\n  .io_port_iof_0_6_o_valid         (io_port_iof_0_6_o_valid),\n  .io_port_iof_0_7_i_ival          (io_port_iof_0_7_i_ival),\n  .io_port_iof_0_7_o_oval          (io_port_iof_0_7_o_oval),\n  .io_port_iof_0_7_o_oe            (io_port_iof_0_7_o_oe),\n "}
{"text": " .io_port_iof_0_7_o_ie            (io_port_iof_0_7_o_ie),\n  .io_port_iof_0_7_o_valid         (io_port_iof_0_7_o_valid),\n  .io_port_iof_0_8_i_ival          (io_port_iof_0_8_i_ival),\n  .io_port_iof_0_8_o_oval          (io_port_iof_0_8_o_oval),\n  .io_port_iof_0_8_o_oe            (io_port_iof_0_8_o_oe),\n  .io_port_iof_0_8_o_ie            (io_port_iof_0_8_o_ie),\n  .io_port_iof_0_8_o_valid         (io_port_iof_0_8_o_valid),\n  .io_port_iof_0_9_i_ival          (io_port_iof_0_9_i_ival),\n  .io_port_iof_0_9_o_oval          (io_port_iof_0_9_o_oval),\n  .io_port_iof_0_9_o_oe            (io_port_iof_0_9_o_oe),\n  .io_port_iof_0_9_o_ie            (io_port_iof_0_9_o_ie),\n  .io_port_iof_0_9_o_valid         (io_port_iof_0_9_o_valid),\n  .io_port_iof_0_10_i_ival         (io_port_iof_0_10_i_ival),\n  .io_port_iof_0_10_o_oval         (io_port_iof_0_10_o_oval),\n  .io_port_iof_0_10_o_oe           (io_port_iof_0_10_o_oe),\n  .io_port_iof_0_10_o_ie           (io_port_iof_0_10_o_ie),\n  .io_port_iof_0_10_o_valid        (io_port_iof_0_10_o_valid),\n  .io_port_iof_0_11_i_ival         (io_port_iof_0_11_i_ival),\n  .io_port_iof_0_11_o_oval         (io_port_iof_0_11_o_oval),\n  .io_port_iof_0_11_o_oe           (io_port_iof_0_11_o_oe),\n  .io_port_iof_0_11_o_ie           (io_port_iof_0_11_o_ie),\n  .io_port_iof_0_11_o_valid        (io_port_iof_0_11_o_valid),\n  .io_port_iof_0_12_i_ival         (io_port_iof_0_12_i_ival),\n  .io_port_iof_0_12_o_oval         (io_port_iof_0_12_o_oval),\n  .io_port_iof_0_12_o_oe           (io_port_iof_0_12_o_oe),\n  .io_port_iof_0_12_o_ie           (io_port_iof_0_12_o_ie),\n  .io_port_iof_0_12_o_valid        (io_port_iof_0_12_o_valid),\n  .io_port_iof_0_13_i_ival         (io_port_iof_0_13_i_ival),\n  .io_port_iof_0_13_o_oval         (io_port_iof_0_13_o_oval),\n  .io_port_iof_0_13_o_oe           (io_port_iof_0_13_o_oe),\n  .io_port_iof_0_13_o_ie           (io_port_iof_0_13_o_ie),\n  .io_port_iof_0_13_o_valid        (io_port_iof_0_13_o_valid),\n  .io_port_iof_0_14_i_ival         (io_port_iof_0_14_i_ival),\n  .io_port_iof_0_14_o_oval         (io_port_iof_0_14_o_oval),\n  .io_port_iof_0_14_o_oe           (io_port_iof_0_14_o_oe),\n  .io_port_iof_0_14_o_ie           (io_port_iof_0_14_o_ie),\n  .io_port_iof_0_14_o_valid        (io_port_iof_0_14_o_valid),\n  .io_port_iof_0_15_i_ival         (io_port_iof_0_15_i_ival),\n  .io_port_iof_0_15_o_oval         (io_port_iof_0_15_o_oval),\n  .io_port_iof_0_15_o_oe           (io_port_iof_0_15_o_oe),\n  .io_port_iof_0_15_o_ie           (io_port_iof_0_15_o_ie),\n  .io_port_iof_0_15_o_valid        (io_port_iof_0_15_o_valid),\n  .io_port_iof_0_16_i_ival         (io_port_iof_0_16_i_ival),\n  .io_port_iof_0_16_o_oval         (io_port_iof_0_16_o_oval),\n  .io_port_iof_0_16_o_oe           (io_port_iof_0_16_o_oe),\n  .io_port_iof_0_16_o_ie           (io_port_iof_0_16_o_ie),\n  .io_port_iof_0_16_o_valid        (io_port_iof_0_16_o_valid),\n  .io_port_iof_0_17_i_ival         (io_port_iof_0_17_i_ival),\n  .io_port_iof_0_17_o_oval         (io_port_iof_0_17_o_oval),\n  .io_port_iof_0_17_o_oe           (io_port_iof_0_17_o_oe),\n  .io_port_iof_0_17_o_ie           (io_port_iof_0_17_o_ie),\n  .io_port_iof_0_17_o_valid        (io_port_iof_0_17_o_valid),\n  .io_port_iof_0_18_i_ival         (io_port_iof_0_18_i_ival),\n  .io_port_iof_0_18_o_oval         (io_port_iof_0_18_o_oval),\n  .io_port_iof_0_18_o_oe           (io_port_iof_0_18_o_oe),\n  .io_port_iof_0_18_o_ie           (io_port_iof_0_18_o_ie),\n  .io_port_iof_0_18_o_valid        (io_port_iof_0_18_o_valid),\n  .io_port_iof_0_19_i_ival         (io_port_iof_0_19_i_ival),\n  .io_port_iof_0_19_o_oval         (io_port_iof_0_19_o_oval),\n  .io_port_iof_0_19_o_oe           (io_port_iof_0_19_o_oe),\n  .io_port_iof_0_19_o_ie           (io_port_iof_0_19_o_ie),\n  .io_port_iof_0_19_o_valid        (io_port_iof_0_19_o_valid),\n  .io_port_iof_0_20_i_ival         (io_port_iof_0_20_i_ival),\n  .io_port_iof_0_20_o_oval         (io_port_iof_0_20_o_oval),\n  .io_port_iof_0_20_o_oe           (io_port_iof_0_20_o_oe),\n  .io_port_iof_0_20_o_ie           (io_port_iof_0_20_o_ie),\n  .io_port_iof_0_20_o_valid        (io_port_iof_0_20_o_valid),\n  .io_port_iof_0_21_i_ival         (io_port_iof_0_21_i_ival),\n  .io_port_iof_0_21_o_oval         (io_port_iof_0_21_o_oval),\n  .io_port_iof_0_21_o_oe           (io_port_iof_0_21_o_oe),\n  .io_port_iof_0_21_o_ie           (io_port_iof_0_21_o_ie),\n  .io_port_iof_0_21_o_valid        (io_port_iof_0_21_o_valid),\n  .io_port_iof_0_22_i_ival         (io_port_iof_0_22_i_ival),\n  .io_port_iof_0_22_o_oval         (io_port_iof_0_22_o_oval),\n  .io_port_iof_0_22_o_oe           (io_port_iof_0_22_o_oe),\n  .io_port_iof_0_22_o_ie           (io_port_iof_0_22_o_ie),\n  .io_port_iof_0_22_o_valid        (io_port_iof_0_22_o_valid),\n  .io_port_iof_0_23_i_ival         (io_port_iof_0_23_i_ival),\n  .io_port_iof_0_23_o_oval         (io_port_iof_0_23_o_oval),\n  .io_port_iof_0_23_o_oe           (io_port_iof_0_23_o_oe),\n  .io_port_iof_0_23_o_ie           (io_port_iof_0_23_o_ie),\n  .io_port_iof_0_23_o_valid        (io_port_iof_0_23_o_valid),\n  .io_port_iof_0_24_i_ival         (io_port_iof_0_24_i_ival),\n  .io_port_iof_0_24_o_oval         (io_port_iof_0_24_o_oval),\n  .io_port_iof_0_24_o_oe           (io_port_iof_0_24_o_oe),\n  .io_port_iof_0_24_o_ie           (io_port_iof_0_24_o_ie),\n  .io_port_iof_0_24_o_valid        (io_port_iof_0_24_o_valid),\n  .io_port_iof_0_25_i_ival         (io_port_iof_0_25_i_ival),\n  .io_port_iof_0_25_o_oval         (io_port_iof_0_25_o_oval),\n  .io_port_iof_0_25_o_oe           (io_port_iof_0_25_o_oe),\n  .io_port_iof_0_25_o_ie           (io_port_iof_0_25_o_ie),\n  .io_port_iof_0_25_o_valid        (io_port_iof_0_25_o_valid),\n  .io_port_iof_0_26_i_ival         (io_port_iof_0_26_i_ival),\n  .io_port_iof_0_26_o_oval         (io_port_iof_0_26_o_oval),\n  .io_port_iof_0_26_o_oe           (io_port_iof_0_26_o_oe),\n  .io_port_iof_0_26_o_ie           (io_port_iof_0_26_o_ie),\n  .io_port_iof_0_26_o_valid        (io_port_iof_0_26_o_valid),\n  .io_port_iof_0_27_i_ival         (io_port_iof_0_27_i_ival),\n  .io_port_iof_0_27_o_oval         (io_port_iof_0_27_o_oval),\n  .io_port_iof_0_27_o_oe           (io_port_iof_0_27_o_oe),\n  .io_port_iof_0_27_o_ie           (io_port_iof_0_27_o_ie),\n  .io_port_iof_0_27_o_valid        (io_port_iof_0_27_o_valid),\n  .io_port_iof_0_28_i_ival         (io_port_iof_0_28_i_ival),\n  .io_port_iof_0_28_o_oval         (io_port_iof_0_28_o_oval),\n  .io_port_iof_0_28_o_oe           (io_port_iof_0_28_o_oe),\n  .io_port_iof_0_28_o_ie           (io_port_iof_0_28_o_ie),\n  .io_port_iof_0_28_o_valid        (io_port_iof_0_28_o_valid),\n  .io_port_iof_0_29_i_ival         (io_port_iof_0_29_i_ival),\n  .io_port_iof_0_29_o_oval         (io_port_iof_0_29_o_oval),\n  .io_port_iof_0_29_o_oe           (io_port_iof_0_29_o_oe),\n  .io_port_iof_0_29_o_ie           (io_port_iof_0_29_o_ie),\n  .io_port_iof_0_29_o_valid        (io_port_iof_0_29_o_valid),\n  .io_port_iof_0_30_i_ival         (io_port_iof_0_30_i_ival),\n  .io_port_iof_0_30_o_oval         (io_port_iof_0_30_o_oval),\n  .io_port_iof_0_30_o_oe           (io_port_iof_0_30_o_oe),\n  .io_port_iof_0_30_o_ie           (io_port_iof_0_30_o_ie),\n  .io_port_iof_0_30_o_valid        (io_port_iof_0_30_o_valid),\n  .io_port_iof_0_31_i_ival         (io_port_iof_0_31_i_ival),\n  .io_port_iof_0_31_o_oval         (io_port_iof_0_31_o_oval),\n  .io_port_iof_0_31_o_oe           (io_port_iof_0_31_o_oe),\n  .io_port_iof_0_31_o_ie           (io_port_iof_0_31_o_ie),\n  .io_port_iof_0_31_o_valid        (io_port_iof_0_31_o_valid),\n  .io_port_iof_1_0_i_ival          (io_port_iof_1_0_i_ival),\n  .io_port_iof_1_0_o_oval          (io_port_iof_1_0_o_oval),\n  .io_port_iof_1_0_o_oe            (io_port_iof_1_0_o_oe),\n  .io_port_iof_1_0_o_ie            (io_port_iof_1_0_o_ie),\n  .io_port_iof_1_0_o_valid         (io_port_iof_1_0_o_valid),\n  .io_port_iof_1_1_i_ival          (io_port_iof_1_1_i_ival),\n  .io_port_iof_1_1_o_oval          (io_port_iof_1_1_o_oval),\n  .io_port_iof_1_1_o_oe            (io_port_iof_1_1_o_oe),\n  .io_port_iof_1_1_o_ie            (io_port_iof_1_1_o_ie),\n  .io_port_iof_1_1_o_valid         (io_port_iof_1_1_o_valid),\n  .io_port_iof_1_2_i_ival          (io_port_iof_1_2_i_ival),\n  .io_port_iof_1_2_o_oval          (io_port_iof_1_2_o_oval),\n  .io_port_iof_1_2_o_oe            (io_port_iof_1_2_o_oe),\n  .io_port_iof_1_2_o_ie            (io_port_iof_1_2_o_ie),\n  .io_port_iof_1_2_o_valid         (io_port_iof_1_2_o_valid),\n  .io_port_iof_1_3_i_ival          (io_port_iof_1_3_i_ival),\n  .io_port_iof_1_3_o_oval          (io_port_iof_1_3_o_oval),\n  .io_port_iof_1_3_o_oe            (io_port_iof_1_3_o_oe),\n  .io_port_iof_1_3_o_ie            (io_port_iof_1_3_o_ie),\n  .io_port_iof_1_3_o_valid         (io_port_iof_1_3_o_valid),\n  .io_port_iof_1_4_i_ival          (io_port_iof_1_4_i_ival),\n  .io_port_iof_1_4_o_oval          (io_port_iof_1_4_o_oval),\n  .io_port_iof_1_4_o_oe            (io_port_iof_1_4_o_oe),\n  .io_port_iof_1_4_o_ie            (io_port_iof_1_4_o_ie),\n  .io_port_iof_1_4_o_valid         (io_port_iof_1_4_o_valid),\n  .io_port_iof_1_5_i_ival          (io_port_iof_1_5_i_ival),\n  .io_port_iof_1_5_o_oval          (io_port_iof_1_5_o_oval),\n  .io_port_iof_1_5_o_oe            (io_port_iof_1_5_o_oe),\n  .io_port_iof_1_5_o_ie            (io_port_iof_1_5_o_ie),\n  .io_port_iof_1_5_o_valid         (io_port_iof_1_5_o_valid),\n  .io_port_iof_1_6_i_ival          (io_port_iof_1_6_i_ival),\n  .io_port_iof_1_6_o_oval          (io_port_iof_1_6_o_oval),\n  .io_port_iof_1_6_o_oe            (io_port_iof_1_6_o_oe),\n  .io_port_iof_1_6_o_ie            (io_port_iof_1_6_o_ie),\n  .io_port_iof_1_6_o_valid         (io_port_iof_1_6_o_valid),\n  .io_port_iof_1_7_i_ival          (io_port_iof_1_7_i_ival),\n  .io_port_iof_1_7_o_oval          (io_port_iof_1_7_o_oval),\n  .io_port_iof_1_7_o_oe            (io_port_iof_1_7_o_oe),\n  .io_port_iof_1_7_o_ie            (io_port_iof_1_7_o_ie),\n  .io_port_iof_1_7_o_valid         (io_port_iof_1_7_o_valid),\n  .io_port_iof_1_8_i_ival          (io_port_iof_1_8_i_ival),\n  .io_port_iof_1_8_o_oval          (io_port_iof_1_8_o_oval),\n  .io_port_iof_1_8_o_oe            (io_port_iof_1_8_o_oe),\n  .io_port_iof_1_8_o_ie            (io_port_iof_1_8_o_ie),\n  .io_port_iof_1_8_o_valid         (io_port_iof_1_8_o_valid),\n  .io_port_iof_1_9_i_ival          (io_port_iof_1_9_i_ival),\n  .io_port_iof_1_9_o_oval          (io_port_iof_1_9_o_oval),\n  .io_port_iof_1_9_o_oe            (io_port_iof_1_9_o_oe),\n  .io_port_iof_1_9_o_ie            (io_port_iof_1_9_o_ie),\n  .io_port_iof_1_9_o_valid         (io_port_iof_1_9_o_valid),\n  .io_port_iof_1_10_i_ival         (io_port_iof_1_10_i_ival),\n  .io_port_iof_1_10_o_oval         (io_port_iof_1_10_o_oval),\n  .io_port_iof_1_10_o_oe           (io_port_iof_1_10_o_oe),\n  .io_port_iof_1_10_o_ie           (io_port_iof_1_10_o_ie),\n  .io_port_iof_1_10_o_valid        (io_port_iof_1_10_o_valid),\n  .io_port_iof_1_11_i_ival         (io_port_iof_1_11_i_ival),\n  .io_port_iof_1_11_o_oval         (io_port_iof_1_11_o_oval),\n  .io_port_iof_1_11_o_oe           (io_port_iof_1_11_o_oe),\n  .io_port_iof_1_11_o_ie           (io_port_iof_1_11_o_ie),\n  .io_port_iof_1_11_o_valid        (io_port_iof_1_11_o_valid),\n  .io_port_iof_1_12_i_ival         (io_port_iof_1_12_i_ival),\n  .io_port_iof_1_12_o_oval         (io_port_iof_1_12_o_oval),\n  .io_port_iof_1_12_o_oe           (io_port_iof_1_12_o_oe),\n  .io_port_iof_1_12_o_ie           (io_port_iof_1_12_o_ie),\n  .io_port_iof_1_12_o_valid        (io_port_iof_1_12_o_valid),\n  .io_port_iof_1_13_i_ival         (io_port_iof_1_13_i_ival),\n  .io_port_iof_1_13_o_oval         (io_port_iof_1_13_o_oval),\n  .io_port_iof_1_13_o_oe           (io_port_iof_1_13_o_oe),\n  .io_port_iof_1_13_o_ie           (io_port_iof_1_13_o_ie),\n  .io_port_iof_1_13_o_valid        (io_port_iof_1_13_o_valid),\n  .io_port_iof_1_14_i_ival         (io_port_iof_1_14_i_ival),\n  .io_port_iof_1_14_o_oval         (io_port_iof_1_14_o_oval),\n  .io_port_iof_1_14_o_oe           (io_port_iof_1_14_o_oe),\n  .io_port_iof_1_14_o_ie           (io_port_iof_1_14_o_ie),\n  .io_port_iof_1_14_o_valid        (io_port_iof_1_14_o_valid),\n  .io_port_iof_1_15_i_ival         (io_port_iof_1_15_i_ival),\n  .io_port_iof_1_15_o_oval         (io_port_iof_1_15_o_oval),\n  .io_port_iof_1_15_o_oe           (io_port_iof_1_15_o_oe),\n  .io_port_iof_1_15_o_ie           (io_port_iof_1_15_o_ie),\n  .io_port_iof_1_15_o_valid        (io_port_iof_1_15_o_valid),\n  .io_port_iof_1_16_i_ival         (io_port_iof_1_16_i_ival),\n  .io_port_iof_1_16_o_oval         (io_port_iof_1_16_o_oval),\n  .io_port_iof_1_16_o_oe           (io_port_iof_1_16_o_oe),\n  .io_port_iof_1_16_o_ie           (io_port_iof_1_16_o_ie),\n  .io_port_iof_1_16_o_valid        (io_port_iof_1_16_o_valid),\n  .io_port_iof_1_17_i_ival         (io_port_iof_1_17_i_ival),\n  .io_port_iof_1_17_o_oval         (io_port_iof_1_17_o_oval),\n  .io_port_iof_1_17_o_oe           (io_port_iof_1_17_o_oe),\n  .io_port_iof_1_17_o_ie           (io_port_iof_1_17_o_ie),\n  .io_port_iof_1_17_o_valid        (io_port_iof_1_17_o_valid),\n  .io_port_iof_1_18_i_ival         (io_port_iof_1_18_i_ival),\n  .io_port_iof_1_18_o_oval         (io_port_iof_1_18_o_oval),\n  .io_port_iof_1_18_o_oe           (io_port_iof_1_18_o_oe),\n  .io_port_iof_1_18_o_ie           (io_port_iof_1_18_o_ie),\n  .io_port_iof_1_18_o_valid        (io_port_iof_1_18_o_valid),\n  .io_port_iof_1_19_i_ival         (io_port_iof_1_19_i_ival),\n  .io_port_iof_1_19_o_oval         (io_port_iof_1_19_o_oval),\n  .io_port_iof_1_19_o_oe           (io_port_iof_1_19_o_oe),\n  .io_port_iof_1_19_o_ie           (io_port_iof_1_19_o_ie),\n  .io_port_iof_1_19_o_valid        (io_port_iof_1_19_o_valid),\n  .io_port_iof_1_20_i_ival         (io_port_iof_1_20_i_ival),\n  .io_port_iof_1_20_o_oval         (io_port_iof_1_20_o_oval),\n  .io_port_iof_1_20_o_oe           (io_port_iof_1_20_o_oe),\n  .io_port_iof_1_20_o_ie           (io_port_iof_1_20_o_ie),\n  .io_port_iof_1_20_o_valid        (io_port_iof_1_20_o_valid),\n  .io_port_iof_1_21_i_ival         (io_port_iof_1_21_i_ival),\n  .io_port_iof_1_21_o_oval         (io_port_iof_1_21_o_oval),\n  .io_port_iof_1_21_o_oe           (io_port_iof_1_21_o_oe),\n  .io_port_iof_1_21_o_ie           (io_port_iof_1_21_o_ie),\n  .io_port_iof_1_21_o_valid        (io_port_iof_1_21_o_valid),\n  .io_port_iof_1_22_i_ival         (io_port_iof_1_22_i_ival),\n  .io_port_iof_1_22_o_oval         (io_port_iof_1_22_o_oval),\n  .io_port_iof_1_22_o_oe           (io_port_iof_1_22_o_oe),\n  .io_port_iof_1_22_o_ie           (io_port_iof_1_22_o_ie),\n  .io_port_iof_1_22_o_valid        (io_port_iof_1_22_o_valid),\n  .io_port_iof_1_23_i_ival         (io_port_iof_1_23_i_ival),\n  .io_port_iof_1_23_o_oval         (io_port_iof_1_23_o_oval),\n  .io_port_iof_1_23_o_oe           (io_port_iof_1_23_o_oe),\n  .io_port_iof_1_23_o_ie           (io_port_iof_1_23_o_ie),\n  .io_port_iof_1_23_o_valid        (io_port_iof_1_23_o_valid),\n  .io_port_iof_1_24_i_ival         (io_port_iof_1_24_i_ival),\n  .io_port_iof_1_24_o_oval         (io_port_iof_1_24_o_oval),\n  .io_port_iof_1_24_o_oe           (io_port_iof_1_24_o_oe),\n  .io_port_iof_1_24_o_ie           (io_port_iof_1_24_o_ie),\n  .io_port_iof_1_24_o_valid        (io_port_iof_1_24_o_valid),\n  .io_port_iof_1_25_i_ival         (io_port_iof_1_25_i_ival),\n  .io_port_iof_1_25_o_oval         (io_port_iof_1_25_o_oval),\n  .io_port_iof_1_25_o_oe           (io_port_iof_1_25_o_oe),\n  .io_port_iof_1_25_o_ie           (io_port_iof_1_25_o_ie),\n  .io_port_iof_1_25_o_valid        (io_port_iof_1_25_o_valid),\n  .io_port_iof_1_26_i_ival         (io_port_iof_1_26_i_ival),\n  .io_port_iof_1_26_o_oval         (io_port_iof_1_26_o_oval),\n  .io_port_iof_1_26_o_oe           (io_port_iof_1_26_o_oe),\n  .io_port_iof_1_26_o_ie           (io_port_iof_1_26_o_ie),\n  .io_port_iof_1_26_o_valid        (io_port_iof_1_26_o_valid),\n  .io_port_iof_1_27_i_ival         (io_port_iof_1_27_i_ival),\n  .io_port_iof_1_27_o_oval         (io_port_iof_1_27_o_oval),\n  .io_port_iof_1_27_o_oe           (io_port_iof_1_27_o_oe),\n  .io_port_iof_1_27_o_ie           (io_port_iof_1_27_o_ie),\n  .io_port_iof_1_27_o_valid        (io_port_iof_1_27_o_valid),\n  .io_port_iof_1_28_i_ival         (io_port_iof_1_28_i_ival),\n  .io_port_iof_1_28_o_oval         (io_port_iof_1_28_o_oval),\n  .io_port_iof_1_28_o_oe           (io_port_iof_1_28_o_oe),\n  .io_port_iof_1_28_o_ie           (io_port_iof_1_28_o_ie),\n  .io_port_iof_1_28_o_valid        (io_port_iof_1_28_o_valid),\n  .io_port_iof_1_29_i_ival         (io_port_iof_1_29_i_ival),\n  .io_port_iof_1_29_o_oval         (io_port_iof_1_29_o_oval),\n  .io_port_iof_1_29_o_oe           (io_port_iof_1_29_o_oe),\n  .io_port_iof_1_29_o_ie           (io_port_iof_1_29_o_ie),\n  .io_port_iof_1_29_o_valid        (io_port_iof_1_29_o_valid),\n  .io_port_iof_1_30_i_ival         (io_port_iof_1_30_i_ival),\n  .io_port_iof_1_30_o_oval         (io_port_iof_1_30_o_oval),\n  .io_port_iof_1_30_o_oe           (io_port_iof_1_30_o_oe),\n  .io_port_iof_1_30_o_ie           (io_port_iof_1_30_o_ie),\n  .io_port_iof_1_30_o_valid        (io_port_iof_1_30_o_valid),\n  .io_port_iof_1_31_i_ival         (io_port_iof_1_31_i_ival),\n  .io_port_iof_1_31_o_oval         (io_port_iof_1_31_o_oval),\n  .io_port_iof_1_31_o_oe           (io_port_iof_1_31_o_oe),\n  .io_port_iof_1_31_o_ie           (io_port_iof_1_31_o_ie),\n  .io_port_iof_1_31_o_valid        (io_port_iof_1_31_o_valid)\n);\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The programmiable regs for HCLKGEN\n//\n// ====================================================================\n\nmodule sirv_hclkgen_regs(\n  input  clk,\n  input  rst_n,\n\n  output pllbypass ,\n  output pll_RESET ,\n  output pll_ASLEEP ,\n  output [1:0]  pll_OD,\n  output [7:0]  pll_M,\n  output [4:0]  pll_N,\n  output plloutdivby1,\n  output [5:0] plloutdiv,\n\n  output hfxoscen,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [12-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata\n);\n\n// Directly connect the command channel with response channel\n  assign i_icb_rsp_valid = i_icb_cmd_valid;\n  assign i_icb_cmd_ready = i_icb_rsp_ready;\n\n  wire icb_wr_en = i_icb_cmd_valid & i_icb_cmd_ready & (~i_icb_cmd_read);\n  wire [32-1:0]  icb_wdata = i_icb_cmd_wdata;\n\n  wire [32-1:0] hfxosccfg_r;\n  wire [32-1:0] pllcfg_r;\n  wire [32-1:0] plloutdiv_r;\n\n  // Addr selection\n  wire sel_hfxosccfg = (i_icb_cmd_addr == 12'h004);\n  wire sel_pllcfg\t = (i_icb_cmd_addr == 12'h008);\n  wire sel_plloutdiv = (i_icb_cmd_addr == 12'h00C);\n\n  wire icb_wr_en_hfxosccfg = icb_wr_en & sel_hfxosccfg ;\n  wire icb_wr_en_pllcfg    = icb_wr_en & sel_pllcfg\t;\n  wire icb_wr_en_plloutdiv = icb_wr_en & sel_plloutdiv ;\n\n  assign i_icb_rsp_rdata = \n                   ({32{sel_hfxosccfg}} & hfxosccfg_r)\n                 | ({32{sel_pllcfg\t }} & pllcfg_r\t )\n                 | ({32{sel_plloutdiv}} & plloutdiv_r);\n\n  /////////////////////////////////////////////////////////////////////////////////////////\n  // HFXOSCCFG\n  wire hfxoscen_ena = icb_wr_en_hfxosccfg;\n     // The reset value is 1 \n  sirv_gnrl_dfflrs #(1) hfxoscen_dfflrs (hfxoscen_ena, icb_wdata[30], hfxoscen, clk, rst_n);\n  assign hfxosccfg_r = {1'b0, hfxoscen, 30'b0};\n\n  /////////////////////////////////////////////////////////////////////////////////////////\n  // PLLCFG\n  //\n  // N: The reset value is 2 = 5'h2 = 5'b0_0010\n  sirv_gnrl_dfflr #(3) pll_N_42_dfflr (icb_wr_en_pllcfg, icb_wdata[4:2], pll_N[4:2], clk, rst_n);\n  sirv_gnrl_dfflrs#(1) pll_N_1_dfflr (icb_wr_en_pllcfg, icb_wdata[1], pll_N[1], clk, rst_n);\n  sirv_gnrl_dfflr #(1) pll_N_0_dfflr (icb_wr_en_pllcfg, icb_wdata[0], pll_N[0], clk, rst_n);\n  //\n  // M: The reset value is 50 = 8'h32 = 8'b0011_0010\n  sirv_gnrl_dfflr #(1) pll_M_7_dfflr (icb_wr_en_pllcfg, icb_wdata[12], pll_M[7], clk, rst_n);\n  sirv_gnrl_dfflr #(1) pll_M_6_dfflr (icb_wr_en_pllcfg, icb_wdata[11], pll_M[6], clk, rst_n);\n  sirv_gnrl_dfflrs#(1) pll_M_5_dfflr (icb_wr_en_pllcfg, icb_wdata[10], pll_M[5], clk, rst_n);\n  sirv_gnrl_dfflrs#(1) pll_M_4_dfflr (icb_wr_en_pllcfg, icb_wdata[09], pll_M[4], clk, rst_n);\n  sirv_gnrl_dfflr #(1) pll_M_3_dfflr (icb_wr_en_pllcfg, icb_wdata[08], pll_M[3], clk, rst_n);\n  sirv_gnrl_dfflr #(1) pll_M_2_dfflr (icb_wr_en_pllcfg, icb_wdata[07], pll_M[2], clk, rst_n);\n  sirv_gnrl_dfflrs#(1) pll_M_1_dfflr (icb_wr_en_pllcfg, icb_wdata[06], pll_M[1], clk, rst_n);\n  sirv_gnrl_dfflr #(1) pll_M_0_dfflr (icb_wr_en_pllcfg, icb_wdata[05], pll_M[0], clk, rst_n);\n  \n  // OD: The reset value is 2 = 2'b10\n  sirv_gnrl_dfflrs #(1) pll_OD_1_dfflrs(icb_wr_en_pllcfg, icb_wdata[14], pll_OD[1], clk, rst_n);\n  sirv_gnrl_dfflr  #(1) pll_OD_0_dfflr (icb_wr_en_pllcfg, icb_wdata[13], pll_OD[0], clk, rst_n);\n\n  // Bypass: The reset value is 1\n  sirv_gnrl_dfflrs #(1) pllbypass_dfflrs (icb_wr_en_pllcfg, icb_wdata[18], pllbypass, clk, rst_n);\n\n  // RESET: The reset value is 0\n  sirv_gnrl_dfflr  #(1) pll_RESET_dfflrs (icb_wr_en_pllcfg, icb_wdata[30], pll_RESET, clk, rst_n);\n\n  // ASLEEP: The asleep value is 0\n  sirv_gnrl_dfflr  #(1) pll_ASLEEP_dfflrs (icb_wr_en_pllcfg, icb_wdata[29], pll_ASLEEP, clk, rst_n);\n\n  assign pllcfg_r[31] = 1'b0;\n  assign pllcfg_r[30] = pll_RESET;\n  assign pllcfg_r[29] = pll_ASLEEP;\n  assign pllcfg_r[28:19] = 10'b0;\n  assign pllcfg_r[18] = pllbypass;\n  assign pllcfg_r[17:15] = 3'b0;\n  assign pllcfg_r[14:13] = pll_OD;\n  assign pllcfg_r[12:5] = pll_M;\n  assign pllcfg_r[4:0] = pll_N;\n \n  /////////////////////////////////////////////////////////////////////////////////////////\n  // PLLOUTDIV\n  //\n  wire plloutdiv_ena = icb_wr_en_plloutdiv;\n  sirv_gnrl_dfflr #(6) plloutdiv_dfflr (plloutdiv_ena, icb_wdata[5:0], plloutdiv, clk, rst_n);\n  wire plloutdivby1_ena = icb_wr_en_plloutdiv;\n  // The reset value is 1\n  sirv_gnrl_dfflrs #(1) plloutdivby1_dfflrs (plloutdivby1_ena, icb_wdata[8], plloutdivby1, clk, rst_n);\n\n  assign plloutdiv_r[31:9] = 23'b0;\n  assign plloutdiv_r[8] = plloutdivby1;\n  assign plloutdiv_r[7:6] = 2'b0;\n  assign plloutdiv_r[5:0] = plloutdiv;\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The Bus Fab module for 1-to-16 bus\n//\n// ====================================================================\n\nmodule sirv_icb1to16_bus # (\n  parameter ICB_FIFO_DP = 0, // This is to optionally add the pipeline stage for ICB bus\n                             //   if the depth is 0, then means pass through, not add pipeline\n                             //   if the depth is 2, then means added one ping-pong buffer stage\n  parameter ICB_FIFO_CUT_READY = 1, // This is to cut the back-pressure signal if you set as 1\n\n  parameter AW = 32,\n  parameter DW = 32,\n  parameter SPLT_FIFO_OUTS_NUM    = 1,\n  parameter SPLT_FIFO_CUT_READY   = 1,\n\n  parameter O0_BASE_ADDR       = 32'h0000_1000,       \n  parameter O0_BASE_REGION_LSB = 12,\n\n  parameter O1_BASE_ADDR       = 32'h0000_1000,       \n  parameter O1_BASE_REGION_LSB = 12,\n\n  parameter O2_BASE_ADDR       = 32'h0000_1000,       \n  parameter O2_BASE_REGION_LSB = 12,\n\n  parameter O3_BASE_ADDR       = 32'h0000_1000,       \n  parameter O3_BASE_REGION_LSB = 12,\n\n  parameter O4_BASE_ADDR       = 32'h0000_1000,       \n  parameter O4_BASE_REGION_LSB = 12,\n\n  parameter O5_BASE_ADDR       = 32'h0000_1000,       \n  parameter O5_BASE_REGION_LSB = 12,\n\n  parameter O6_BASE_ADDR       = 32'h0000_1000,       \n  parameter O6_BASE_REGION_LSB = 12,\n\n  parameter O7_BASE_ADDR       = 32'h0000_1000,       \n  parameter O7_BASE_REGION_LSB = 12,\n\n  parameter O8_BASE_ADDR       = 32'h0000_1000,       \n  parameter O8_BASE_REGION_LSB = 12,\n\n  parameter O9_BASE_ADDR       = 32'h0000_1000,       \n  parameter O9_BASE_REGION_LSB = 12,\n\n  parameter O10_BASE_ADDR       = 32'h0000_1000,       \n  parameter O10_BASE_REGION_LSB = 12,\n\n  parameter O11_BASE_ADDR       = 32'h0000_1000,       \n  parameter O11_BASE_REGION_LSB = 12,\n\n  parameter O12_BASE_ADDR       = 32'h0000_1000,       \n  parameter O12_BASE_REGION_LSB = 12,\n\n  parameter O13_BASE_ADDR       = 32'h0000_1000,       \n  parameter O13_BASE_REGION_LSB = 12,\n\n  parameter O14_BASE_ADDR       = 32'h0000_1000,       \n  parameter O14_BASE_REGION_LSB = 12,\n\n  parameter O15_BASE_ADDR       = 32'h0000_1000,       \n  parameter O15_BASE_REGION_LSB = 12\n)(\n\n  input                          o0_icb_enable,\n  input                          o1_icb_enable,\n  input                          o2_icb_enable,\n  input                          o3_icb_enable,\n  input                          o4_icb_enable,\n  input                          o5_icb_enable,\n  input                          o6_icb_enable,\n  input                          o7_icb_enable,\n  input                          o8_icb_enable,\n  input                          o9_icb_enable,\n  input                          o10_icb_enable,\n  input                          o11_icb_enable,\n  input                          o12_icb_enable,\n  input                          o13_icb_enable,\n  input                          o14_icb_enable,\n  input                          o15_icb_enable,\n\n  input                          i_icb_cmd_valid,\n  output                         i_icb_cmd_ready,\n  input  [             AW-1:0]   i_icb_cmd_addr, \n  input                          i_icb_cmd_read, \n  input  [2-1:0]                 i_icb_cmd_burst,\n  input  [2-1:0]                 i_icb_cmd_beat,\n  input  [        DW-1:0]        i_icb_cmd_wdata,\n  input  [        DW/8-1:0]      i_icb_cmd_wmask,\n  input                          i_icb_cmd_lock,\n  input                          i_icb_cmd_excl,\n  input  [1:0]                   i_icb_cmd_size,\n  \n  output                         i_icb_rsp_valid,\n  input                          i_icb_rsp_ready,\n  output                         i_icb_rsp_err  ,\n  output                         i_icb_rsp_excl_ok,\n  output [        DW-1:0]        i_icb_rsp_rdata,\n\n  output                         o0_icb_cmd_valid,\n  input                          o0_icb_cmd_ready,\n  output [             AW-1:0]   o0_icb_cmd_addr, \n  output                         o0_icb_cmd_read, \n  output [2-1:0]                 o0_icb_cmd_burst,\n  output [2-1:0]                 o0_icb_cmd_beat,\n  output [        DW-1:0]        o0_icb_cmd_wdata,\n  output [        DW/8-1:0]      o0_icb_cmd_wmask,\n  output                         o0_icb_cmd_lock,\n  output                         o0_icb_cmd_excl,\n  output [1:0]                   o0_icb_cmd_size,\n  \n  input                          o0_icb_rsp_valid,\n  output                         o0_icb_rsp_ready,\n  input                          o0_icb_rsp_err  ,\n  input                          o0_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o0_icb_rsp_rdata,\n\n  output                         o1_icb_cmd_valid,\n  input                          o1_icb_cmd_ready,\n  output [             AW-1:0]   o1_icb_cmd_addr, \n  output                         o1_icb_cmd_read, \n  output [2-1:0]                 o1_icb_cmd_burst,\n  output [2-1:0]                 o1_icb_cmd_beat,\n  output [        DW-1:0]        o1_icb_cmd_wdata,\n  output [        DW/8-1:0]      o1_icb_cmd_wmask,\n  output                         o1_icb_cmd_lock,\n  output                         o1_icb_cmd_excl,\n  output [1:0]                   o1_icb_cmd_size,\n  \n  input                          o1_icb_rsp_valid,\n  output                         o1_icb_rsp_ready,\n  input                          o1_icb_rsp_err  ,\n  input                          o1_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o1_icb_rsp_rdata,\n\n  output                         o2_icb_cmd_valid,\n  input                          o2_icb_cmd_ready,\n  output [             AW-1:0]   o2_icb_cmd_addr, \n  output                         o2_icb_cmd_read, \n  output [2-1:0]                 o2_icb_cmd_burst,\n  output [2-1:0]                 o2_icb_cmd_beat,\n  output [        DW-1:0]        o2_icb_cmd_wdata,\n  output [        DW/8-1:0]      o2_icb_cmd_wmask,\n  output                         o2_icb_cmd_lock,\n  output                         o2_icb_cmd_excl,\n  output [1:0]                   o2_icb_cmd_size,\n  \n  input                          o2_icb_rsp_valid,\n  output                         o2_icb_rsp_ready,\n  input                          o2_icb_rsp_err  ,\n  input                          o2_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o2_icb_rsp_rdata,\n\n  output                         o3_icb_cmd_valid,\n  input                          o3_icb_cmd_ready,\n  output [             AW-1:0]   o3_icb_cmd_addr, \n  output                         o3_icb_cmd_read, \n  output [2-1:0]                 o3_icb_cmd_burst,\n  output [2-1:0]                 o3_icb_cmd_beat,\n  output [        DW-1:0]        o3_icb_cmd_wdata,\n  output [        DW/8-1:0]      o3_icb_cmd_wmask,\n  output                         o3_icb_cmd_lock,\n  output                         o3_icb_cmd_excl,\n  output [1:0]                   o3_icb_cmd_size,\n  \n  input                          o3_icb_rsp_valid,\n  output                         o3_icb_rsp_ready,\n  input                          o3_icb_rsp_err  ,\n  input                          o3_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o3_icb_rsp_rdata,\n\n  output                         o4_icb_cmd_valid,\n  input                          o4_icb_cmd_ready,\n  output [             AW-1:0]   o4_icb_cmd_addr, \n  output                         o4_icb_cmd_read, \n  output [2-1:0]                 o4_icb_cmd_burst,\n  output [2-1:0]                 o4_icb_cmd_beat,\n  output [        DW-1:0]        o4_icb_cmd_wdata,\n  output [        DW/8-1:0]      o4_icb_cmd_wmask,\n  output                         o4_icb_cmd_lock,\n  output                         o4_icb_cmd_excl,\n  output [1:0]                   o4_icb_cmd_size,\n  \n  input                          o4_icb_rsp_valid,\n  output                         o4_icb_rsp_ready,\n  input                          o4_icb_rsp_err  ,\n  input                          o4_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o4_icb_rsp_rdata,\n\n  output                         o5_icb_cmd_valid,\n  input                          o5_icb_cmd_ready,\n  output [             AW-1:0]   o5_icb_cmd_addr, \n  output                         o5_icb_cmd_read, \n  output [2-1:0]                 o5_icb_cmd_burst,\n  output [2-1:0]                 o5_icb_cmd_beat,\n  output [        DW-1:0]        o5_icb_cmd_wdata,\n  output [        DW/8-1:0]      o5_icb_cmd_wmask,\n  output                         o5_icb_cmd_lock,\n  output                         o5_icb_cmd_excl,\n  output [1:0]                   o5_icb_cmd_size,\n  \n  input                          o5_icb_rsp_valid,\n  output                         o5_icb_rsp_ready,\n  input                          o5_icb_rsp_err  ,\n  input                          o5_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o5_icb_rsp_rdata,\n\n  output                         o6_icb_cmd_valid,\n  input                          o6_icb_cmd_ready,\n  output [             AW-1:0]   o6_icb_cmd_addr, \n  output                         o6_icb_cmd_read, \n  output [2-1:0]                 o6_icb_cmd_burst,\n  output [2-1:0]                 o6_icb_cmd_beat,\n  output [        DW-1:0]        o6_icb_cmd_wdata,\n  output [        DW/8-1:0]      o6_icb_cmd_wmask,\n  output                         o6_icb_cmd_lock,\n  output                         o6_icb_cmd_excl,\n  output [1:0]                   o6_icb_cmd_size,\n  \n  input                          o6_icb_rsp_valid,\n  output                         o6_icb_rsp_ready,\n  input                          o6_icb_rsp_err  ,\n  input                          o6_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o6_icb_rsp_rdata,\n\n  output                         o7_icb_cmd_valid,\n  input                          o7_icb_cmd_ready,\n  output [             AW-1:0]   o7_icb_cmd_addr, \n  output                         o7_icb_cmd_read, \n  output [2-1:0]                 o7_icb_cmd_burst,\n  output [2-1:0]                 o7_icb_cmd_beat,\n  output [        DW-1:0]        o7_icb_cmd_wdata,\n  output [        DW/8-1:0]      o7_icb_cmd_wmask,\n  output                         o7_icb_cmd_lock,\n  output                         o7_icb_cmd_excl,\n  output [1:0]                   o7_icb_cmd_size,\n  \n  input                          o7_icb_rsp_valid,\n  output                         o7_icb_rsp_ready,\n  input                          o7_icb_rsp_err  ,\n  input                          o7_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o7_icb_rsp_rdata,\n\n  output                         o8_icb_cmd_valid,\n  input                          o8_icb_cmd_ready,\n  output [             AW-1:0]   o8_icb_cmd_addr, \n  output                         o8_icb_cmd_read, \n  output [2-1:0]                 o8_icb_cmd_burst,\n  output [2-1:0]                 o8_icb_cmd_beat,\n  output [        DW-1:0]        o8_icb_cmd_wdata,\n  output [        DW/8-1:0]      o8_icb_cmd_wmask,\n  output                         o8_icb_cmd_lock,\n  output                         o8_icb_cmd_excl,\n  output [1:0]                   o8_icb_cmd_size,\n  \n  input                          o8_icb_rsp_valid,\n  output                         o8_icb_rsp_ready,\n  input                          o8_icb_rsp_err  ,\n  input                          o8_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o8_icb_rsp_rdata,\n\n  output                         o9_icb_cmd_valid,\n  input                          o9_icb_cmd_ready,\n  output [             AW-1:0]   o9_icb_cmd_addr, \n  output                         o9_icb_cmd_read, \n  output [2-1:0]                 o9_icb_cmd_burst,\n  output [2-1:0]                 o9_icb_cmd_beat,\n  output [        DW-1:0]        o9_icb_cmd_wdata,\n  output [        DW/8-1:0]      o9_icb_cmd_wmask,\n  output                         o9_icb_cmd_lock,\n  output                         o9_icb_cmd_excl,\n  output [1:0]                   o9_icb_cmd_size,\n  \n  input                          o9_icb_rsp_valid,\n  output                         o9_icb_rsp_ready,\n  input                          o9_icb_rsp_err  ,\n  input                          o9_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o9_icb_rsp_rdata,\n\n  output                         o10_icb_cmd_valid,\n  input                          o10_icb_cmd_ready,\n  output [             AW-1:0]   o10_icb_cmd_addr, \n  output                         o10_icb_cmd_read, \n  output [2-1:0]                 o10_icb_cmd_burst,\n  output [2-1:0]                 o10_icb_cmd_beat,\n  output [        DW-1:0]        o10_icb_cmd_wdata,\n  output [        DW/8-1:0]      o10_icb_cmd_wmask,\n  output                         o10_icb_cmd_lock,\n  output                         o10_icb_cmd_excl,\n  output [1:0]                   o10_icb_cmd_size,\n  \n  input                          o10_icb_rsp_valid,\n  output                         o10_icb_rsp_ready,\n  input                          o10_icb_rsp_err  ,\n  input                          o10_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o10_icb_rsp_rdata,\n\n  output                         o11_icb_cmd_valid,\n  input                          o11_icb_cmd_ready,\n  output [             AW-1:0]   o11_icb_cmd_addr, \n  output                         o11_icb_cmd_read, \n  output [2-1:0]                 o11_icb_cmd_burst,\n  output [2-1:0]                 o11_icb_cmd_beat,\n  output [        DW-1:0]        o11_icb_cmd_wdata,\n  output [        DW/8-1:0]      o11_icb_cmd_wmask,\n  output                         o11_icb_cmd_lock,\n  output                         o11_icb_cmd_excl,\n  output [1:0]                   o11_icb_cmd_size,\n  \n  input                          o11_icb_rsp_valid,\n  output                         o11_icb_rsp_ready,\n  input                          o11_icb_rsp_err  ,\n  input                          o11_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o11_icb_rsp_rdata,\n\n  output                         o12_icb_cmd_valid,\n  input                          o12_icb_cmd_ready,\n  output [             AW-1:0]   o12_icb_cmd_addr, \n  output                         o12_icb_cmd_read, \n  output [2-1:0]                 o12_icb_cmd_burst,\n  output [2-1:0]                 o12_icb_cmd_beat,\n  output [        DW-1:0]        o12_icb_cmd_wdata,\n  output [        DW/8-1:0]      o12_icb_cmd_wmask,\n  output                         o12_icb_cmd_lock,\n  output                         o12_icb_cmd_excl,\n  output [1:0]                   o12_icb_cmd_size,\n  \n  input                          o12_icb_rsp_valid,\n  output                         o12_icb_rsp_ready,\n  input                          o12_icb_rsp_err  ,\n  input                          o12_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o12_icb_rsp_rdata,\n\n  output                         o13_icb_cmd_valid,\n  input                          o13_icb_cmd_ready,\n  output [             AW-1:0]   o13_icb_cmd_addr, \n  output                         o13_icb_cmd_read, \n  output [2-1:0]                 o13_icb_cmd_burst,\n  output [2-1:0]                 o13_icb_cmd_beat,\n  output [        DW-1:0]        o13_icb_cmd_wdata,\n  output [        DW/8-1:0]      o13_icb_cmd_wmask,\n  output                         o13_icb_cmd_lock,\n  output                         o13_icb_cmd_excl,\n  output [1:0]                   o13_icb_cmd_size,\n  \n  input                          o13_icb_rsp_valid,\n  output                         o13_icb_rsp_ready,\n  input                          o13_icb_rsp_err  ,\n  input                          o13_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o13_icb_rsp_rdata,\n\n  output                         o14_icb_cmd_valid,\n  input                          o14_icb_cmd_ready,\n  output [             AW-1:0]   o14_icb_cmd_addr, \n  output                         o14_icb_cmd_read, \n  output [2-1:0]                 o14_icb_cmd_burst,\n  output [2-1:0]                 o14_icb_cmd_beat,\n  output [        DW-1:0]        o14_icb_cmd_wdata,\n  output [        DW/8-1:0]      o14_icb_cmd_wmask,\n  output                         o14_icb_cmd_lock,\n  output                         o14_icb_cmd_excl,\n  output [1:0]                   o14_icb_cmd_size,\n  \n  input                          o14_icb_rsp_valid,\n  output                         o14_icb_rsp_ready,\n  input                          o14_icb_rsp_err  ,\n  input                          o14_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o14_icb_rsp_rdata,\n\n  output                         o15_icb_cmd_valid,\n  input                          o15_icb_cmd_ready,\n  output [             AW-1:0]   o15_icb_cmd_addr, \n  output                         o15_icb_cmd_read, \n  output [2-1:0]                 o15_icb_cmd_burst,\n  output [2-1:0]                 o15_icb_cmd_beat,\n  output [        DW-1:0]        o15_icb_cmd_wdata,\n  output [        DW/8-1:0]      o15_icb_cmd_wmask,\n  output                         o15_icb_cmd_lock,\n  output                         o15_icb_cmd_excl,\n  output [1:0]                   o15_icb_cmd_size,\n  \n  input                          o15_icb_rsp_valid,\n  output                         o15_icb_rsp_ready,\n  input                          o15_icb_rsp_err  ,\n  input                          o15_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o15_icb_rsp_rdata,\n\n  input  clk,\n  input  rst_n\n  );\n\n  wire                         buf_icb_cmd_valid;\n  wire                         buf_icb_cmd_ready;\n  wire [             AW-1:0]   buf_icb_cmd_addr; \n  wire                         buf_icb_cmd_read; \n  wire [2-1:0]                 buf_icb_cmd_burst;\n  wire [2-1:0]                 buf_icb_cmd_beat;\n  wire [        DW-1:0]        buf_icb_cmd_wdata;\n  wire [        DW/8-1:0]      buf_icb_cmd_wmask;\n  wire                         buf_icb_cmd_lock;\n  wire                         buf_icb_cmd_excl;\n  wire [1:0]                   buf_icb_cmd_size;\n  \n  wire                         buf_icb_rsp_valid;\n  wire                         buf_icb_rsp_ready;\n  wire                         buf_icb_rsp_err  ;\n  wire                         buf_icb_rsp_excl_ok;\n  wire [        DW-1:0]        buf_icb_rsp_rdata;\n\n\n\n  sirv_gnrl_icb_buffer # (\n    .OUTS_CNT_W   (SPLT_FIFO_OUTS_NUM),\n    .AW    (AW),\n    .DW    (DW), \n    .CMD_DP(ICB_FIFO_DP),\n    .RSP_DP(ICB_FIFO_DP),\n    .CMD_CUT_READY (ICB_FIFO_CUT_READY),\n    .RSP_CUT_READY (ICB_FIFO_CUT_READY),\n    .USR_W (1)\n  )u_sirv_gnrl_icb_buffer(\n    .icb_buffer_active      (),\n    .i_icb_cmd_valid        (i_icb_cmd_valid),\n    .i_icb_cmd_ready        (i_icb_cmd_ready),\n    .i_icb_cmd_read         (i_icb_cmd_read ),\n    .i_icb_cmd_addr         (i_icb_cmd_addr ),\n    .i_icb_cmd_wdata        (i_icb_cmd_wdata),\n    .i_icb_cmd_wmask        (i_icb_cmd_wmask),\n    .i_icb_cmd_lock         (i_icb_cmd_lock ),\n    .i_icb_cmd_excl         (i_icb_cmd_excl ),\n    .i_icb_cmd_size         (i_icb_cmd_size ),\n    .i_icb_cmd_burst        (i_icb_cmd_burst),\n    .i_icb_cmd_beat         (i_icb_cmd"}
{"text": "_beat ),\n    .i_icb_cmd_usr          (1'b0  ),\n                     \n    .i_icb_rsp_valid        (i_icb_rsp_valid),\n    .i_icb_rsp_ready        (i_icb_rsp_ready),\n    .i_icb_rsp_err          (i_icb_rsp_err  ),\n    .i_icb_rsp_excl_ok      (i_icb_rsp_excl_ok),\n    .i_icb_rsp_rdata        (i_icb_rsp_rdata),\n    .i_icb_rsp_usr          (),\n    \n    .o_icb_cmd_valid        (buf_icb_cmd_valid),\n    .o_icb_cmd_ready        (buf_icb_cmd_ready),\n    .o_icb_cmd_read         (buf_icb_cmd_read ),\n    .o_icb_cmd_addr         (buf_icb_cmd_addr ),\n    .o_icb_cmd_wdata        (buf_icb_cmd_wdata),\n    .o_icb_cmd_wmask        (buf_icb_cmd_wmask),\n    .o_icb_cmd_lock         (buf_icb_cmd_lock ),\n    .o_icb_cmd_excl         (buf_icb_cmd_excl ),\n    .o_icb_cmd_size         (buf_icb_cmd_size ),\n    .o_icb_cmd_burst        (buf_icb_cmd_burst),\n    .o_icb_cmd_beat         (buf_icb_cmd_beat ),\n    .o_icb_cmd_usr          (),\n                         \n    .o_icb_rsp_valid        (buf_icb_rsp_valid),\n    .o_icb_rsp_ready        (buf_icb_rsp_ready),\n    .o_icb_rsp_err          (buf_icb_rsp_err  ),\n    .o_icb_rsp_excl_ok      (buf_icb_rsp_excl_ok),\n    .o_icb_rsp_rdata        (buf_icb_rsp_rdata),\n    .o_icb_rsp_usr          (1'b0  ),\n\n    .clk                    (clk  ),\n    .rst_n                  (rst_n)\n  );\n\n  localparam BASE_REGION_MSB = (AW-1);\n  localparam SPLT_I_NUM = 17;\n\n  wire                         deft_icb_cmd_valid;\n  wire                         deft_icb_cmd_ready;\n  wire [             AW-1:0]   deft_icb_cmd_addr; \n  wire                         deft_icb_cmd_read; \n  wire [2-1:0]                 deft_icb_cmd_burst;\n  wire [2-1:0]                 deft_icb_cmd_beat;\n  wire [        DW-1:0]        deft_icb_cmd_wdata;\n  wire [        DW/8-1:0]      deft_icb_cmd_wmask;\n  wire                         deft_icb_cmd_lock;\n  wire                         deft_icb_cmd_excl;\n  wire [1:0]                   deft_icb_cmd_size;\n  \n  wire                         deft_icb_rsp_valid;\n  wire                         deft_icb_rsp_ready;\n  wire                         deft_icb_rsp_err  ;\n  wire                         deft_icb_rsp_excl_ok;\n  wire [        DW-1:0]        deft_icb_rsp_rdata;\n\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_valid;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_ready;\n  wire [SPLT_I_NUM*             AW-1:0] splt_bus_icb_cmd_addr;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_read;\n  wire [SPLT_I_NUM*2-1:0] splt_bus_icb_cmd_burst;\n  wire [SPLT_I_NUM*2-1:0] splt_bus_icb_cmd_beat;\n  wire [SPLT_I_NUM*        DW-1:0] splt_bus_icb_cmd_wdata;\n  wire [SPLT_I_NUM*        DW/8-1:0] splt_bus_icb_cmd_wmask;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_lock;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_excl;\n  wire [SPLT_I_NUM*2-1:0] splt_bus_icb_cmd_size;\n\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_valid;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_ready;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_err;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_excl_ok;\n  wire [SPLT_I_NUM*        DW-1:0] splt_bus_icb_rsp_rdata;\n\n  //CMD Channel\n  assign {\n                             o0_icb_cmd_valid\n                           , o1_icb_cmd_valid\n                           , o2_icb_cmd_valid\n                           , o3_icb_cmd_valid\n                           , o4_icb_cmd_valid\n                           , o5_icb_cmd_valid\n                           , o6_icb_cmd_valid\n                           , o7_icb_cmd_valid\n                           , o8_icb_cmd_valid\n                           , o9_icb_cmd_valid\n                           , o10_icb_cmd_valid\n                           , o11_icb_cmd_valid\n                           , o12_icb_cmd_valid\n                           , o13_icb_cmd_valid\n                           , o14_icb_cmd_valid\n                           , o15_icb_cmd_valid\n                           , deft_icb_cmd_valid\n                           } = splt_bus_icb_cmd_valid;\n\n  assign {\n                             o0_icb_cmd_addr\n                           , o1_icb_cmd_addr\n                           , o2_icb_cmd_addr\n                           , o3_icb_cmd_addr\n                           , o4_icb_cmd_addr\n                           , o5_icb_cmd_addr\n                           , o6_icb_cmd_addr\n                           , o7_icb_cmd_addr\n                           , o8_icb_cmd_addr\n                           , o9_icb_cmd_addr\n                           , o10_icb_cmd_addr\n                           , o11_icb_cmd_addr\n                           , o12_icb_cmd_addr\n                           , o13_icb_cmd_addr\n                           , o14_icb_cmd_addr\n                           , o15_icb_cmd_addr\n                           , deft_icb_cmd_addr\n                           } = splt_bus_icb_cmd_addr;\n\n  assign {\n                             o0_icb_cmd_read\n                           , o1_icb_cmd_read\n                           , o2_icb_cmd_read\n                           , o3_icb_cmd_read\n                           , o4_icb_cmd_read\n                           , o5_icb_cmd_read\n                           , o6_icb_cmd_read\n                           , o7_icb_cmd_read\n                           , o8_icb_cmd_read\n                           , o9_icb_cmd_read\n                           , o10_icb_cmd_read\n                           , o11_icb_cmd_read\n                           , o12_icb_cmd_read\n                           , o13_icb_cmd_read\n                           , o14_icb_cmd_read\n                           , o15_icb_cmd_read\n                           , deft_icb_cmd_read\n                           } = splt_bus_icb_cmd_read;\n\n  assign {\n                             o0_icb_cmd_burst\n                           , o1_icb_cmd_burst\n                           , o2_icb_cmd_burst\n                           , o3_icb_cmd_burst\n                           , o4_icb_cmd_burst\n                           , o5_icb_cmd_burst\n                           , o6_icb_cmd_burst\n                           , o7_icb_cmd_burst\n                           , o8_icb_cmd_burst\n                           , o9_icb_cmd_burst\n                           , o10_icb_cmd_burst\n                           , o11_icb_cmd_burst\n                           , o12_icb_cmd_burst\n                           , o13_icb_cmd_burst\n                           , o14_icb_cmd_burst\n                           , o15_icb_cmd_burst\n                           , deft_icb_cmd_burst\n                           } = splt_bus_icb_cmd_burst;\n\n  assign {\n                             o0_icb_cmd_beat\n                           , o1_icb_cmd_beat\n                           , o2_icb_cmd_beat\n                           , o3_icb_cmd_beat\n                           , o4_icb_cmd_beat\n                           , o5_icb_cmd_beat\n                           , o6_icb_cmd_beat\n                           , o7_icb_cmd_beat\n                           , o8_icb_cmd_beat\n                           , o9_icb_cmd_beat\n                           , o10_icb_cmd_beat\n                           , o11_icb_cmd_beat\n                           , o12_icb_cmd_beat\n                           , o13_icb_cmd_beat\n                           , o14_icb_cmd_beat\n                           , o15_icb_cmd_beat\n                           , deft_icb_cmd_beat\n                           } = splt_bus_icb_cmd_beat;\n\n  assign {\n                             o0_icb_cmd_wdata\n                           , o1_icb_cmd_wdata\n                           , o2_icb_cmd_wdata\n                           , o3_icb_cmd_wdata\n                           , o4_icb_cmd_wdata\n                           , o5_icb_cmd_wdata\n                           , o6_icb_cmd_wdata\n                           , o7_icb_cmd_wdata\n                           , o8_icb_cmd_wdata\n                           , o9_icb_cmd_wdata\n                           , o10_icb_cmd_wdata\n                           , o11_icb_cmd_wdata\n                           , o12_icb_cmd_wdata\n                           , o13_icb_cmd_wdata\n                           , o14_icb_cmd_wdata\n                           , o15_icb_cmd_wdata\n                           , deft_icb_cmd_wdata\n                           } = splt_bus_icb_cmd_wdata;\n\n  assign {\n                             o0_icb_cmd_wmask\n                           , o1_icb_cmd_wmask\n                           , o2_icb_cmd_wmask\n                           , o3_icb_cmd_wmask\n                           , o4_icb_cmd_wmask\n                           , o5_icb_cmd_wmask\n                           , o6_icb_cmd_wmask\n                           , o7_icb_cmd_wmask\n                           , o8_icb_cmd_wmask\n                           , o9_icb_cmd_wmask\n                           , o10_icb_cmd_wmask\n                           , o11_icb_cmd_wmask\n                           , o12_icb_cmd_wmask\n                           , o13_icb_cmd_wmask\n                           , o14_icb_cmd_wmask\n                           , o15_icb_cmd_wmask\n                           , deft_icb_cmd_wmask\n                           } = splt_bus_icb_cmd_wmask;\n                         \n  assign {\n                             o0_icb_cmd_lock\n                           , o1_icb_cmd_lock\n                           , o2_icb_cmd_lock\n                           , o3_icb_cmd_lock\n                           , o4_icb_cmd_lock\n                           , o5_icb_cmd_lock\n                           , o6_icb_cmd_lock\n                           , o7_icb_cmd_lock\n                           , o8_icb_cmd_lock\n                           , o9_icb_cmd_lock\n                           , o10_icb_cmd_lock\n                           , o11_icb_cmd_lock\n                           , o12_icb_cmd_lock\n                           , o13_icb_cmd_lock\n                           , o14_icb_cmd_lock\n                           , o15_icb_cmd_lock\n                           , deft_icb_cmd_lock\n                           } = splt_bus_icb_cmd_lock;\n\n  assign {\n                             o0_icb_cmd_excl\n                           , o1_icb_cmd_excl\n                           , o2_icb_cmd_excl\n                           , o3_icb_cmd_excl\n                           , o4_icb_cmd_excl\n                           , o5_icb_cmd_excl\n                           , o6_icb_cmd_excl\n                           , o7_icb_cmd_excl\n                           , o8_icb_cmd_excl\n                           , o9_icb_cmd_excl\n                           , o10_icb_cmd_excl\n                           , o11_icb_cmd_excl\n                           , o12_icb_cmd_excl\n                           , o13_icb_cmd_excl\n                           , o14_icb_cmd_excl\n                           , o15_icb_cmd_excl\n                           , deft_icb_cmd_excl\n                           } = splt_bus_icb_cmd_excl;\n                           \n  assign {\n                             o0_icb_cmd_size\n                           , o1_icb_cmd_size\n                           , o2_icb_cmd_size\n                           , o3_icb_cmd_size\n                           , o4_icb_cmd_size\n                           , o5_icb_cmd_size\n                           , o6_icb_cmd_size\n                           , o7_icb_cmd_size\n                           , o8_icb_cmd_size\n                           , o9_icb_cmd_size\n                           , o10_icb_cmd_size\n                           , o11_icb_cmd_size\n                           , o12_icb_cmd_size\n                           , o13_icb_cmd_size\n                           , o14_icb_cmd_size\n                           , o15_icb_cmd_size\n                           , deft_icb_cmd_size\n                           } = splt_bus_icb_cmd_size;\n\n  assign splt_bus_icb_cmd_ready = {\n                             o0_icb_cmd_ready\n                           , o1_icb_cmd_ready\n                           , o2_icb_cmd_ready\n                           , o3_icb_cmd_ready\n                           , o4_icb_cmd_ready\n                           , o5_icb_cmd_ready\n                           , o6_icb_cmd_ready\n                           , o7_icb_cmd_ready\n                           , o8_icb_cmd_ready\n                           , o9_icb_cmd_ready\n                           , o10_icb_cmd_ready\n                           , o11_icb_cmd_ready\n                           , o12_icb_cmd_ready\n                           , o13_icb_cmd_ready\n                           , o14_icb_cmd_ready\n                           , o15_icb_cmd_ready\n                           , deft_icb_cmd_ready\n                           };\n\n  //RSP Channel\n  assign splt_bus_icb_rsp_valid = {\n                             o0_icb_rsp_valid\n                           , o1_icb_rsp_valid\n                           , o2_icb_rsp_valid\n                           , o3_icb_rsp_valid\n                           , o4_icb_rsp_valid\n                           , o5_icb_rsp_valid\n                           , o6_icb_rsp_valid\n                           , o7_icb_rsp_valid\n                           , o8_icb_rsp_valid\n                           , o9_icb_rsp_valid\n                           , o10_icb_rsp_valid\n                           , o11_icb_rsp_valid\n                           , o12_icb_rsp_valid\n                           , o13_icb_rsp_valid\n                           , o14_icb_rsp_valid\n                           , o15_icb_rsp_valid\n                           , deft_icb_rsp_valid\n                           };\n\n  assign splt_bus_icb_rsp_err = {\n                             o0_icb_rsp_err\n                           , o1_icb_rsp_err\n                           , o2_icb_rsp_err\n                           , o3_icb_rsp_err\n                           , o4_icb_rsp_err\n                           , o5_icb_rsp_err\n                           , o6_icb_rsp_err\n                           , o7_icb_rsp_err\n                           , o8_icb_rsp_err\n                           , o9_icb_rsp_err\n                           , o10_icb_rsp_err\n                           , o11_icb_rsp_err\n                           , o12_icb_rsp_err\n                           , o13_icb_rsp_err\n                           , o14_icb_rsp_err\n                           , o15_icb_rsp_err\n                           , deft_icb_rsp_err\n                           };\n\n  assign splt_bus_icb_rsp_excl_ok = {\n                             o0_icb_rsp_excl_ok\n                           , o1_icb_rsp_excl_ok\n                           , o2_icb_rsp_excl_ok\n                           , o3_icb_rsp_excl_ok\n                           , o4_icb_rsp_excl_ok\n                           , o5_icb_rsp_excl_ok\n                           , o6_icb_rsp_excl_ok\n                           , o7_icb_rsp_excl_ok\n                           , o8_icb_rsp_excl_ok\n                           , o9_icb_rsp_excl_ok\n                           , o10_icb_rsp_excl_ok\n                           , o11_icb_rsp_excl_ok\n                           , o12_icb_rsp_excl_ok\n                           , o13_icb_rsp_excl_ok\n                           , o14_icb_rsp_excl_ok\n                           , o15_icb_rsp_excl_ok\n                           , deft_icb_rsp_excl_ok\n                           };\n\n  assign splt_bus_icb_rsp_rdata = {\n                             o0_icb_rsp_rdata\n                           , o1_icb_rsp_rdata\n                           , o2_icb_rsp_rdata\n                           , o3_icb_rsp_rdata\n                           , o4_icb_rsp_rdata\n                           , o5_icb_rsp_rdata\n                           , o6_icb_rsp_rdata\n                           , o7_icb_rsp_rdata\n                           , o8_icb_rsp_rdata\n                           , o9_icb_rsp_rdata\n                           , o10_icb_rsp_rdata\n                           , o11_icb_rsp_rdata\n                           , o12_icb_rsp_rdata\n                           , o13_icb_rsp_rdata\n                           , o14_icb_rsp_rdata\n                           , o15_icb_rsp_rdata\n                           , deft_icb_rsp_rdata\n                           };\n\n  assign {\n                             o0_icb_rsp_ready\n                           , o1_icb_rsp_ready\n                           , o2_icb_rsp_ready\n                           , o3_icb_rsp_ready\n                           , o4_icb_rsp_ready\n                           , o5_icb_rsp_ready\n                           , o6_icb_rsp_ready\n                           , o7_icb_rsp_ready\n                           , o8_icb_rsp_ready\n                           , o9_icb_rsp_ready\n                           , o10_icb_rsp_ready\n                           , o11_icb_rsp_ready\n                           , o12_icb_rsp_ready\n                           , o13_icb_rsp_ready\n                           , o14_icb_rsp_ready\n                           , o15_icb_rsp_ready\n                           , deft_icb_rsp_ready\n                           } = splt_bus_icb_rsp_ready;\n\n  wire icb_cmd_o0 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O0_BASE_REGION_LSB] \n                     ==  O0_BASE_ADDR [BASE_REGION_MSB:O0_BASE_REGION_LSB] \n                    ) & o0_icb_enable;\n\n  wire icb_cmd_o1 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O1_BASE_REGION_LSB]\n                     ==  O1_BASE_ADDR [BASE_REGION_MSB:O1_BASE_REGION_LSB] \n                    ) & o1_icb_enable; \n                     \n  wire icb_cmd_o2 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O2_BASE_REGION_LSB]\n                     ==  O2_BASE_ADDR [BASE_REGION_MSB:O2_BASE_REGION_LSB] \n                    ) & o2_icb_enable;\n\n  wire icb_cmd_o3 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O3_BASE_REGION_LSB]\n                     ==  O3_BASE_ADDR [BASE_REGION_MSB:O3_BASE_REGION_LSB] \n                    ) & o3_icb_enable;\n\n  wire icb_cmd_o4 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O4_BASE_REGION_LSB]\n                     ==  O4_BASE_ADDR [BASE_REGION_MSB:O4_BASE_REGION_LSB] \n                    ) & o4_icb_enable;\n\n  wire icb_cmd_o5 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O5_BASE_REGION_LSB]\n                     ==  O5_BASE_ADDR [BASE_REGION_MSB:O5_BASE_REGION_LSB] \n                    ) & o5_icb_enable;\n\n  wire icb_cmd_o6 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O6_BASE_REGION_LSB]\n                     ==  O6_BASE_ADDR [BASE_REGION_MSB:O6_BASE_REGION_LSB] \n                    ) & o6_icb_enable;\n\n  wire icb_cmd_o7 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O7_BASE_REGION_LSB]\n                     ==  O7_BASE_ADDR [BASE_REGION_MSB:O7_BASE_REGION_LSB] \n                    ) & o7_icb_enable;\n\n  wire icb_cmd_o8 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O8_BASE_REGION_LSB]\n                     ==  O8_BASE_ADDR [BASE_REGION_MSB:O8_BASE_REGION_LSB] \n                    ) & o8_icb_enable;\n\n  wire icb_cmd_o9 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O9_BASE_REGION_LSB]\n                     ==  O9_BASE_ADDR [BASE_REGION_MSB:O9_BASE_REGION_LSB] \n                    ) & o9_icb_enable;\n\n  wire icb_cmd_o10= buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O10_BASE_REGION_LSB]\n                     ==  O10_BASE_ADDR [BASE_REGION_MSB:O10_BASE_REGION_LSB] \n                    ) & o10_icb_enable;\n\n  wire icb_cmd_o11= buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O11_BASE_REGION_LSB]\n                     ==  O11_BASE_ADDR [BASE_REGION_MSB:O11_BASE_REGION_LSB] \n                    ) & o11_icb_enable;\n\n  wire icb_cmd_o12= buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O12_BASE_REGION_LSB]\n                     ==  O12_BASE_ADDR [BASE_REGION_MSB:O12_BASE_REGION_LSB] \n                    ) & o12_icb_enable;\n\n  wire icb_cmd_o13= buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O13_BASE_REGION_LSB]\n                     ==  O13_BASE_ADDR [BASE_REGION_MSB:O13_BASE_REGION_LSB] \n                    ) & o13_icb_enable;\n\n  wire icb_cmd_o14= buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O14_BASE_REGION_LSB]\n                     ==  O14_BASE_ADDR [BASE_REGION_MSB:O14_BASE_REGION_LSB] \n                    ) & o14_icb_enable;\n\n  wire icb_c"}
{"text": "md_o15= buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O15_BASE_REGION_LSB]\n                     ==  O15_BASE_ADDR [BASE_REGION_MSB:O15_BASE_REGION_LSB] \n                    ) & o15_icb_enable;\n\n  wire icb_cmd_deft = (~icb_cmd_o0)\n                    & (~icb_cmd_o1)\n                    & (~icb_cmd_o2)\n                    & (~icb_cmd_o3)\n                    & (~icb_cmd_o4)\n                    & (~icb_cmd_o5)\n                    & (~icb_cmd_o6)\n                    & (~icb_cmd_o7)\n                    & (~icb_cmd_o8)\n                    & (~icb_cmd_o9)\n                    & (~icb_cmd_o10)\n                    & (~icb_cmd_o11)\n                    & (~icb_cmd_o12)\n                    & (~icb_cmd_o13)\n                    & (~icb_cmd_o14)\n                    & (~icb_cmd_o15)\n                    ;\n\n  wire [SPLT_I_NUM-1:0] buf_icb_splt_indic = \n      {\n                      icb_cmd_o0\n                    , icb_cmd_o1\n                    , icb_cmd_o2\n                    , icb_cmd_o3\n                    , icb_cmd_o4\n                    , icb_cmd_o5\n                    , icb_cmd_o6\n                    , icb_cmd_o7\n                    , icb_cmd_o8\n                    , icb_cmd_o9\n                    , icb_cmd_o10\n                    , icb_cmd_o11\n                    , icb_cmd_o12\n                    , icb_cmd_o13\n                    , icb_cmd_o14\n                    , icb_cmd_o15\n                    , icb_cmd_deft\n      };\n\n  sirv_gnrl_icb_splt # (\n  .ALLOW_DIFF (0),// Dont allow different branches oustanding\n  .ALLOW_0CYCL_RSP (1),// Allow the 0 cycle response because in BIU the splt\n                       //  is after the buffer, and will directly talk to the external\n                       //  bus, where maybe the ROM is 0 cycle responsed.\n  .FIFO_OUTS_NUM   (SPLT_FIFO_OUTS_NUM ),\n  .FIFO_CUT_READY  (SPLT_FIFO_CUT_READY),\n  .SPLT_NUM   (SPLT_I_NUM),\n  .SPLT_PTR_W (SPLT_I_NUM),\n  .SPLT_PTR_1HOT (1),\n  .VLD_MSK_PAYLOAD(1),\n  .USR_W      (1),\n  .AW         (AW),\n  .DW         (DW) \n  ) u_buf_icb_splt(\n  .i_icb_splt_indic       (buf_icb_splt_indic),        \n\n  .i_icb_cmd_valid        (buf_icb_cmd_valid )     ,\n  .i_icb_cmd_ready        (buf_icb_cmd_ready )     ,\n  .i_icb_cmd_read         (buf_icb_cmd_read )      ,\n  .i_icb_cmd_addr         (buf_icb_cmd_addr )      ,\n  .i_icb_cmd_wdata        (buf_icb_cmd_wdata )     ,\n  .i_icb_cmd_wmask        (buf_icb_cmd_wmask)      ,\n  .i_icb_cmd_burst        (buf_icb_cmd_burst)     ,\n  .i_icb_cmd_beat         (buf_icb_cmd_beat )     ,\n  .i_icb_cmd_excl         (buf_icb_cmd_excl )     ,\n  .i_icb_cmd_lock         (buf_icb_cmd_lock )     ,\n  .i_icb_cmd_size         (buf_icb_cmd_size )     ,\n  .i_icb_cmd_usr          (1'b0)     ,\n \n  .i_icb_rsp_valid        (buf_icb_rsp_valid )     ,\n  .i_icb_rsp_ready        (buf_icb_rsp_ready )     ,\n  .i_icb_rsp_err          (buf_icb_rsp_err)        ,\n  .i_icb_rsp_excl_ok      (buf_icb_rsp_excl_ok)    ,\n  .i_icb_rsp_rdata        (buf_icb_rsp_rdata )     ,\n  .i_icb_rsp_usr          ( )     ,\n                               \n  .o_bus_icb_cmd_ready    (splt_bus_icb_cmd_ready ) ,\n  .o_bus_icb_cmd_valid    (splt_bus_icb_cmd_valid ) ,\n  .o_bus_icb_cmd_read     (splt_bus_icb_cmd_read )  ,\n  .o_bus_icb_cmd_addr     (splt_bus_icb_cmd_addr )  ,\n  .o_bus_icb_cmd_wdata    (splt_bus_icb_cmd_wdata ) ,\n  .o_bus_icb_cmd_wmask    (splt_bus_icb_cmd_wmask)  ,\n  .o_bus_icb_cmd_burst    (splt_bus_icb_cmd_burst),\n  .o_bus_icb_cmd_beat     (splt_bus_icb_cmd_beat ),\n  .o_bus_icb_cmd_excl     (splt_bus_icb_cmd_excl ),\n  .o_bus_icb_cmd_lock     (splt_bus_icb_cmd_lock ),\n  .o_bus_icb_cmd_size     (splt_bus_icb_cmd_size ),\n  .o_bus_icb_cmd_usr      ()     ,\n  \n  .o_bus_icb_rsp_valid    (splt_bus_icb_rsp_valid ) ,\n  .o_bus_icb_rsp_ready    (splt_bus_icb_rsp_ready ) ,\n  .o_bus_icb_rsp_err      (splt_bus_icb_rsp_err)    ,\n  .o_bus_icb_rsp_excl_ok  (splt_bus_icb_rsp_excl_ok),\n  .o_bus_icb_rsp_rdata    (splt_bus_icb_rsp_rdata ) ,\n  .o_bus_icb_rsp_usr      ({SPLT_I_NUM{1'b0}}) ,\n                             \n  .clk                    (clk  )                     ,\n  .rst_n                  (rst_n)\n  );\n\n  ///////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////\n  // Implement the default slave\n  assign  deft_icb_cmd_ready = deft_icb_rsp_ready;\n  \n     // 0 Cycle response\n  assign  deft_icb_rsp_valid = deft_icb_cmd_valid;\n  assign  deft_icb_rsp_err   = 1'b1;\n  assign  deft_icb_rsp_excl_ok = 1'b0;\n  assign  deft_icb_rsp_rdata   = {DW{1'b0}};\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The Bus Fab module for 1-to-2 bus\n//\n// ====================================================================\n\n\nmodule sirv_icb1to2_bus # (\n  parameter ICB_FIFO_DP = 0, // This is to optionally add the pipeline stage for ICB bus\n                             //   if the depth is 0, then means pass through, not add pipeline\n                             //   if the depth is 2, then means added one ping-pong buffer stage\n  parameter ICB_FIFO_CUT_READY = 1, // This is to cut the back-pressure signal if you set as 1\n\n  parameter AW = 32,\n  parameter DW = 32,\n  parameter SPLT_FIFO_OUTS_NUM    = 1,\n  parameter SPLT_FIFO_CUT_READY   = 1,\n\n  parameter O0_BASE_ADDR       = 32'h0000_1000,       \n  parameter O0_BASE_REGION_LSB = 12 \n)(\n\n  input                          i_icb_cmd_valid,\n  output                         i_icb_cmd_ready,\n  input  [             AW-1:0]   i_icb_cmd_addr, \n  input                          i_icb_cmd_read, \n  input  [2-1:0]                 i_icb_cmd_burst,\n  input  [2-1:0]                 i_icb_cmd_beat,\n  input  [        DW-1:0]        i_icb_cmd_wdata,\n  input  [        DW/8-1:0]      i_icb_cmd_wmask,\n  input                          i_icb_cmd_lock,\n  input                          i_icb_cmd_excl,\n  input  [1:0]                   i_icb_cmd_size,\n  \n  output                         i_icb_rsp_valid,\n  input                          i_icb_rsp_ready,\n  output                         i_icb_rsp_err  ,\n  output                         i_icb_rsp_excl_ok,\n  output [        DW-1:0]        i_icb_rsp_rdata,\n\n  output                         o0_icb_cmd_valid,\n  input                          o0_icb_cmd_ready,\n  output [             AW-1:0]   o0_icb_cmd_addr, \n  output                         o0_icb_cmd_read, \n  output [2-1:0]                 o0_icb_cmd_burst,\n  output [2-1:0]                 o0_icb_cmd_beat,\n  output [        DW-1:0]        o0_icb_cmd_wdata,\n  output [        DW/8-1:0]      o0_icb_cmd_wmask,\n  output                         o0_icb_cmd_lock,\n  output                         o0_icb_cmd_excl,\n  output [1:0]                   o0_icb_cmd_size,\n  \n  input                          o0_icb_rsp_valid,\n  output                         o0_icb_rsp_ready,\n  input                          o0_icb_rsp_err  ,\n  input                          o0_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o0_icb_rsp_rdata,\n\n  output                         o1_icb_cmd_valid,\n  input                          o1_icb_cmd_ready,\n  output [             AW-1:0]   o1_icb_cmd_addr, \n  output                         o1_icb_cmd_read, \n  output [2-1:0]                 o1_icb_cmd_burst,\n  output [2-1:0]                 o1_icb_cmd_beat,\n  output [        DW-1:0]        o1_icb_cmd_wdata,\n  output [        DW/8-1:0]      o1_icb_cmd_wmask,\n  output                         o1_icb_cmd_lock,\n  output                         o1_icb_cmd_excl,\n  output [1:0]                   o1_icb_cmd_size,\n  \n  input                          o1_icb_rsp_valid,\n  output                         o1_icb_rsp_ready,\n  input                          o1_icb_rsp_err  ,\n  input                          o1_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o1_icb_rsp_rdata,\n\n  input  clk,\n  input  rst_n\n  );\n\n  wire                         buf_icb_cmd_valid;\n  wire                         buf_icb_cmd_ready;\n  wire [             AW-1:0]   buf_icb_cmd_addr; \n  wire                         buf_icb_cmd_read; \n  wire [2-1:0]                 buf_icb_cmd_burst;\n  wire [2-1:0]                 buf_icb_cmd_beat;\n  wire [        DW-1:0]        buf_icb_cmd_wdata;\n  wire [        DW/8-1:0]      buf_icb_cmd_wmask;\n  wire                         buf_icb_cmd_lock;\n  wire                         buf_icb_cmd_excl;\n  wire [1:0]                   buf_icb_cmd_size;\n  \n  wire                         buf_icb_rsp_valid;\n  wire                         buf_icb_rsp_ready;\n  wire                         buf_icb_rsp_err  ;\n  wire                         buf_icb_rsp_excl_ok;\n  wire [        DW-1:0]        buf_icb_rsp_rdata;\n\n  sirv_gnrl_icb_buffer # (\n    .OUTS_CNT_W   (SPLT_FIFO_OUTS_NUM),\n    .AW    (AW),\n    .DW    (DW), \n    .CMD_DP(ICB_FIFO_DP),\n    .RSP_DP(ICB_FIFO_DP),\n    .CMD_CUT_READY (ICB_FIFO_CUT_READY),\n    .RSP_CUT_READY (ICB_FIFO_CUT_READY),\n    .USR_W (1)\n  )u_sirv_gnrl_icb_buffer(\n    .icb_buffer_active      (),\n    .i_icb_cmd_valid        (i_icb_cmd_valid),\n    .i_icb_cmd_ready        (i_icb_cmd_ready),\n    .i_icb_cmd_read         (i_icb_cmd_read ),\n    .i_icb_cmd_addr         (i_icb_cmd_addr ),\n    .i_icb_cmd_wdata        (i_icb_cmd_wdata),\n    .i_icb_cmd_wmask        (i_icb_cmd_wmask),\n    .i_icb_cmd_lock         (i_icb_cmd_lock ),\n    .i_icb_cmd_excl         (i_icb_cmd_excl ),\n    .i_icb_cmd_size         (i_icb_cmd_size ),\n    .i_icb_cmd_burst        (i_icb_cmd_burst),\n    .i_icb_cmd_beat         (i_icb_cmd_beat ),\n    .i_icb_cmd_usr          (1'b0  ),\n                     \n    .i_icb_rsp_valid        (i_icb_rsp_valid),\n    .i_icb_rsp_ready        (i_icb_rsp_ready),\n    .i_icb_rsp_err          (i_icb_rsp_err  ),\n    .i_icb_rsp_excl_ok      (i_icb_rsp_excl_ok),\n    .i_icb_rsp_rdata        (i_icb_rsp_rdata),\n    .i_icb_rsp_usr          (),\n    \n    .o_icb_cmd_valid        (buf_icb_cmd_valid),\n    .o_icb_cmd_ready        (buf_icb_cmd_ready),\n    .o_icb_cmd_read         (buf_icb_cmd_read ),\n    .o_icb_cmd_addr         (buf_icb_cmd_addr ),\n    .o_icb_cmd_wdata        (buf_icb_cmd_wdata),\n    .o_icb_cmd_wmask        (buf_icb_cmd_wmask),\n    .o_icb_cmd_lock         (buf_icb_cmd_lock ),\n    .o_icb_cmd_excl         (buf_icb_cmd_excl ),\n    .o_icb_cmd_size         (buf_icb_cmd_size ),\n    .o_icb_cmd_burst        (buf_icb_cmd_burst),\n    .o_icb_cmd_beat         (buf_icb_cmd_beat ),\n    .o_icb_cmd_usr          (),\n                         \n    .o_icb_rsp_valid        (buf_icb_rsp_valid),\n    .o_icb_rsp_ready        (buf_icb_rsp_ready),\n    .o_icb_rsp_err          (buf_icb_rsp_err  ),\n    .o_icb_rsp_excl_ok      (buf_icb_rsp_excl_ok),\n    .o_icb_rsp_rdata        (buf_icb_rsp_rdata),\n    .o_icb_rsp_usr          (1'b0  ),\n\n    .clk                    (clk  ),\n    .rst_n                  (rst_n)\n  );\n\n\n\n  localparam BASE_REGION_MSB = (AW-1);\n  localparam SPLT_I_NUM = 2;\n\n\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_valid;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_ready;\n  wire [SPLT_I_NUM*             AW-1:0] splt_bus_icb_cmd_addr;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_read;\n  wire [SPLT_I_NUM*2-1:0] splt_bus_icb_cmd_burst;\n  wire [SPLT_I_NUM*2-1:0] splt_bus_icb_cmd_beat;\n  wire [SPLT_I_NUM*        DW-1:0] splt_bus_icb_cmd_wdata;\n  wire [SPLT_I_NUM*        DW/8-1:0] splt_bus_icb_cmd_wmask;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_lock;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_excl;\n  wire [SPLT_I_NUM*2-1:0] splt_bus_icb_cmd_size;\n\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_valid;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_ready;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_err;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_excl_ok;\n  wire [SPLT_I_NUM*        DW-1:0] splt_bus_icb_rsp_rdata;\n\n  //CMD Channel\n  assign {\n                             o0_icb_cmd_valid\n                           , o1_icb_cmd_valid\n                           } = splt_bus_icb_cmd_valid;\n\n  assign {\n                             o0_icb_cmd_addr\n                           , o1_icb_cmd_addr\n                           } = splt_bus_icb_cmd_addr;\n\n  assign {\n                             o0_icb_cmd_read\n                           , o1_icb_cmd_read\n                           } = splt_bus_icb_cmd_read;\n\n  assign {\n                             o0_icb_cmd_burst\n                           , o1_icb_cmd_burst\n                           } = splt_bus_icb_cmd_burst;\n\n  assign {\n                             o0_icb_cmd_beat\n                           , o1_icb_cmd_beat\n                           } = splt_bus_icb_cmd_beat;\n\n  assign {\n                             o0_icb_cmd_wdata\n                           , o1_icb_cmd_wdata\n                           } = splt_bus_icb_cmd_wdata;\n\n  assign {\n                             o0_icb_cmd_wmask\n                           , o1_icb_cmd_wmask\n                           } = splt_bus_icb_cmd_wmask;\n                         \n  assign {\n                             o0_icb_cmd_lock\n                           , o1_icb_cmd_lock\n                           } = splt_bus_icb_cmd_lock;\n\n  assign {\n                             o0_icb_cmd_excl\n                           , o1_icb_cmd_excl\n                           } = splt_bus_icb_cmd_excl;\n                           \n  assign {\n                             o0_icb_cmd_size\n                           , o1_icb_cmd_size\n                           } = splt_bus_icb_cmd_size;\n\n  assign splt_bus_icb_cmd_ready = {\n                             o0_icb_cmd_ready\n                           , o1_icb_cmd_ready\n                           };\n\n  //RSP Channel\n  assign splt_bus_icb_rsp_valid = {\n                             o0_icb_rsp_valid\n                           , o1_icb_rsp_valid\n                           };\n\n  assign splt_bus_icb_rsp_err = {\n                             o0_icb_rsp_err\n                           , o1_icb_rsp_err\n                           };\n\n  assign splt_bus_icb_rsp_excl_ok = {\n                             o0_icb_rsp_excl_ok\n                           , o1_icb_rsp_excl_ok\n                           };\n\n  assign splt_bus_icb_rsp_rdata = {\n                             o0_icb_rsp_rdata\n                           , o1_icb_rsp_rdata\n                           };\n\n  assign {\n                             o0_icb_rsp_ready\n                           , o1_icb_rsp_ready\n                           } = splt_bus_icb_rsp_ready;\n\n  wire icb_cmd_o0 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O0_BASE_REGION_LSB] \n                     ==  O0_BASE_ADDR [BASE_REGION_MSB:O0_BASE_REGION_LSB] \n                    );\n\n  wire icb_cmd_o1 = ~icb_cmd_o0;\n                     \n  wire [SPLT_I_NUM-1:0] buf_icb_splt_indic = \n      {\n                      icb_cmd_o0\n                    , icb_cmd_o1\n      };\n\n  sirv_gnrl_icb_splt # (\n  .ALLOW_DIFF (0),// Dont allow different branches oustanding\n  .ALLOW_0CYCL_RSP (1),// Allow the 0 cycle response because in BIU the splt\n                       //  is after the buffer, and will directly talk to the external\n                       //  bus, where maybe the ROM is 0 cycle responsed.\n  .FIFO_OUTS_NUM   (SPLT_FIFO_OUTS_NUM ),\n  .FIFO_CUT_READY  (SPLT_FIFO_CUT_READY),\n  .SPLT_NUM   (SPLT_I_NUM),\n  .SPLT_PTR_W (SPLT_I_NUM),\n  .SPLT_PTR_1HOT (1),\n  .VLD_MSK_PAYLOAD(1),\n  .USR_W      (1),\n  .AW         (AW),\n  .DW         (DW) \n  ) u_i_icb_splt(\n  .i_icb_splt_indic       (buf_icb_splt_indic),        \n\n  .i_icb_cmd_valid        (buf_icb_cmd_valid )     ,\n  .i_icb_cmd_ready        (buf_icb_cmd_ready )     ,\n  .i_icb_cmd_read         (buf_icb_cmd_read )      ,\n  .i_icb_cmd_addr         (buf_icb_cmd_addr )      ,\n  .i_icb_cmd_wdata        (buf_icb_cmd_wdata )     ,\n  .i_icb_cmd_wmask        (buf_icb_cmd_wmask)      ,\n  .i_icb_cmd_burst        (buf_icb_cmd_burst)     ,\n  .i_icb_cmd_beat         (buf_icb_cmd_beat )     ,\n  .i_icb_cmd_excl         (buf_icb_cmd_excl )     ,\n  .i_icb_cmd_lock         (buf_icb_cmd_lock )     ,\n  .i_icb_cmd_size         (buf_icb_cmd_size )     ,\n  .i_icb_cmd_usr          (1'b0)     ,\n \n  .i_icb_rsp_valid        (buf_icb_rsp_valid )     ,\n  .i_icb_rsp_ready        (buf_icb_rsp_ready )     ,\n  .i_icb_rsp_err          (buf_icb_rsp_err)        ,\n  .i_icb_rsp_excl_ok      (buf_icb_rsp_excl_ok)    ,\n  .i_icb_rsp_rdata        (buf_icb_rsp_rdata )     ,\n  .i_icb_rsp_usr          ( )     ,\n                               \n  .o_bus_icb_cmd_ready    (splt_bus_icb_cmd_ready ) ,\n  .o_bus_icb_cmd_valid    (splt_bus_icb_cmd_valid ) ,\n  .o_bus_icb_cmd_read     (splt_bus_icb_cmd_read )  ,\n  .o_bus_icb_cmd_addr     (splt_bus_icb_cmd_addr )  ,\n  .o_bus_icb_cmd_wdata    (splt_bus_icb_cmd_wdata ) ,\n  .o_bus_icb_cmd_wmask    (splt_bus_icb_cmd_wmask)  ,\n  .o_bus_icb_cmd_burst    (splt_bus_icb_cmd_burst),\n  .o_bus_icb_cmd_beat     (splt_bus_icb_cmd_beat ),\n  .o_bus_icb_cmd_excl     (splt_bus_icb_cmd_excl ),\n  .o_bus_icb_cmd_lock     (splt_bus_icb_cmd_lock ),\n  .o_bus_icb_cmd_size     (splt_bus_icb_cmd_size ),\n  .o_bus_icb_cmd_usr      ()     ,\n  \n  .o_bus_icb_rsp_valid    (splt_bus_icb_rsp_valid ) ,\n  .o_bus_icb_rsp_ready    (splt_bus_icb_rsp_ready ) ,\n  .o_bus_icb_rsp_err      (splt_bus_icb_rsp_err)    ,\n  .o_bus_icb_rsp_excl_ok  (splt_bus_icb_rsp_excl_ok),\n  .o_bus_icb_rsp_rdata    (splt_bus_icb_rsp_rdata ) ,\n  .o_bus_icb_rsp_usr      ({SPLT_I_NUM{1'b0}}) ,\n                             \n  .clk                    (clk  )                     ,\n  .rst_n                  (rst_n)\n  );\n\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The Bus Fab module for 1-to-8 bus\n//\n// ====================================================================\n\n\nmodule sirv_icb1to8_bus # (\n  parameter ICB_FIFO_DP = 0, // This is to optionally add the pipeline stage for ICB bus\n                             //   if the depth is 0, then means pass through, not add pipeline\n                             //   if the depth is 2, then means added one ping-pong buffer stage\n  parameter ICB_FIFO_CUT_READY = 1, // This is to cut the back-pressure signal if you set as 1\n\n  parameter AW = 32,\n  parameter DW = 32,\n  parameter SPLT_FIFO_OUTS_NUM    = 1,\n  parameter SPLT_FIFO_CUT_READY   = 1,\n\n  parameter O0_BASE_ADDR       = 32'h0000_1000,       \n  parameter O0_BASE_REGION_LSB = 12,\n\n  parameter O1_BASE_ADDR       = 32'h0000_1000,       \n  parameter O1_BASE_REGION_LSB = 12,\n\n  parameter O2_BASE_ADDR       = 32'h0000_1000,       \n  parameter O2_BASE_REGION_LSB = 12,\n\n  parameter O3_BASE_ADDR       = 32'h0000_1000,       \n  parameter O3_BASE_REGION_LSB = 12,\n\n  parameter O4_BASE_ADDR       = 32'h0000_1000,       \n  parameter O4_BASE_REGION_LSB = 12,\n\n  parameter O5_BASE_ADDR       = 32'h0000_1000,       \n  parameter O5_BASE_REGION_LSB = 12,\n\n  parameter O6_BASE_ADDR       = 32'h0000_1000,       \n  parameter O6_BASE_REGION_LSB = 12,\n\n  parameter O7_BASE_ADDR       = 32'h0000_1000,       \n  parameter O7_BASE_REGION_LSB = 12\n)(\n\n  input                          o0_icb_enable,\n  input                          o1_icb_enable,\n  input                          o2_icb_enable,\n  input                          o3_icb_enable,\n  input                          o4_icb_enable,\n  input                          o5_icb_enable,\n  input                          o6_icb_enable,\n  input                          o7_icb_enable,\n\n  input                          i_icb_cmd_valid,\n  output                         i_icb_cmd_ready,\n  input  [             AW-1:0]   i_icb_cmd_addr, \n  input                          i_icb_cmd_read, \n  input  [2-1:0]                 i_icb_cmd_burst,\n  input  [2-1:0]                 i_icb_cmd_beat,\n  input  [        DW-1:0]        i_icb_cmd_wdata,\n  input  [        DW/8-1:0]      i_icb_cmd_wmask,\n  input                          i_icb_cmd_lock,\n  input                          i_icb_cmd_excl,\n  input  [1:0]                   i_icb_cmd_size,\n  \n  output                         i_icb_rsp_valid,\n  input                          i_icb_rsp_ready,\n  output                         i_icb_rsp_err  ,\n  output                         i_icb_rsp_excl_ok,\n  output [        DW-1:0]        i_icb_rsp_rdata,\n\n  output                         o0_icb_cmd_valid,\n  input                          o0_icb_cmd_ready,\n  output [             AW-1:0]   o0_icb_cmd_addr, \n  output                         o0_icb_cmd_read, \n  output [2-1:0]                 o0_icb_cmd_burst,\n  output [2-1:0]                 o0_icb_cmd_beat,\n  output [        DW-1:0]        o0_icb_cmd_wdata,\n  output [        DW/8-1:0]      o0_icb_cmd_wmask,\n  output                         o0_icb_cmd_lock,\n  output                         o0_icb_cmd_excl,\n  output [1:0]                   o0_icb_cmd_size,\n  \n  input                          o0_icb_rsp_valid,\n  output                         o0_icb_rsp_ready,\n  input                          o0_icb_rsp_err  ,\n  input                          o0_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o0_icb_rsp_rdata,\n\n  output                         o1_icb_cmd_valid,\n  input                          o1_icb_cmd_ready,\n  output [             AW-1:0]   o1_icb_cmd_addr, \n  output                         o1_icb_cmd_read, \n  output [2-1:0]                 o1_icb_cmd_burst,\n  output [2-1:0]                 o1_icb_cmd_beat,\n  output [        DW-1:0]        o1_icb_cmd_wdata,\n  output [        DW/8-1:0]      o1_icb_cmd_wmask,\n  output                         o1_icb_cmd_lock,\n  output                         o1_icb_cmd_excl,\n  output [1:0]                   o1_icb_cmd_size,\n  \n  input                          o1_icb_rsp_valid,\n  output                         o1_icb_rsp_ready,\n  input                          o1_icb_rsp_err  ,\n  input                          o1_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o1_icb_rsp_rdata,\n\n  output                         o2_icb_cmd_valid,\n  input                          o2_icb_cmd_ready,\n  output [             AW-1:0]   o2_icb_cmd_addr, \n  output                         o2_icb_cmd_read, \n  output [2-1:0]                 o2_icb_cmd_burst,\n  output [2-1:0]                 o2_icb_cmd_beat,\n  output [        DW-1:0]        o2_icb_cmd_wdata,\n  output [        DW/8-1:0]      o2_icb_cmd_wmask,\n  output                         o2_icb_cmd_lock,\n  output                         o2_icb_cmd_excl,\n  output [1:0]                   o2_icb_cmd_size,\n  \n  input                          o2_icb_rsp_valid,\n  output                         o2_icb_rsp_ready,\n  input                          o2_icb_rsp_err  ,\n  input                          o2_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o2_icb_rsp_rdata,\n\n  output                         o3_icb_cmd_valid,\n  input                          o3_icb_cmd_ready,\n  output [             AW-1:0]   o3_icb_cmd_addr, \n  output                         o3_icb_cmd_read, \n  output [2-1:0]                 o3_icb_cmd_burst,\n  output [2-1:0]                 o3_icb_cmd_beat,\n  output [        DW-1:0]        o3_icb_cmd_wdata,\n  output [        DW/8-1:0]      o3_icb_cmd_wmask,\n  output                         o3_icb_cmd_lock,\n  output                         o3_icb_cmd_excl,\n  output [1:0]                   o3_icb_cmd_size,\n  \n  input                          o3_icb_rsp_valid,\n  output                         o3_icb_rsp_ready,\n  input                          o3_icb_rsp_err  ,\n  input                          o3_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o3_icb_rsp_rdata,\n\n  output                         o4_icb_cmd_valid,\n  input                          o4_icb_cmd_ready,\n  output [             AW-1:0]   o4_icb_cmd_addr, \n  output                         o4_icb_cmd_read, \n  output [2-1:0]                 o4_icb_cmd_burst,\n  output [2-1:0]                 o4_icb_cmd_beat,\n  output [        DW-1:0]        o4_icb_cmd_wdata,\n  output [        DW/8-1:0]      o4_icb_cmd_wmask,\n  output                         o4_icb_cmd_lock,\n  output                         o4_icb_cmd_excl,\n  output [1:0]                   o4_icb_cmd_size,\n  \n  input                          o4_icb_rsp_valid,\n  output                         o4_icb_rsp_ready,\n  input                          o4_icb_rsp_err  ,\n  input                          o4_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o4_icb_rsp_rdata,\n\n  output                         o5_icb_cmd_valid,\n  input                          o5_icb_cmd_ready,\n  output [             AW-1:0]   o5_icb_cmd_addr, \n  output                         o5_icb_cmd_read, \n  output [2-1:0]                 o5_icb_cmd_burst,\n  output [2-1:0]                 o5_icb_cmd_beat,\n  output [        DW-1:0]        o5_icb_cmd_wdata,\n  output [        DW/8-1:0]      o5_icb_cmd_wmask,\n  output                         o5_icb_cmd_lock,\n  output                         o5_icb_cmd_excl,\n  output [1:0]                   o5_icb_cmd_size,\n  \n  input                          o5_icb_rsp_valid,\n  output                         o5_icb_rsp_ready,\n  input                          o5_icb_rsp_err  ,\n  input                          o5_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o5_icb_rsp_rdata,\n\n  output                         o6_icb_cmd_valid,\n  input                          o6_icb_cmd_ready,\n  output [             AW-1:0]   o6_icb_cmd_addr, \n  output                         o6_icb_cmd_read, \n  output [2-1:0]                 o6_icb_cmd_burst,\n  output [2-1:0]                 o6_icb_cmd_beat,\n  output [        DW-1:0]        o6_icb_cmd_wdata,\n  output [        DW/8-1:0]      o6_icb_cmd_wmask,\n  output                         o6_icb_cmd_lock,\n  output                         o6_icb_cmd_excl,\n  output [1:0]                   o6_icb_cmd_size,\n  \n  input                          o6_icb_rsp_valid,\n  output                         o6_icb_rsp_ready,\n  input                          o6_icb_rsp_err  ,\n  input                          o6_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o6_icb_rsp_rdata,\n\n  output                         o7_icb_cmd_valid,\n  input                          o7_icb_cmd_ready,\n  output [             AW-1:0]   o7_icb_cmd_addr, \n  output                         o7_icb_cmd_read, \n  output [2-1:0]                 o7_icb_cmd_burst,\n  output [2-1:0]                 o7_icb_cmd_beat,\n  output [        DW-1:0]        o7_icb_cmd_wdata,\n  output [        DW/8-1:0]      o7_icb_cmd_wmask,\n  output                         o7_icb_cmd_lock,\n  output                         o7_icb_cmd_excl,\n  output [1:0]                   o7_icb_cmd_size,\n  \n  input                          o7_icb_rsp_valid,\n  output                         o7_icb_rsp_ready,\n  input                          o7_icb_rsp_err  ,\n  input                          o7_icb_rsp_excl_ok,\n  input  [        DW-1:0]        o7_icb_rsp_rdata,\n\n  input  clk,\n  input  rst_n\n  );\n\n  wire                         buf_icb_cmd_valid;\n  wire                         buf_icb_cmd_ready;\n  wire [             AW-1:0]   buf_icb_cmd_addr; \n  wire                         buf_icb_cmd_read; \n  wire [2-1:0]                 buf_icb_cmd_burst;\n  wire [2-1:0]                 buf_icb_cmd_beat;\n  wire [        DW-1:0]        buf_icb_cmd_wdata;\n  wire [        DW/8-1:0]      buf_icb_cmd_wmask;\n  wire                         buf_icb_cmd_lock;\n  wire                         buf_icb_cmd_excl;\n  wire [1:0]                   buf_icb_cmd_size;\n  \n  wire                         buf_icb_rsp_valid;\n  wire                         buf_icb_rsp_ready;\n  wire                         buf_icb_rsp_err  ;\n  wire                         buf_icb_rsp_excl_ok;\n  wire [        DW-1:0]        buf_icb_rsp_rdata;\n\n  sirv_gnrl_icb_buffer # (\n    .OUTS_CNT_W   (SPLT_FIFO_OUTS_NUM),\n    .AW    (AW),\n    .DW    (DW), \n    .CMD_DP(ICB_FIFO_DP),\n    .RSP_DP(ICB_FIFO_DP),\n    .CMD_CUT_READY (ICB_FIFO_CUT_READY),\n    .RSP_CUT_READY (ICB_FIFO_CUT_READY),\n    .USR_W (1)\n  )u_sirv_gnrl_icb_buffer(\n    .icb_buffer_active      (),\n    .i_icb_cmd_valid        (i_icb_cmd_valid),\n    .i_icb_cmd_ready        (i_icb_cmd_ready),\n    .i_icb_cmd_read         (i_icb_cmd_read ),\n    .i_icb_cmd_addr         (i_icb_cmd_addr ),\n    .i_icb_cmd_wdata        (i_icb_cmd_wdata),\n    .i_icb_cmd_wmask        (i_icb_cmd_wmask),\n    .i_icb_cmd_lock         (i_icb_cmd_lock ),\n    .i_icb_cmd_excl         (i_icb_cmd_excl ),\n    .i_icb_cmd_size         (i_icb_cmd_size ),\n    .i_icb_cmd_burst        (i_icb_cmd_burst),\n    .i_icb_cmd_beat         (i_icb_cmd_beat ),\n    .i_icb_cmd_usr          (1'b0  ),\n                     \n    .i_icb_rsp_valid        (i_icb_rsp_valid),\n    .i_icb_rsp_ready        (i_icb_rsp_ready),\n    .i_icb_rsp_err          (i_icb_rsp_err  ),\n    .i_icb_rsp_excl_ok      (i_icb_rsp_excl_ok),\n    .i_icb_rsp_rdata        (i_icb_rsp_rdata),\n    .i_icb_rsp_usr          (),\n    \n    .o_icb_cmd_valid        (buf_icb_cmd_valid),\n    .o_icb_cmd_ready        (buf_icb_cmd_ready),\n    .o_icb_cmd_read         (buf_icb_cmd_read ),\n    .o_icb_cmd_addr         (buf_icb_cmd_addr ),\n    .o_icb_cmd_wdata        (buf_icb_cmd_wdata),\n    .o_icb_cmd_wmask        (buf_icb_cmd_wmask),\n    .o_icb_cmd_lock         (buf_icb_cmd_lock ),\n    .o_icb_cmd_excl         (buf_icb_cmd_excl ),\n    .o_icb_cmd_size         (buf_icb_cmd_size ),\n    .o_icb_cmd_burst        (buf_icb_cmd_burst),\n    .o_icb_cmd_beat         (buf_icb_cmd_beat ),\n    .o_icb_cmd_usr          (),\n                         \n    .o_icb_rsp_valid        (buf_icb_rsp_valid),\n    .o_icb_rsp_ready        (buf_icb_rsp_ready),\n    .o_icb_rsp_err          (buf_icb_rsp_err  ),\n    .o_icb_rsp_excl_ok      (buf_icb_rsp_excl_ok),\n    .o_icb_rsp_rdata        (buf_icb_rsp_rdata),\n    .o_icb_rsp_usr          (1'b0  ),\n\n    .clk                    (clk  ),\n    .rst_n                  (rst_n)\n  );\n\n\n\n  localparam BASE_REGION_MSB = (AW-1);\n  localparam SPLT_I_NUM = 9;\n\n  wire                         deft_icb_cmd_valid;\n  wire                         deft_icb_cmd_ready;\n  wire [             AW-1:0]   deft_icb_cmd_addr; \n  wire                         deft_icb_cmd_read; \n  wire [2-1:0]                 deft_icb_cmd_burst;\n  wire [2-1:0]                 deft_icb_cmd_beat;\n  wire [        DW-1:0]        deft_icb_cmd_wdata;\n  wire [        DW/8-1:0]      deft_icb_cmd_wmask;\n  wire                         deft_icb_cmd_lock;\n  wire                         deft_icb_cmd_excl;\n  wire [1:0]                   deft_icb_cmd_size;\n  \n  wire                         deft_icb_rsp_valid;\n  wire                         deft_icb_rsp_ready;\n  wire                         deft_icb_rsp_err  ;\n  wire                         deft_icb_rsp_excl_ok;\n  wire [        DW-1:0]        deft_icb_rsp_rdata;\n\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_valid;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_ready;\n  wire [SPLT_I_NUM*             AW-1:0] splt_bus_icb_cmd_addr;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_read;\n  wire [SPLT_I_NUM*2-1:0] splt_bus_icb_cmd_burst;\n  wire [SPLT_I_NUM*2-1:0] splt_bus_icb_cmd_beat;\n  wire [SPLT_I_NUM*        DW-1:0] splt_bus_icb_cmd_wdata;\n  wire [SPLT_I_NUM*        DW/8-1:0] splt_bus_icb_cmd_wmask;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_lock;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_cmd_excl;\n  wire [SPLT_I_NUM*2-1:0] splt_bus_icb_cmd_size;\n\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_valid;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_ready;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_err;\n  wire [SPLT_I_NUM*1-1:0] splt_bus_icb_rsp_excl_ok;\n  wire [SPLT_I_NUM*        DW-1:0] splt_bus_icb_rsp_rdata;\n\n  //CMD Channel\n  assign {\n                             o0_icb_cmd_valid\n                           , o1_icb_cmd_valid\n                           , o2_icb_cmd_valid\n                           , o3_icb_cmd_valid\n                           , o4_icb_cmd_valid\n                           , o5_icb_cmd_valid\n                           , o6_icb_cmd_valid\n                           , o7_icb_cmd_valid\n                           , deft_icb_cmd_valid\n                           } = splt_bus_icb_cmd_valid;\n\n  assign {\n                             o0_icb_cmd_addr\n                           , o1_icb_cmd_addr\n                           , o2_icb_cmd_addr\n                           , o3_icb_cmd_addr\n                           , o4_icb_cmd_addr\n                           , o5_icb_cmd_addr\n                           , o6_icb_cmd_addr\n                           , o7_icb_cmd_addr\n                           , deft_icb_cmd_addr\n                           } = splt_bus_icb_cmd_addr;\n\n  assign {\n                             o0_icb_cmd_read\n                           , o1_icb_cmd_read\n                           , o2_icb_cmd_read\n                           , o3_icb_cmd_read\n                           , o4_icb_cmd_read\n                           , o5_icb_cmd_read\n                           , o6_icb_cmd_read\n                           , o7_icb_cmd_read\n                           , deft_icb_cmd_read\n                           } = splt_bus_icb_cmd_read;\n\n  assign {\n                             o0_icb_cmd_burst\n                           , o1_icb_cmd_burst\n                           , o2_icb_cmd_burst\n                           , o3_icb_cmd_burst\n                           , o4_icb_cmd_burst\n                           , o5_icb_cmd_burst\n                           , o6_icb_cmd_burst\n                           , o7_icb_cmd_burst\n                           , deft_icb_cmd_burst\n                           } = splt_bus_icb_cmd_burst;\n\n  assign {\n                             o0_icb_cmd_beat\n                           , o1_icb_cmd_beat\n                           , o2_icb_cmd_beat\n                           , o3_icb_cmd_beat\n                           , o4_icb_cmd_beat\n                           , o5_icb_cmd_beat\n                           , o6_icb_cmd_beat\n                           , o7_icb_cmd_beat\n                           , deft_icb_cmd_beat\n                           } = splt_bus_icb_cmd_beat;\n\n  assign {\n                             o0_icb_cmd_wdata\n                           , o1_icb_cmd_wdata\n                           , o2_icb_cmd_wdata\n                           , o3_icb_cmd_wdata\n                           , o4_icb_cmd_wdata\n                           , o5_icb_cmd_wdata\n                           , o6_icb_cmd_wdata\n                           , o7_icb_cmd_wdata\n                           , deft_icb_cmd_wdata\n                           } = splt_bus_icb_cmd_wdata;\n\n  assign {\n                             o0_icb_cmd_wmask\n                           , o1_icb_cmd_wmask\n                           , o2_icb_cmd_wmask\n                           , o3_icb_cmd_wmask\n                           , o4_icb_cmd_wmask\n                           , o5_icb_cmd_wmask\n                           , o6_icb_cmd_wmask\n                           , o7_icb_cmd_wmask\n                           , deft_icb_cmd_wmask\n                           } = splt_bus_icb_cmd_wmask;\n                         \n  assign {\n                             o0_icb_cmd_lock\n                           , o1_icb_cmd_lock\n                           , o2_icb_cmd_lock\n                           , o3_icb_cmd_lock\n                           , o4_icb_cmd_lock\n                           , o5_icb_cmd_lock\n                           , o6_icb_cmd_lock\n                           , o7_icb_cmd_lock\n                           , deft_icb_cmd_lock\n                           } = splt_bus_icb_cmd_lock;\n\n  assign {\n                             o0_icb_cmd_excl\n                           , o1_icb_cmd_excl\n                           , o2_icb_cmd_excl\n                           , o3_icb_cmd_excl\n                           , o4_icb_cmd_excl\n                           , o5_icb_cmd_excl\n                           , o6_icb_cmd_excl\n                           , o7_icb_cmd_excl\n                           , deft_icb_cmd_excl\n                           } = splt_bus_icb_cmd_excl;\n                           \n  assign {\n                             o0_icb_cmd_size\n                           , o1_icb_cmd_size\n                           , o2_icb_cmd_size\n                           , o3_icb_cmd_size\n                           , o4_icb_cmd_size\n                           , o5_icb_cmd_size\n                           , o6_icb_cmd_size\n                           , o7_icb_cmd_size\n                    "}
{"text": "       , deft_icb_cmd_size\n                           } = splt_bus_icb_cmd_size;\n\n  assign splt_bus_icb_cmd_ready = {\n                             o0_icb_cmd_ready\n                           , o1_icb_cmd_ready\n                           , o2_icb_cmd_ready\n                           , o3_icb_cmd_ready\n                           , o4_icb_cmd_ready\n                           , o5_icb_cmd_ready\n                           , o6_icb_cmd_ready\n                           , o7_icb_cmd_ready\n                           , deft_icb_cmd_ready\n                           };\n\n  //RSP Channel\n  assign splt_bus_icb_rsp_valid = {\n                             o0_icb_rsp_valid\n                           , o1_icb_rsp_valid\n                           , o2_icb_rsp_valid\n                           , o3_icb_rsp_valid\n                           , o4_icb_rsp_valid\n                           , o5_icb_rsp_valid\n                           , o6_icb_rsp_valid\n                           , o7_icb_rsp_valid\n                           , deft_icb_rsp_valid\n                           };\n\n  assign splt_bus_icb_rsp_err = {\n                             o0_icb_rsp_err\n                           , o1_icb_rsp_err\n                           , o2_icb_rsp_err\n                           , o3_icb_rsp_err\n                           , o4_icb_rsp_err\n                           , o5_icb_rsp_err\n                           , o6_icb_rsp_err\n                           , o7_icb_rsp_err\n                           , deft_icb_rsp_err\n                           };\n\n  assign splt_bus_icb_rsp_excl_ok = {\n                             o0_icb_rsp_excl_ok\n                           , o1_icb_rsp_excl_ok\n                           , o2_icb_rsp_excl_ok\n                           , o3_icb_rsp_excl_ok\n                           , o4_icb_rsp_excl_ok\n                           , o5_icb_rsp_excl_ok\n                           , o6_icb_rsp_excl_ok\n                           , o7_icb_rsp_excl_ok\n                           , deft_icb_rsp_excl_ok\n                           };\n\n  assign splt_bus_icb_rsp_rdata = {\n                             o0_icb_rsp_rdata\n                           , o1_icb_rsp_rdata\n                           , o2_icb_rsp_rdata\n                           , o3_icb_rsp_rdata\n                           , o4_icb_rsp_rdata\n                           , o5_icb_rsp_rdata\n                           , o6_icb_rsp_rdata\n                           , o7_icb_rsp_rdata\n                           , deft_icb_rsp_rdata\n                           };\n\n  assign {\n                             o0_icb_rsp_ready\n                           , o1_icb_rsp_ready\n                           , o2_icb_rsp_ready\n                           , o3_icb_rsp_ready\n                           , o4_icb_rsp_ready\n                           , o5_icb_rsp_ready\n                           , o6_icb_rsp_ready\n                           , o7_icb_rsp_ready\n                           , deft_icb_rsp_ready\n                           } = splt_bus_icb_rsp_ready;\n\n  wire icb_cmd_o0 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O0_BASE_REGION_LSB] \n                     ==  O0_BASE_ADDR [BASE_REGION_MSB:O0_BASE_REGION_LSB] \n                    ) & o0_icb_enable;\n\n  wire icb_cmd_o1 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O1_BASE_REGION_LSB]\n                     ==  O1_BASE_ADDR [BASE_REGION_MSB:O1_BASE_REGION_LSB] \n                    ) & o1_icb_enable; \n                     \n  wire icb_cmd_o2 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O2_BASE_REGION_LSB]\n                     ==  O2_BASE_ADDR [BASE_REGION_MSB:O2_BASE_REGION_LSB] \n                    ) & o2_icb_enable;\n\n  wire icb_cmd_o3 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O3_BASE_REGION_LSB]\n                     ==  O3_BASE_ADDR [BASE_REGION_MSB:O3_BASE_REGION_LSB] \n                    ) & o3_icb_enable;\n\n  wire icb_cmd_o4 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O4_BASE_REGION_LSB]\n                     ==  O4_BASE_ADDR [BASE_REGION_MSB:O4_BASE_REGION_LSB] \n                    ) & o4_icb_enable;\n\n  wire icb_cmd_o5 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O5_BASE_REGION_LSB]\n                     ==  O5_BASE_ADDR [BASE_REGION_MSB:O5_BASE_REGION_LSB] \n                    ) & o5_icb_enable;\n\n  wire icb_cmd_o6 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O6_BASE_REGION_LSB]\n                     ==  O6_BASE_ADDR [BASE_REGION_MSB:O6_BASE_REGION_LSB] \n                    ) & o6_icb_enable;\n\n  wire icb_cmd_o7 = buf_icb_cmd_valid & (buf_icb_cmd_addr     [BASE_REGION_MSB:O7_BASE_REGION_LSB]\n                     ==  O7_BASE_ADDR [BASE_REGION_MSB:O7_BASE_REGION_LSB] \n                    ) & o7_icb_enable;\n\n  wire icb_cmd_deft = (~icb_cmd_o0)\n                    & (~icb_cmd_o1)\n                    & (~icb_cmd_o2)\n                    & (~icb_cmd_o3)\n                    & (~icb_cmd_o4)\n                    & (~icb_cmd_o5)\n                    & (~icb_cmd_o6)\n                    & (~icb_cmd_o7)\n                    ;\n\n  wire [SPLT_I_NUM-1:0] buf_icb_splt_indic = \n      {\n                      icb_cmd_o0\n                    , icb_cmd_o1\n                    , icb_cmd_o2\n                    , icb_cmd_o3\n                    , icb_cmd_o4\n                    , icb_cmd_o5\n                    , icb_cmd_o6\n                    , icb_cmd_o7\n                    , icb_cmd_deft\n      };\n\n  sirv_gnrl_icb_splt # (\n  .ALLOW_DIFF (0),// Dont allow different branches oustanding\n  .ALLOW_0CYCL_RSP (1),// Allow the 0 cycle response because in BIU the splt\n                       //  is after the buffer, and will directly talk to the external\n                       //  bus, where maybe the ROM is 0 cycle responsed.\n  .FIFO_OUTS_NUM   (SPLT_FIFO_OUTS_NUM ),\n  .FIFO_CUT_READY  (SPLT_FIFO_CUT_READY),\n  .SPLT_NUM   (SPLT_I_NUM),\n  .SPLT_PTR_W (SPLT_I_NUM),\n  .SPLT_PTR_1HOT (1),\n  .VLD_MSK_PAYLOAD(1),\n  .USR_W      (1),\n  .AW         (AW),\n  .DW         (DW) \n  ) u_i_icb_splt(\n  .i_icb_splt_indic       (buf_icb_splt_indic),        \n\n  .i_icb_cmd_valid        (buf_icb_cmd_valid )     ,\n  .i_icb_cmd_ready        (buf_icb_cmd_ready )     ,\n  .i_icb_cmd_read         (buf_icb_cmd_read )      ,\n  .i_icb_cmd_addr         (buf_icb_cmd_addr )      ,\n  .i_icb_cmd_wdata        (buf_icb_cmd_wdata )     ,\n  .i_icb_cmd_wmask        (buf_icb_cmd_wmask)      ,\n  .i_icb_cmd_burst        (buf_icb_cmd_burst)     ,\n  .i_icb_cmd_beat         (buf_icb_cmd_beat )     ,\n  .i_icb_cmd_excl         (buf_icb_cmd_excl )     ,\n  .i_icb_cmd_lock         (buf_icb_cmd_lock )     ,\n  .i_icb_cmd_size         (buf_icb_cmd_size )     ,\n  .i_icb_cmd_usr          (1'b0)     ,\n \n  .i_icb_rsp_valid        (buf_icb_rsp_valid )     ,\n  .i_icb_rsp_ready        (buf_icb_rsp_ready )     ,\n  .i_icb_rsp_err          (buf_icb_rsp_err)        ,\n  .i_icb_rsp_excl_ok      (buf_icb_rsp_excl_ok)    ,\n  .i_icb_rsp_rdata        (buf_icb_rsp_rdata )     ,\n  .i_icb_rsp_usr          ( )     ,\n                               \n  .o_bus_icb_cmd_ready    (splt_bus_icb_cmd_ready ) ,\n  .o_bus_icb_cmd_valid    (splt_bus_icb_cmd_valid ) ,\n  .o_bus_icb_cmd_read     (splt_bus_icb_cmd_read )  ,\n  .o_bus_icb_cmd_addr     (splt_bus_icb_cmd_addr )  ,\n  .o_bus_icb_cmd_wdata    (splt_bus_icb_cmd_wdata ) ,\n  .o_bus_icb_cmd_wmask    (splt_bus_icb_cmd_wmask)  ,\n  .o_bus_icb_cmd_burst    (splt_bus_icb_cmd_burst),\n  .o_bus_icb_cmd_beat     (splt_bus_icb_cmd_beat ),\n  .o_bus_icb_cmd_excl     (splt_bus_icb_cmd_excl ),\n  .o_bus_icb_cmd_lock     (splt_bus_icb_cmd_lock ),\n  .o_bus_icb_cmd_size     (splt_bus_icb_cmd_size ),\n  .o_bus_icb_cmd_usr      ()     ,\n  \n  .o_bus_icb_rsp_valid    (splt_bus_icb_rsp_valid ) ,\n  .o_bus_icb_rsp_ready    (splt_bus_icb_rsp_ready ) ,\n  .o_bus_icb_rsp_err      (splt_bus_icb_rsp_err)    ,\n  .o_bus_icb_rsp_excl_ok  (splt_bus_icb_rsp_excl_ok),\n  .o_bus_icb_rsp_rdata    (splt_bus_icb_rsp_rdata ) ,\n  .o_bus_icb_rsp_usr      ({SPLT_I_NUM{1'b0}}) ,\n                             \n  .clk                    (clk  )                     ,\n  .rst_n                  (rst_n)\n  );\n\n  ///////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////\n  // Implement the default slave\n  assign  deft_icb_cmd_ready = deft_icb_rsp_ready;\n  \n     // 0 Cycle response\n  assign  deft_icb_rsp_valid = deft_icb_cmd_valid;\n  assign  deft_icb_rsp_err   = 1'b1;\n  assign  deft_icb_rsp_excl_ok = 1'b0;\n  assign  deft_icb_rsp_rdata   = {DW{1'b0}};\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_jtaggpioport(\n  input   clock,\n  input   reset,\n  output  io_jtag_TCK,\n  output  io_jtag_TMS,\n  output  io_jtag_TDI,\n  input   io_jtag_TDO,\n  output  io_jtag_TRST,\n  input   io_jtag_DRV_TDO,\n  input   io_pins_TCK_i_ival,\n  output  io_pins_TCK_o_oval,\n  output  io_pins_TCK_o_oe,\n  output  io_pins_TCK_o_ie,\n  output  io_pins_TCK_o_pue,\n  output  io_pins_TCK_o_ds,\n  input   io_pins_TMS_i_ival,\n  output  io_pins_TMS_o_oval,\n  output  io_pins_TMS_o_oe,\n  output  io_pins_TMS_o_ie,\n  output  io_pins_TMS_o_pue,\n  output  io_pins_TMS_o_ds,\n  input   io_pins_TDI_i_ival,\n  output  io_pins_TDI_o_oval,\n  output  io_pins_TDI_o_oe,\n  output  io_pins_TDI_o_ie,\n  output  io_pins_TDI_o_pue,\n  output  io_pins_TDI_o_ds,\n  input   io_pins_TDO_i_ival,\n  output  io_pins_TDO_o_oval,\n  output  io_pins_TDO_o_oe,\n  output  io_pins_TDO_o_ie,\n  output  io_pins_TDO_o_pue,\n  output  io_pins_TDO_o_ds,\n  input   io_pins_TRST_n_i_ival,\n  output  io_pins_TRST_n_o_oval,\n  output  io_pins_TRST_n_o_oe,\n  output  io_pins_TRST_n_o_ie,\n  output  io_pins_TRST_n_o_pue,\n  output  io_pins_TRST_n_o_ds\n);\n  wire  T_101;\n  wire  T_117;\n  assign io_jtag_TCK = T_101;\n  assign io_jtag_TMS = io_pins_TMS_i_ival;\n  assign io_jtag_TDI = io_pins_TDI_i_ival;\n  assign io_jtag_TRST = T_117;\n  assign io_pins_TCK_o_oval = 1'h0;\n  assign io_pins_TCK_o_oe = 1'h0;\n  assign io_pins_TCK_o_ie = 1'h1;\n  assign io_pins_TCK_o_pue = 1'h1;\n  assign io_pins_TCK_o_ds = 1'h0;\n  assign io_pins_TMS_o_oval = 1'h0;\n  assign io_pins_TMS_o_oe = 1'h0;\n  assign io_pins_TMS_o_ie = 1'h1;\n  assign io_pins_TMS_o_pue = 1'h1;\n  assign io_pins_TMS_o_ds = 1'h0;\n  assign io_pins_TDI_o_oval = 1'h0;\n  assign io_pins_TDI_o_oe = 1'h0;\n  assign io_pins_TDI_o_ie = 1'h1;\n  assign io_pins_TDI_o_pue = 1'h1;\n  assign io_pins_TDI_o_ds = 1'h0;\n  assign io_pins_TDO_o_oval = io_jtag_TDO;\n  assign io_pins_TDO_o_oe = io_jtag_DRV_TDO;\n  assign io_pins_TDO_o_ie = 1'h0;\n  assign io_pins_TDO_o_pue = 1'h0;\n  assign io_pins_TDO_o_ds = 1'h0;\n  assign io_pins_TRST_n_o_oval = 1'h0;\n  assign io_pins_TRST_n_o_oe = 1'h0;\n  assign io_pins_TRST_n_o_ie = 1'h1;\n  assign io_pins_TRST_n_o_pue = 1'h1;\n  assign io_pins_TRST_n_o_ds = 1'h0;\n  assign T_101 = $unsigned(io_pins_TCK_i_ival);\n  assign T_117 = ~ io_pins_TRST_n_i_ival;\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\n\nmodule sirv_jtag_dtm (\n                   \n                                 //JTAG Interface\n                                 \n                                 jtag_TDI,\n                                 jtag_TDO,\n                                 jtag_TCK,\n                                 jtag_TMS,\n                                 jtag_TRST,\n                             \n                                 jtag_DRV_TDO,\n\n                                 dtm_req_valid,\n                                 dtm_req_ready,\n                                 dtm_req_bits,\n\n                                 dtm_resp_valid,\n                                 dtm_resp_ready,\n                                 dtm_resp_bits\n                                                                  \n                                 );\n   //--------------------------------------------------------\n   // Parameter Declarations\n   \n   parameter ASYNC_FF_LEVELS  = 2;\n\n   parameter DEBUG_DATA_BITS  = 34;\n   parameter DEBUG_ADDR_BITS = 5; // Spec allows values are 5-7 \n   parameter DEBUG_OP_BITS = 2; // OP and RESP are the same size.\n\n   parameter JTAG_VERSION  = 4'h1;\n\n   // Number of cycles which must remain in IDLE\n   // The software should handle even if the\n   // answer is actually higher than this, or\n   // the software may choose to ignore it entirely\n   // and just check for busy.\n   parameter DBUS_IDLE_CYCLES = 3'h5;\n\n   localparam IR_BITS = 5;\n\n   localparam DEBUG_VERSION = 0;\n   \n   // JTAG State Machine\n   localparam TEST_LOGIC_RESET  = 4'h0;\n   localparam RUN_TEST_IDLE     = 4'h1;\n   localparam SELECT_DR         = 4'h2;\n   localparam CAPTURE_DR        = 4'h3;\n   localparam SHIFT_DR          = 4'h4;\n   localparam EXIT1_DR          = 4'h5;\n   localparam PAUSE_DR          = 4'h6;\n   localparam EXIT2_DR          = 4'h7;\n   localparam UPDATE_DR         = 4'h8;\n   localparam SELECT_IR         = 4'h9;\n   localparam CAPTURE_IR        = 4'hA;\n   localparam SHIFT_IR          = 4'hB;\n   localparam EXIT1_IR          = 4'hC;\n   localparam PAUSE_IR          = 4'hD;\n   localparam EXIT2_IR          = 4'hE;\n   localparam UPDATE_IR         = 4'hF;\n\n   //RISCV DTM Registers (see RISC-V Debug Specification)\n   // All others are treated as 'BYPASS'.\n   localparam REG_BYPASS       = 5'b11111;\n   localparam REG_IDCODE       = 5'b00001;\n   localparam REG_DEBUG_ACCESS = 5'b10001;\n   localparam REG_DTM_INFO     = 5'b10000;\n\n   localparam DBUS_REG_BITS = DEBUG_OP_BITS + DEBUG_ADDR_BITS + DEBUG_DATA_BITS;\n   localparam DBUS_REQ_BITS = DEBUG_OP_BITS + DEBUG_ADDR_BITS + DEBUG_DATA_BITS;\n   localparam DBUS_RESP_BITS = DEBUG_OP_BITS + DEBUG_DATA_BITS;\n   \n      \n   localparam SHIFT_REG_BITS = DBUS_REG_BITS;\n\n   //--------------------------------------------------------\n   // I/O Declarations\n   \n   //JTAG SIDE\n   input                                jtag_TDI;\n   output reg                           jtag_TDO;\n   input                                jtag_TCK;\n   input                                jtag_TMS;\n   input                                jtag_TRST;\n\n   // To allow tri-state outside of this block.\n   output reg                           jtag_DRV_TDO;\n\n   // RISC-V Core Side\n\n   output                               dtm_req_valid;\n   input                                dtm_req_ready;\n   output [DBUS_REQ_BITS - 1 :0]        dtm_req_bits;\n\n   input                                dtm_resp_valid;\n   output                               dtm_resp_ready;\n   input [DBUS_RESP_BITS - 1 : 0]       dtm_resp_bits;\n   \n   wire                                 i_dtm_req_valid;\n   wire                                 i_dtm_req_ready;\n   wire [DBUS_REQ_BITS - 1 :0]          i_dtm_req_bits;\n\n   wire                                 i_dtm_resp_valid;\n   wire                                 i_dtm_resp_ready;\n   wire[DBUS_RESP_BITS - 1 : 0]         i_dtm_resp_bits;\n   //--------------------------------------------------------\n   // Reg and Wire Declarations \n   \n   reg [IR_BITS -1 : 0 ]                irReg;\n   \n   wire [31:0]                          idcode;\n   wire [31:0]                          dtminfo;\n   reg [DBUS_REG_BITS - 1 : 0]          dbusReg;\n   reg                                  dbusValidReg;\n   \n   reg [3:0]                            jtagStateReg;\n   \n   reg [SHIFT_REG_BITS -1 : 0]          shiftReg;\n\n   reg                                  doDbusWriteReg;\n   reg                                  doDbusReadReg;\n\n   reg                                  busyReg;\n   reg                                  stickyBusyReg;\n   reg                                  stickyNonzeroRespReg;\n      \n   reg                                  skipOpReg; // Skip op because we're busy.\n   reg                                  downgradeOpReg; // Downgrade op because prev. op failed.\n\n   wire                                 busy;\n   wire                                 nonzeroResp;\n\n   wire [SHIFT_REG_BITS -1 : 0]         busyResponse;\n   wire [SHIFT_REG_BITS -1 : 0]         nonbusyResponse;\n   \n   //--------------------------------------------------------\n   // Combo Logic\n\n   assign idcode  = {JTAG_VERSION, 16'he200 , 11'h536, 1'h1};\n\n   wire [3:0]                           debugAddrBits = DEBUG_ADDR_BITS[3:0];\n   wire [3:0]                           debugVersion = DEBUG_VERSION[3:0];\n\n   wire [1:0]                           dbusStatus;\n   wire [2:0]                           dbusIdleCycles;\n\n   wire                                 dbusReset;\n   \n   assign dbusIdleCycles = DBUS_IDLE_CYCLES;\n   assign dbusStatus = {stickyNonzeroRespReg, stickyNonzeroRespReg | stickyBusyReg};\n   assign dbusReset = shiftReg[16];\n\n   assign dtminfo = {15'b0,\n                     1'b0, // dbusreset goes here but is write-only\n                     3'b0, \n                     dbusIdleCycles, \n                     dbusStatus, \n                     debugAddrBits, \n                     debugVersion};\n   \n   //busy, dtm_resp* is only valid during CAPTURE_DR,\n   //      so these signals should only be used at that time.\n   // This assumes there is only one transaction in flight at a time.\n   assign busy = (busyReg & ~i_dtm_resp_valid) | stickyBusyReg;\n   // This is needed especially for the first request.\n   assign nonzeroResp = (i_dtm_resp_valid ? | {i_dtm_resp_bits[DEBUG_OP_BITS-1:0]} : 1'b0) | stickyNonzeroRespReg;\n   \n   // Interface to DM.\n   // Note that this means i_dtm_resp_bits must only be used during CAPTURE_DR.\n   assign i_dtm_resp_ready = (jtagStateReg == CAPTURE_DR) &&\n                           (irReg        == REG_DEBUG_ACCESS) &&\n                           i_dtm_resp_valid;\n      \n   assign i_dtm_req_valid = dbusValidReg;\n   assign i_dtm_req_bits  = dbusReg;\n   \n   assign busyResponse  = {{(DEBUG_ADDR_BITS +  DEBUG_DATA_BITS){1'b0}},\n                           {(DEBUG_OP_BITS){1'b1}}};                                    // Generalizing 'busy' to 'all-1'\n   \n   assign nonbusyResponse =  {dbusReg[(DEBUG_DATA_BITS + DEBUG_OP_BITS) +: DEBUG_ADDR_BITS] ,     // retain address bits from Req. \n                              i_dtm_resp_bits[DEBUG_OP_BITS +: DEBUG_DATA_BITS] ,                   // data\n                              i_dtm_resp_bits[0 +: DEBUG_OP_BITS]                                   // response\n                              };\n      \n   //--------------------------------------------------------\n   // Sequential Logic\n\n   // JTAG STATE MACHINE\n\n   always @(posedge jtag_TCK or posedge jtag_TRST) begin\n      if (jtag_TRST) begin\n         jtagStateReg <= TEST_LOGIC_RESET;\n      end else begin\n         case (jtagStateReg)\n           TEST_LOGIC_RESET  : jtagStateReg <= jtag_TMS ? TEST_LOGIC_RESET : RUN_TEST_IDLE;\n           RUN_TEST_IDLE     : jtagStateReg <= jtag_TMS ? SELECT_DR        : RUN_TEST_IDLE;\n           SELECT_DR         : jtagStateReg <= jtag_TMS ? SELECT_IR        : CAPTURE_DR;\n           CAPTURE_DR        : jtagStateReg <= jtag_TMS ? EXIT1_DR         : SHIFT_DR;\n           SHIFT_DR          : jtagStateReg <= jtag_TMS ? EXIT1_DR         : SHIFT_DR;\n           EXIT1_DR          : jtagStateReg <= jtag_TMS ? UPDATE_DR        : PAUSE_DR;\n           PAUSE_DR          : jtagStateReg <= jtag_TMS ? EXIT2_DR         : PAUSE_DR;\n           EXIT2_DR          : jtagStateReg <= jtag_TMS ? UPDATE_DR        : SHIFT_DR;\n           UPDATE_DR         : jtagStateReg <= jtag_TMS ? SELECT_DR        : RUN_TEST_IDLE;\n           SELECT_IR         : jtagStateReg <= jtag_TMS ? TEST_LOGIC_RESET : CAPTURE_IR;\n           CAPTURE_IR        : jtagStateReg <= jtag_TMS ? EXIT1_IR         : SHIFT_IR;\n           SHIFT_IR          : jtagStateReg <= jtag_TMS ? EXIT1_IR         : SHIFT_IR;\n           EXIT1_IR          : jtagStateReg <= jtag_TMS ? UPDATE_IR        : PAUSE_IR;\n           PAUSE_IR          : jtagStateReg <= jtag_TMS ? EXIT2_IR         : PAUSE_IR;\n           EXIT2_IR          : jtagStateReg <= jtag_TMS ? UPDATE_IR        : SHIFT_IR;\n           UPDATE_IR         : jtagStateReg <= jtag_TMS ? SELECT_DR        : RUN_TEST_IDLE; \n         endcase // case (jtagStateReg)\n      end // else: !if(jtag_TRST)\n   end // always @ (posedge jtag_TCK or posedge jtag_TRST)\n\n   // SHIFT REG \n   always @(posedge jtag_TCK) begin\n      case (jtagStateReg)\n        CAPTURE_IR : shiftReg <= {{(SHIFT_REG_BITS-1){1'b0}}, 1'b1}; //JTAG spec only says must end with 'b01. \n        SHIFT_IR   : shiftReg <= {{(SHIFT_REG_BITS-IR_BITS){1'b0}}, jtag_TDI, shiftReg[IR_BITS-1 : 1]};\n        CAPTURE_DR : case (irReg) \n                       REG_BYPASS       : shiftReg <= {(SHIFT_REG_BITS){1'b0}};\n                       REG_IDCODE       : shiftReg <= {{(SHIFT_REG_BITS-32){1'b0}}, idcode};\n                       REG_DTM_INFO     : shiftReg <= {{(SHIFT_REG_BITS-32){1'b0}}, dtminfo};\n                       REG_DEBUG_ACCESS : shiftReg <= busy ? busyResponse : nonbusyResponse;\n                       default : //BYPASS\n                         shiftReg <= {(SHIFT_REG_BITS){1'b0}};\n                     endcase\n        SHIFT_DR   : case (irReg) \n                       REG_BYPASS   : shiftReg <= {{(SHIFT_REG_BITS- 1){1'b0}}, jtag_TDI};\n                       REG_IDCODE   : shiftReg <= {{(SHIFT_REG_BITS-32){1'b0}}, jtag_TDI, shiftReg[31:1]};\n                       REG_DTM_INFO : shiftReg <= {{(SHIFT_REG_BITS-32){1'b0}}, jtag_TDI, shiftReg[31:1]};\n                       REG_DEBUG_ACCESS : shiftReg <= {jtag_TDI, shiftReg[SHIFT_REG_BITS -1 : 1 ]};\n                       default: // BYPASS\n                        shiftReg <= {{(SHIFT_REG_BITS- 1){1'b0}} , jtag_TDI};\n                     endcase // case (irReg)  \n      endcase // case (jtagStateReg)\n   end\n\n   // IR \n   always @(negedge jtag_TCK or posedge jtag_TRST) begin\n      if (jtag_TRST) begin\n         irReg <= REG_IDCODE;\n      end else if (jtagStateReg == TEST_LOGIC_RESET) begin\n         irReg <= REG_IDCODE;\n      end else if (jtagStateReg == UPDATE_IR) begin\n         irReg <= shiftReg[IR_BITS-1:0];\n      end\n   end\n  \n   // Busy. We become busy when we first try to send a request.\n   // We stop being busy when we accept a response.\n   // This means that busyReg will still be set when we check it,\n   // so the logic for checking busy looks ahead.\n   \n   always @(posedge jtag_TCK or posedge jtag_TRST) begin\n      if (jtag_TRST) begin\n         busyReg <= 1'b0;\n      end else if (i_dtm_req_valid) begin //UPDATE_DR onwards\n         busyReg <= 1'b1;\n      end else if (i_dtm_resp_valid & i_dtm_resp_ready) begin //only in CAPTURE_DR\n         busyReg <= 1'b0;\n      end\n   end // always @ (posedge jtag_TCK or posedge jtag_TRST)\n\n\n   // Downgrade/Skip. We make the decision to downgrade or skip\n   // during every CAPTURE_DR, and use the result in UPDATE_DR.\n   always @(posedge jtag_TCK or posedge jtag_TRST) begin\n      if (jtag_TRST) begin\n         skipOpReg            <= 1'b0;\n         downgradeOpReg       <= 1'b0;\n         stickyBusyReg        <= 1'b0;\n         stickyNonzeroRespReg <= 1'b0;\n      end else if (irReg == REG_DEBUG_ACCESS) begin\n         case(jtagStateReg)\n           CAPTURE_DR: begin\n              skipOpReg      <= busy;\n              downgradeOpReg <= (~busy & nonzeroResp);\n              stickyBusyReg  <= busy;\n              stickyNonzeroRespReg <= nonzeroResp;\n           end\n           UPDATE_DR: begin\n              skipOpReg      <= 1'b0;\n              downgradeOpReg <= 1'b0;\n           end\n         endcase // case (jtagStateReg)\n      end else if (irReg == REG_DTM_INFO) begin\n         case(jtagStateReg)\n           UPDATE_DR: begin\n              if (dbusReset) begin\n                 stickyNonzeroRespReg <= 1'b0;\n                 stickyBusyReg        <= 1'b0;\n              end\n           end\n         endcase // case (jtagStateReg)\n      end\n   end // always @ (posedge jtag_TCK or posedge jtag_TRST)\n   \n   \n   //dbusReg, dbusValidReg.\n   always @(posedge jtag_TCK or posedge jtag_TRST) begin\n      if (jtag_TRST) begin\n         dbusReg <= {(DBUS_REG_BITS) {1'b0}};\n         dbusValidReg <= 1'b0;\n      end else if (jtagStateReg == UPDATE_DR) begin\n         if (irReg == REG_DEBUG_ACCESS) begin\n            if (skipOpReg) begin\n               // do nothing.\n            end else if (downgradeOpReg) begin\n               dbusReg      <= {(DBUS_REG_BITS){1'b0}}; // NOP has encoding 2'b00.\n               dbusValidReg <= 1'b1;\n            end else begin \n               dbusReg      <= shiftReg[DBUS_REG_BITS-1:0];\n               dbusValidReg <= 1'b1;\n            end\n         end\n      end else if (i_dtm_req_ready) begin\n         dbusValidReg <= 1'b0;\n      end\n   end // always @ (negedge jtag_TCK or posedge jtag_TRST)\n        \n   //TDO\n   always @(negedge jtag_TCK or posedge jtag_TRST) begin\n      if (jtag_TRST) begin\n         jtag_TDO     <= 1'b0;\n         jtag_DRV_TDO <= 1'b0;\n      end else if (jtagStateReg == SHIFT_IR) begin\n         jtag_TDO     <= shiftReg[0];\n         jtag_DRV_TDO <= 1'b1;\n      end else if (jtagStateReg == SHIFT_DR) begin\n         jtag_TDO     <= shiftReg[0];\n         jtag_DRV_TDO <= 1'b1;\n      end else begin\n         jtag_TDO     <= 1'b0;\n         jtag_DRV_TDO <= 1'b0;\n      end\n   end // always @ (negedge jtag_TCK or posedge jtag_TRST)\n   \n     sirv_gnrl_cdc_tx   \n   # (\n     .DW      (41),\n     .SYNC_DP (ASYNC_FF_LEVELS) \n   ) u_jtag2debug_cdc_tx (\n     .o_vld  (dtm_req_valid), \n     .o_rdy_a(dtm_req_ready), \n     .o_dat  (dtm_req_bits ),\n     .i_vld  (i_dtm_req_valid), \n     .i_rdy  (i_dtm_req_ready), \n     .i_dat  (i_dtm_req_bits ),\n   \n     .clk    (jtag_TCK),\n     .rst_n  (~jtag_TRST)\n   );\n     \n   sirv_gnrl_cdc_rx   \n      # (\n     .DW      (36),\n     .SYNC_DP (ASYNC_FF_LEVELS) \n   ) u_jtag2debug_cdc_rx (\n     .i_vld_a(dtm_resp_valid), \n     .i_rdy  (dtm_resp_ready), \n     .i_dat  (dtm_resp_bits ),\n     .o_vld  (i_dtm_resp_valid), \n     .o_rdy  (i_dtm_resp_ready), \n     .o_dat  (i_dtm_resp_bits ),\n   \n     .clk    (jtag_TCK),\n     .rst_n  (~jtag_TRST)\n   );\n\nendmodule\n\n   \n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_LevelGateway(\n  input   clock,\n  input   reset,\n  input   io_interrupt,\n  output  io_plic_valid,\n  input   io_plic_ready,\n  input   io_plic_complete\n);\n  reg  inFlight;\n  reg [31:0] GEN_2;\n  wire  T_12;\n  wire  GEN_0;\n  wire  GEN_1;\n  wire  T_16;\n  wire  T_17;\n  assign io_plic_valid = T_17;\n  assign T_12 = io_interrupt & io_plic_ready;\n  assign GEN_0 = T_12 ? 1'h1 : inFlight;\n  assign GEN_1 = io_plic_complete ? 1'h0 : GEN_0;\n  assign T_16 = inFlight == 1'h0;\n  assign T_17 = io_interrupt & T_16;\n\n  always @(posedge clock or posedge reset) begin\n    if (reset) begin\n      inFlight <= 1'h0;\n    end else begin\n      if (io_plic_complete) begin\n        inFlight <= 1'h0;\n      end else begin\n        if (T_12) begin\n          inFlight <= 1'h1;\n        end\n      end\n    end\n  end\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The module is the mask ROM \n//\n// ====================================================================\n\nmodule sirv_mrom # (\n    parameter AW = 12,\n    parameter DW = 32,\n    parameter DP = 1024\n)(\n  input  [AW-1:2] rom_addr, \n  output [DW-1:0] rom_dout  \n  );\n        \n\n  wire [31:0] mask_rom [0:DP-1];// 4KB = 1KW \n\n  assign rom_dout = mask_rom[rom_addr]; \n\n  genvar i;\n  generate \n   if(1) begin: jump_to_ram_gen\n       // Just jump to the ITCM base address \n      for (i=0;i<1024;i=i+1) begin: rom_gen\n          if(i==0) begin: rom0_gen\n              assign mask_rom[i] = 32'h7ffff297; //auipc   t0, 0x7ffff\n          end\n          else if(i==1) begin: rom1_gen\n              assign mask_rom[i] = 32'h00028067; //jr      t0\n          end\n          else begin: rom_non01_gen\n              assign mask_rom[i] = 32'h00000000; \n          end\n      end\n   end\n   else begin: jump_to_non_ram_gen\n\n\n    // This is the freedom bootrom version, put here have a try\n    //  The actual executed trace is as below:\n       // CYC: 8615 PC:00001000 IR:0100006f DASM: j       pc + 0x10         \n       // CYC: 8618 PC:00001010 IR:204002b7 DASM: lui     t0, 0x20400       xpr[5] = 0x20400000\n       // CYC: 8621 PC:00001014 IR:00028067 DASM: jr      t0                \n\n       // The 20400000 is the flash address\n         //MEMORY\n         //{\n         //  flash (rxai!w) : ORIGIN = 0x20400000, LENGTH = 512M\n         //  ram (wxa!ri) : ORIGIN = 0x80000000, LENGTH = 16K\n         //}\n\n\n    for (i=0;i<1024;i=i+1) begin: rom_gen\n        if(i==0) begin: rom0_gen\n            assign mask_rom[i] = 32'h100006f;\n        end\n        else if(i==1) begin: rom1_gen\n            assign mask_rom[i] = 32'h13;\n        end\n        else if(i==2) begin: rom1_gen\n            assign mask_rom[i] = 32'h13;\n        end\n        else if(i==3) begin: rom1_gen\n            assign mask_rom[i] = 32'h6661;// our config code\n        end\n        else if(i==4) begin: rom1_gen\n            //assign mask_rom[i] = 32'h204002b7;\n            assign mask_rom[i] = 32'h20400000 | 32'h000002b7;\n        end\n        else if(i==5) begin: rom1_gen\n            assign mask_rom[i] = 32'h28067;\n        end\n        else begin: rom_non01_gen\n            assign mask_rom[i] = 32'h00000000; \n        end\n    end\n   \n  // In the https://github.com/sifive/freedom/blob/master/bootrom/xip/xip.S\n  //  ASM code is as below:\n     //  //  // See LICENSE for license details.\n     //// Execute in place\n     //// Jump directly to XIP_TARGET_ADDR\n     //\n     //  .text\n     //  .option norvc\n     //  .globl _start\n     //_start:\n     //  j 1f\n     //  nop\n     //  nop\n     //#ifdef CONFIG_STRING\n     //  .word cfg_string\n     //#else\n     //  .word 0  // Filled in by GenerateBootROM in Chisel\n     //#endif\n     //\n     //1:\n     //  li t0, XIP_TARGET_ADDR\n     //  jr t0\n     //\n     //  .section .rodata\n     //#ifdef CONFIG_STRING\n     //cfg_string:\n     //  .incbin CONFIG_STRING\n     //#endif\n   end\n\n  endgenerate\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The module is to control the mask ROM \n//\n// ====================================================================\n\nmodule sirv_mrom_top #(\n    parameter AW = 12,\n    parameter DW = 32,\n    parameter DP = 1024\n)(\n  //    * Bus cmd channel\n  input  rom_icb_cmd_valid, // Handshake valid\n  output rom_icb_cmd_ready, // Handshake ready\n  input  [AW-1:0] rom_icb_cmd_addr, // Bus transaction start addr \n  input  rom_icb_cmd_read,   // Read or write\n\n  //    * Bus RSP channel\n  output rom_icb_rsp_valid, // Response valid \n  input  rom_icb_rsp_ready, // Response ready\n  output rom_icb_rsp_err,   // Response error\n  output [DW-1:0] rom_icb_rsp_rdata, \n\n  input  clk,\n  input  rst_n\n  );\n        \n  wire [DW-1:0] rom_dout; \n\n  assign rom_icb_rsp_valid = rom_icb_cmd_valid;\n  assign rom_icb_cmd_ready = rom_icb_rsp_ready;\n  assign rom_icb_rsp_err = ~rom_icb_cmd_read;\n  assign rom_icb_rsp_rdata = rom_dout;\n\n\n   sirv_mrom # (\n    .AW(AW),\n    .DW(DW),\n    .DP(DP)\n   )u_sirv_mrom (\n     .rom_addr (rom_icb_cmd_addr[AW-1:2]),\n     .rom_dout (rom_dout) \n   );\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top level module of otp\n//\n// ====================================================================\n\nmodule sirv_otp_top(\n  input   clk,\n  input   rst_n,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [32-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n  input                      f_icb_cmd_valid,\n  output                     f_icb_cmd_ready,\n  input  [32-1:0]            f_icb_cmd_addr, \n  input                      f_icb_cmd_read, \n  input  [32-1:0]            f_icb_cmd_wdata,\n  \n  output                     f_icb_rsp_valid,\n  input                      f_icb_rsp_ready,\n  output [32-1:0]            f_icb_rsp_rdata \n);\n\n  assign i_icb_cmd_ready = 1'b0;\n  \n  assign i_icb_rsp_valid = 1'b0;\n  assign i_icb_rsp_rdata = 32'b0;\n\n  assign f_icb_cmd_ready = 1'b0;\n  \n  assign f_icb_rsp_valid = 1'b0;\n  assign f_icb_rsp_rdata = 32'b0; \n\n    // In FPGA platform this module is just an empty wrapper\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  This is the hand-coded version of PLIC to replace the chisel generated one\n//\n// ====================================================================\n\nmodule sirv_plic_man # (\n    parameter PLIC_PRIO_WIDTH = 3,\n    parameter PLIC_IRQ_NUM = 8,// Must larger than 1, if just 1 interrupt, please go without PLIC\n    parameter PLIC_IRQ_NUM_LOG2 = 3,//  If the irq is 1<N<=2, then log2 value is 1;\n                                    //  If the irq is 2<N<=4, then log2 value is 2;\n                                    //  If the irq is 4<N<=8, then log2 value is 3;\n                                    //  ....etc\n                                    //  We at most support 10 levels, then 1024 interrupt sources\n                                    //  But the source 0 is just always tied to zero\n                                    \n    parameter PLIC_ICB_RSP_FLOP = 0, // Do we flop the ICB response channel to easy timing\n    parameter PLIC_IRQ_I_FLOP = 0, // Do we flop the input interrupts from sources\n    parameter PLIC_IRQ_O_FLOP = 0  // Do we flop the output interrupt to the Core target\n)(\n  input   clk,\n  input   rst_n,\n\n  input                      icb_cmd_valid,\n  output                     icb_cmd_ready,\n  input  [24-1:0]            icb_cmd_addr, \n  input                      icb_cmd_read, \n  input  [32-1:0]            icb_cmd_wdata,\n  \n  output                     icb_rsp_valid,\n  input                      icb_rsp_ready,\n  output [32-1:0]            icb_rsp_rdata,\n\n  input  [PLIC_IRQ_NUM-1:0]      plic_irq_i,\n  output plic_irq_o\n);\n\n// If there are 32 irq, then we need 1 pend-array ([31:0])\n// If there are 40 irq, then we need 2 pend-array ([39:32],[31:0])\n// If there are 64 irq, then we need 2 pend-array ([63:32],[31:0])\nlocalparam PLIC_PEND_ARRAY = (((PLIC_IRQ_NUM-1)/32) + 1);\n\n wire icb_cmd_hsked    = icb_cmd_valid & icb_cmd_ready;\n wire icb_cmd_wr_hsked = icb_cmd_hsked & (~icb_cmd_read); \n wire icb_cmd_rd_hsked = icb_cmd_hsked & icb_cmd_read; \n\n\n wire [PLIC_IRQ_NUM-1:0]  plic_irq_i_r;\n wire [PLIC_IRQ_NUM-1:0]  irq_i_gated_valid;\n wire [PLIC_IRQ_NUM-1:0]  irq_i_gated_ready;\n wire [PLIC_IRQ_NUM-1:0]  irq_i_gated_hsked;\n\n reg [PLIC_IRQ_NUM-1:0]  icb_claim_irq;\n reg [PLIC_IRQ_NUM-1:0]  icb_complete_irq;\n\n wire irq_o;\n\n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id ;\n wire [PLIC_IRQ_NUM_LOG2-1:0] plic_irq_id ;\n wire [PLIC_PRIO_WIDTH-1:0] plic_irq_prio ;\n\n wire [PLIC_IRQ_NUM-1:0]  irq_pend_set;\n wire [PLIC_IRQ_NUM-1:0]  irq_pend_clr;\n wire [PLIC_IRQ_NUM-1:0]  irq_pend_ena;\n wire [PLIC_IRQ_NUM-1:0]  irq_pend_nxt;\n wire [PLIC_PEND_ARRAY*32-1:0] irq_pend_r;  // The IP bit per interrupt source\n\n \n wire [PLIC_PEND_ARRAY-1:0] icb_cmd_sel_pend;\n wire icb_cmd_sel_clam;\n\n wire icb_cmd_sel_thod;\n wire irq_thod_ena;\n wire [PLIC_PRIO_WIDTH-1:0] irq_thod_nxt; \n wire [PLIC_PRIO_WIDTH-1:0] irq_thod_r  ; // The  priority per interrupt source\n\n wire [PLIC_IRQ_NUM-1:0]  icb_cmd_sel_prio;\n wire [PLIC_IRQ_NUM-1:0]  irq_prio_ena;\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_nxt [PLIC_IRQ_NUM-1:0];\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_r [PLIC_IRQ_NUM-1:0];  // The  priority per interrupt source\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_masked [PLIC_IRQ_NUM-1:0];  // The masked priority per interrupt source\n\n wire irq_prio_lvl_10_lt [1024-1:0]; // The level-10 max priority array\n wire irq_prio_lvl_9_lt  [512-1:0] ; // The level-9  max priority array\n wire irq_prio_lvl_8_lt  [256-1:0] ; // The level-8  max priority array\n wire irq_prio_lvl_7_lt  [128-1:0] ; // The level-7  max priority array\n wire irq_prio_lvl_6_lt  [64-1:0]  ; // The level-6  max priority array\n wire irq_prio_lvl_5_lt  [32-1:0]  ; // The level-5  max priority array\n wire irq_prio_lvl_4_lt  [16-1:0]  ; // The level-4  max priority array\n wire irq_prio_lvl_3_lt  [8-1:0]   ; // The level-3  max priority array\n wire irq_prio_lvl_2_lt  [4-1:0]   ; // The level-2  max priority array\n wire irq_prio_lvl_1_lt  [2-1:0]   ; // The level-1  max priority array\n wire irq_prio_top_lt              ; // The level-0  max priority \n\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_lvl_10 [1024-1:0] ; // The level-10 max priority array\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_lvl_9  [512-1:0]  ; // The level-9  max priority array\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_lvl_8  [256-1:0]  ; // The level-8  max priority array\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_lvl_7  [128-1:0]  ; // The level-7  max priority array\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_lvl_6  [64-1:0]   ; // The level-6  max priority array\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_lvl_5  [32-1:0]   ; // The level-5  max priority array\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_lvl_4  [16-1:0]   ; // The level-4  max priority array\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_lvl_3  [8-1:0]    ; // The level-3  max priority array\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_lvl_2  [4-1:0]    ; // The level-2  max priority array\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_lvl_1  [2-1:0]    ; // The level-1  max priority array\n wire [PLIC_PRIO_WIDTH-1:0] irq_prio_top               ; // The level-0  max priority \n                                                                         \n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id_lvl_10 [1024-1:0] ; // The level-10 max id array\n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id_lvl_9  [512-1:0]  ; // The level-9  max id array\n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id_lvl_8  [256-1:0]  ; // The level-8  max id array\n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id_lvl_7  [128-1:0]  ; // The level-7  max id array\n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id_lvl_6  [64-1:0]   ; // The level-6  max id array\n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id_lvl_5  [32-1:0]   ; // The level-5  max id array\n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id_lvl_4  [16-1:0]   ; // The level-4  max id array\n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id_lvl_3  [8-1:0]    ; // The level-3  max id array\n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id_lvl_2  [4-1:0]    ; // The level-2  max id array\n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id_lvl_1  [2-1:0]    ; // The level-1  max id array\n wire [PLIC_IRQ_NUM_LOG2-1:0] irq_id_top               ; // The level-0  max id \n\n wire irq_ip_lvl_10 [1024-1:0] ; // The level-10 IP array\n wire irq_ip_lvl_9  [512-1:0]  ; // The level-9  IP array\n wire irq_ip_lvl_8  [256-1:0]  ; // The level-8  IP array\n wire irq_ip_lvl_7  [128-1:0]  ; // The level-7  IP array\n wire irq_ip_lvl_6  [64-1:0]   ; // The level-6  IP array\n wire irq_ip_lvl_5  [32-1:0]   ; // The level-5  IP array\n wire irq_ip_lvl_4  [16-1:0]   ; // The level-4  IP array\n wire irq_ip_lvl_3  [8-1:0]    ; // The level-3  IP array\n wire irq_ip_lvl_2  [4-1:0]    ; // The level-2  IP array\n wire irq_ip_lvl_1  [2-1:0]    ; // The level-1  IP array\n wire irq_ip_top               ; // The level-0  IP \n\n wire          icb_cmd_sel_enab [PLIC_PEND_ARRAY-1:0];\n wire          irq_enab_ena     [PLIC_PEND_ARRAY-1:0];\n wire [32-1:0] irq_enab_nxt     [PLIC_PEND_ARRAY-1:0];\n wire [32-1:0] irq_enab_r       [PLIC_PEND_ARRAY-1:0];\n\n wire plic_irq_o_pre;\n\n genvar i;\n integer ii;\n\n generate \n   if(PLIC_IRQ_I_FLOP == 1) begin: flop_i_irq\n      sirv_gnrl_dffr #(PLIC_IRQ_NUM) plic_irq_i_dffr(plic_irq_i , plic_irq_i_r, clk, rst_n);\n   end\n   else begin: no_flop_i_irq\n      assign plic_irq_i_r = plic_irq_i;\n   end\n\n   if(PLIC_IRQ_O_FLOP == 1) begin: flop_o_irq\n        sirv_gnrl_dffr #(1) plic_irq_o_dffr(irq_o , plic_irq_o_pre, clk, rst_n);\n        sirv_gnrl_dffr #(PLIC_IRQ_NUM_LOG2) plic_irq_id_dffr(irq_id , plic_irq_id, clk, rst_n);\n        sirv_gnrl_dffr #(PLIC_PRIO_WIDTH) plic_irq_prio_dffr(irq_prio_top , plic_irq_prio, clk, rst_n);\n   end\n   else begin: no_flop_o_irq\n        assign plic_irq_o_pre  = irq_o ;\n        assign plic_irq_id = irq_id;\n        assign plic_irq_prio = irq_prio_top;\n   end\n\n     assign plic_irq_o = plic_irq_o_pre;// & (plic_irq_prio > irq_thod_r);\n\n     assign irq_i_gated_hsked[0] = 1'b0;\n     assign irq_i_gated_valid[0] = 1'b0;\n     assign irq_i_gated_ready[0] = 1'b0;\n\n     assign irq_pend_set[0] = 1'b0;\n     assign irq_pend_clr[0] = 1'b0;\n     assign irq_pend_ena[0] = 1'b0;\n     assign irq_pend_nxt[0] = 1'b0;\n     assign irq_pend_r  [0] = 1'b0;\n\n     assign irq_prio_ena[0] = 1'b0;\n     assign irq_prio_nxt[0] = {PLIC_PRIO_WIDTH{1'b0}};\n     assign irq_prio_r[0]   = {PLIC_PRIO_WIDTH{1'b0}};\n \n     assign irq_prio_masked[0] = {PLIC_PRIO_WIDTH{1'b0}};\n\n   for(i=1; i<PLIC_IRQ_NUM;i=i+1) begin: source_gen//{\n       ///////////////////////////////////////////////////////////////////\n       // Implment the gateway for each interrupt source\n       //\n     sirv_LevelGateway u_LevelGateway_1_1 (\n       .clock           (clk   ),\n       .reset           (~rst_n),\n       .io_interrupt    (plic_irq_i_r[i]),\n       .io_plic_valid   (irq_i_gated_valid[i]),\n       .io_plic_ready   (irq_i_gated_ready[i]),\n       .io_plic_complete(icb_complete_irq[i])\n     );\n\n     assign irq_i_gated_hsked[i] = irq_i_gated_valid[i] & irq_i_gated_ready[i];\n\n       ///////////////////////////////////////////////////////////////////\n       // Implment the IP bit for each interrupt source\n       //\n     // If the pending irq is cleared, then it is ready to accept new interrupt from gateway\n     assign irq_i_gated_ready[i] = (~irq_pend_r[i]);\n\n        // The IRQ pend is set when the gateway output handshaked\n     assign irq_pend_set[i] = irq_i_gated_hsked[i];\n        // The IRQ pend is cleared when the interrupt is claimed, according to the spec:\n        //   After the highest-priority pending interrupt is claimed by a target and the\n        //   corresponding IP bit is cleared.\n     assign irq_pend_clr[i] = icb_claim_irq[i];\n     assign irq_pend_ena[i] = (irq_pend_set[i] | irq_pend_clr[i]);\n     assign irq_pend_nxt[i] = (irq_pend_set[i] | (~irq_pend_clr[i]));\n\n     sirv_gnrl_dfflr #(1) irq_pend_dfflr(irq_pend_ena[i] , irq_pend_nxt[i], irq_pend_r[i], clk, rst_n);\n\n       ///////////////////////////////////////////////////////////////////\n       // Implment the Priority for each interrupt source\n       //\n       // The priority will be set by bus writting\n     assign irq_prio_ena[i] = icb_cmd_wr_hsked & icb_cmd_sel_prio[i];\n     assign irq_prio_nxt[i] = icb_cmd_wdata[PLIC_PRIO_WIDTH-1:0];\n     sirv_gnrl_dfflr #(PLIC_PRIO_WIDTH) irq_prio_dfflr(irq_prio_ena[i] , irq_prio_nxt[i], irq_prio_r[i], clk, rst_n);\n \n       ///////////////////////////////////////////////////////////////////\n       // The priority will be masked to zero, if the IP is not set\n       //\n     assign irq_prio_masked[i] = irq_prio_r[i] & {PLIC_PRIO_WIDTH{irq_pend_r[i]}};\n   end//}\n\n   for(i=PLIC_IRQ_NUM; i<(PLIC_PEND_ARRAY*32);i=i+1) begin: pend_gen//{\n       assign irq_pend_r[i] = 1'b0;\n   end//}\n\n       ///////////////////////////////////////////////////////////////////\n       // Implment the IE for each interrupt source and target\n       //\n   for(i=0; i<(PLIC_PEND_ARRAY);i=i+1) begin: enab_r_i//{\n     // The IE will be set by bus writting\n     assign irq_enab_ena[i] = icb_cmd_sel_enab[i] & icb_cmd_wr_hsked;\n     sirv_gnrl_dfflr #(32) irq_enab_dfflr(irq_enab_ena[i], irq_enab_nxt[i], irq_enab_r[i], clk, rst_n);\n\n     if(i == 0)begin: i0_ena\n       assign irq_enab_nxt[i] = {icb_cmd_wdata[31:1],1'b0};// The 0-interrupt is always 0\n     end\n     else if((PLIC_PEND_ARRAY-1) == i) begin:last_one\n         if((PLIC_IRQ_NUM%32) == 0) begin:irq_num_div_32\n           assign irq_enab_nxt[i] = icb_cmd_wdata[31:0];\n         end\n         else begin:irq_num_not_div_32\n           assign irq_enab_nxt[i] = icb_cmd_wdata[(PLIC_IRQ_NUM%32)-1:0];\n         end\n     end\n     else begin:no_last_one\n       assign irq_enab_nxt[i] = icb_cmd_wdata[31:0];\n     end\n\n   end//}\n\n   \n       ///////////////////////////////////////////////////////////////////\n       // Implment the Threshold for each interrupt target\n       //\n       //\n       // The Threshold will be set by bus writting\n   assign irq_thod_ena = icb_cmd_wr_hsked & icb_cmd_sel_thod;\n   assign irq_thod_nxt = icb_cmd_wdata[PLIC_PRIO_WIDTH-1:0];\n   sirv_gnrl_dfflr #(PLIC_PRIO_WIDTH) irq_thod_dfflr(irq_thod_ena , irq_thod_nxt, irq_thod_r, clk, rst_n);\n\n\n\n     ///////////////////////////////////////////////////////////////////\n     ///////////////////////////////////////////////////////////////////\n     // Use the binary-tree structure to compare and select the pending interrupt\n     //   source with the max priority and its ID\n     //\n         // Generate the level-10 signals\n             // We need to tie the unused signals to zeros\n             //  and the synthesis tools will automatically \n             //  optimize unused logics to zeros\n             //\n             // Tie the irq0 relevant logics to 0\n         assign irq_prio_lvl_10[0] = {PLIC_PRIO_WIDTH{1'b0}};  \n         assign irq_id_lvl_10  [0] = {PLIC_IRQ_NUM_LOG2{1'b0}};\n         assign irq_ip_lvl_10  [0] = 1'b0;\n     for(i=1; i<PLIC_IRQ_NUM;i=i+1) begin: tie_input//{\n            // The priority will be masked to zero, if the IE is not set\n         assign irq_prio_lvl_10[i] = irq_prio_masked[i] & {PLIC_PRIO_WIDTH{irq_enab_r[i/32][i%32]}};\n         assign irq_id_lvl_10  [i] = i[PLIC_IRQ_NUM_LOG2-1:0];\n         assign irq_ip_lvl_10  [i] = irq_pend_r[i] & irq_enab_r[i/32][i%32];\n     end//}\n\n     for(i=PLIC_IRQ_NUM; i<1024;i=i+1) begin: tie_unused_tozero//{\n         assign irq_prio_lvl_10[i] = {PLIC_PRIO_WIDTH{1'b0}};  \n         assign irq_id_lvl_10  [i] = i[PLIC_IRQ_NUM_LOG2-1:0];\n         assign irq_ip_lvl_10  [i] = 1'b0;\n     end//}\n\n\n         // Generate the level-9 comp\n     for(i=0; i<512;i=i+1) begin: lvl_9_comp_gen//{\n         assign irq_prio_lvl_9_lt[i] = (irq_prio_lvl_10[2*i] < irq_prio_lvl_10[(2*i)+1]); \n         assign irq_prio_lvl_9[i] = irq_prio_lvl_9_lt[i] ? irq_prio_lvl_10[(2*i)+1] : irq_prio_lvl_10[2*i];\n         assign irq_id_lvl_9  [i] = irq_prio_lvl_9_lt[i] ? irq_id_lvl_10  [(2*i)+1] : irq_id_lvl_10  [2*i];\n         assign irq_ip_lvl_9  [i] = irq_prio_lvl_9_lt[i] ? irq_ip_lvl_10  [(2*i)+1] : irq_ip_lvl_10  [2*i];\n     end//}\n         // Generate the level-8 comp\n     for(i=0; i<256;i=i+1) begin: lvl_8_comp_gen//{\n         assign irq_prio_lvl_8_lt[i] = (irq_prio_lvl_9[2*i] < irq_prio_lvl_9[(2*i)+1]); \n         assign irq_prio_lvl_8[i] = irq_prio_lvl_8_lt[i] ? irq_prio_lvl_9[(2*i)+1] : irq_prio_lvl_9[2*i];\n         assign irq_id_lvl_8  [i] = irq_prio_lvl_8_lt[i] ? irq_id_lvl_9  [(2*i)+1] : irq_id_lvl_9  [2*i];\n         assign irq_ip_lvl_8  [i] = irq_prio_lvl_8_lt[i] ? irq_ip_lvl_9  [(2*i)+1] : irq_ip_lvl_9  [2*i];\n     end//}\n         // Generate the level-7 comp\n     for(i=0; i<128;i=i+1) begin: lvl_7_comp_gen//{\n         assign irq_prio_lvl_7_lt[i] = (irq_prio_lvl_8[2*i] < irq_prio_lvl_8[(2*i)+1]); \n         assign irq_prio_lvl_7[i] = irq_prio_lvl_7_lt[i] ? irq_prio_lvl_8[(2*i)+1] : irq_prio_lvl_8[2*i];\n         assign irq_id_lvl_7  [i] = irq_prio_lvl_7_lt[i] ? irq_id_lvl_8  [(2*i)+1] : irq_id_lvl_8  [2*i];\n         assign irq_ip_lvl_7  [i] = irq_prio_lvl_7_lt[i] ? irq_ip_lvl_8  [(2*i)+1] : irq_ip_lvl_8  [2*i];\n     end//}\n         // Generate the level-6 comp\n     for(i=0; i<64;i=i+1) begin: lvl_6_comp_gen//{\n         assign irq_prio_lvl_6_lt[i] = (irq_prio_lvl_7[2*i] < irq_prio_lvl_7[(2*i)+1]); \n         assign irq_prio_lvl_6[i] = irq_prio_lvl_6_lt[i] ? irq_prio_lvl_7[(2*i)+1] : irq_prio_lvl_7[2*i];\n         assign irq_id_lvl_6  [i] = irq_prio_lvl_6_lt[i] ? irq_id_lvl_7  [(2*i)+1] : irq_id_lvl_7  [2*i];\n         assign irq_ip_lvl_6  [i] = irq_prio_lvl_6_lt[i] ? irq_ip_lvl_7  [(2*i)+1] : irq_ip_lvl_7  [2*i];\n     end//}\n         // Generate the level-5 comp\n     for(i=0; i<32;i=i+1) begin: lvl_5_comp_gen//{\n         assign irq_prio_lvl_5_lt[i] = (irq_prio_lvl_6[2*i] < irq_prio_lvl_6[(2*i)+1]); \n         assign irq_prio_lvl_5[i] = irq_prio_lvl_5_lt[i] ? irq_prio_lvl_6[(2*i)+1] : irq_prio_lvl_6[2*i];\n         assign irq_id_lvl_5  [i] = irq_prio_lvl_5_lt[i] ? irq_id_lvl_6  [(2*i)+1] : irq_id_lvl_6  [2*i];\n         assign irq_ip_lvl_5  [i] = irq_prio_lvl_5_lt[i] ? irq_ip_lvl_6  [(2*i)+1] : irq_ip_lvl_6  [2*i];\n     end//}\n         // Generate the level-4 comp\n     for(i=0; i<16;i=i+1) begin: lvl_4_comp_gen//{\n         assign irq_prio_lvl_4_lt[i] = (irq_prio_lvl_5[2*i] < irq_prio_lvl_5[(2*i)+1]); \n         assign irq_prio_lvl_4[i] = irq_prio_lvl_4_lt[i] ? irq_prio_lvl_5[(2*i)+1] : irq_prio_lvl_5[2*i];\n         assign irq_id_lvl_4  [i] = irq_prio_lvl_4_lt[i] ? irq_id_lvl_5  [(2*i)+1] : irq_id_lvl_5  [2*i];\n         assign irq_ip_lvl_4  [i] = irq_prio_lvl_4_lt[i] ? irq_ip_lvl_5  [(2*i)+1] : irq_ip_lvl_5  [2*i];\n     end//}\n         // Generate the level-3 comp\n     for(i=0; i<8;i=i+1) begin: lvl_3_comp_gen//{\n         assign irq_prio_lvl_3_lt[i] = (irq_prio_lvl_4[2*i] < irq_prio_lvl_4[(2*i)+1]); \n         assign irq_prio_lvl_3[i] = irq_prio_lvl_3_lt[i] ? irq_prio_lvl_4[(2*i)+1] : irq_prio_lvl_4[2*i];\n         assign irq_id_lvl_3  [i] = irq_prio_lvl_3_lt[i] ? irq_id_lvl_4  [(2*i)+1] : irq_id_lvl_4  [2*i];\n         assign irq_ip_lvl_3  [i] = irq_prio_lvl_3_lt[i] ? irq_ip_lvl_4  [(2*i)+1] : irq_ip_lvl_4  [2*i];\n     end//}\n         // Generate the level-2 comp\n     for(i=0; i<4;i=i+1) begin: lvl_2_comp_gen//{\n         assign irq_prio_lvl_2_lt[i] = (irq_prio_lvl_3[2*i] < irq_prio_lvl_3[(2*i)+1]); \n         assign irq_prio_lvl_2[i] = irq_prio_lvl_2_lt[i] ? irq_prio_lvl_3[(2*i)+1] : irq_prio_lvl_3[2*i];\n         assign irq_id_lvl_2  [i] = irq_prio_lvl_2_lt[i] ? irq_id_lvl_3  [(2*i)+1] : irq_id_lvl_3  [2*i];\n         assign irq_ip_lvl_2  [i] = irq_prio_lvl_2_lt[i] ? irq_ip_lvl_3  [(2*i)+1] : irq_ip_lvl_3  [2*i];\n     end//}\n         // Generate the level-1 comp\n     for(i=0; i<2;i=i+1) begin: lvl_1_comp_gen//{\n         assign irq_prio_lvl_1_lt[i] = (irq_prio_lvl_2[2*i] < irq_prio_lvl_2[(2*i)+1]); \n         assign irq_prio_lvl_1[i] = irq_prio_lvl_1_lt[i] ? irq_prio_lvl_2[(2*i)+1] : irq_prio_lvl_2[2*i];\n         assign irq_id_lvl_1  [i] = irq_prio_lvl_1_lt[i] ? irq_id_lvl_2  [(2*i)+1] : irq_id_lvl_2  [2*i];\n         assign irq_ip_lvl_1  [i] = irq_prio_lvl_1_lt[i] ? irq_ip_lvl_2  [(2*i)+1] : irq_ip_lvl_2  [2*i];\n     end//}\n\n     assign irq_prio_top_lt = (irq_prio_lvl_1[0] < irq_prio_lvl_1[1]); \n     assign irq_prio_top    = irq_prio_top_lt ? irq_prio_lvl_1[1] : irq_prio_lvl_1[0];\n     assign irq_id_top      = irq_prio_top_lt ? irq_id_lvl_1  [1] : irq_id_lvl_1  [0];\n     assign irq_ip_top      = irq_prio_top_lt ? irq_ip_lvl_1  [1] : irq_ip_lvl_1  [0];\n     assign irq_o           = irq_ip_top & (irq_prio_top > irq_thod_r);\n     assign irq_id          = irq_id_top;\n\n endgenerate\n\n\n\n\n   ///////////////////////////////////////////////////////////////////\n   ///////////////////////////////////////////////////////////////////\n   // Implement the ICB "}
{"text": "bus\n   //   \n\n\n \n   // The address map\n generate \n   //\n         //   0x0C00_0004 source 1 priority\n         //   0x0C00_0008 source 2 priority\n         //   ...\n         //   0x0C00_0FFC source 1023 priority\n   for(i=0; i<PLIC_IRQ_NUM;i=i+1) begin: sel_prio//{\n     assign icb_cmd_sel_prio[i] = (icb_cmd_addr == ($unsigned(i) * 4)); \n   end//}\n   //\n         //0x0C00 1000 Start of pending array\n         //... (read-only)\n         //0x0C00 107C End of pending array\n   for(i=0; i<(PLIC_PEND_ARRAY);i=i+1) begin: sel_pend//{\n     assign icb_cmd_sel_pend[i] = (icb_cmd_addr == (($unsigned(i) * 4) + 24'h1000)); \n   end//}\n\n   //\n         //0x0C00 1000 Start of target 0 enable array\n         //0x0C00 107C End   of target 0 enable array\n         //.... target 1\n         //.... target 2\n     for(i=0; i<(PLIC_PEND_ARRAY);i=i+1) begin: sel_enab_i//{\n       assign icb_cmd_sel_enab[i] = (icb_cmd_addr == (($unsigned(i) * 4) + 24'h2000)); \n     end//}\n   //\n         // 0x0C20 0000 target 0 priority threshold\n         // 0x0C20 0004 target 0 claim/complete\n         // 0x0C20 1000 target 1 priority threshold\n         // 0x0C20 1004 target 1 claim/complete\n       assign icb_cmd_sel_thod = (icb_cmd_addr ==  (24'h20_0000)); \n       assign icb_cmd_sel_clam = (icb_cmd_addr ==  (24'h20_0004)); \n        \n endgenerate\n\n   ///////////////////////////////////////////////////////////////////\n   ///////////////////////////////////////////////////////////////////\n   // Implement the rdata mux\n   //   \n   reg [32-1:0] rsp_rdata_prio;\n   reg [32-1:0] rsp_rdata_pend;\n   reg [32-1:0] rsp_rdata_targ;\n\n   always @* begin:rdat_prio_mux//{ \n       rsp_rdata_prio = 32'b0;\n\n       for(ii=0; ii<PLIC_IRQ_NUM;ii=ii+1) begin: sel_prio//{\n         rsp_rdata_prio = rsp_rdata_prio | ({32{icb_cmd_sel_prio[ii]}} & irq_prio_r[ii] );\n       end//}\n   end//}\n\n   always @* begin:rdat_pend_mux//{ \n       rsp_rdata_pend = 32'b0;\n\n       for(ii=0; ii<(PLIC_PEND_ARRAY);ii=ii+1) begin: sel_pend//{\n         rsp_rdata_pend = rsp_rdata_pend | ({32{icb_cmd_sel_pend[ii]}} &  \n                             {\n                                irq_pend_r[ii*32+31], irq_pend_r[ii*32+30], irq_pend_r[ii*32+29], irq_pend_r[ii*32+28], \n                                irq_pend_r[ii*32+27], irq_pend_r[ii*32+26], irq_pend_r[ii*32+25], irq_pend_r[ii*32+24], \n                                irq_pend_r[ii*32+23], irq_pend_r[ii*32+22], irq_pend_r[ii*32+21], irq_pend_r[ii*32+20], \n                                irq_pend_r[ii*32+19], irq_pend_r[ii*32+18], irq_pend_r[ii*32+17], irq_pend_r[ii*32+16], \n                                irq_pend_r[ii*32+15], irq_pend_r[ii*32+14], irq_pend_r[ii*32+13], irq_pend_r[ii*32+12], \n                                irq_pend_r[ii*32+11], irq_pend_r[ii*32+10], irq_pend_r[ii*32+09], irq_pend_r[ii*32+08], \n                                irq_pend_r[ii*32+07], irq_pend_r[ii*32+06], irq_pend_r[ii*32+05], irq_pend_r[ii*32+04], \n                                irq_pend_r[ii*32+03], irq_pend_r[ii*32+02], irq_pend_r[ii*32+01], irq_pend_r[ii*32+00]  \n                             });\n       end//}\n   end//}\n\n   always @* begin:rdat_targ_mux//{ \n       rsp_rdata_targ = 32'b0;\n\n       rsp_rdata_targ = rsp_rdata_targ | ({32{icb_cmd_sel_thod}} & irq_thod_r ); \n       rsp_rdata_targ = rsp_rdata_targ | ({32{icb_cmd_sel_clam}} & plic_irq_id);\n       for(ii=0; ii<(PLIC_PEND_ARRAY);ii=ii+1) begin: sel_enab_i//{\n           rsp_rdata_targ = rsp_rdata_targ | ({32{icb_cmd_sel_enab[ii]}} & irq_enab_r[ii]);\n       end//}\n       //\n   end//}\n\n   wire [32-1:0] rsp_rdata = rsp_rdata_prio | rsp_rdata_pend | rsp_rdata_targ;\n\n   generate \n     if(PLIC_ICB_RSP_FLOP == 1) begin: flop_icb_rsp\n     sirv_gnrl_pipe_stage # (\n      .CUT_READY(1),\n      .DP(1),\n      .DW(32)\n     ) u_buf_icb_rsp_buf(\n       .i_vld(icb_cmd_valid), \n       .i_rdy(icb_cmd_ready), \n       .i_dat(rsp_rdata),\n       .o_vld(icb_rsp_valid), \n       .o_rdy(icb_rsp_ready), \n       .o_dat(icb_rsp_rdata),\n     \n       .clk  (clk  ),\n       .rst_n(rst_n)  \n      );\n     end\n     else begin: no_flop_icb_rsp\n          // Directly connect the response channel with the command channel for handshake\n       assign icb_rsp_valid = icb_cmd_valid;\n       assign icb_cmd_ready = icb_rsp_ready;\n       assign icb_rsp_rdata = rsp_rdata;\n     end\n   endgenerate\n\n\n\n   generate \n   //\n   for(i=0; i<PLIC_IRQ_NUM;i=i+1) begin: claim_complete_gen//{\n\n     always @* begin:claim_complete//{ \n         icb_claim_irq   [i] = 1'b0;\n         icb_complete_irq[i] = 1'b0;\n\n                                       // The read data (claimed ID) is equal to the interrupt source ID\n         icb_claim_irq   [i] = icb_claim_irq[i] | ((icb_rsp_rdata == i) & icb_cmd_sel_clam & icb_cmd_rd_hsked);\n                                       // The write data (complete ID) is equal to the interrupt source ID\n         icb_complete_irq[i] = icb_complete_irq[i] | ((icb_cmd_wdata[PLIC_IRQ_NUM_LOG2-1:0] == i) & icb_cmd_sel_clam & icb_cmd_wr_hsked);\n\n     end//}\n\n   end//}\n   endgenerate\n\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top level module of plic\n//\n// ====================================================================\n\nmodule sirv_plic_top(\n  input   clk,\n  input   rst_n,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [32-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n  input   io_devices_0_0,\n  input   io_devices_0_1,\n  input   io_devices_0_2,\n  input   io_devices_0_3,\n  input   io_devices_0_4,\n  input   io_devices_0_5,\n  input   io_devices_0_6,\n  input   io_devices_0_7,\n  input   io_devices_0_8,\n  input   io_devices_0_9,\n  input   io_devices_0_10,\n  input   io_devices_0_11,\n  input   io_devices_0_12,\n  input   io_devices_0_13,\n  input   io_devices_0_14,\n  input   io_devices_0_15,\n  input   io_devices_0_16,\n  input   io_devices_0_17,\n  input   io_devices_0_18,\n  input   io_devices_0_19,\n  input   io_devices_0_20,\n  input   io_devices_0_21,\n  input   io_devices_0_22,\n  input   io_devices_0_23,\n  input   io_devices_0_24,\n  input   io_devices_0_25,\n  input   io_devices_0_26,\n  input   io_devices_0_27,\n  input   io_devices_0_28,\n  input   io_devices_0_29,\n  input   io_devices_0_30,\n  input   io_devices_0_31,\n  input   io_devices_0_32,\n  input   io_devices_0_33,\n  input   io_devices_0_34,\n  input   io_devices_0_35,\n  input   io_devices_0_36,\n  input   io_devices_0_37,\n  input   io_devices_0_38,\n  input   io_devices_0_39,\n  input   io_devices_0_40,\n  input   io_devices_0_41,\n  input   io_devices_0_42,\n  input   io_devices_0_43,\n  input   io_devices_0_44,\n  input   io_devices_0_45,\n  input   io_devices_0_46,\n  input   io_devices_0_47,\n  input   io_devices_0_48,\n  input   io_devices_0_49,\n  input   io_devices_0_50,\n  input   io_devices_0_51,\n  output  io_harts_0_0\n);\n\nwire plic_irq;\nassign io_harts_0_0 = plic_irq;\n\nlocalparam PLIC_IRQ_NUM = 53;// The number can be enlarged as long as not larger than 1024\nwire [PLIC_IRQ_NUM-1:0] plic_irq_i = { \n                  io_devices_0_51  ,\n                  io_devices_0_50  ,\n\n                  io_devices_0_49  ,\n                  io_devices_0_48  ,\n                  io_devices_0_47  ,\n                  io_devices_0_46  ,\n                  io_devices_0_45  ,\n                  io_devices_0_44  ,\n                  io_devices_0_43  ,\n                  io_devices_0_42  ,\n                  io_devices_0_41  ,\n                  io_devices_0_40  ,\n\n                  io_devices_0_39  ,\n                  io_devices_0_38  ,\n                  io_devices_0_37  ,\n                  io_devices_0_36  ,\n                  io_devices_0_35  ,\n                  io_devices_0_34  ,\n                  io_devices_0_33  ,\n                  io_devices_0_32  ,\n                  io_devices_0_31  ,\n                  io_devices_0_30  ,\n\n                  io_devices_0_29  ,\n                  io_devices_0_28  ,\n                  io_devices_0_27  ,\n                  io_devices_0_26  ,\n                  io_devices_0_25  ,\n                  io_devices_0_24  ,\n                  io_devices_0_23  ,\n                  io_devices_0_22  ,\n                  io_devices_0_21  ,\n                  io_devices_0_20  ,\n\n                  io_devices_0_19  ,\n                  io_devices_0_18  ,\n                  io_devices_0_17  ,\n                  io_devices_0_16  ,\n                  io_devices_0_15  ,\n                  io_devices_0_14  ,\n                  io_devices_0_13  ,\n                  io_devices_0_12  ,\n                  io_devices_0_11  ,\n                  io_devices_0_10  ,\n\n                  io_devices_0_9  ,\n                  io_devices_0_8  ,\n                  io_devices_0_7  ,\n                  io_devices_0_6  ,\n                  io_devices_0_5  ,\n                  io_devices_0_4  ,\n                  io_devices_0_3  ,\n                  io_devices_0_2  ,\n                  io_devices_0_1  ,\n                  io_devices_0_0  ,\n\n                  1'b0 };// The IRQ0 must be tied to zero\n\n\nsirv_plic_man #(\n    .PLIC_PRIO_WIDTH   (3),\n    .PLIC_IRQ_NUM      (PLIC_IRQ_NUM),\n    .PLIC_IRQ_NUM_LOG2 (6),\n    .PLIC_ICB_RSP_FLOP (1),\n    .PLIC_IRQ_I_FLOP   (1),\n    .PLIC_IRQ_O_FLOP   (1) \n) u_sirv_plic_man(\n    .clk              (clk            ),      \n    .rst_n            (rst_n          ),\n\n    .icb_cmd_valid  (i_icb_cmd_valid),\n    .icb_cmd_addr   (i_icb_cmd_addr[24-1:0] ),\n    .icb_cmd_read   (i_icb_cmd_read ),\n    .icb_cmd_wdata  (i_icb_cmd_wdata),\n    .icb_rsp_ready  (i_icb_rsp_ready),\n                    \n    .icb_rsp_valid  (i_icb_rsp_valid),\n    .icb_cmd_ready  (i_icb_cmd_ready),\n    .icb_rsp_rdata  (i_icb_rsp_rdata),\n\n    .plic_irq_i (plic_irq_i),\n    .plic_irq_o (plic_irq   ) \n);\n\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_pmu(\n  input   clock,\n  input   reset,\n\n  input   io_wakeup_awakeup,\n  input   io_wakeup_dwakeup,\n  input   io_wakeup_rtc,\n  input   io_wakeup_reset,\n  output  io_control_hfclkrst,\n  output  io_control_corerst,\n  output  io_control_reserved1,\n  output  io_control_vddpaden,\n  output  io_control_reserved0,\n  input   io_regs_ie_write_valid,\n  input  [3:0] io_regs_ie_write_bits,\n  output [3:0] io_regs_ie_read,\n  input   io_regs_cause_write_valid,\n  input  [31:0] io_regs_cause_write_bits,\n  output [31:0] io_regs_cause_read,\n  input   io_regs_sleep_write_valid,\n  input  [31:0] io_regs_sleep_write_bits,\n  output [31:0] io_regs_sleep_read,\n  input   io_regs_key_write_valid,\n  input  [31:0] io_regs_key_write_bits,\n  output [31:0] io_regs_key_read,\n  input   io_regs_wakeupProgram_0_write_valid,\n  input  [31:0] io_regs_wakeupProgram_0_write_bits,\n  output [31:0] io_regs_wakeupProgram_0_read,\n  input   io_regs_wakeupProgram_1_write_valid,\n  input  [31:0] io_regs_wakeupProgram_1_write_bits,\n  output [31:0] io_regs_wakeupProgram_1_read,\n  input   io_regs_wakeupProgram_2_write_valid,\n  input  [31:0] io_regs_wakeupProgram_2_write_bits,\n  output [31:0] io_regs_wakeupProgram_2_read,\n  input   io_regs_wakeupProgram_3_write_valid,\n  input  [31:0] io_regs_wakeupProgram_3_write_bits,\n  output [31:0] io_regs_wakeupProgram_3_read,\n  input   io_regs_wakeupProgram_4_write_valid,\n  input  [31:0] io_regs_wakeupProgram_4_write_bits,\n  output [31:0] io_regs_wakeupProgram_4_read,\n  input   io_regs_wakeupProgram_5_write_valid,\n  input  [31:0] io_regs_wakeupProgram_5_write_bits,\n  output [31:0] io_regs_wakeupProgram_5_read,\n  input   io_regs_wakeupProgram_6_write_valid,\n  input  [31:0] io_regs_wakeupProgram_6_write_bits,\n  output [31:0] io_regs_wakeupProgram_6_read,\n  input   io_regs_wakeupProgram_7_write_valid,\n  input  [31:0] io_regs_wakeupProgram_7_write_bits,\n  output [31:0] io_regs_wakeupProgram_7_read,\n  input   io_regs_sleepProgram_0_write_valid,\n  input  [31:0] io_regs_sleepProgram_0_write_bits,\n  output [31:0] io_regs_sleepProgram_0_read,\n  input   io_regs_sleepProgram_1_write_valid,\n  input  [31:0] io_regs_sleepProgram_1_write_bits,\n  output [31:0] io_regs_sleepProgram_1_read,\n  input   io_regs_sleepProgram_2_write_valid,\n  input  [31:0] io_regs_sleepProgram_2_write_bits,\n  output [31:0] io_regs_sleepProgram_2_read,\n  input   io_regs_sleepProgram_3_write_valid,\n  input  [31:0] io_regs_sleepProgram_3_write_bits,\n  output [31:0] io_regs_sleepProgram_3_read,\n  input   io_regs_sleepProgram_4_write_valid,\n  input  [31:0] io_regs_sleepProgram_4_write_bits,\n  output [31:0] io_regs_sleepProgram_4_read,\n  input   io_regs_sleepProgram_5_write_valid,\n  input  [31:0] io_regs_sleepProgram_5_write_bits,\n  output [31:0] io_regs_sleepProgram_5_read,\n  input   io_regs_sleepProgram_6_write_valid,\n  input  [31:0] io_regs_sleepProgram_6_write_bits,\n  output [31:0] io_regs_sleepProgram_6_read,\n  input   io_regs_sleepProgram_7_write_valid,\n  input  [31:0] io_regs_sleepProgram_7_write_bits,\n  output [31:0] io_regs_sleepProgram_7_read,\n  input   io_resetCauses_wdogrst,\n  input   io_resetCauses_erst,\n  input   io_resetCauses_porrst\n);\n\n  reg  T_355;\n  reg [31:0] GEN_1;\n  reg  T_356;\n  reg [31:0] GEN_2;\n  wire  core_clock;\n  wire  core_reset;\n  wire  core_io_wakeup_awakeup;\n  wire  core_io_wakeup_dwakeup;\n  wire  core_io_wakeup_rtc;\n  wire  core_io_wakeup_reset;\n  wire  core_io_control_valid;\n  wire  core_io_control_bits_hfclkrst;\n  wire  core_io_control_bits_corerst;\n  wire  core_io_control_bits_reserved1;\n  wire  core_io_control_bits_vddpaden;\n  wire  core_io_control_bits_reserved0;\n  wire [1:0] core_io_resetCause;\n  wire  core_io_regs_ie_write_valid;\n  wire [3:0] core_io_regs_ie_write_bits;\n  wire [3:0] core_io_regs_ie_read;\n  wire  core_io_regs_cause_write_valid;\n  wire [31:0] core_io_regs_cause_write_bits;\n  wire [31:0] core_io_regs_cause_read;\n  wire  core_io_regs_sleep_write_valid;\n  wire [31:0] core_io_regs_sleep_write_bits;\n  wire [31:0] core_io_regs_sleep_read;\n  wire  core_io_regs_key_write_valid;\n  wire [31:0] core_io_regs_key_write_bits;\n  wire [31:0] core_io_regs_key_read;\n  wire  core_io_regs_wakeupProgram_0_write_valid;\n  wire [31:0] core_io_regs_wakeupProgram_0_write_bits;\n  wire [31:0] core_io_regs_wakeupProgram_0_read;\n  wire  core_io_regs_wakeupProgram_1_write_valid;\n  wire [31:0] core_io_regs_wakeupProgram_1_write_bits;\n  wire [31:0] core_io_regs_wakeupProgram_1_read;\n  wire  core_io_regs_wakeupProgram_2_write_valid;\n  wire [31:0] core_io_regs_wakeupProgram_2_write_bits;\n  wire [31:0] core_io_regs_wakeupProgram_2_read;\n  wire  core_io_regs_wakeupProgram_3_write_valid;\n  wire [31:0] core_io_regs_wakeupProgram_3_write_bits;\n  wire [31:0] core_io_regs_wakeupProgram_3_read;\n  wire  core_io_regs_wakeupProgram_4_write_valid;\n  wire [31:0] core_io_regs_wakeupProgram_4_write_bits;\n  wire [31:0] core_io_regs_wakeupProgram_4_read;\n  wire  core_io_regs_wakeupProgram_5_write_valid;\n  wire [31:0] core_io_regs_wakeupProgram_5_write_bits;\n  wire [31:0] core_io_regs_wakeupProgram_5_read;\n  wire  core_io_regs_wakeupProgram_6_write_valid;\n  wire [31:0] core_io_regs_wakeupProgram_6_write_bits;\n  wire [31:0] core_io_regs_wakeupProgram_6_read;\n  wire  core_io_regs_wakeupProgram_7_write_valid;\n  wire [31:0] core_io_regs_wakeupProgram_7_write_bits;\n  wire [31:0] core_io_regs_wakeupProgram_7_read;\n  wire  core_io_regs_sleepProgram_0_write_valid;\n  wire [31:0] core_io_regs_sleepProgram_0_write_bits;\n  wire [31:0] core_io_regs_sleepProgram_0_read;\n  wire  core_io_regs_sleepProgram_1_write_valid;\n  wire [31:0] core_io_regs_sleepProgram_1_write_bits;\n  wire [31:0] core_io_regs_sleepProgram_1_read;\n  wire  core_io_regs_sleepProgram_2_write_valid;\n  wire [31:0] core_io_regs_sleepProgram_2_write_bits;\n  wire [31:0] core_io_regs_sleepProgram_2_read;\n  wire  core_io_regs_sleepProgram_3_write_valid;\n  wire [31:0] core_io_regs_sleepProgram_3_write_bits;\n  wire [31:0] core_io_regs_sleepProgram_3_read;\n  wire  core_io_regs_sleepProgram_4_write_valid;\n  wire [31:0] core_io_regs_sleepProgram_4_write_bits;\n  wire [31:0] core_io_regs_sleepProgram_4_read;\n  wire  core_io_regs_sleepProgram_5_write_valid;\n  wire [31:0] core_io_regs_sleepProgram_5_write_bits;\n  wire [31:0] core_io_regs_sleepProgram_5_read;\n  wire  core_io_regs_sleepProgram_6_write_valid;\n  wire [31:0] core_io_regs_sleepProgram_6_write_bits;\n  wire [31:0] core_io_regs_sleepProgram_6_read;\n  wire  core_io_regs_sleepProgram_7_write_valid;\n  wire [31:0] core_io_regs_sleepProgram_7_write_bits;\n  wire [31:0] core_io_regs_sleepProgram_7_read;\n  wire [1:0] T_358;\n  wire [1:0] T_359;\n  wire [2:0] T_360;\n  wire [4:0] T_361;\n  wire [4:0] T_362;\n  wire  AsyncResetRegVec_1_1_clock;\n  wire  AsyncResetRegVec_1_1_reset;\n  wire [4:0] AsyncResetRegVec_1_1_io_d;\n  wire [4:0] AsyncResetRegVec_1_1_io_q;\n  wire  AsyncResetRegVec_1_1_io_en;\n  //wire [4:0] latch;\n  //Bob: the naming as latch is not good, which will introduce some confusing, so we give it renames here\n  wire [4:0] core_io_control_bits;\n  wire  T_369_hfclkrst;\n  wire  T_369_corerst;\n  wire  T_369_reserved1;\n  wire  T_369_vddpaden;\n  wire  T_369_reserved0;\n  wire  T_375;\n  wire  T_376;\n  wire  T_377;\n  wire  T_378;\n  wire  T_379;\n  wire [1:0] T_380;\n  wire [2:0] T_381;\n  //Bob: Name as Latch is not good, give it new name here\n  //wire  SRLatch_3_q;\n  //wire  SRLatch_3_reset;\n  //wire  SRLatch_3_set;\n  wire  T_382;\n  wire  T_383;\n  wire  T_384;\n  wire  T_385;\n  //wire  SRLatch_1_1_q;\n  //wire  SRLatch_1_1_reset;\n  //wire  SRLatch_1_1_set;\n  wire  T_389;\n  //wire  SRLatch_2_1_q;\n  //wire  SRLatch_2_1_reset;\n  //wire  SRLatch_2_1_set;\n  wire  T_393;\n  wire [1:0] T_394;\n  wire [2:0] T_395;\n  wire  T_396;\n  wire [1:0] T_397;\n  wire [1:0] GEN_0;\n  wire [1:0] T_400;\n  wire  T_401;\n  wire [1:0] T_402;\n  sirv_pmu_core u_pmu_core (\n    .clock(core_clock),\n    .reset(core_reset),\n    .io_wakeup_awakeup(core_io_wakeup_awakeup),\n    .io_wakeup_dwakeup(core_io_wakeup_dwakeup),\n    .io_wakeup_rtc(core_io_wakeup_rtc),\n    .io_wakeup_reset(core_io_wakeup_reset),\n    .io_control_valid(core_io_control_valid),\n    .io_control_bits_hfclkrst(core_io_control_bits_hfclkrst),\n    .io_control_bits_corerst(core_io_control_bits_corerst),\n    .io_control_bits_reserved1(core_io_control_bits_reserved1),\n    .io_control_bits_vddpaden(core_io_control_bits_vddpaden),\n    .io_control_bits_reserved0(core_io_control_bits_reserved0),\n    .io_resetCause(core_io_resetCause),\n    .io_regs_ie_write_valid(core_io_regs_ie_write_valid),\n    .io_regs_ie_write_bits(core_io_regs_ie_write_bits),\n    .io_regs_ie_read(core_io_regs_ie_read),\n    .io_regs_cause_write_valid(core_io_regs_cause_write_valid),\n    .io_regs_cause_write_bits(core_io_regs_cause_write_bits),\n    .io_regs_cause_read(core_io_regs_cause_read),\n    .io_regs_sleep_write_valid(core_io_regs_sleep_write_valid),\n    .io_regs_sleep_write_bits(core_io_regs_sleep_write_bits),\n    .io_regs_sleep_read(core_io_regs_sleep_read),\n    .io_regs_key_write_valid(core_io_regs_key_write_valid),\n    .io_regs_key_write_bits(core_io_regs_key_write_bits),\n    .io_regs_key_read(core_io_regs_key_read),\n    .io_regs_wakeupProgram_0_write_valid(core_io_regs_wakeupProgram_0_write_valid),\n    .io_regs_wakeupProgram_0_write_bits(core_io_regs_wakeupProgram_0_write_bits),\n    .io_regs_wakeupProgram_0_read(core_io_regs_wakeupProgram_0_read),\n    .io_regs_wakeupProgram_1_write_valid(core_io_regs_wakeupProgram_1_write_valid),\n    .io_regs_wakeupProgram_1_write_bits(core_io_regs_wakeupProgram_1_write_bits),\n    .io_regs_wakeupProgram_1_read(core_io_regs_wakeupProgram_1_read),\n    .io_regs_wakeupProgram_2_write_valid(core_io_regs_wakeupProgram_2_write_valid),\n    .io_regs_wakeupProgram_2_write_bits(core_io_regs_wakeupProgram_2_write_bits),\n    .io_regs_wakeupProgram_2_read(core_io_regs_wakeupProgram_2_read),\n    .io_regs_wakeupProgram_3_write_valid(core_io_regs_wakeupProgram_3_write_valid),\n    .io_regs_wakeupProgram_3_write_bits(core_io_regs_wakeupProgram_3_write_bits),\n    .io_regs_wakeupProgram_3_read(core_io_regs_wakeupProgram_3_read),\n    .io_regs_wakeupProgram_4_write_valid(core_io_regs_wakeupProgram_4_write_valid),\n    .io_regs_wakeupProgram_4_write_bits(core_io_regs_wakeupProgram_4_write_bits),\n    .io_regs_wakeupProgram_4_read(core_io_regs_wakeupProgram_4_read),\n    .io_regs_wakeupProgram_5_write_valid(core_io_regs_wakeupProgram_5_write_valid),\n    .io_regs_wakeupProgram_5_write_bits(core_io_regs_wakeupProgram_5_write_bits),\n    .io_regs_wakeupProgram_5_read(core_io_regs_wakeupProgram_5_read),\n    .io_regs_wakeupProgram_6_write_valid(core_io_regs_wakeupProgram_6_write_valid),\n    .io_regs_wakeupProgram_6_write_bits(core_io_regs_wakeupProgram_6_write_bits),\n    .io_regs_wakeupProgram_6_read(core_io_regs_wakeupProgram_6_read),\n    .io_regs_wakeupProgram_7_write_valid(core_io_regs_wakeupProgram_7_write_valid),\n    .io_regs_wakeupProgram_7_write_bits(core_io_regs_wakeupProgram_7_write_bits),\n    .io_regs_wakeupProgram_7_read(core_io_regs_wakeupProgram_7_read),\n    .io_regs_sleepProgram_0_write_valid(core_io_regs_sleepProgram_0_write_valid),\n    .io_regs_sleepProgram_0_write_bits(core_io_regs_sleepProgram_0_write_bits),\n    .io_regs_sleepProgram_0_read(core_io_regs_sleepProgram_0_read),\n    .io_regs_sleepProgram_1_write_valid(core_io_regs_sleepProgram_1_write_valid),\n    .io_regs_sleepProgram_1_write_bits(core_io_regs_sleepProgram_1_write_bits),\n    .io_regs_sleepProgram_1_read(core_io_regs_sleepProgram_1_read),\n    .io_regs_sleepProgram_2_write_valid(core_io_regs_sleepProgram_2_write_valid),\n    .io_regs_sleepProgram_2_write_bits(core_io_regs_sleepProgram_2_write_bits),\n    .io_regs_sleepProgram_2_read(core_io_regs_sleepProgram_2_read),\n    .io_regs_sleepProgram_3_write_valid(core_io_regs_sleepProgram_3_write_valid),\n    .io_regs_sleepProgram_3_write_bits(core_io_regs_sleepProgram_3_write_bits),\n    .io_regs_sleepProgram_3_read(core_io_regs_sleepProgram_3_read),\n    .io_regs_sleepProgram_4_write_valid(core_io_regs_sleepProgram_4_write_valid),\n    .io_regs_sleepProgram_4_write_bits(core_io_regs_sleepProgram_4_write_bits),\n    .io_regs_sleepProgram_4_read(core_io_regs_sleepProgram_4_read),\n    .io_regs_sleepProgram_5_write_valid(core_io_regs_sleepProgram_5_write_valid),\n    .io_regs_sleepProgram_5_write_bits(core_io_regs_sleepProgram_5_write_bits),\n    .io_regs_sleepProgram_5_read(core_io_regs_sleepProgram_5_read),\n    .io_regs_sleepProgram_6_write_valid(core_io_regs_sleepProgram_6_write_valid),\n    .io_regs_sleepProgram_6_write_bits(core_io_regs_sleepProgram_6_write_bits),\n    .io_regs_sleepProgram_6_read(core_io_regs_sleepProgram_6_read),\n    .io_regs_sleepProgram_7_write_valid(core_io_regs_sleepProgram_7_write_valid),\n    .io_regs_sleepProgram_7_write_bits(core_io_regs_sleepProgram_7_write_bits),\n    .io_regs_sleepProgram_7_read(core_io_regs_sleepProgram_7_read)\n  );\n  sirv_AsyncResetRegVec_1 AsyncResetRegVec_1_1 (\n    .clock(AsyncResetRegVec_1_1_clock),\n    .reset(AsyncResetRegVec_1_1_reset),\n    .io_d(AsyncResetRegVec_1_1_io_d),\n    .io_q(AsyncResetRegVec_1_1_io_q),\n    .io_en(AsyncResetRegVec_1_1_io_en)\n  );\n  //Bob: Since the SR Latch is not friend to the ASIC flow, so I just replace it to the DFF\n  // And the name as Latch is not good, so give it a new name here\n\n  wire por_reset  = T_382;// POR\n  wire erst_reset = T_383;// ERST\n  wire wdog_reset = T_384;// WDOG\n\n  // In case we lost the reset, we need to just use two-dff syncer to catch up the reset, and until the clock\n  //   is there to clear it\n  reg por_reset_r;\n  reg por_reset_r_r;\n  always @(posedge clock or posedge por_reset) begin\n    if(por_reset) begin\n      por_reset_r   <= 1'b1;\n      por_reset_r_r <= 1'b1;\n    end\n    else begin\n      por_reset_r   <= 1'b0;\n      por_reset_r_r <= por_reset_r;\n    end\n  end\n\n  reg erst_reset_r;\n  reg erst_reset_r_r;\n  always @(posedge clock or posedge erst_reset) begin\n    if(erst_reset) begin\n      erst_reset_r   <= 1'b1;\n      erst_reset_r_r <= 1'b1;\n    end\n    else begin\n      erst_reset_r   <= 1'b0;\n      erst_reset_r_r <= erst_reset_r;\n    end\n  end\n\n  reg wdog_reset_r;\n  reg wdog_reset_r_r;\n  always @(posedge clock or posedge wdog_reset) begin\n    if(wdog_reset) begin\n      wdog_reset_r   <= 1'b1;\n      wdog_reset_r_r <= 1'b1;\n    end\n    else begin\n      wdog_reset_r   <= 1'b0;\n      wdog_reset_r_r <= wdog_reset_r;\n    end\n  end\n\n  // Reset cause priority if they are coming at same time:\n      // POR\n      // Erst\n      // Wdog\n  wire rstcause_por_set  = por_reset_r_r; \n  wire rstcause_erst_set = erst_reset_r_r & (~por_reset_r_r); \n  wire rstcause_wdog_set = wdog_reset_r_r & (~erst_reset_r_r) & (~por_reset_r_r); \n\n    // The POR only clear if:\n        // there is no POR reset,\n        // And there are other two resets \n  wire rstcause_por_clr  = (~por_reset_r_r) & (erst_reset_r_r | wdog_reset_r_r); \n    // The Erst only clear if:\n        // there is POR reset,\n        // or, there is no erst reset and there is wdog reset\n  wire rstcause_erst_clr = por_reset_r_r | ((~erst_reset_r_r) & wdog_reset_r_r); \n    // The Wdog only clear if:\n        // there is POR or Erst reset,\n  wire rstcause_wdog_clr = por_reset_r_r | erst_reset_r_r;\n\n  wire rstcause_por_ena  = rstcause_por_set  | rstcause_por_clr ;   \n  wire rstcause_erst_ena = rstcause_erst_set | rstcause_erst_clr; \n  wire rstcause_wdog_ena = rstcause_wdog_set | rstcause_wdog_clr; \n\n  wire rstcause_por_nxt  = rstcause_por_set  | (~rstcause_por_clr );   \n  wire rstcause_erst_nxt = rstcause_erst_set | (~rstcause_erst_clr); \n  wire rstcause_wdog_nxt = rstcause_wdog_set | (~rstcause_wdog_clr); \n\n  reg rstcause_por_r;\n  reg rstcause_wdog_r;\n  reg rstcause_erst_r;\n\n  // The reset cause itself cannot have reset signal\n  always @(posedge clock) begin\n    if(rstcause_por_ena) begin\n      rstcause_por_r <= rstcause_por_nxt;\n    end\n  end\n\n  always @(posedge clock) begin\n    if(rstcause_erst_ena) begin\n      rstcause_erst_r <= rstcause_erst_nxt;\n    end\n  end\n\n  always @(posedge clock) begin\n    if(rstcause_wdog_ena) begin\n      rstcause_wdog_r <= rstcause_wdog_nxt;\n    end\n  end\n  //sirv_SRLatch SRLatch_3 ( // POR\n  //  .q(SRLatch_3_q),\n  //  .reset(SRLatch_3_reset),\n  //  .set(SRLatch_3_set)\n  //);\n  //sirv_SRLatch SRLatch_1_1 (// ERST\n  //  .q(SRLatch_1_1_q),\n  //  .reset(SRLatch_1_1_reset),\n  //  .set(SRLatch_1_1_set)\n  //);\n  //sirv_SRLatch SRLatch_2_1 (//WDOG\n  //  .q(SRLatch_2_1_q),\n  //  .reset(SRLatch_2_1_reset),\n  //  .set(SRLatch_2_1_set)\n  //);\n  assign io_control_hfclkrst = T_369_hfclkrst;\n  assign io_control_corerst = T_369_corerst;\n  assign io_control_reserved1 = T_369_reserved1;\n  assign io_control_vddpaden = T_369_vddpaden;\n  assign io_control_reserved0 = T_369_reserved0;\n  assign io_regs_ie_read = core_io_regs_ie_read;\n  assign io_regs_cause_read = core_io_regs_cause_read;\n  assign io_regs_sleep_read = core_io_regs_sleep_read;\n  assign io_regs_key_read = core_io_regs_key_read;\n  assign io_regs_wakeupProgram_0_read = core_io_regs_wakeupProgram_0_read;\n  assign io_regs_wakeupProgram_1_read = core_io_regs_wakeupProgram_1_read;\n  assign io_regs_wakeupProgram_2_read = core_io_regs_wakeupProgram_2_read;\n  assign io_regs_wakeupProgram_3_read = core_io_regs_wakeupProgram_3_read;\n  assign io_regs_wakeupProgram_4_read = core_io_regs_wakeupProgram_4_read;\n  assign io_regs_wakeupProgram_5_read = core_io_regs_wakeupProgram_5_read;\n  assign io_regs_wakeupProgram_6_read = core_io_regs_wakeupProgram_6_read;\n  assign io_regs_wakeupProgram_7_read = core_io_regs_wakeupProgram_7_read;\n  assign io_regs_sleepProgram_0_read = core_io_regs_sleepProgram_0_read;\n  assign io_regs_sleepProgram_1_read = core_io_regs_sleepProgram_1_read;\n  assign io_regs_sleepProgram_2_read = core_io_regs_sleepProgram_2_read;\n  assign io_regs_sleepProgram_3_read = core_io_regs_sleepProgram_3_read;\n  assign io_regs_sleepProgram_4_read = core_io_regs_sleepProgram_4_read;\n  assign io_regs_sleepProgram_5_read = core_io_regs_sleepProgram_5_read;\n  assign io_regs_sleepProgram_6_read = core_io_regs_sleepProgram_6_read;\n  assign io_regs_sleepProgram_7_read = core_io_regs_sleepProgram_7_read;\n  assign core_clock = clock;\n  assign core_reset = T_356;\n  assign core_io_wakeup_awakeup = io_wakeup_awakeup;\n  assign core_io_wakeup_dwakeup = io_wakeup_dwakeup;\n  assign core_io_wakeup_rtc = io_wakeup_rtc;\n  assign core_io_wakeup_reset = 1'h0;\n  assign core_io_resetCause = T_402;\n  assign core_io_regs_ie_write_valid = io_regs_ie_write_valid;\n  assign core_io_regs_ie_write_bits = io_regs_ie_write_bits;\n  assign core_io_regs_cause_write_valid = io_regs_cause_write_valid;\n  assign core_io_regs_cause_write_bits = io_regs_cause_write_bits;\n  assign core_io_regs_sleep_write_valid = io_regs"}
{"text": "_sleep_write_valid;\n  assign core_io_regs_sleep_write_bits = io_regs_sleep_write_bits;\n  assign core_io_regs_key_write_valid = io_regs_key_write_valid;\n  assign core_io_regs_key_write_bits = io_regs_key_write_bits;\n  assign core_io_regs_wakeupProgram_0_write_valid = io_regs_wakeupProgram_0_write_valid;\n  assign core_io_regs_wakeupProgram_0_write_bits = io_regs_wakeupProgram_0_write_bits;\n  assign core_io_regs_wakeupProgram_1_write_valid = io_regs_wakeupProgram_1_write_valid;\n  assign core_io_regs_wakeupProgram_1_write_bits = io_regs_wakeupProgram_1_write_bits;\n  assign core_io_regs_wakeupProgram_2_write_valid = io_regs_wakeupProgram_2_write_valid;\n  assign core_io_regs_wakeupProgram_2_write_bits = io_regs_wakeupProgram_2_write_bits;\n  assign core_io_regs_wakeupProgram_3_write_valid = io_regs_wakeupProgram_3_write_valid;\n  assign core_io_regs_wakeupProgram_3_write_bits = io_regs_wakeupProgram_3_write_bits;\n  assign core_io_regs_wakeupProgram_4_write_valid = io_regs_wakeupProgram_4_write_valid;\n  assign core_io_regs_wakeupProgram_4_write_bits = io_regs_wakeupProgram_4_write_bits;\n  assign core_io_regs_wakeupProgram_5_write_valid = io_regs_wakeupProgram_5_write_valid;\n  assign core_io_regs_wakeupProgram_5_write_bits = io_regs_wakeupProgram_5_write_bits;\n  assign core_io_regs_wakeupProgram_6_write_valid = io_regs_wakeupProgram_6_write_valid;\n  assign core_io_regs_wakeupProgram_6_write_bits = io_regs_wakeupProgram_6_write_bits;\n  assign core_io_regs_wakeupProgram_7_write_valid = io_regs_wakeupProgram_7_write_valid;\n  assign core_io_regs_wakeupProgram_7_write_bits = io_regs_wakeupProgram_7_write_bits;\n  assign core_io_regs_sleepProgram_0_write_valid = io_regs_sleepProgram_0_write_valid;\n  assign core_io_regs_sleepProgram_0_write_bits = io_regs_sleepProgram_0_write_bits;\n  assign core_io_regs_sleepProgram_1_write_valid = io_regs_sleepProgram_1_write_valid;\n  assign core_io_regs_sleepProgram_1_write_bits = io_regs_sleepProgram_1_write_bits;\n  assign core_io_regs_sleepProgram_2_write_valid = io_regs_sleepProgram_2_write_valid;\n  assign core_io_regs_sleepProgram_2_write_bits = io_regs_sleepProgram_2_write_bits;\n  assign core_io_regs_sleepProgram_3_write_valid = io_regs_sleepProgram_3_write_valid;\n  assign core_io_regs_sleepProgram_3_write_bits = io_regs_sleepProgram_3_write_bits;\n  assign core_io_regs_sleepProgram_4_write_valid = io_regs_sleepProgram_4_write_valid;\n  assign core_io_regs_sleepProgram_4_write_bits = io_regs_sleepProgram_4_write_bits;\n  assign core_io_regs_sleepProgram_5_write_valid = io_regs_sleepProgram_5_write_valid;\n  assign core_io_regs_sleepProgram_5_write_bits = io_regs_sleepProgram_5_write_bits;\n  assign core_io_regs_sleepProgram_6_write_valid = io_regs_sleepProgram_6_write_valid;\n  assign core_io_regs_sleepProgram_6_write_bits = io_regs_sleepProgram_6_write_bits;\n  assign core_io_regs_sleepProgram_7_write_valid = io_regs_sleepProgram_7_write_valid;\n  assign core_io_regs_sleepProgram_7_write_bits = io_regs_sleepProgram_7_write_bits;\n  assign T_358 = {core_io_control_bits_vddpaden,core_io_control_bits_reserved0};\n  assign T_359 = {core_io_control_bits_hfclkrst,core_io_control_bits_corerst};\n  assign T_360 = {T_359,core_io_control_bits_reserved1};\n  assign T_361 = {T_360,T_358};\n  assign T_362 = ~ T_361;\n  assign AsyncResetRegVec_1_1_clock = clock;\n  assign AsyncResetRegVec_1_1_reset = reset;\n  assign AsyncResetRegVec_1_1_io_d = T_362;\n  assign AsyncResetRegVec_1_1_io_en = core_io_control_valid;\n  assign core_io_control_bits = ~ AsyncResetRegVec_1_1_io_q;\n  assign T_369_hfclkrst = T_379;\n  assign T_369_corerst = T_378;\n  assign T_369_reserved1 = T_377;\n  assign T_369_vddpaden = T_376;\n  assign T_369_reserved0 = T_375;\n  assign T_375 = core_io_control_bits[0];\n  assign T_376 = core_io_control_bits[1];\n  assign T_377 = core_io_control_bits[2];\n  assign T_378 = core_io_control_bits[3];\n  assign T_379 = core_io_control_bits[4];\n  assign T_380 = {io_resetCauses_wdogrst,io_resetCauses_erst};\n  assign T_381 = {T_380,io_resetCauses_porrst};\n  //assign SRLatch_3_reset = T_385;\n  //assign SRLatch_3_set = T_382;// POR\n  assign T_382 = T_381[0];// The POR\n  assign T_383 = T_381[1];// The ERST\n  assign T_384 = T_381[2];// The WDOG\n  assign T_385 = T_383 | T_384;\n  //assign SRLatch_1_1_reset = T_389;\n  //assign SRLatch_1_1_set = T_383;// ERST\n  assign T_389 = T_382 | T_384;\n  //assign SRLatch_2_1_reset = T_393;\n  //assign SRLatch_2_1_set = T_384;// WDOG\n  assign T_393 = T_382 | T_383;\n  //assign T_394 = {SRLatch_2_1_q,SRLatch_1_1_q};\n  //Bob assign T_395 = {T_394,SRLatch_3_q};\n  assign T_394 = {rstcause_wdog_r,rstcause_erst_r};\n  assign T_395 = {T_394,rstcause_por_r};\n  assign T_396 = T_395[2];\n  assign T_397 = T_395[1:0];\n  assign GEN_0 = {{1'd0}, T_396};\n  assign T_400 = GEN_0 | T_397;\n  assign T_401 = T_400[1];\n  assign T_402 = {T_396,T_401};\n  //Bob: The original code is here \n  //always @(posedge clock) begin\n  //  T_355 <= reset;\n  //  T_356 <= T_355;\n  //end\n  //Bob: Why here need to flop the reset twice? this is not allowed in coding style so just comment it out\n  always @(posedge clock or posedge reset) begin\n    if(reset) begin\n      T_355 <= 1'b1;\n      T_356 <= 1'b1;\n    end\n    else begin\n      T_355 <= 1'b0;\n      T_356 <= T_355;\n    end\n  end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_pmu_core(\n  input   clock,\n  input   reset,\n  input   io_wakeup_awakeup,\n  input   io_wakeup_dwakeup,\n  input   io_wakeup_rtc,\n  input   io_wakeup_reset,\n  output  io_control_valid,\n  output  io_control_bits_hfclkrst,\n  output  io_control_bits_corerst,\n  output  io_control_bits_reserved1,\n  output  io_control_bits_vddpaden,\n  output  io_control_bits_reserved0,\n  input  [1:0] io_resetCause,\n  input   io_regs_ie_write_valid,\n  input  [3:0] io_regs_ie_write_bits,\n  output [3:0] io_regs_ie_read,\n  input   io_regs_cause_write_valid,\n  input  [31:0] io_regs_cause_write_bits,\n  output [31:0] io_regs_cause_read,\n  input   io_regs_sleep_write_valid,\n  input  [31:0] io_regs_sleep_write_bits,\n  output [31:0] io_regs_sleep_read,\n  input   io_regs_key_write_valid,\n  input  [31:0] io_regs_key_write_bits,\n  output [31:0] io_regs_key_read,\n  input   io_regs_wakeupProgram_0_write_valid,\n  input  [31:0] io_regs_wakeupProgram_0_write_bits,\n  output [31:0] io_regs_wakeupProgram_0_read,\n  input   io_regs_wakeupProgram_1_write_valid,\n  input  [31:0] io_regs_wakeupProgram_1_write_bits,\n  output [31:0] io_regs_wakeupProgram_1_read,\n  input   io_regs_wakeupProgram_2_write_valid,\n  input  [31:0] io_regs_wakeupProgram_2_write_bits,\n  output [31:0] io_regs_wakeupProgram_2_read,\n  input   io_regs_wakeupProgram_3_write_valid,\n  input  [31:0] io_regs_wakeupProgram_3_write_bits,\n  output [31:0] io_regs_wakeupProgram_3_read,\n  input   io_regs_wakeupProgram_4_write_valid,\n  input  [31:0] io_regs_wakeupProgram_4_write_bits,\n  output [31:0] io_regs_wakeupProgram_4_read,\n  input   io_regs_wakeupProgram_5_write_valid,\n  input  [31:0] io_regs_wakeupProgram_5_write_bits,\n  output [31:0] io_regs_wakeupProgram_5_read,\n  input   io_regs_wakeupProgram_6_write_valid,\n  input  [31:0] io_regs_wakeupProgram_6_write_bits,\n  output [31:0] io_regs_wakeupProgram_6_read,\n  input   io_regs_wakeupProgram_7_write_valid,\n  input  [31:0] io_regs_wakeupProgram_7_write_bits,\n  output [31:0] io_regs_wakeupProgram_7_read,\n  input   io_regs_sleepProgram_0_write_valid,\n  input  [31:0] io_regs_sleepProgram_0_write_bits,\n  output [31:0] io_regs_sleepProgram_0_read,\n  input   io_regs_sleepProgram_1_write_valid,\n  input  [31:0] io_regs_sleepProgram_1_write_bits,\n  output [31:0] io_regs_sleepProgram_1_read,\n  input   io_regs_sleepProgram_2_write_valid,\n  input  [31:0] io_regs_sleepProgram_2_write_bits,\n  output [31:0] io_regs_sleepProgram_2_read,\n  input   io_regs_sleepProgram_3_write_valid,\n  input  [31:0] io_regs_sleepProgram_3_write_bits,\n  output [31:0] io_regs_sleepProgram_3_read,\n  input   io_regs_sleepProgram_4_write_valid,\n  input  [31:0] io_regs_sleepProgram_4_write_bits,\n  output [31:0] io_regs_sleepProgram_4_read,\n  input   io_regs_sleepProgram_5_write_valid,\n  input  [31:0] io_regs_sleepProgram_5_write_bits,\n  output [31:0] io_regs_sleepProgram_5_read,\n  input   io_regs_sleepProgram_6_write_valid,\n  input  [31:0] io_regs_sleepProgram_6_write_bits,\n  output [31:0] io_regs_sleepProgram_6_read,\n  input   io_regs_sleepProgram_7_write_valid,\n  input  [31:0] io_regs_sleepProgram_7_write_bits,\n  output [31:0] io_regs_sleepProgram_7_read\n);\n\n  reg  wantSleep;\n  reg  run;\n  reg [31:0] GEN_37;\n  reg  awake;\n  reg [31:0] GEN_38;\n  wire  T_364;\n  wire  T_365;\n  wire  T_366;\n  wire  T_367;\n  wire  T_368;\n  wire  T_369;\n  wire  T_370;\n  wire  T_371;\n  wire  T_372;\n  wire  T_373;\n  wire  T_374;\n  wire  T_375;\n  wire  T_376;\n  wire  T_377;\n  wire  T_378;\n  wire  T_379;\n  wire  T_380;\n  wire  T_381;\n  wire  T_383;\n  wire  T_385;\n  wire  T_386;\n  wire  T_388;\n  reg  unlocked;\n  reg [31:0] GEN_39;\n  wire  GEN_0;\n  wire  T_391;\n  reg [31:0] GEN_40;\n  wire  GEN_1;\n  reg [2:0] pc;\n  reg [31:0] GEN_41;\n  reg [1:0] wakeupCause;\n  reg [31:0] GEN_42;\n  wire  T_394;\n  reg [3:0] T_396;\n  reg [31:0] GEN_43;\n  wire [3:0] GEN_2;\n  wire [3:0] ie;\n  reg [8:0] wakeupProgram_0;\n  reg [31:0] GEN_44;\n  reg [8:0] wakeupProgram_1;\n  reg [31:0] GEN_45;\n  reg [8:0] wakeupProgram_2;\n  reg [31:0] GEN_46;\n  reg [8:0] wakeupProgram_3;\n  reg [31:0] GEN_47;\n  reg [8:0] wakeupProgram_4;\n  reg [31:0] GEN_48;\n  reg [8:0] wakeupProgram_5;\n  reg [31:0] GEN_49;\n  reg [8:0] wakeupProgram_6;\n  reg [31:0] GEN_50;\n  reg [8:0] wakeupProgram_7;\n  reg [31:0] GEN_51;\n  reg [8:0] sleepProgram_0;\n  reg [31:0] GEN_52;\n  reg [8:0] sleepProgram_1;\n  reg [31:0] GEN_53;\n  reg [8:0] sleepProgram_2;\n  reg [31:0] GEN_54;\n  reg [8:0] sleepProgram_3;\n  reg [31:0] GEN_55;\n  reg [8:0] sleepProgram_4;\n  reg [31:0] GEN_56;\n  reg [8:0] sleepProgram_5;\n  reg [31:0] GEN_57;\n  reg [8:0] sleepProgram_6;\n  reg [31:0] GEN_58;\n  reg [8:0] sleepProgram_7;\n  reg [31:0] GEN_59;\n  wire [2:0] T_423;\n  wire  T_425;\n  wire [2:0] T_427;\n  wire  T_429;\n  wire  T_433;\n  wire [8:0] T_434;\n  wire [8:0] T_439;\n  wire [8:0] T_440;\n  wire [8:0] T_449;\n  wire [8:0] T_454;\n  wire [8:0] T_455;\n  wire [8:0] T_456;\n  wire [8:0] T_469;\n  wire [8:0] T_474;\n  wire [8:0] T_475;\n  wire [8:0] T_484;\n  wire [8:0] T_489;\n  wire [8:0] T_490;\n  wire [8:0] T_491;\n  wire [8:0] insnBits;\n  wire  insn_sigs_hfclkrst;\n  wire  insn_sigs_corerst;\n  wire  insn_sigs_reserved1;\n  wire  insn_sigs_vddpaden;\n  wire  insn_sigs_reserved0;\n  wire [3:0] insn_dt;\n  wire [3:0] T_515;\n  wire  T_516;\n  wire  T_517;\n  wire  T_518;\n  wire  T_519;\n  wire  T_520;\n  reg [15:0] count;\n  reg [31:0] GEN_60;\n  wire [16:0] T_523;\n  wire [15:0] T_524;\n  wire [15:0] T_525;\n  wire [15:0] T_526;\n  wire  tick;\n  wire [3:0] npc;\n  wire  last;\n  wire  T_530;\n  wire  T_531;\n  wire  T_532;\n  wire [15:0] GEN_3;\n  wire  GEN_4;\n  wire [3:0] GEN_5;\n  wire [15:0] GEN_6;\n  wire  GEN_7;\n  wire [3:0] GEN_8;\n  wire  T_540;\n  wire [1:0] T_541;\n  wire [1:0] T_542;\n  wire [3:0] T_543;\n  wire [3:0] T_544;\n  wire  T_546;\n  wire  T_548;\n  wire  T_549;\n  wire  T_552;\n  wire  T_553;\n  wire  T_554;\n  wire [1:0] T_560;\n  wire [1:0] T_561;\n  wire [1:0] T_562;\n  wire  GEN_9;\n  wire  GEN_10;\n  wire [1:0] GEN_11;\n  wire  T_563;\n  wire  GEN_12;\n  wire  GEN_13;\n  wire  GEN_14;\n  wire  GEN_15;\n  wire  GEN_16;\n  wire [1:0] GEN_17;\n  wire  GEN_18;\n  wire [9:0] GEN_35;\n  wire [9:0] T_567;\n  wire [9:0] GEN_36;\n  wire [9:0] T_568;\n  wire  T_570;\n  wire [31:0] GEN_19;\n  wire  T_571;\n  wire [31:0] GEN_20;\n  wire  T_572;\n  wire [31:0] GEN_21;\n  wire  T_573;\n  wire [31:0] GEN_22;\n  wire  T_574;\n  wire [31:0] GEN_23;\n  wire  T_575;\n  wire [31:0] GEN_24;\n  wire  T_576;\n  wire [31:0] GEN_25;\n  wire  T_577;\n  wire [31:0] GEN_26;\n  wire  T_578;\n  wire [31:0] GEN_27;\n  wire  T_579;\n  wire [31:0] GEN_28;\n  wire  T_580;\n  wire [31:0] GEN_29;\n  wire  T_581;\n  wire [31:0] GEN_30;\n  wire  T_582;\n  wire [31:0] GEN_31;\n  wire  T_583;\n  wire [31:0] GEN_32;\n  wire  T_584;\n  wire [31:0] GEN_33;\n  wire  T_585;\n  wire [31:0] GEN_34;\n  assign io_control_valid = T_532;\n  assign io_control_bits_hfclkrst = insn_sigs_hfclkrst;\n  assign io_control_bits_corerst = insn_sigs_corerst;\n  assign io_control_bits_reserved1 = insn_sigs_reserved1;\n  assign io_control_bits_vddpaden = insn_sigs_vddpaden;\n  assign io_control_bits_reserved0 = insn_sigs_reserved0;\n  assign io_regs_ie_read = ie;\n  assign io_regs_cause_read = {{22'd0}, T_568};\n  assign io_regs_sleep_read = {31'h0,wantSleep};\n  assign io_regs_key_read = {{31'd0}, unlocked};\n  assign io_regs_wakeupProgram_0_read = {{23'd0}, wakeupProgram_0};\n  assign io_regs_wakeupProgram_1_read = {{23'd0}, wakeupProgram_1};\n  assign io_regs_wakeupProgram_2_read = {{23'd0}, wakeupProgram_2};\n  assign io_regs_wakeupProgram_3_read = {{23'd0}, wakeupProgram_3};\n  assign io_regs_wakeupProgram_4_read = {{23'd0}, wakeupProgram_4};\n  assign io_regs_wakeupProgram_5_read = {{23'd0}, wakeupProgram_5};\n  assign io_regs_wakeupProgram_6_read = {{23'd0}, wakeupProgram_6};\n  assign io_regs_wakeupProgram_7_read = {{23'd0}, wakeupProgram_7};\n  assign io_regs_sleepProgram_0_read = {{23'd0}, sleepProgram_0};\n  assign io_regs_sleepProgram_1_read = {{23'd0}, sleepProgram_1};\n  assign io_regs_sleepProgram_2_read = {{23'd0}, sleepProgram_2};\n  assign io_regs_sleepProgram_3_read = {{23'd0}, sleepProgram_3};\n  assign io_regs_sleepProgram_4_read = {{23'd0}, sleepProgram_4};\n  assign io_regs_sleepProgram_5_read = {{23'd0}, sleepProgram_5};\n  assign io_regs_sleepProgram_6_read = {{23'd0}, sleepProgram_6};\n  assign io_regs_sleepProgram_7_read = {{23'd0}, sleepProgram_7};\n  assign T_364 = io_regs_sleepProgram_0_write_valid | io_regs_sleepProgram_1_write_valid;\n  assign T_365 = T_364 | io_regs_sleepProgram_2_write_valid;\n  assign T_366 = T_365 | io_regs_sleepProgram_3_write_valid;\n  assign T_367 = T_366 | io_regs_sleepProgram_4_write_valid;\n  assign T_368 = T_367 | io_regs_sleepProgram_5_write_valid;\n  assign T_369 = T_368 | io_regs_sleepProgram_6_write_valid;\n  assign T_370 = T_369 | io_regs_sleepProgram_7_write_valid;\n  assign T_371 = io_regs_wakeupProgram_0_write_valid | io_regs_wakeupProgram_1_write_valid;\n  assign T_372 = T_371 | io_regs_wakeupProgram_2_write_valid;\n  assign T_373 = T_372 | io_regs_wakeupProgram_3_write_valid;\n  assign T_374 = T_373 | io_regs_wakeupProgram_4_write_valid;\n  assign T_375 = T_374 | io_regs_wakeupProgram_5_write_valid;\n  assign T_376 = T_375 | io_regs_wakeupProgram_6_write_valid;\n  assign T_377 = T_376 | io_regs_wakeupProgram_7_write_valid;\n  assign T_378 = T_370 | T_377;\n  assign T_379 = T_378 | io_regs_sleep_write_valid;\n  assign T_380 = T_379 | io_regs_cause_write_valid;\n  assign T_381 = T_380 | io_regs_ie_write_valid;\n  assign T_383 = io_regs_key_write_bits == 32'h51f15e;\n  assign T_385 = T_381 == 1'h0;\n  assign T_386 = T_383 & T_385;\n  assign T_388 = io_regs_key_write_valid | T_381;\n  assign GEN_0 = T_388 ? T_386 : unlocked;\n  assign T_391 = io_regs_sleep_write_valid & unlocked;\n  assign GEN_1 = T_391 ? 1'h1 : wantSleep;\n  assign T_394 = io_regs_ie_write_valid & unlocked;\n  assign GEN_2 = T_394 ? io_regs_ie_write_bits : T_396;\n  assign ie = T_396 | 4'h1;\n  assign T_423 = pc & 3'h3;\n  assign T_425 = pc >= 3'h4;\n  assign T_427 = T_423 & 3'h1;\n  assign T_429 = T_423 >= 3'h2;\n  assign T_433 = T_427 >= 3'h1;\n  assign T_434 = T_433 ? wakeupProgram_7 : wakeupProgram_6;\n  assign T_439 = T_433 ? wakeupProgram_5 : wakeupProgram_4;\n  assign T_440 = T_429 ? T_434 : T_439;\n  assign T_449 = T_433 ? wakeupProgram_3 : wakeupProgram_2;\n  assign T_454 = T_433 ? wakeupProgram_1 : wakeupProgram_0;\n  assign T_455 = T_429 ? T_449 : T_454;\n  assign T_456 = T_425 ? T_440 : T_455;\n  assign T_469 = T_433 ? sleepProgram_7 : sleepProgram_6;\n  assign T_474 = T_433 ? sleepProgram_5 : sleepProgram_4;\n  assign T_475 = T_429 ? T_469 : T_474;\n  assign T_484 = T_433 ? sleepProgram_3 : sleepProgram_2;\n  assign T_489 = T_433 ? sleepProgram_1 : sleepProgram_0;\n  assign T_490 = T_429 ? T_484 : T_489;\n  assign T_491 = T_425 ? T_475 : T_490;\n  assign insnBits = awake ? T_456 : T_491;\n  assign insn_sigs_hfclkrst = T_520;\n  assign insn_sigs_corerst = T_519;\n  assign insn_sigs_reserved1 = T_518;\n  assign insn_sigs_vddpaden = T_517;\n  assign insn_sigs_reserved0 = T_516;\n  assign insn_dt = T_515;\n  assign T_515 = insnBits[3:0];\n  assign T_516 = insnBits[4];\n  assign T_517 = insnBits[5];\n  assign T_518 = insnBits[6];\n  assign T_519 = insnBits[7];\n  assign T_520 = insnBits[8];\n  assign T_523 = count + 16'h1;\n  assign T_524 = T_523[15:0];\n  assign T_525 = count ^ T_524;\n  assign T_526 = T_525 >> insn_dt;\n  assign tick = T_526[0];\n  assign npc = pc + 3'h1;\n  assign last = npc >= 4'h8;\n  assign T_530 = last == 1'h0;\n  assign T_531 = run & T_530;\n  assign T_532 = T_531 & tick;\n  assign GEN_3 = tick ? 16'h0 : T_524;\n  assign GEN_4 = tick ? T_530 : run;\n  assign GEN_5 = tick ? npc : {{1'd0}, pc};\n  assign GEN_6 = run ? GEN_3 : count;\n  assign GEN_7 = run ? GEN_4 : run;\n  assign GEN_8 = run ? GEN_5 : {{1'd0}, pc};\n  assign T_540 = run == 1'h0;\n  assign T_541 = {io_wakeup_rtc,io_wakeup_reset};\n  assign T_542 = {io_wakeup_awakeup,io_wakeup_dwakeup};\n  assign T_543 = {T_542,T_541};\n  assign T_544 = ie & T_543;\n  assign T_546 = awake == 1'h0;\n  assign T_548 = T_544 != 4'h0;\n  assign T_549 = T_546 & T_548;\n  assign T_552 = T_544[0];\n  assign T_553 = T_544[1];\n  assign T_554 = T_544[2];\n  assign T_560 = T_554 ? 2'h2 : 2'h3;\n  assign T_561 = T_553 ? 2'h1 : T_560;\n  assign T_562 = T_552 ? 2'h0 : T_561;\n  assign GEN_9 = T_549 ? 1'h1 : GEN_7;\n  assign GEN_10 = T_549 ? 1'h1 : awake;\n  assign GEN_11 = T_549 ? T_562 : wakeupCause;\n  //Bob: here we introduce a core_wfi signal to make sure when the PMU is\n  //     going to power down MOFF, the core is really idle (executed wfi)\n  //assign T_563 = awake & wantSleep & core_wfi;\n  assign T_563 = awake & wantSleep;// Current we dont add it\n  assign GEN_12 = T_563 ? 1'h1 : GEN_9;\n  assign GEN_13 = T_563 ? 1'h0 : GEN_10;\n  assign GEN_14 = T_563 ? 1'h0 : GEN_1;\n  assign GEN_15 = T_540 ? GEN_12 : GEN_7;\n  assign GEN_16 = T_540 ? GEN_13 : awake;\n  assign GEN_17 = T_540 ? GEN_11 : wakeupCause;\n  assign GEN_18 = T_540 ? GEN_14 : GEN_1;\n  assign GEN_35 = {{8'd0}, io_resetCause};\n  assign T_567 = GEN_35 << 8;\n  assign GEN_36 = {{8'd0}, wakeupCause};\n  assign T_568 = GEN_36 | T_567;\n  assign T_570 = io_regs_wakeupProgram_0_write_valid & unlocked;\n  assign GEN_19 = T_570 ? io_regs_wakeupProgram_0_write_bits : {{23'd0}, wakeupProgram_0};\n  assign T_571 = io_regs_wakeupProgram_1_write_valid & unlocked;\n  assign GEN_20 = T_571 ? io_regs_wakeupProgram_1_write_bits : {{23'd0}, wakeupProgram_1};\n  assign T_572 = io_regs_wakeupProgram_2_write_valid & unlocked;\n  assign GEN_21 = T_572 ? io_regs_wakeupProgram_2_write_bits : {{23'd0}, wakeupProgram_2};\n  assign T_573 = io_regs_wakeupProgram_3_write_valid & unlocked;\n  assign GEN_22 = T_573 ? io_regs_wakeupProgram_3_write_bits : {{23'd0}, wakeupProgram_3};\n  assign T_574 = io_regs_wakeupProgram_4_write_valid & unlocked;\n  assign GEN_23 = T_574 ? io_regs_wakeupProgram_4_write_bits : {{23'd0}, wakeupProgram_4};\n  assign T_575 = io_regs_wakeupProgram_5_write_valid & unlocked;\n  assign GEN_24 = T_575 ? io_regs_wakeupProgram_5_write_bits : {{23'd0}, wakeupProgram_5};\n  assign T_576 = io_regs_wakeupProgram_6_write_valid & unlocked;\n  assign GEN_25 = T_576 ? io_regs_wakeupProgram_6_write_bits : {{23'd0}, wakeupProgram_6};\n  assign T_577 = io_regs_wakeupProgram_7_write_valid & unlocked;\n  assign GEN_26 = T_577 ? io_regs_wakeupProgram_7_write_bits : {{23'd0}, wakeupProgram_7};\n  assign T_578 = io_regs_sleepProgram_0_write_valid & unlocked;\n  assign GEN_27 = T_578 ? io_regs_sleepProgram_0_write_bits : {{23'd0}, sleepProgram_0};\n  assign T_579 = io_regs_sleepProgram_1_write_valid & unlocked;\n  assign GEN_28 = T_579 ? io_regs_sleepProgram_1_write_bits : {{23'd0}, sleepProgram_1};\n  assign T_580 = io_regs_sleepProgram_2_write_valid & unlocked;\n  assign GEN_29 = T_580 ? io_regs_sleepProgram_2_write_bits : {{23'd0}, sleepProgram_2};\n  assign T_581 = io_regs_sleepProgram_3_write_valid & unlocked;\n  assign GEN_30 = T_581 ? io_regs_sleepProgram_3_write_bits : {{23'd0}, sleepProgram_3};\n  assign T_582 = io_regs_sleepProgram_4_write_valid & unlocked;\n  assign GEN_31 = T_582 ? io_regs_sleepProgram_4_write_bits : {{23'd0}, sleepProgram_4};\n  assign T_583 = io_regs_sleepProgram_5_write_valid & unlocked;\n  assign GEN_32 = T_583 ? io_regs_sleepProgram_5_write_bits : {{23'd0}, sleepProgram_5};\n  assign T_584 = io_regs_sleepProgram_6_write_valid & unlocked;\n  assign GEN_33 = T_584 ? io_regs_sleepProgram_6_write_bits : {{23'd0}, sleepProgram_6};\n  assign T_585 = io_regs_sleepProgram_7_write_valid & unlocked;\n  assign GEN_34 = T_585 ? io_regs_sleepProgram_7_write_bits : {{23'd0}, sleepProgram_7};\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      run <= 1'h1;\n    end else begin\n      if (T_540) begin\n        if (T_563) begin\n          run <= 1'h1;\n        end else begin\n          if (T_549) begin\n            run <= 1'h1;\n          end else begin\n            if (run) begin\n              if (tick) begin\n                run <= T_530;\n              end\n            end\n          end\n        end\n      end else begin\n        if (run) begin\n          if (tick) begin\n            run <= T_530;\n          end\n        end\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      awake <= 1'h1;\n    end else begin\n      if (T_540) begin\n        if (T_563) begin\n          awake <= 1'h0;\n        end else begin\n          if (T_549) begin\n            awake <= 1'h1;\n          end\n        end\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      unlocked <= 1'h0;\n    end else begin\n      if (T_388) begin\n        unlocked <= T_386;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      wantSleep <= 1'h0;\n    end else begin\n      if (T_540) begin\n        if (T_563) begin\n          wantSleep <= 1'h0;\n        end else begin\n          if (T_391) begin\n            wantSleep <= io_regs_sleep_write_bits[0];\n          end\n        end\n      end else begin\n        if (T_391) begin\n          wantSleep <= io_regs_sleep_write_bits[0];\n        end\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      pc <= 3'h0;\n    end else begin\n      pc <= GEN_8[2:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      wakeupCause <= 2'h0;\n    end else begin\n      if (T_540) begin\n        if (T_549) begin\n          if (T_552) begin\n            wakeupCause <= 2'h0;\n          end else begin\n            if (T_553) begin\n              wakeupCause <= 2'h1;\n            end else begin\n              if (T_554) begin\n                wakeupCause <= 2'h2;\n              end else begin\n                wakeupCause <= 2'h3;\n              end\n            end\n          end\n        end\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_396 <= 4'b0;\n    end\n    else if (T_394) begin\n      T_396 <= io_regs_ie_write_bits;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      wakeupProgram_0 <= 9'h1f0;\n    end else begin\n      wakeupProgram_0 <= GEN_19[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      wakeupProgram_1 <= 9'hf8;\n    end else begin\n      wakeupProgram_1 <= GEN_20[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      wakeupProgram_2 <= 9'h30;\n    end else begin\n      wakeupProgram_2 <= GEN_21[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      wakeupProgram_3 <= 9'h30;\n    end else begin\n      wakeupProgram_3 <= GEN_22[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      wakeupProgram_4 <= 9'h30;\n    end else begin\n      wakeupProgram_4 <= GEN_23[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      wakeupProgr"}
{"text": "am_5 <= 9'h30;\n    end else begin\n      wakeupProgram_5 <= GEN_24[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      wakeupProgram_6 <= 9'h30;\n    end else begin\n      wakeupProgram_6 <= GEN_25[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      wakeupProgram_7 <= 9'h30;\n    end else begin\n      wakeupProgram_7 <= GEN_26[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sleepProgram_0 <= 9'hf0;\n    end else begin\n      sleepProgram_0 <= GEN_27[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sleepProgram_1 <= 9'h1f0;\n    end else begin\n      sleepProgram_1 <= GEN_28[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sleepProgram_2 <= 9'h1d0;\n    end else begin\n      sleepProgram_2 <= GEN_29[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sleepProgram_3 <= 9'h1c0;\n    end else begin\n      sleepProgram_3 <= GEN_30[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sleepProgram_4 <= 9'h1c0;\n    end else begin\n      sleepProgram_4 <= GEN_31[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sleepProgram_5 <= 9'h1c0;\n    end else begin\n      sleepProgram_5 <= GEN_32[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sleepProgram_6 <= 9'h1c0;\n    end else begin\n      sleepProgram_6 <= GEN_33[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sleepProgram_7 <= 9'h1c0;\n    end else begin\n      sleepProgram_7 <= GEN_34[8:0];\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      count <= 16'h0;\n    end else begin\n      if (run) begin\n        if (tick) begin\n          count <= 16'h0;\n        end else begin\n          count <= T_524;\n        end\n      end\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_pwm16(\n  input   clock,\n  input   reset,\n  output  io_interrupts_0_0,\n  output  io_interrupts_0_1,\n  output  io_interrupts_0_2,\n  output  io_interrupts_0_3,\n  output  io_in_0_a_ready,\n  input   io_in_0_a_valid,\n  input  [2:0] io_in_0_a_bits_opcode,\n  input  [2:0] io_in_0_a_bits_param,\n  input  [2:0] io_in_0_a_bits_size,\n  input  [4:0] io_in_0_a_bits_source,\n  input  [28:0] io_in_0_a_bits_address,\n  input  [3:0] io_in_0_a_bits_mask,\n  input  [31:0] io_in_0_a_bits_data,\n  input   io_in_0_b_ready,\n  output  io_in_0_b_valid,\n  output [2:0] io_in_0_b_bits_opcode,\n  output [1:0] io_in_0_b_bits_param,\n  output [2:0] io_in_0_b_bits_size,\n  output [4:0] io_in_0_b_bits_source,\n  output [28:0] io_in_0_b_bits_address,\n  output [3:0] io_in_0_b_bits_mask,\n  output [31:0] io_in_0_b_bits_data,\n  output  io_in_0_c_ready,\n  input   io_in_0_c_valid,\n  input  [2:0] io_in_0_c_bits_opcode,\n  input  [2:0] io_in_0_c_bits_param,\n  input  [2:0] io_in_0_c_bits_size,\n  input  [4:0] io_in_0_c_bits_source,\n  input  [28:0] io_in_0_c_bits_address,\n  input  [31:0] io_in_0_c_bits_data,\n  input   io_in_0_c_bits_error,\n  input   io_in_0_d_ready,\n  output  io_in_0_d_valid,\n  output [2:0] io_in_0_d_bits_opcode,\n  output [1:0] io_in_0_d_bits_param,\n  output [2:0] io_in_0_d_bits_size,\n  output [4:0] io_in_0_d_bits_source,\n  output  io_in_0_d_bits_sink,\n  output [1:0] io_in_0_d_bits_addr_lo,\n  output [31:0] io_in_0_d_bits_data,\n  output  io_in_0_d_bits_error,\n  output  io_in_0_e_ready,\n  input   io_in_0_e_valid,\n  input   io_in_0_e_bits_sink,\n  output  io_gpio_0,\n  output  io_gpio_1,\n  output  io_gpio_2,\n  output  io_gpio_3\n);\n  wire  pwm_clock;\n  wire  pwm_reset;\n  wire  pwm_io_regs_cfg_write_valid;\n  wire [31:0] pwm_io_regs_cfg_write_bits;\n  wire [31:0] pwm_io_regs_cfg_read;\n  wire  pwm_io_regs_countLo_write_valid;\n  wire [31:0] pwm_io_regs_countLo_write_bits;\n  wire [31:0] pwm_io_regs_countLo_read;\n  wire  pwm_io_regs_countHi_write_valid;\n  wire [31:0] pwm_io_regs_countHi_write_bits;\n  wire [31:0] pwm_io_regs_countHi_read;\n  wire  pwm_io_regs_s_write_valid;\n  wire [15:0] pwm_io_regs_s_write_bits;\n  wire [15:0] pwm_io_regs_s_read;\n  wire  pwm_io_regs_cmp_0_write_valid;\n  wire [15:0] pwm_io_regs_cmp_0_write_bits;\n  wire [15:0] pwm_io_regs_cmp_0_read;\n  wire  pwm_io_regs_cmp_1_write_valid;\n  wire [15:0] pwm_io_regs_cmp_1_write_bits;\n  wire [15:0] pwm_io_regs_cmp_1_read;\n  wire  pwm_io_regs_cmp_2_write_valid;\n  wire [15:0] pwm_io_regs_cmp_2_write_bits;\n  wire [15:0] pwm_io_regs_cmp_2_read;\n  wire  pwm_io_regs_cmp_3_write_valid;\n  wire [15:0] pwm_io_regs_cmp_3_write_bits;\n  wire [15:0] pwm_io_regs_cmp_3_read;\n  wire  pwm_io_regs_feed_write_valid;\n  wire [31:0] pwm_io_regs_feed_write_bits;\n  wire [31:0] pwm_io_regs_feed_read;\n  wire  pwm_io_regs_key_write_valid;\n  wire [31:0] pwm_io_regs_key_write_bits;\n  wire [31:0] pwm_io_regs_key_read;\n  wire  pwm_io_ip_0;\n  wire  pwm_io_ip_1;\n  wire  pwm_io_ip_2;\n  wire  pwm_io_ip_3;\n  wire  pwm_io_gpio_0;\n  wire  pwm_io_gpio_1;\n  wire  pwm_io_gpio_2;\n  wire  pwm_io_gpio_3;\n  wire  T_912_ready;\n  wire  T_912_valid;\n  wire  T_912_bits_read;\n  wire [9:0] T_912_bits_index;\n  wire [31:0] T_912_bits_data;\n  wire [3:0] T_912_bits_mask;\n  wire [9:0] T_912_bits_extra;\n  wire  T_929;\n  wire [26:0] T_930;\n  wire [1:0] T_931;\n  wire [6:0] T_932;\n  wire [9:0] T_933;\n  wire  T_951_ready;\n  wire  T_951_valid;\n  wire  T_951_bits_read;\n  wire [31:0] T_951_bits_data;\n  wire [9:0] T_951_bits_extra;\n  wire  T_987_ready;\n  wire  T_987_valid;\n  wire  T_987_bits_read;\n  wire [9:0] T_987_bits_index;\n  wire [31:0] T_987_bits_data;\n  wire [3:0] T_987_bits_mask;\n  wire [9:0] T_987_bits_extra;\n  wire [9:0] T_1040;\n  wire  T_1042;\n  wire [9:0] T_1048;\n  wire [9:0] T_1049;\n  wire  T_1051;\n  wire [9:0] T_1057;\n  wire [9:0] T_1058;\n  wire  T_1060;\n  wire [9:0] T_1066;\n  wire [9:0] T_1067;\n  wire  T_1069;\n  wire [9:0] T_1075;\n  wire [9:0] T_1076;\n  wire  T_1078;\n  wire [9:0] T_1084;\n  wire [9:0] T_1085;\n  wire  T_1087;\n  wire [9:0] T_1093;\n  wire [9:0] T_1094;\n  wire  T_1096;\n  wire [9:0] T_1102;\n  wire [9:0] T_1103;\n  wire  T_1105;\n  wire [9:0] T_1111;\n  wire [9:0] T_1112;\n  wire  T_1114;\n  wire [9:0] T_1120;\n  wire [9:0] T_1121;\n  wire  T_1123;\n  wire  T_1131_0;\n  wire  T_1131_1;\n  wire  T_1131_2;\n  wire  T_1131_3;\n  wire  T_1131_4;\n  wire  T_1131_5;\n  wire  T_1131_6;\n  wire  T_1131_7;\n  wire  T_1131_8;\n  wire  T_1131_9;\n  wire  T_1136_0;\n  wire  T_1136_1;\n  wire  T_1136_2;\n  wire  T_1136_3;\n  wire  T_1136_4;\n  wire  T_1136_5;\n  wire  T_1136_6;\n  wire  T_1136_7;\n  wire  T_1136_8;\n  wire  T_1136_9;\n  wire  T_1141_0;\n  wire  T_1141_1;\n  wire  T_1141_2;\n  wire  T_1141_3;\n  wire  T_1141_4;\n  wire  T_1141_5;\n  wire  T_1141_6;\n  wire  T_1141_7;\n  wire  T_1141_8;\n  wire  T_1141_9;\n  wire  T_1146_0;\n  wire  T_1146_1;\n  wire  T_1146_2;\n  wire  T_1146_3;\n  wire  T_1146_4;\n  wire  T_1146_5;\n  wire  T_1146_6;\n  wire  T_1146_7;\n  wire  T_1146_8;\n  wire  T_1146_9;\n  wire  T_1151_0;\n  wire  T_1151_1;\n  wire  T_1151_2;\n  wire  T_1151_3;\n  wire  T_1151_4;\n  wire  T_1151_5;\n  wire  T_1151_6;\n  wire  T_1151_7;\n  wire  T_1151_8;\n  wire  T_1151_9;\n  wire  T_1156_0;\n  wire  T_1156_1;\n  wire  T_1156_2;\n  wire  T_1156_3;\n  wire  T_1156_4;\n  wire  T_1156_5;\n  wire  T_1156_6;\n  wire  T_1156_7;\n  wire  T_1156_8;\n  wire  T_1156_9;\n  wire  T_1161_0;\n  wire  T_1161_1;\n  wire  T_1161_2;\n  wire  T_1161_3;\n  wire  T_1161_4;\n  wire  T_1161_5;\n  wire  T_1161_6;\n  wire  T_1161_7;\n  wire  T_1161_8;\n  wire  T_1161_9;\n  wire  T_1166_0;\n  wire  T_1166_1;\n  wire  T_1166_2;\n  wire  T_1166_3;\n  wire  T_1166_4;\n  wire  T_1166_5;\n  wire  T_1166_6;\n  wire  T_1166_7;\n  wire  T_1166_8;\n  wire  T_1166_9;\n  wire  T_1248;\n  wire  T_1249;\n  wire  T_1250;\n  wire  T_1251;\n  wire [7:0] T_1255;\n  wire [7:0] T_1259;\n  wire [7:0] T_1263;\n  wire [7:0] T_1267;\n  wire [15:0] T_1268;\n  wire [15:0] T_1269;\n  wire [31:0] T_1270;\n  wire [31:0] T_1298;\n  wire  T_1300;\n  wire  T_1313;\n  wire [31:0] T_1329;\n  wire [15:0] T_1334;\n  wire [15:0] T_1338;\n  wire  T_1340;\n  wire  T_1353;\n  wire [15:0] T_1354;\n  wire [15:0] T_1369;\n  wire  T_1393;\n  wire [31:0] T_1409;\n  wire  T_1433;\n  wire [15:0] T_1449;\n  wire  T_1473;\n  wire [31:0] T_1489;\n  wire  T_1513;\n  wire [31:0] T_1529;\n  wire  T_1553;\n  wire [31:0] T_1569;\n  wire  T_1593;\n  wire [15:0] T_1609;\n  wire  T_1633;\n  wire [15:0] T_1649;\n  wire  T_1673;\n  wire [15:0] T_1689;\n  wire  T_1695;\n  wire  T_1697;\n  wire  T_1702;\n  wire  T_1704;\n  wire  T_1706;\n  wire  T_1708;\n  wire  T_1710;\n  wire  T_1712;\n  wire  T_1717;\n  wire  T_1719;\n  wire  T_1721;\n  wire  T_1723;\n  wire  T_1725;\n  wire  T_1727;\n  wire  T_1729;\n  wire  T_1731;\n  wire  T_1733;\n  wire  T_1735;\n  wire  T_1737;\n  wire  T_1739;\n  wire  T_1771_0;\n  wire  T_1771_1;\n  wire  T_1771_2;\n  wire  T_1771_3;\n  wire  T_1771_4;\n  wire  T_1771_5;\n  wire  T_1771_6;\n  wire  T_1771_7;\n  wire  T_1771_8;\n  wire  T_1771_9;\n  wire  T_1771_10;\n  wire  T_1771_11;\n  wire  T_1771_12;\n  wire  T_1771_13;\n  wire  T_1771_14;\n  wire  T_1771_15;\n  wire  T_1793;\n  wire  T_1800;\n  wire  T_1804;\n  wire  T_1808;\n  wire  T_1815;\n  wire  T_1819;\n  wire  T_1823;\n  wire  T_1827;\n  wire  T_1831;\n  wire  T_1835;\n  wire  T_1867_0;\n  wire  T_1867_1;\n  wire  T_1867_2;\n  wire  T_1867_3;\n  wire  T_1867_4;\n  wire  T_1867_5;\n  wire  T_1867_6;\n  wire  T_1867_7;\n  wire  T_1867_8;\n  wire  T_1867_9;\n  wire  T_1867_10;\n  wire  T_1867_11;\n  wire  T_1867_12;\n  wire  T_1867_13;\n  wire  T_1867_14;\n  wire  T_1867_15;\n  wire  T_1889;\n  wire  T_1896;\n  wire  T_1900;\n  wire  T_1904;\n  wire  T_1911;\n  wire  T_1915;\n  wire  T_1919;\n  wire  T_1923;\n  wire  T_1927;\n  wire  T_1931;\n  wire  T_1963_0;\n  wire  T_1963_1;\n  wire  T_1963_2;\n  wire  T_1963_3;\n  wire  T_1963_4;\n  wire  T_1963_5;\n  wire  T_1963_6;\n  wire  T_1963_7;\n  wire  T_1963_8;\n  wire  T_1963_9;\n  wire  T_1963_10;\n  wire  T_1963_11;\n  wire  T_1963_12;\n  wire  T_1963_13;\n  wire  T_1963_14;\n  wire  T_1963_15;\n  wire  T_1985;\n  wire  T_1992;\n  wire  T_1996;\n  wire  T_2000;\n  wire  T_2007;\n  wire  T_2011;\n  wire  T_2015;\n  wire  T_2019;\n  wire  T_2023;\n  wire  T_2027;\n  wire  T_2059_0;\n  wire  T_2059_1;\n  wire  T_2059_2;\n  wire  T_2059_3;\n  wire  T_2059_4;\n  wire  T_2059_5;\n  wire  T_2059_6;\n  wire  T_2059_7;\n  wire  T_2059_8;\n  wire  T_2059_9;\n  wire  T_2059_10;\n  wire  T_2059_11;\n  wire  T_2059_12;\n  wire  T_2059_13;\n  wire  T_2059_14;\n  wire  T_2059_15;\n  wire  T_2078;\n  wire  T_2079;\n  wire  T_2080;\n  wire  T_2081;\n  wire [1:0] T_2088;\n  wire [1:0] T_2089;\n  wire [3:0] T_2090;\n  wire  GEN_0;\n  wire  GEN_6;\n  wire  GEN_7;\n  wire  GEN_8;\n  wire  GEN_9;\n  wire  GEN_10;\n  wire  GEN_11;\n  wire  GEN_12;\n  wire  GEN_13;\n  wire  GEN_14;\n  wire  GEN_15;\n  wire  GEN_16;\n  wire  GEN_17;\n  wire  GEN_18;\n  wire  GEN_19;\n  wire  GEN_20;\n  wire  GEN_1;\n  wire  GEN_21;\n  wire  GEN_22;\n  wire  GEN_23;\n  wire  GEN_24;\n  wire  GEN_25;\n  wire  GEN_26;\n  wire  GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_31;\n  wire  GEN_32;\n  wire  GEN_33;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  T_2106;\n  wire  GEN_2;\n  wire  GEN_36;\n  wire  GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire  GEN_40;\n  wire  GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire  GEN_48;\n  wire  GEN_49;\n  wire  GEN_50;\n  wire  GEN_3;\n  wire  GEN_51;\n  wire  GEN_52;\n  wire  GEN_53;\n  wire  GEN_54;\n  wire  GEN_55;\n  wire  GEN_56;\n  wire  GEN_57;\n  wire  GEN_58;\n  wire  GEN_59;\n  wire  GEN_60;\n  wire  GEN_61;\n  wire  GEN_62;\n  wire  GEN_63;\n  wire  GEN_64;\n  wire  GEN_65;\n  wire  T_2109;\n  wire  T_2110;\n  wire  T_2111;\n  wire  T_2112;\n  wire  T_2113;\n  wire [15:0] T_2115;\n  wire [1:0] T_2116;\n  wire [1:0] T_2117;\n  wire [3:0] T_2118;\n  wire [1:0] T_2119;\n  wire [1:0] T_2120;\n  wire [3:0] T_2121;\n  wire [7:0] T_2122;\n  wire [1:0] T_2123;\n  wire [1:0] T_2124;\n  wire [3:0] T_2125;\n  wire [7:0] T_2129;\n  wire [15:0] T_2130;\n  wire [15:0] T_2131;\n  wire  T_2150;\n  wire  T_2151;\n  wire  T_2152;\n  wire  T_2153;\n  wire  T_2156;\n  wire  T_2157;\n  wire  T_2159;\n  wire  T_2160;\n  wire  T_2161;\n  wire  T_2163;\n  wire  T_2167;\n  wire  T_2169;\n  wire  T_2192;\n  wire  T_2193;\n  wire  T_2199;\n  wire  T_2203;\n  wire  T_2209;\n  wire  T_2212;\n  wire  T_2213;\n  wire  T_2219;\n  wire  T_2223;\n  wire  T_2229;\n  wire  T_2232;\n  wire  T_2233;\n  wire  T_2239;\n  wire  T_2243;\n  wire  T_2249;\n  wire  T_2272;\n  wire  T_2273;\n  wire  T_2279;\n  wire  T_2283;\n  wire  T_2289;\n  wire  T_2292;\n  wire  T_2293;\n  wire  T_2299;\n  wire  T_2303;\n  wire  T_2309;\n  wire  T_2312;\n  wire  T_2313;\n  wire  T_2319;\n  wire  T_2323;\n  wire  T_2329;\n  wire  T_2332;\n  wire  T_2333;\n  wire  T_2339;\n  wire  T_2343;\n  wire  T_2349;\n  wire  T_2352;\n  wire  T_2353;\n  wire  T_2359;\n  wire  T_2363;\n  wire  T_2369;\n  wire  T_2372;\n  wire  T_2373;\n  wire  T_2379;\n  wire  T_2383;\n  wire  T_2389;\n  wire  T_2529_0;\n  wire  T_2529_1;\n  wire  T_2529_2;\n  wire  T_2529_3;\n  wire  T_2529_4;\n  wire  T_2529_5;\n  wire  T_2529_6;\n  wire  T_2529_7;\n  wire  T_2529_8;\n  wire  T_2529_9;\n  wire  T_2529_10;\n  wire  T_2529_11;\n  wire  T_2529_12;\n  wire  T_2529_13;\n  wire  T_2529_14;\n  wire  T_2529_15;\n  wire [31:0] T_2568_0;\n  wire [31:0] T_2568_1;\n  wire [31:0] T_2568_2;\n  wire [31:0] T_2568_3;\n  wire [31:0] T_2568_4;\n  wire [31:0] T_2568_5;\n  wire [31:0] T_2568_6;\n  wire [31:0] T_2568_7;\n  wire [31:0] T_2568_8;\n  wire [31:0] T_2568_9;\n  wire [31:0] T_2568_10;\n  wire [31:0] T_2568_11;\n  wire [31:0] T_2568_12;\n  wire [31:0] T_2568_13;\n  wire [31:0] T_2568_14;\n  wire [31:0] T_2568_15;\n  wire  GEN_4;\n  wire  GEN_66;\n  wire  GEN_67;\n  wire  GEN_68;\n  wire  GEN_69;\n  wire  GEN_70;\n  wire  GEN_71;\n  wire  GEN_72;\n  wire  GEN_73;\n  wire  GEN_74;\n  wire  GEN_75;\n  wire  GEN_76;\n  wire  GEN_77;\n  wire  GEN_78;\n  wire  GEN_79;\n  wire  GEN_80;\n  wire [31:0] GEN_5;\n  wire [31:0] GEN_81;\n  wire [31:0] GEN_82;\n  wire [31:0] GEN_83;\n  wire [31:0] GEN_84;\n  wire [31:0] GEN_85;\n  wire [31:0] GEN_86;\n  wire [31:0] GEN_87;\n  wire [31:0] GEN_88;\n  wire [31:0] GEN_89;\n  wire [31:0] GEN_90;\n  wire [31:0] GEN_91;\n  wire [31:0] GEN_92;\n  wire [31:0] GEN_93;\n  wire [31:0] GEN_94;\n  wire [31:0] GEN_95;\n  wire [31:0] T_2589;\n  wire [1:0] T_2590;\n  wire [4:0] T_2592;\n  wire [2:0] T_2593;\n  wire [2:0] T_2604_opcode;\n  wire [1:0] T_2604_param;\n  wire [2:0] T_2604_size;\n  wire [4:0] T_2604_source;\n  wire  T_2604_sink;\n  wire [1:0] T_2604_addr_lo;\n  wire [31:0] T_2604_data;\n  wire  T_2604_error;\n  wire [2:0] GEN_96 = 3'b0;\n  reg [31:0] GEN_103;\n  wire [1:0] GEN_97 = 2'b0;\n  reg [31:0] GEN_104;\n  wire [2:0] GEN_98 = 3'b0;\n  reg [31:0] GEN_105;\n  wire [4:0] GEN_99 = 5'b0;\n  reg [31:0] GEN_106;\n  wire [28:0] GEN_100 = 29'b0;\n  reg [31:0] GEN_107;\n  wire [3:0] GEN_101 = 4'b0;\n  reg [31:0] GEN_108;\n  wire [31:0] GEN_102 = 32'b0;\n  reg [31:0] GEN_109;\n  sirv_pwm16_core pwm (\n    .clock(pwm_clock),\n    .reset(pwm_reset),\n    .io_regs_cfg_write_valid(pwm_io_regs_cfg_write_valid),\n    .io_regs_cfg_write_bits(pwm_io_regs_cfg_write_bits),\n    .io_regs_cfg_read(pwm_io_regs_cfg_read),\n    .io_regs_countLo_write_valid(pwm_io_regs_countLo_write_valid),\n    .io_regs_countLo_write_bits(pwm_io_regs_countLo_write_bits),\n    .io_regs_countLo_read(pwm_io_regs_countLo_read),\n    .io_regs_countHi_write_valid(pwm_io_regs_countHi_write_valid),\n    .io_regs_countHi_write_bits(pwm_io_regs_countHi_write_bits),\n    .io_regs_countHi_read(pwm_io_regs_countHi_read),\n    .io_regs_s_write_valid(pwm_io_regs_s_write_valid),\n    .io_regs_s_write_bits(pwm_io_regs_s_write_bits),\n    .io_regs_s_read(pwm_io_regs_s_read),\n    .io_regs_cmp_0_write_valid(pwm_io_regs_cmp_0_write_valid),\n    .io_regs_cmp_0_write_bits(pwm_io_regs_cmp_0_write_bits),\n    .io_regs_cmp_0_read(pwm_io_regs_cmp_0_read),\n    .io_regs_cmp_1_write_valid(pwm_io_regs_cmp_1_write_valid),\n    .io_regs_cmp_1_write_bits(pwm_io_regs_cmp_1_write_bits),\n    .io_regs_cmp_1_read(pwm_io_regs_cmp_1_read),\n    .io_regs_cmp_2_write_valid(pwm_io_regs_cmp_2_write_valid),\n    .io_regs_cmp_2_write_bits(pwm_io_regs_cmp_2_write_bits),\n    .io_regs_cmp_2_read(pwm_io_regs_cmp_2_read),\n    .io_regs_cmp_3_write_valid(pwm_io_regs_cmp_3_write_valid),\n    .io_regs_cmp_3_write_bits(pwm_io_regs_cmp_3_write_bits),\n    .io_regs_cmp_3_read(pwm_io_regs_cmp_3_read),\n    .io_regs_feed_write_valid(pwm_io_regs_feed_write_valid),\n    .io_regs_feed_write_bits(pwm_io_regs_feed_write_bits),\n    .io_regs_feed_read(pwm_io_regs_feed_read),\n    .io_regs_key_write_valid(pwm_io_regs_key_write_valid),\n    .io_regs_key_write_bits(pwm_io_regs_key_write_bits),\n    .io_regs_key_read(pwm_io_regs_key_read),\n    .io_ip_0(pwm_io_ip_0),\n    .io_ip_1(pwm_io_ip_1),\n    .io_ip_2(pwm_io_ip_2),\n    .io_ip_3(pwm_io_ip_3),\n    .io_gpio_0(pwm_io_gpio_0),\n    .io_gpio_1(pwm_io_gpio_1),\n    .io_gpio_2(pwm_io_gpio_2),\n    .io_gpio_3(pwm_io_gpio_3)\n  );\n  assign io_interrupts_0_0 = pwm_io_ip_0;\n  assign io_interrupts_0_1 = pwm_io_ip_1;\n  assign io_interrupts_0_2 = pwm_io_ip_2;\n  assign io_interrupts_0_3 = pwm_io_ip_3;\n  assign io_in_0_a_ready = T_912_ready;\n  assign io_in_0_b_valid = 1'h0;\n  assign io_in_0_b_bits_opcode = GEN_96;\n  assign io_in_0_b_bits_param = GEN_97;\n  assign io_in_0_b_bits_size = GEN_98;\n  assign io_in_0_b_bits_source = GEN_99;\n  assign io_in_0_b_bits_address = GEN_100;\n  assign io_in_0_b_bits_mask = GEN_101;\n  assign io_in_0_b_bits_data = GEN_102;\n  assign io_in_0_c_ready = 1'h1;\n  assign io_in_0_d_valid = T_951_valid;\n  assign io_in_0_d_bits_opcode = {{2'd0}, T_951_bits_read};\n  assign io_in_0_d_bits_param = T_2604_param;\n  assign io_in_0_d_bits_size = T_2604_size;\n  assign io_in_0_d_bits_source = T_2604_source;\n  assign io_in_0_d_bits_sink = T_2604_sink;\n  assign io_in_0_d_bits_addr_lo = T_2604_addr_lo;\n  assign io_in_0_d_bits_data = T_951_bits_data;\n  assign io_in_0_d_bits_error = T_2604_error;\n  assign io_in_0_e_ready = 1'h1;\n  assign io_gpio_0 = pwm_io_gpio_0;\n  assign io_gpio_1 = pwm_io_gpio_1;\n  assign io_gpio_2 = pwm_io_gpio_2;\n  assign io_gpio_3 = pwm_io_gpio_3;\n  assign pwm_clock = clock;\n  assign pwm_reset = reset;\n  assign pwm_io_regs_cfg_write_valid = T_1313;\n  assign pwm_io_regs_cfg_write_bits = T_987_bits_data;\n  assign pwm_io_regs_countLo_write_valid = T_1473;\n  assign pwm_io_regs_countLo_write_bits = T_987_bits_data;\n  assign pwm_io_regs_countHi_write_valid = T_1553;\n  assign pwm_io_regs_countHi_write_bits = T_987_bits_data;\n  assign pwm_io_regs_s_write_valid = T_1673;\n  assign pwm_io_regs_s_write_bits = T_1354;\n  assign pwm_io_regs_cmp_0_write_valid = T_1633;\n  assign pwm_io_regs_cmp_0_write_bits = T_1354;\n  assign pwm_io_regs_cmp_1_write_valid = T_1433;\n  assign pwm_io_regs_cmp_1_write_bits = T_1354;\n  assign pwm_io_regs_cmp_2_write_valid = T_1353;\n  assign pwm_io_regs_cmp_2_write_bits = T_1354;\n  assign pwm_io_regs_cmp_3_write_valid = T_1593;\n  assign pwm_io_regs_cmp_3_write_bits = T_1354;\n  assign pwm_io_regs_feed_write_valid = T_1393;\n  assign pwm_io_regs_feed_write_bits = T_987_bits_data;\n  assign pwm_io_regs_key_write_valid = T_1513;\n  assign pwm_io_regs_key_write_bits = T_987_bits_data;\n  assign T_912_ready = T_2110;\n  assign T_912_valid = io_in_0_a_valid;\n  assign T_912_bits_read = T_929;\n  assign T_912_bits_index = T_930[9:0];\n  assign T_912_bits_data = io_in_0_a_bits_data;\n  assign T_912_bits_mask = io_in_0_a_bits_mask;\n  assign T_912_bits_extra = T_933;\n  assign T_929 = io_in_0_a_bits_opcode == 3'h4;\n  assign T_930 = io_in_0_a_bits_address[28:2];\n  assign T_931 = io_in_0_a_bits_address[1:0];\n  assign T_932 = {T_931,io_in_0_a_bits_source};\n  assign T_933 = {T_932,io_in_0_a_bits_size};\n  assign T_951_ready = io_in_0_d_ready;\n  assign T_951_valid = T_2113;\n  assign T_951_bits_read = T_987_bits_read;\n  assign T_951_bits_data = T_2589;\n  assign T_951_bits_extra = T_987_bits_extra;\n  assign T_987_ready = T_2112;\n  assign T_987_valid = T_2111;\n  assign T_987_bits_read = T_912_bits_read;\n  assign T_987_bits_index = T_912_bits_index;\n  assign T_987_bits_data = T_912_bits_data;\n  assign T_987_bits_mask = T_912_bits_mask;\n  assign T_987_bits_extra = T_912_bits_extra;\n  assign T_1040 = T_987_bits_index & 10'h3f0;\n  assign T_1042 = T_1040 == 10'h0;\n  assign T_1048 = T_987_bits_index ^ 10'ha;\n  assign T_1049 = T_1048 & 10'h3f0;\n  assign T_1051 = T_1049 == 10'h0;\n  assign T_1057 = T_987_bits_index ^ 10'h6;\n  assign T_1058 = T_1057 & 10'h3f0;\n  assign T_1060 = T_1058 == 10'h0;\n  assign T_1066 = T_987_bits_index ^ 10'h9;\n  assign T_1067 = T_1066 & 10'h3f0;\n  assign T_1069 = T_1067 == 10'h0;\n  assign T_1075 = T_987_bits_index ^ 10'h2;\n  assign T_1076 = T_1075 & 10'h3f0;\n  assign T_1078 = T_1076 == 10'h0;\n  assign T_1084 = T_987_bits_index ^ 10'h7;\n  assign T_1085 = T_1084 & 10'h3f0;\n  assign T_1087 = T_1085 == 10'h0;\n  assign T_1093 = T_987_bits_index ^ 10'h3;\n  assign T_1094 = T_1093 & 10'h3f0;\n  as"}
{"text": "sign T_1096 = T_1094 == 10'h0;\n  assign T_1102 = T_987_bits_index ^ 10'hb;\n  assign T_1103 = T_1102 & 10'h3f0;\n  assign T_1105 = T_1103 == 10'h0;\n  assign T_1111 = T_987_bits_index ^ 10'h8;\n  assign T_1112 = T_1111 & 10'h3f0;\n  assign T_1114 = T_1112 == 10'h0;\n  assign T_1120 = T_987_bits_index ^ 10'h4;\n  assign T_1121 = T_1120 & 10'h3f0;\n  assign T_1123 = T_1121 == 10'h0;\n  assign T_1131_0 = T_2153;\n  assign T_1131_1 = T_2353;\n  assign T_1131_2 = T_2273;\n  assign T_1131_3 = T_2333;\n  assign T_1131_4 = T_2193;\n  assign T_1131_5 = T_2293;\n  assign T_1131_6 = T_2213;\n  assign T_1131_7 = T_2373;\n  assign T_1131_8 = T_2313;\n  assign T_1131_9 = T_2233;\n  assign T_1136_0 = T_2159;\n  assign T_1136_1 = T_2359;\n  assign T_1136_2 = T_2279;\n  assign T_1136_3 = T_2339;\n  assign T_1136_4 = T_2199;\n  assign T_1136_5 = T_2299;\n  assign T_1136_6 = T_2219;\n  assign T_1136_7 = T_2379;\n  assign T_1136_8 = T_2319;\n  assign T_1136_9 = T_2239;\n  assign T_1141_0 = 1'h1;\n  assign T_1141_1 = 1'h1;\n  assign T_1141_2 = 1'h1;\n  assign T_1141_3 = 1'h1;\n  assign T_1141_4 = 1'h1;\n  assign T_1141_5 = 1'h1;\n  assign T_1141_6 = 1'h1;\n  assign T_1141_7 = 1'h1;\n  assign T_1141_8 = 1'h1;\n  assign T_1141_9 = 1'h1;\n  assign T_1146_0 = 1'h1;\n  assign T_1146_1 = 1'h1;\n  assign T_1146_2 = 1'h1;\n  assign T_1146_3 = 1'h1;\n  assign T_1146_4 = 1'h1;\n  assign T_1146_5 = 1'h1;\n  assign T_1146_6 = 1'h1;\n  assign T_1146_7 = 1'h1;\n  assign T_1146_8 = 1'h1;\n  assign T_1146_9 = 1'h1;\n  assign T_1151_0 = 1'h1;\n  assign T_1151_1 = 1'h1;\n  assign T_1151_2 = 1'h1;\n  assign T_1151_3 = 1'h1;\n  assign T_1151_4 = 1'h1;\n  assign T_1151_5 = 1'h1;\n  assign T_1151_6 = 1'h1;\n  assign T_1151_7 = 1'h1;\n  assign T_1151_8 = 1'h1;\n  assign T_1151_9 = 1'h1;\n  assign T_1156_0 = 1'h1;\n  assign T_1156_1 = 1'h1;\n  assign T_1156_2 = 1'h1;\n  assign T_1156_3 = 1'h1;\n  assign T_1156_4 = 1'h1;\n  assign T_1156_5 = 1'h1;\n  assign T_1156_6 = 1'h1;\n  assign T_1156_7 = 1'h1;\n  assign T_1156_8 = 1'h1;\n  assign T_1156_9 = 1'h1;\n  assign T_1161_0 = T_2163;\n  assign T_1161_1 = T_2363;\n  assign T_1161_2 = T_2283;\n  assign T_1161_3 = T_2343;\n  assign T_1161_4 = T_2203;\n  assign T_1161_5 = T_2303;\n  assign T_1161_6 = T_2223;\n  assign T_1161_7 = T_2383;\n  assign T_1161_8 = T_2323;\n  assign T_1161_9 = T_2243;\n  assign T_1166_0 = T_2169;\n  assign T_1166_1 = T_2369;\n  assign T_1166_2 = T_2289;\n  assign T_1166_3 = T_2349;\n  assign T_1166_4 = T_2209;\n  assign T_1166_5 = T_2309;\n  assign T_1166_6 = T_2229;\n  assign T_1166_7 = T_2389;\n  assign T_1166_8 = T_2329;\n  assign T_1166_9 = T_2249;\n  assign T_1248 = T_987_bits_mask[0];\n  assign T_1249 = T_987_bits_mask[1];\n  assign T_1250 = T_987_bits_mask[2];\n  assign T_1251 = T_987_bits_mask[3];\n  assign T_1255 = T_1248 ? 8'hff : 8'h0;\n  assign T_1259 = T_1249 ? 8'hff : 8'h0;\n  assign T_1263 = T_1250 ? 8'hff : 8'h0;\n  assign T_1267 = T_1251 ? 8'hff : 8'h0;\n  assign T_1268 = {T_1259,T_1255};\n  assign T_1269 = {T_1267,T_1263};\n  assign T_1270 = {T_1269,T_1268};\n  assign T_1298 = ~ T_1270;\n  assign T_1300 = T_1298 == 32'h0;\n  assign T_1313 = T_1166_0 & T_1300;\n  assign T_1329 = pwm_io_regs_cfg_read;\n  assign T_1334 = T_1270[15:0];\n  assign T_1338 = ~ T_1334;\n  assign T_1340 = T_1338 == 16'h0;\n  assign T_1353 = T_1166_1 & T_1340;\n  assign T_1354 = T_987_bits_data[15:0];\n  assign T_1369 = pwm_io_regs_cmp_2_read;\n  assign T_1393 = T_1166_2 & T_1300;\n  assign T_1409 = pwm_io_regs_feed_read;\n  assign T_1433 = T_1166_3 & T_1340;\n  assign T_1449 = pwm_io_regs_cmp_1_read;\n  assign T_1473 = T_1166_4 & T_1300;\n  assign T_1489 = pwm_io_regs_countLo_read;\n  assign T_1513 = T_1166_5 & T_1300;\n  assign T_1529 = pwm_io_regs_key_read;\n  assign T_1553 = T_1166_6 & T_1300;\n  assign T_1569 = pwm_io_regs_countHi_read;\n  assign T_1593 = T_1166_7 & T_1340;\n  assign T_1609 = pwm_io_regs_cmp_3_read;\n  assign T_1633 = T_1166_8 & T_1340;\n  assign T_1649 = pwm_io_regs_cmp_0_read;\n  assign T_1673 = T_1166_9 & T_1340;\n  assign T_1689 = pwm_io_regs_s_read;\n  assign T_1695 = T_1042 == 1'h0;\n  assign T_1697 = T_1695 | T_1141_0;\n  assign T_1702 = T_1078 == 1'h0;\n  assign T_1704 = T_1702 | T_1141_4;\n  assign T_1706 = T_1096 == 1'h0;\n  assign T_1708 = T_1706 | T_1141_6;\n  assign T_1710 = T_1123 == 1'h0;\n  assign T_1712 = T_1710 | T_1141_9;\n  assign T_1717 = T_1060 == 1'h0;\n  assign T_1719 = T_1717 | T_1141_2;\n  assign T_1721 = T_1087 == 1'h0;\n  assign T_1723 = T_1721 | T_1141_5;\n  assign T_1725 = T_1114 == 1'h0;\n  assign T_1727 = T_1725 | T_1141_8;\n  assign T_1729 = T_1069 == 1'h0;\n  assign T_1731 = T_1729 | T_1141_3;\n  assign T_1733 = T_1051 == 1'h0;\n  assign T_1735 = T_1733 | T_1141_1;\n  assign T_1737 = T_1105 == 1'h0;\n  assign T_1739 = T_1737 | T_1141_7;\n  assign T_1771_0 = T_1697;\n  assign T_1771_1 = 1'h1;\n  assign T_1771_2 = T_1704;\n  assign T_1771_3 = T_1708;\n  assign T_1771_4 = T_1712;\n  assign T_1771_5 = 1'h1;\n  assign T_1771_6 = T_1719;\n  assign T_1771_7 = T_1723;\n  assign T_1771_8 = T_1727;\n  assign T_1771_9 = T_1731;\n  assign T_1771_10 = T_1735;\n  assign T_1771_11 = T_1739;\n  assign T_1771_12 = 1'h1;\n  assign T_1771_13 = 1'h1;\n  assign T_1771_14 = 1'h1;\n  assign T_1771_15 = 1'h1;\n  assign T_1793 = T_1695 | T_1146_0;\n  assign T_1800 = T_1702 | T_1146_4;\n  assign T_1804 = T_1706 | T_1146_6;\n  assign T_1808 = T_1710 | T_1146_9;\n  assign T_1815 = T_1717 | T_1146_2;\n  assign T_1819 = T_1721 | T_1146_5;\n  assign T_1823 = T_1725 | T_1146_8;\n  assign T_1827 = T_1729 | T_1146_3;\n  assign T_1831 = T_1733 | T_1146_1;\n  assign T_1835 = T_1737 | T_1146_7;\n  assign T_1867_0 = T_1793;\n  assign T_1867_1 = 1'h1;\n  assign T_1867_2 = T_1800;\n  assign T_1867_3 = T_1804;\n  assign T_1867_4 = T_1808;\n  assign T_1867_5 = 1'h1;\n  assign T_1867_6 = T_1815;\n  assign T_1867_7 = T_1819;\n  assign T_1867_8 = T_1823;\n  assign T_1867_9 = T_1827;\n  assign T_1867_10 = T_1831;\n  assign T_1867_11 = T_1835;\n  assign T_1867_12 = 1'h1;\n  assign T_1867_13 = 1'h1;\n  assign T_1867_14 = 1'h1;\n  assign T_1867_15 = 1'h1;\n  assign T_1889 = T_1695 | T_1151_0;\n  assign T_1896 = T_1702 | T_1151_4;\n  assign T_1900 = T_1706 | T_1151_6;\n  assign T_1904 = T_1710 | T_1151_9;\n  assign T_1911 = T_1717 | T_1151_2;\n  assign T_1915 = T_1721 | T_1151_5;\n  assign T_1919 = T_1725 | T_1151_8;\n  assign T_1923 = T_1729 | T_1151_3;\n  assign T_1927 = T_1733 | T_1151_1;\n  assign T_1931 = T_1737 | T_1151_7;\n  assign T_1963_0 = T_1889;\n  assign T_1963_1 = 1'h1;\n  assign T_1963_2 = T_1896;\n  assign T_1963_3 = T_1900;\n  assign T_1963_4 = T_1904;\n  assign T_1963_5 = 1'h1;\n  assign T_1963_6 = T_1911;\n  assign T_1963_7 = T_1915;\n  assign T_1963_8 = T_1919;\n  assign T_1963_9 = T_1923;\n  assign T_1963_10 = T_1927;\n  assign T_1963_11 = T_1931;\n  assign T_1963_12 = 1'h1;\n  assign T_1963_13 = 1'h1;\n  assign T_1963_14 = 1'h1;\n  assign T_1963_15 = 1'h1;\n  assign T_1985 = T_1695 | T_1156_0;\n  assign T_1992 = T_1702 | T_1156_4;\n  assign T_1996 = T_1706 | T_1156_6;\n  assign T_2000 = T_1710 | T_1156_9;\n  assign T_2007 = T_1717 | T_1156_2;\n  assign T_2011 = T_1721 | T_1156_5;\n  assign T_2015 = T_1725 | T_1156_8;\n  assign T_2019 = T_1729 | T_1156_3;\n  assign T_2023 = T_1733 | T_1156_1;\n  assign T_2027 = T_1737 | T_1156_7;\n  assign T_2059_0 = T_1985;\n  assign T_2059_1 = 1'h1;\n  assign T_2059_2 = T_1992;\n  assign T_2059_3 = T_1996;\n  assign T_2059_4 = T_2000;\n  assign T_2059_5 = 1'h1;\n  assign T_2059_6 = T_2007;\n  assign T_2059_7 = T_2011;\n  assign T_2059_8 = T_2015;\n  assign T_2059_9 = T_2019;\n  assign T_2059_10 = T_2023;\n  assign T_2059_11 = T_2027;\n  assign T_2059_12 = 1'h1;\n  assign T_2059_13 = 1'h1;\n  assign T_2059_14 = 1'h1;\n  assign T_2059_15 = 1'h1;\n  assign T_2078 = T_987_bits_index[0];\n  assign T_2079 = T_987_bits_index[1];\n  assign T_2080 = T_987_bits_index[2];\n  assign T_2081 = T_987_bits_index[3];\n  assign T_2088 = {T_2079,T_2078};\n  assign T_2089 = {T_2081,T_2080};\n  assign T_2090 = {T_2089,T_2088};\n  assign GEN_0 = GEN_20;\n  assign GEN_6 = 4'h1 == T_2090 ? T_1771_1 : T_1771_0;\n  assign GEN_7 = 4'h2 == T_2090 ? T_1771_2 : GEN_6;\n  assign GEN_8 = 4'h3 == T_2090 ? T_1771_3 : GEN_7;\n  assign GEN_9 = 4'h4 == T_2090 ? T_1771_4 : GEN_8;\n  assign GEN_10 = 4'h5 == T_2090 ? T_1771_5 : GEN_9;\n  assign GEN_11 = 4'h6 == T_2090 ? T_1771_6 : GEN_10;\n  assign GEN_12 = 4'h7 == T_2090 ? T_1771_7 : GEN_11;\n  assign GEN_13 = 4'h8 == T_2090 ? T_1771_8 : GEN_12;\n  assign GEN_14 = 4'h9 == T_2090 ? T_1771_9 : GEN_13;\n  assign GEN_15 = 4'ha == T_2090 ? T_1771_10 : GEN_14;\n  assign GEN_16 = 4'hb == T_2090 ? T_1771_11 : GEN_15;\n  assign GEN_17 = 4'hc == T_2090 ? T_1771_12 : GEN_16;\n  assign GEN_18 = 4'hd == T_2090 ? T_1771_13 : GEN_17;\n  assign GEN_19 = 4'he == T_2090 ? T_1771_14 : GEN_18;\n  assign GEN_20 = 4'hf == T_2090 ? T_1771_15 : GEN_19;\n  assign GEN_1 = GEN_35;\n  assign GEN_21 = 4'h1 == T_2090 ? T_1867_1 : T_1867_0;\n  assign GEN_22 = 4'h2 == T_2090 ? T_1867_2 : GEN_21;\n  assign GEN_23 = 4'h3 == T_2090 ? T_1867_3 : GEN_22;\n  assign GEN_24 = 4'h4 == T_2090 ? T_1867_4 : GEN_23;\n  assign GEN_25 = 4'h5 == T_2090 ? T_1867_5 : GEN_24;\n  assign GEN_26 = 4'h6 == T_2090 ? T_1867_6 : GEN_25;\n  assign GEN_27 = 4'h7 == T_2090 ? T_1867_7 : GEN_26;\n  assign GEN_28 = 4'h8 == T_2090 ? T_1867_8 : GEN_27;\n  assign GEN_29 = 4'h9 == T_2090 ? T_1867_9 : GEN_28;\n  assign GEN_30 = 4'ha == T_2090 ? T_1867_10 : GEN_29;\n  assign GEN_31 = 4'hb == T_2090 ? T_1867_11 : GEN_30;\n  assign GEN_32 = 4'hc == T_2090 ? T_1867_12 : GEN_31;\n  assign GEN_33 = 4'hd == T_2090 ? T_1867_13 : GEN_32;\n  assign GEN_34 = 4'he == T_2090 ? T_1867_14 : GEN_33;\n  assign GEN_35 = 4'hf == T_2090 ? T_1867_15 : GEN_34;\n  assign T_2106 = T_987_bits_read ? GEN_0 : GEN_1;\n  assign GEN_2 = GEN_50;\n  assign GEN_36 = 4'h1 == T_2090 ? T_1963_1 : T_1963_0;\n  assign GEN_37 = 4'h2 == T_2090 ? T_1963_2 : GEN_36;\n  assign GEN_38 = 4'h3 == T_2090 ? T_1963_3 : GEN_37;\n  assign GEN_39 = 4'h4 == T_2090 ? T_1963_4 : GEN_38;\n  assign GEN_40 = 4'h5 == T_2090 ? T_1963_5 : GEN_39;\n  assign GEN_41 = 4'h6 == T_2090 ? T_1963_6 : GEN_40;\n  assign GEN_42 = 4'h7 == T_2090 ? T_1963_7 : GEN_41;\n  assign GEN_43 = 4'h8 == T_2090 ? T_1963_8 : GEN_42;\n  assign GEN_44 = 4'h9 == T_2090 ? T_1963_9 : GEN_43;\n  assign GEN_45 = 4'ha == T_2090 ? T_1963_10 : GEN_44;\n  assign GEN_46 = 4'hb == T_2090 ? T_1963_11 : GEN_45;\n  assign GEN_47 = 4'hc == T_2090 ? T_1963_12 : GEN_46;\n  assign GEN_48 = 4'hd == T_2090 ? T_1963_13 : GEN_47;\n  assign GEN_49 = 4'he == T_2090 ? T_1963_14 : GEN_48;\n  assign GEN_50 = 4'hf == T_2090 ? T_1963_15 : GEN_49;\n  assign GEN_3 = GEN_65;\n  assign GEN_51 = 4'h1 == T_2090 ? T_2059_1 : T_2059_0;\n  assign GEN_52 = 4'h2 == T_2090 ? T_2059_2 : GEN_51;\n  assign GEN_53 = 4'h3 == T_2090 ? T_2059_3 : GEN_52;\n  assign GEN_54 = 4'h4 == T_2090 ? T_2059_4 : GEN_53;\n  assign GEN_55 = 4'h5 == T_2090 ? T_2059_5 : GEN_54;\n  assign GEN_56 = 4'h6 == T_2090 ? T_2059_6 : GEN_55;\n  assign GEN_57 = 4'h7 == T_2090 ? T_2059_7 : GEN_56;\n  assign GEN_58 = 4'h8 == T_2090 ? T_2059_8 : GEN_57;\n  assign GEN_59 = 4'h9 == T_2090 ? T_2059_9 : GEN_58;\n  assign GEN_60 = 4'ha == T_2090 ? T_2059_10 : GEN_59;\n  assign GEN_61 = 4'hb == T_2090 ? T_2059_11 : GEN_60;\n  assign GEN_62 = 4'hc == T_2090 ? T_2059_12 : GEN_61;\n  assign GEN_63 = 4'hd == T_2090 ? T_2059_13 : GEN_62;\n  assign GEN_64 = 4'he == T_2090 ? T_2059_14 : GEN_63;\n  assign GEN_65 = 4'hf == T_2090 ? T_2059_15 : GEN_64;\n  assign T_2109 = T_987_bits_read ? GEN_2 : GEN_3;\n  assign T_2110 = T_987_ready & T_2106;\n  assign T_2111 = T_912_valid & T_2106;\n  assign T_2112 = T_951_ready & T_2109;\n  assign T_2113 = T_987_valid & T_2109;\n  assign T_2115 = 16'h1 << T_2090;\n  assign T_2116 = {1'h1,T_1042};\n  assign T_2117 = {T_1096,T_1078};\n  assign T_2118 = {T_2117,T_2116};\n  assign T_2119 = {1'h1,T_1123};\n  assign T_2120 = {T_1087,T_1060};\n  assign T_2121 = {T_2120,T_2119};\n  assign T_2122 = {T_2121,T_2118};\n  assign T_2123 = {T_1069,T_1114};\n  assign T_2124 = {T_1105,T_1051};\n  assign T_2125 = {T_2124,T_2123};\n  assign T_2129 = {4'hf,T_2125};\n  assign T_2130 = {T_2129,T_2122};\n  assign T_2131 = T_2115 & T_2130;\n  assign T_2150 = T_912_valid & T_987_ready;\n  assign T_2151 = T_2150 & T_987_bits_read;\n  assign T_2152 = T_2131[0];\n  assign T_2153 = T_2151 & T_2152;\n  assign T_2156 = T_987_bits_read == 1'h0;\n  assign T_2157 = T_2150 & T_2156;\n  assign T_2159 = T_2157 & T_2152;\n  assign T_2160 = T_987_valid & T_951_ready;\n  assign T_2161 = T_2160 & T_987_bits_read;\n  assign T_2163 = T_2161 & T_2152;\n  assign T_2167 = T_2160 & T_2156;\n  assign T_2169 = T_2167 & T_2152;\n  assign T_2192 = T_2131[2];\n  assign T_2193 = T_2151 & T_2192;\n  assign T_2199 = T_2157 & T_2192;\n  assign T_2203 = T_2161 & T_2192;\n  assign T_2209 = T_2167 & T_2192;\n  assign T_2212 = T_2131[3];\n  assign T_2213 = T_2151 & T_2212;\n  assign T_2219 = T_2157 & T_2212;\n  assign T_2223 = T_2161 & T_2212;\n  assign T_2229 = T_2167 & T_2212;\n  assign T_2232 = T_2131[4];\n  assign T_2233 = T_2151 & T_2232;\n  assign T_2239 = T_2157 & T_2232;\n  assign T_2243 = T_2161 & T_2232;\n  assign T_2249 = T_2167 & T_2232;\n  assign T_2272 = T_2131[6];\n  assign T_2273 = T_2151 & T_2272;\n  assign T_2279 = T_2157 & T_2272;\n  assign T_2283 = T_2161 & T_2272;\n  assign T_2289 = T_2167 & T_2272;\n  assign T_2292 = T_2131[7];\n  assign T_2293 = T_2151 & T_2292;\n  assign T_2299 = T_2157 & T_2292;\n  assign T_2303 = T_2161 & T_2292;\n  assign T_2309 = T_2167 & T_2292;\n  assign T_2312 = T_2131[8];\n  assign T_2313 = T_2151 & T_2312;\n  assign T_2319 = T_2157 & T_2312;\n  assign T_2323 = T_2161 & T_2312;\n  assign T_2329 = T_2167 & T_2312;\n  assign T_2332 = T_2131[9];\n  assign T_2333 = T_2151 & T_2332;\n  assign T_2339 = T_2157 & T_2332;\n  assign T_2343 = T_2161 & T_2332;\n  assign T_2349 = T_2167 & T_2332;\n  assign T_2352 = T_2131[10];\n  assign T_2353 = T_2151 & T_2352;\n  assign T_2359 = T_2157 & T_2352;\n  assign T_2363 = T_2161 & T_2352;\n  assign T_2369 = T_2167 & T_2352;\n  assign T_2372 = T_2131[11];\n  assign T_2373 = T_2151 & T_2372;\n  assign T_2379 = T_2157 & T_2372;\n  assign T_2383 = T_2161 & T_2372;\n  assign T_2389 = T_2167 & T_2372;\n  assign T_2529_0 = T_1042;\n  assign T_2529_1 = 1'h1;\n  assign T_2529_2 = T_1078;\n  assign T_2529_3 = T_1096;\n  assign T_2529_4 = T_1123;\n  assign T_2529_5 = 1'h1;\n  assign T_2529_6 = T_1060;\n  assign T_2529_7 = T_1087;\n  assign T_2529_8 = T_1114;\n  assign T_2529_9 = T_1069;\n  assign T_2529_10 = T_1051;\n  assign T_2529_11 = T_1105;\n  assign T_2529_12 = 1'h1;\n  assign T_2529_13 = 1'h1;\n  assign T_2529_14 = 1'h1;\n  assign T_2529_15 = 1'h1;\n  assign T_2568_0 = T_1329;\n  assign T_2568_1 = 32'h0;\n  assign T_2568_2 = T_1489;\n  assign T_2568_3 = T_1569;\n  assign T_2568_4 = {{16'd0}, T_1689};\n  assign T_2568_5 = 32'h0;\n  assign T_2568_6 = T_1409;\n  assign T_2568_7 = T_1529;\n  assign T_2568_8 = {{16'd0}, T_1649};\n  assign T_2568_9 = {{16'd0}, T_1449};\n  assign T_2568_10 = {{16'd0}, T_1369};\n  assign T_2568_11 = {{16'd0}, T_1609};\n  assign T_2568_12 = 32'h0;\n  assign T_2568_13 = 32'h0;\n  assign T_2568_14 = 32'h0;\n  assign T_2568_15 = 32'h0;\n  assign GEN_4 = GEN_80;\n  assign GEN_66 = 4'h1 == T_2090 ? T_2529_1 : T_2529_0;\n  assign GEN_67 = 4'h2 == T_2090 ? T_2529_2 : GEN_66;\n  assign GEN_68 = 4'h3 == T_2090 ? T_2529_3 : GEN_67;\n  assign GEN_69 = 4'h4 == T_2090 ? T_2529_4 : GEN_68;\n  assign GEN_70 = 4'h5 == T_2090 ? T_2529_5 : GEN_69;\n  assign GEN_71 = 4'h6 == T_2090 ? T_2529_6 : GEN_70;\n  assign GEN_72 = 4'h7 == T_2090 ? T_2529_7 : GEN_71;\n  assign GEN_73 = 4'h8 == T_2090 ? T_2529_8 : GEN_72;\n  assign GEN_74 = 4'h9 == T_2090 ? T_2529_9 : GEN_73;\n  assign GEN_75 = 4'ha == T_2090 ? T_2529_10 : GEN_74;\n  assign GEN_76 = 4'hb == T_2090 ? T_2529_11 : GEN_75;\n  assign GEN_77 = 4'hc == T_2090 ? T_2529_12 : GEN_76;\n  assign GEN_78 = 4'hd == T_2090 ? T_2529_13 : GEN_77;\n  assign GEN_79 = 4'he == T_2090 ? T_2529_14 : GEN_78;\n  assign GEN_80 = 4'hf == T_2090 ? T_2529_15 : GEN_79;\n  assign GEN_5 = GEN_95;\n  assign GEN_81 = 4'h1 == T_2090 ? T_2568_1 : T_2568_0;\n  assign GEN_82 = 4'h2 == T_2090 ? T_2568_2 : GEN_81;\n  assign GEN_83 = 4'h3 == T_2090 ? T_2568_3 : GEN_82;\n  assign GEN_84 = 4'h4 == T_2090 ? T_2568_4 : GEN_83;\n  assign GEN_85 = 4'h5 == T_2090 ? T_2568_5 : GEN_84;\n  assign GEN_86 = 4'h6 == T_2090 ? T_2568_6 : GEN_85;\n  assign GEN_87 = 4'h7 == T_2090 ? T_2568_7 : GEN_86;\n  assign GEN_88 = 4'h8 == T_2090 ? T_2568_8 : GEN_87;\n  assign GEN_89 = 4'h9 == T_2090 ? T_2568_9 : GEN_88;\n  assign GEN_90 = 4'ha == T_2090 ? T_2568_10 : GEN_89;\n  assign GEN_91 = 4'hb == T_2090 ? T_2568_11 : GEN_90;\n  assign GEN_92 = 4'hc == T_2090 ? T_2568_12 : GEN_91;\n  assign GEN_93 = 4'hd == T_2090 ? T_2568_13 : GEN_92;\n  assign GEN_94 = 4'he == T_2090 ? T_2568_14 : GEN_93;\n  assign GEN_95 = 4'hf == T_2090 ? T_2568_15 : GEN_94;\n  assign T_2589 = GEN_4 ? GEN_5 : 32'h0;\n  assign T_2590 = T_951_bits_extra[9:8];\n  assign T_2592 = T_951_bits_extra[7:3];\n  assign T_2593 = T_951_bits_extra[2:0];\n  assign T_2604_opcode = 3'h0;\n  assign T_2604_param = 2'h0;\n  assign T_2604_size = T_2593;\n  assign T_2604_source = T_2592;\n  assign T_2604_sink = 1'h0;\n  assign T_2604_addr_lo = T_2590;\n  assign T_2604_data = 32'h0;\n  assign T_2604_error = 1'h0;\n`ifdef RANDOMIZE\n  integer initvar;\n  initial begin\n    `ifndef verilator\n      #0.002 begin end\n    `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_103 = {1{$random}};\n  GEN_96 = GEN_103[2:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_104 = {1{$random}};\n  GEN_97 = GEN_104[1:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_105 = {1{$random}};\n  GEN_98 = GEN_105[2:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_106 = {1{$random}};\n  GEN_99 = GEN_106[4:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_107 = {1{$random}};\n  GEN_100 = GEN_107[28:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_108 = {1{$random}};\n  GEN_101 = GEN_108[3:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_109 = {1{$random}};\n  GEN_102 = GEN_109[31:0];\n  `endif\n  end\n`endif\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_pwm16_core(\n  input   clock,\n  input   reset,\n  input   io_regs_cfg_write_valid,\n  input  [31:0] io_regs_cfg_write_bits,\n  output [31:0] io_regs_cfg_read,\n  input   io_regs_countLo_write_valid,\n  input  [31:0] io_regs_countLo_write_bits,\n  output [31:0] io_regs_countLo_read,\n  input   io_regs_countHi_write_valid,\n  input  [31:0] io_regs_countHi_write_bits,\n  output [31:0] io_regs_countHi_read,\n  input   io_regs_s_write_valid,\n  input  [15:0] io_regs_s_write_bits,\n  output [15:0] io_regs_s_read,\n  input   io_regs_cmp_0_write_valid,\n  input  [15:0] io_regs_cmp_0_write_bits,\n  output [15:0] io_regs_cmp_0_read,\n  input   io_regs_cmp_1_write_valid,\n  input  [15:0] io_regs_cmp_1_write_bits,\n  output [15:0] io_regs_cmp_1_read,\n  input   io_regs_cmp_2_write_valid,\n  input  [15:0] io_regs_cmp_2_write_bits,\n  output [15:0] io_regs_cmp_2_read,\n  input   io_regs_cmp_3_write_valid,\n  input  [15:0] io_regs_cmp_3_write_bits,\n  output [15:0] io_regs_cmp_3_read,\n  input   io_regs_feed_write_valid,\n  input  [31:0] io_regs_feed_write_bits,\n  output [31:0] io_regs_feed_read,\n  input   io_regs_key_write_valid,\n  input  [31:0] io_regs_key_write_bits,\n  output [31:0] io_regs_key_read,\n  output  io_ip_0,\n  output  io_ip_1,\n  output  io_ip_2,\n  output  io_ip_3,\n  output  io_gpio_0,\n  output  io_gpio_1,\n  output  io_gpio_2,\n  output  io_gpio_3\n);\n  wire [3:0] T_178;\n  reg [3:0] scale;\n  reg [31:0] GEN_22;\n  wire [3:0] GEN_0;\n  reg [15:0] cmp_0;\n  reg [31:0] GEN_23;\n  wire [15:0] GEN_1;\n  reg [15:0] cmp_1;\n  reg [31:0] GEN_24;\n  wire [15:0] GEN_2;\n  reg [15:0] cmp_2;\n  reg [31:0] GEN_25;\n  wire [15:0] GEN_3;\n  reg [15:0] cmp_3;\n  reg [31:0] GEN_26;\n  wire [15:0] GEN_4;\n  wire  countEn;\n  reg [4:0] T_196;\n  reg [31:0] GEN_27;\n  wire [4:0] GEN_18;\n  wire [5:0] T_197;\n  reg [25:0] T_199;\n  reg [31:0] GEN_28;\n  wire  T_200;\n  wire [26:0] T_202;\n  wire [26:0] GEN_5;\n  wire [30:0] T_203;\n  wire [32:0] T_207;\n  wire [27:0] T_208;\n  wire [32:0] GEN_6;\n  wire [27:0] GEN_7;\n  wire [30:0] T_209;\n  wire [15:0] s;\n  wire  T_210;\n  wire [3:0] T_211;\n  reg [3:0] center;\n  reg [31:0] GEN_29;\n  wire [3:0] GEN_8;\n  wire  T_215;\n  wire  T_216;\n  wire [15:0] T_217;\n  wire [15:0] T_218;\n  wire  elapsed_0;\n  wire  T_220;\n  wire  T_221;\n  wire [15:0] T_223;\n  wire  elapsed_1;\n  wire  T_225;\n  wire  T_226;\n  wire [15:0] T_228;\n  wire  elapsed_2;\n  wire  T_230;\n  wire  T_231;\n  wire [15:0] T_233;\n  wire  elapsed_3;\n  wire [5:0] GEN_19;\n  wire [5:0] T_234;\n  wire [4:0] T_235;\n  wire [26:0] GEN_20;\n  wire [26:0] T_239;\n  wire [26:0] T_241;\n  wire [25:0] T_242;\n  wire [30:0] T_243;\n  wire [4:0] GEN_21;\n  wire [5:0] T_245;\n  wire [4:0] T_246;\n  wire [30:0] T_247;\n  wire  feed;\n  wire  T_248;\n  reg  zerocmp;\n  reg [31:0] GEN_30;\n  wire  GEN_9;\n  wire  T_252;\n  wire  countReset;\n  wire [32:0] GEN_10;\n  wire [27:0] GEN_11;\n  wire  T_255;\n  reg  T_259;\n  reg [31:0] GEN_31;\n  wire  GEN_12;\n  wire  T_261;\n  wire  T_262;\n  wire  T_263;\n  reg  T_267;\n  reg [31:0] GEN_32;\n  wire  GEN_13;\n  wire  T_268;\n  reg  T_269;\n  reg [31:0] GEN_33;\n  wire [1:0] T_282;\n  wire [1:0] T_283;\n  wire [3:0] T_284;\n  reg [3:0] ip;\n  reg [31:0] GEN_34;\n  wire [1:0] T_286;\n  wire [1:0] T_287;\n  wire [3:0] T_288;\n  wire [3:0] T_289;\n  wire [3:0] T_290;\n  wire [3:0] T_297;\n  wire [3:0] T_298;\n  wire [3:0] T_299;\n  wire [3:0] T_300;\n  wire [3:0] T_301;\n  wire [3:0] T_304;\n  wire [3:0] GEN_14;\n  wire [3:0] T_305;\n  reg [3:0] gang;\n  reg [31:0] GEN_35;\n  wire [3:0] GEN_15;\n  wire  T_316;\n  wire  T_319;\n  wire  T_323;\n  reg  oneShot;\n  reg [31:0] GEN_36;\n  wire  GEN_16;\n  wire  T_325;\n  reg  countAlways;\n  reg [31:0] GEN_37;\n  wire  GEN_17;\n  wire [4:0] T_333;\n  wire [8:0] T_334;\n  wire [1:0] T_335;\n  wire [2:0] T_336;\n  wire [11:0] T_337;\n  wire [2:0] T_338;\n  wire [3:0] T_339;\n  wire [7:0] T_340;\n  wire [7:0] T_341;\n  wire [15:0] T_342;\n  wire [19:0] T_343;\n  wire [31:0] T_344;\n  wire  T_350_0;\n  wire  T_350_1;\n  wire  T_350_2;\n  wire  T_350_3;\n  wire  T_352;\n  wire  T_353;\n  wire  T_354;\n  wire  T_355;\n  wire [2:0] T_357;\n  wire [3:0] T_358;\n  wire [3:0] T_359;\n  wire [3:0] T_360;\n  wire [3:0] T_361;\n  wire  T_364_0;\n  wire  T_364_1;\n  wire  T_364_2;\n  wire  T_364_3;\n  wire  T_366;\n  wire  T_367;\n  wire  T_368;\n  wire  T_369;\n  wire  T_370;\n  assign io_regs_cfg_read = T_344;\n  assign io_regs_countLo_read = {{1'd0}, T_203};\n  assign io_regs_countHi_read = 32'h0;\n  assign io_regs_s_read = s;\n  assign io_regs_cmp_0_read = cmp_0;\n  assign io_regs_cmp_1_read = cmp_1;\n  assign io_regs_cmp_2_read = cmp_2;\n  assign io_regs_cmp_3_read = cmp_3;\n  assign io_regs_feed_read = 32'h0;\n  assign io_regs_key_read = 32'h1;\n  assign io_ip_0 = T_350_0;\n  assign io_ip_1 = T_350_1;\n  assign io_ip_2 = T_350_2;\n  assign io_ip_3 = T_350_3;\n  assign io_gpio_0 = T_364_0;\n  assign io_gpio_1 = T_364_1;\n  assign io_gpio_2 = T_364_2;\n  assign io_gpio_3 = T_364_3;\n  assign T_178 = io_regs_cfg_write_bits[3:0];\n  assign GEN_0 = io_regs_cfg_write_valid ? T_178 : scale;\n  assign GEN_1 = io_regs_cmp_0_write_valid ? io_regs_cmp_0_write_bits : cmp_0;\n  assign GEN_2 = io_regs_cmp_1_write_valid ? io_regs_cmp_1_write_bits : cmp_1;\n  assign GEN_3 = io_regs_cmp_2_write_valid ? io_regs_cmp_2_write_bits : cmp_2;\n  assign GEN_4 = io_regs_cmp_3_write_valid ? io_regs_cmp_3_write_bits : cmp_3;\n  assign countEn = T_370;\n  assign GEN_18 = {{4'd0}, countEn};\n  assign T_197 = T_196 + GEN_18;\n  assign T_200 = T_197[5];\n  assign T_202 = T_199 + 26'h1;\n  assign GEN_5 = T_200 ? T_202 : {{1'd0}, T_199};\n  assign T_203 = {T_199,T_196};\n  assign T_207 = {1'h0,io_regs_countLo_write_bits};\n  assign T_208 = T_207[32:5];\n  assign GEN_6 = io_regs_countLo_write_valid ? T_207 : {{27'd0}, T_197};\n  assign GEN_7 = io_regs_countLo_write_valid ? T_208 : {{1'd0}, GEN_5};\n  assign T_209 = T_203 >> scale;\n  assign s = T_209[15:0];\n  assign T_210 = s[15];\n  assign T_211 = io_regs_cfg_write_bits[19:16];\n  assign GEN_8 = io_regs_cfg_write_valid ? T_211 : center;\n  assign T_215 = center[0];\n  assign T_216 = T_210 & T_215;\n  assign T_217 = ~ s;\n  assign T_218 = T_216 ? T_217 : s;\n  assign elapsed_0 = T_218 >= cmp_0;\n  assign T_220 = center[1];\n  assign T_221 = T_210 & T_220;\n  assign T_223 = T_221 ? T_217 : s;\n  assign elapsed_1 = T_223 >= cmp_1;\n  assign T_225 = center[2];\n  assign T_226 = T_210 & T_225;\n  assign T_228 = T_226 ? T_217 : s;\n  assign elapsed_2 = T_228 >= cmp_2;\n  assign T_230 = center[3];\n  assign T_231 = T_210 & T_230;\n  assign T_233 = T_231 ? T_217 : s;\n  assign elapsed_3 = T_233 >= cmp_3;\n  assign GEN_19 = {{1'd0}, T_196};\n  assign T_234 = GEN_19 ^ T_197;\n  assign T_235 = T_234[5:1];\n  assign GEN_20 = {{1'd0}, T_199};\n  assign T_239 = GEN_20 ^ T_202;\n  assign T_241 = T_200 ? T_239 : 27'h0;\n  assign T_242 = T_241[26:1];\n  assign T_243 = {T_242,T_235};\n  assign GEN_21 = {{1'd0}, scale};\n  assign T_245 = GEN_21 + 5'h10;\n  assign T_246 = T_245[4:0];\n  assign T_247 = T_243 >> T_246;\n  assign feed = T_247[0];\n  assign T_248 = io_regs_cfg_write_bits[9];\n  assign GEN_9 = io_regs_cfg_write_valid ? T_248 : zerocmp;\n  assign T_252 = zerocmp & elapsed_0;\n  assign countReset = feed | T_252;\n  assign GEN_10 = countReset ? 33'h0 : GEN_6;\n  assign GEN_11 = countReset ? 28'h0 : GEN_7;\n  assign T_255 = io_regs_cfg_write_bits[10];\n  assign GEN_12 = io_regs_cfg_write_valid ? T_255 : T_259;\n  assign T_261 = countReset == 1'h0;\n  assign T_262 = T_259 & T_261;\n  assign T_263 = io_regs_cfg_write_bits[8];\n  assign GEN_13 = io_regs_cfg_write_valid ? T_263 : T_267;\n  assign T_268 = T_262 | T_267;\n  assign T_282 = {T_221,T_216};\n  assign T_283 = {T_231,T_226};\n  assign T_284 = {T_283,T_282};\n  assign T_286 = {elapsed_1,elapsed_0};\n  assign T_287 = {elapsed_3,elapsed_2};\n  assign T_288 = {T_287,T_286};\n  assign T_289 = T_284 & T_288;\n  assign T_290 = ~ T_284;\n  assign T_297 = T_269 ? 4'hf : 4'h0;\n  assign T_298 = T_297 & ip;\n  assign T_299 = T_288 | T_298;\n  assign T_300 = T_290 & T_299;\n  assign T_301 = T_289 | T_300;\n  assign T_304 = io_regs_cfg_write_bits[31:28];\n  assign GEN_14 = io_regs_cfg_write_valid ? T_304 : T_301;\n  assign T_305 = io_regs_cfg_write_bits[27:24];\n  assign GEN_15 = io_regs_cfg_write_valid ? T_305 : gang;\n  assign T_316 = io_regs_cfg_write_bits[13];\n  assign T_319 = T_316 & T_261;\n  assign T_323 = io_regs_cfg_write_valid | countReset;\n  assign GEN_16 = T_323 ? T_319 : oneShot;\n  assign T_325 = io_regs_cfg_write_bits[12];\n  assign GEN_17 = io_regs_cfg_write_valid ? T_325 : countAlways;\n  assign T_333 = {T_267,4'h0};\n  assign T_334 = {T_333,scale};\n  assign T_335 = {1'h0,T_259};\n  assign T_336 = {T_335,zerocmp};\n  assign T_337 = {T_336,T_334};\n  assign T_338 = {2'h0,oneShot};\n  assign T_339 = {T_338,countAlways};\n  assign T_340 = {4'h0,center};\n  assign T_341 = {ip,gang};\n  assign T_342 = {T_341,T_340};\n  assign T_343 = {T_342,T_339};\n  assign T_344 = {T_343,T_337};\n  assign T_350_0 = T_352;\n  assign T_350_1 = T_353;\n  assign T_350_2 = T_354;\n  assign T_350_3 = T_355;\n  assign T_352 = ip[0];\n  assign T_353 = ip[1];\n  assign T_354 = ip[2];\n  assign T_355 = ip[3];\n  assign T_357 = ip[3:1];\n  assign T_358 = {T_352,T_357};\n  assign T_359 = gang & T_358;\n  assign T_360 = ~ T_359;\n  assign T_361 = ip & T_360;\n  assign T_364_0 = T_366;\n  assign T_364_1 = T_367;\n  assign T_364_2 = T_368;\n  assign T_364_3 = T_369;\n  assign T_366 = T_361[0];\n  assign T_367 = T_361[1];\n  assign T_368 = T_361[2];\n  assign T_369 = T_361[3];\n  assign T_370 = countAlways | oneShot;\n\n  always @(posedge clock or posedge reset)\n  if(reset) begin\n      scale <= 4'b0;\n      cmp_0 <= 16'b0;\n      cmp_1 <= 16'b0;\n      cmp_2 <= 16'b0;\n      cmp_3 <= 16'b0;\n      T_196 <= 5'b0;\n      T_199 <= 26'b0;\n      center <= 4'b0;\n      zerocmp <= 1'b0;\n      T_259 <= 1'b0;\n      T_267 <= 1'b0;\n      T_269 <= 1'b0;\n      ip <= 4'b0;\n      gang <= 4'b0;\n  end\n  else begin\n    if (io_regs_cfg_write_valid) begin\n      scale <= T_178;\n    end\n    if (io_regs_cmp_0_write_valid) begin\n      cmp_0 <= io_regs_cmp_0_write_bits;\n    end\n    if (io_regs_cmp_1_write_valid) begin\n      cmp_1 <= io_regs_cmp_1_write_bits;\n    end\n    if (io_regs_cmp_2_write_valid) begin\n      cmp_2 <= io_regs_cmp_2_write_bits;\n    end\n    if (io_regs_cmp_3_write_valid) begin\n      cmp_3 <= io_regs_cmp_3_write_bits;\n    end\n    T_196 <= GEN_10[4:0];\n    T_199 <= GEN_11[25:0];\n    if (io_regs_cfg_write_valid) begin\n      center <= T_211;\n    end\n    if (io_regs_cfg_write_valid) begin\n      zerocmp <= T_248;\n    end\n    if (io_regs_cfg_write_valid) begin\n      T_259 <= T_255;\n    end\n    if (io_regs_cfg_write_valid) begin\n      T_267 <= T_263;\n    end\n    T_269 <= T_268;\n    if (io_regs_cfg_write_valid) begin\n      ip <= T_304;\n    end else begin\n      ip <= T_301;\n    end\n    if (io_regs_cfg_write_valid) begin\n      gang <= T_305;\n    end\n  end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      oneShot <= 1'h0;\n    end else begin\n      if (T_323) begin\n        oneShot <= T_319;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      countAlways <= 1'h0;\n    end else begin\n      if (io_regs_cfg_write_valid) begin\n        countAlways <= T_325;\n      end\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top level module of pwm16\n//\n// ====================================================================\n\nmodule sirv_pwm16_top(\n  input   clk,\n  input   rst_n,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [32-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n  output  io_interrupts_0_0,\n  output  io_interrupts_0_1,\n  output  io_interrupts_0_2,\n  output  io_interrupts_0_3,\n\n  output  io_gpio_0,\n  output  io_gpio_1,\n  output  io_gpio_2,\n  output  io_gpio_3\n);\n\n  wire  io_in_0_a_ready;\n  assign  i_icb_cmd_ready  = io_in_0_a_ready;\n  wire  io_in_0_a_valid  = i_icb_cmd_valid;\n  wire  [2:0] io_in_0_a_bits_opcode  = i_icb_cmd_read ? 3'h4 : 3'h0;\n  wire  [2:0] io_in_0_a_bits_param  = 3'b0;\n  wire  [2:0] io_in_0_a_bits_size = 3'd2;\n  wire  [4:0] io_in_0_a_bits_source  = 5'b0;\n  wire  [28:0] io_in_0_a_bits_address  = i_icb_cmd_addr[28:0];\n  wire  [3:0] io_in_0_a_bits_mask  = 4'b1111;\n  wire  [31:0] io_in_0_a_bits_data  = i_icb_cmd_wdata;\n\n  \n  wire  io_in_0_d_ready = i_icb_rsp_ready;\n\n  wire  [2:0] io_in_0_d_bits_opcode;\n  wire  [1:0] io_in_0_d_bits_param;\n  wire  [2:0] io_in_0_d_bits_size;\n  wire  [4:0] io_in_0_d_bits_source;\n  wire  io_in_0_d_bits_sink;\n  wire  [1:0] io_in_0_d_bits_addr_lo;\n  wire  [31:0] io_in_0_d_bits_data;\n  wire  io_in_0_d_bits_error;\n  wire  io_in_0_d_valid;\n\n  assign  i_icb_rsp_valid = io_in_0_d_valid;\n  assign  i_icb_rsp_rdata = io_in_0_d_bits_data;\n\n  // Not used\n  wire  io_in_0_b_ready = 1'b0;\n  wire  io_in_0_b_valid;\n  wire  [2:0] io_in_0_b_bits_opcode;\n  wire  [1:0] io_in_0_b_bits_param;\n  wire  [2:0] io_in_0_b_bits_size;\n  wire  [4:0] io_in_0_b_bits_source;\n  wire  [28:0] io_in_0_b_bits_address;\n  wire  [3:0] io_in_0_b_bits_mask;\n  wire  [31:0] io_in_0_b_bits_data;\n\n  // Not used\n  wire  io_in_0_c_ready;\n  wire  io_in_0_c_valid = 1'b0;\n  wire  [2:0] io_in_0_c_bits_opcode = 3'b0;\n  wire  [2:0] io_in_0_c_bits_param = 3'b0;\n  wire  [2:0] io_in_0_c_bits_size = 3'd2;\n  wire  [4:0] io_in_0_c_bits_source = 5'b0;\n  wire  [28:0] io_in_0_c_bits_address = 29'b0;\n  wire  [31:0] io_in_0_c_bits_data = 32'b0;\n  wire  io_in_0_c_bits_error = 1'b0;\n\n  // Not used\n  wire  io_in_0_e_ready;\n  wire  io_in_0_e_valid = 1'b0;\n  wire  io_in_0_e_bits_sink = 1'b0;\n\nsirv_pwm16 u_sirv_pwm16(\n  .clock                            (clk                              ),\n  .reset                            (~rst_n                           ),\n\n  .io_interrupts_0_0                (io_interrupts_0_0                ),\n  .io_interrupts_0_1                (io_interrupts_0_1                ),\n  .io_interrupts_0_2                (io_interrupts_0_2                ),\n  .io_interrupts_0_3                (io_interrupts_0_3                ),\n                                                                      \n  .io_gpio_0                        (io_gpio_0                        ),\n  .io_gpio_1                        (io_gpio_1                        ),\n  .io_gpio_2                        (io_gpio_2                        ),\n  .io_gpio_3                        (io_gpio_3                        ),\n\n  .io_in_0_a_ready                  (io_in_0_a_ready                  ),\n  .io_in_0_a_valid                  (io_in_0_a_valid                  ),\n  .io_in_0_a_bits_opcode            (io_in_0_a_bits_opcode            ),\n  .io_in_0_a_bits_param             (io_in_0_a_bits_param             ),\n  .io_in_0_a_bits_size              (io_in_0_a_bits_size              ),\n  .io_in_0_a_bits_source            (io_in_0_a_bits_source            ),\n  .io_in_0_a_bits_address           (io_in_0_a_bits_address           ),\n  .io_in_0_a_bits_mask              (io_in_0_a_bits_mask              ),\n  .io_in_0_a_bits_data              (io_in_0_a_bits_data              ),\n  .io_in_0_b_ready                  (io_in_0_b_ready                  ),\n  .io_in_0_b_valid                  (io_in_0_b_valid                  ),\n  .io_in_0_b_bits_opcode            (io_in_0_b_bits_opcode            ),\n  .io_in_0_b_bits_param             (io_in_0_b_bits_param             ),\n  .io_in_0_b_bits_size              (io_in_0_b_bits_size              ),\n  .io_in_0_b_bits_source            (io_in_0_b_bits_source            ),\n  .io_in_0_b_bits_address           (io_in_0_b_bits_address           ),\n  .io_in_0_b_bits_mask              (io_in_0_b_bits_mask              ),\n  .io_in_0_b_bits_data              (io_in_0_b_bits_data              ),\n  .io_in_0_c_ready                  (io_in_0_c_ready                  ),\n  .io_in_0_c_valid                  (io_in_0_c_valid                  ),\n  .io_in_0_c_bits_opcode            (io_in_0_c_bits_opcode            ),\n  .io_in_0_c_bits_param             (io_in_0_c_bits_param             ),\n  .io_in_0_c_bits_size              (io_in_0_c_bits_size              ),\n  .io_in_0_c_bits_source            (io_in_0_c_bits_source            ),\n  .io_in_0_c_bits_address           (io_in_0_c_bits_address           ),\n  .io_in_0_c_bits_data              (io_in_0_c_bits_data              ),\n  .io_in_0_c_bits_error             (io_in_0_c_bits_error             ),\n  .io_in_0_d_ready                  (io_in_0_d_ready                  ),\n  .io_in_0_d_valid                  (io_in_0_d_valid                  ),\n  .io_in_0_d_bits_opcode            (io_in_0_d_bits_opcode            ),\n  .io_in_0_d_bits_param             (io_in_0_d_bits_param             ),\n  .io_in_0_d_bits_size              (io_in_0_d_bits_size              ),\n  .io_in_0_d_bits_source            (io_in_0_d_bits_source            ),\n  .io_in_0_d_bits_sink              (io_in_0_d_bits_sink              ),\n  .io_in_0_d_bits_addr_lo           (io_in_0_d_bits_addr_lo           ),\n  .io_in_0_d_bits_data              (io_in_0_d_bits_data              ),\n  .io_in_0_d_bits_error             (io_in_0_d_bits_error             ),\n  .io_in_0_e_ready                  (io_in_0_e_ready                  ),\n  .io_in_0_e_valid                  (io_in_0_e_valid                  ),\n  .io_in_0_e_bits_sink              (io_in_0_e_bits_sink              ) \n);\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_pwm8(\n  input   clock,\n  input   reset,\n  output  io_interrupts_0_0,\n  output  io_interrupts_0_1,\n  output  io_interrupts_0_2,\n  output  io_interrupts_0_3,\n  output  io_in_0_a_ready,\n  input   io_in_0_a_valid,\n  input  [2:0] io_in_0_a_bits_opcode,\n  input  [2:0] io_in_0_a_bits_param,\n  input  [2:0] io_in_0_a_bits_size,\n  input  [4:0] io_in_0_a_bits_source,\n  input  [28:0] io_in_0_a_bits_address,\n  input  [3:0] io_in_0_a_bits_mask,\n  input  [31:0] io_in_0_a_bits_data,\n  input   io_in_0_b_ready,\n  output  io_in_0_b_valid,\n  output [2:0] io_in_0_b_bits_opcode,\n  output [1:0] io_in_0_b_bits_param,\n  output [2:0] io_in_0_b_bits_size,\n  output [4:0] io_in_0_b_bits_source,\n  output [28:0] io_in_0_b_bits_address,\n  output [3:0] io_in_0_b_bits_mask,\n  output [31:0] io_in_0_b_bits_data,\n  output  io_in_0_c_ready,\n  input   io_in_0_c_valid,\n  input  [2:0] io_in_0_c_bits_opcode,\n  input  [2:0] io_in_0_c_bits_param,\n  input  [2:0] io_in_0_c_bits_size,\n  input  [4:0] io_in_0_c_bits_source,\n  input  [28:0] io_in_0_c_bits_address,\n  input  [31:0] io_in_0_c_bits_data,\n  input   io_in_0_c_bits_error,\n  input   io_in_0_d_ready,\n  output  io_in_0_d_valid,\n  output [2:0] io_in_0_d_bits_opcode,\n  output [1:0] io_in_0_d_bits_param,\n  output [2:0] io_in_0_d_bits_size,\n  output [4:0] io_in_0_d_bits_source,\n  output  io_in_0_d_bits_sink,\n  output [1:0] io_in_0_d_bits_addr_lo,\n  output [31:0] io_in_0_d_bits_data,\n  output  io_in_0_d_bits_error,\n  output  io_in_0_e_ready,\n  input   io_in_0_e_valid,\n  input   io_in_0_e_bits_sink,\n  output  io_gpio_0,\n  output  io_gpio_1,\n  output  io_gpio_2,\n  output  io_gpio_3\n);\n  wire  pwm_clock;\n  wire  pwm_reset;\n  wire  pwm_io_regs_cfg_write_valid;\n  wire [31:0] pwm_io_regs_cfg_write_bits;\n  wire [31:0] pwm_io_regs_cfg_read;\n  wire  pwm_io_regs_countLo_write_valid;\n  wire [31:0] pwm_io_regs_countLo_write_bits;\n  wire [31:0] pwm_io_regs_countLo_read;\n  wire  pwm_io_regs_countHi_write_valid;\n  wire [31:0] pwm_io_regs_countHi_write_bits;\n  wire [31:0] pwm_io_regs_countHi_read;\n  wire  pwm_io_regs_s_write_valid;\n  wire [7:0] pwm_io_regs_s_write_bits;\n  wire [7:0] pwm_io_regs_s_read;\n  wire  pwm_io_regs_cmp_0_write_valid;\n  wire [7:0] pwm_io_regs_cmp_0_write_bits;\n  wire [7:0] pwm_io_regs_cmp_0_read;\n  wire  pwm_io_regs_cmp_1_write_valid;\n  wire [7:0] pwm_io_regs_cmp_1_write_bits;\n  wire [7:0] pwm_io_regs_cmp_1_read;\n  wire  pwm_io_regs_cmp_2_write_valid;\n  wire [7:0] pwm_io_regs_cmp_2_write_bits;\n  wire [7:0] pwm_io_regs_cmp_2_read;\n  wire  pwm_io_regs_cmp_3_write_valid;\n  wire [7:0] pwm_io_regs_cmp_3_write_bits;\n  wire [7:0] pwm_io_regs_cmp_3_read;\n  wire  pwm_io_regs_feed_write_valid;\n  wire [31:0] pwm_io_regs_feed_write_bits;\n  wire [31:0] pwm_io_regs_feed_read;\n  wire  pwm_io_regs_key_write_valid;\n  wire [31:0] pwm_io_regs_key_write_bits;\n  wire [31:0] pwm_io_regs_key_read;\n  wire  pwm_io_ip_0;\n  wire  pwm_io_ip_1;\n  wire  pwm_io_ip_2;\n  wire  pwm_io_ip_3;\n  wire  pwm_io_gpio_0;\n  wire  pwm_io_gpio_1;\n  wire  pwm_io_gpio_2;\n  wire  pwm_io_gpio_3;\n  wire  T_912_ready;\n  wire  T_912_valid;\n  wire  T_912_bits_read;\n  wire [9:0] T_912_bits_index;\n  wire [31:0] T_912_bits_data;\n  wire [3:0] T_912_bits_mask;\n  wire [9:0] T_912_bits_extra;\n  wire  T_929;\n  wire [26:0] T_930;\n  wire [1:0] T_931;\n  wire [6:0] T_932;\n  wire [9:0] T_933;\n  wire  T_951_ready;\n  wire  T_951_valid;\n  wire  T_951_bits_read;\n  wire [31:0] T_951_bits_data;\n  wire [9:0] T_951_bits_extra;\n  wire  T_987_ready;\n  wire  T_987_valid;\n  wire  T_987_bits_read;\n  wire [9:0] T_987_bits_index;\n  wire [31:0] T_987_bits_data;\n  wire [3:0] T_987_bits_mask;\n  wire [9:0] T_987_bits_extra;\n  wire [9:0] T_1040;\n  wire  T_1042;\n  wire [9:0] T_1048;\n  wire [9:0] T_1049;\n  wire  T_1051;\n  wire [9:0] T_1057;\n  wire [9:0] T_1058;\n  wire  T_1060;\n  wire [9:0] T_1066;\n  wire [9:0] T_1067;\n  wire  T_1069;\n  wire [9:0] T_1075;\n  wire [9:0] T_1076;\n  wire  T_1078;\n  wire [9:0] T_1084;\n  wire [9:0] T_1085;\n  wire  T_1087;\n  wire [9:0] T_1093;\n  wire [9:0] T_1094;\n  wire  T_1096;\n  wire [9:0] T_1102;\n  wire [9:0] T_1103;\n  wire  T_1105;\n  wire [9:0] T_1111;\n  wire [9:0] T_1112;\n  wire  T_1114;\n  wire [9:0] T_1120;\n  wire [9:0] T_1121;\n  wire  T_1123;\n  wire  T_1131_0;\n  wire  T_1131_1;\n  wire  T_1131_2;\n  wire  T_1131_3;\n  wire  T_1131_4;\n  wire  T_1131_5;\n  wire  T_1131_6;\n  wire  T_1131_7;\n  wire  T_1131_8;\n  wire  T_1131_9;\n  wire  T_1136_0;\n  wire  T_1136_1;\n  wire  T_1136_2;\n  wire  T_1136_3;\n  wire  T_1136_4;\n  wire  T_1136_5;\n  wire  T_1136_6;\n  wire  T_1136_7;\n  wire  T_1136_8;\n  wire  T_1136_9;\n  wire  T_1141_0;\n  wire  T_1141_1;\n  wire  T_1141_2;\n  wire  T_1141_3;\n  wire  T_1141_4;\n  wire  T_1141_5;\n  wire  T_1141_6;\n  wire  T_1141_7;\n  wire  T_1141_8;\n  wire  T_1141_9;\n  wire  T_1146_0;\n  wire  T_1146_1;\n  wire  T_1146_2;\n  wire  T_1146_3;\n  wire  T_1146_4;\n  wire  T_1146_5;\n  wire  T_1146_6;\n  wire  T_1146_7;\n  wire  T_1146_8;\n  wire  T_1146_9;\n  wire  T_1151_0;\n  wire  T_1151_1;\n  wire  T_1151_2;\n  wire  T_1151_3;\n  wire  T_1151_4;\n  wire  T_1151_5;\n  wire  T_1151_6;\n  wire  T_1151_7;\n  wire  T_1151_8;\n  wire  T_1151_9;\n  wire  T_1156_0;\n  wire  T_1156_1;\n  wire  T_1156_2;\n  wire  T_1156_3;\n  wire  T_1156_4;\n  wire  T_1156_5;\n  wire  T_1156_6;\n  wire  T_1156_7;\n  wire  T_1156_8;\n  wire  T_1156_9;\n  wire  T_1161_0;\n  wire  T_1161_1;\n  wire  T_1161_2;\n  wire  T_1161_3;\n  wire  T_1161_4;\n  wire  T_1161_5;\n  wire  T_1161_6;\n  wire  T_1161_7;\n  wire  T_1161_8;\n  wire  T_1161_9;\n  wire  T_1166_0;\n  wire  T_1166_1;\n  wire  T_1166_2;\n  wire  T_1166_3;\n  wire  T_1166_4;\n  wire  T_1166_5;\n  wire  T_1166_6;\n  wire  T_1166_7;\n  wire  T_1166_8;\n  wire  T_1166_9;\n  wire  T_1248;\n  wire  T_1249;\n  wire  T_1250;\n  wire  T_1251;\n  wire [7:0] T_1255;\n  wire [7:0] T_1259;\n  wire [7:0] T_1263;\n  wire [7:0] T_1267;\n  wire [15:0] T_1268;\n  wire [15:0] T_1269;\n  wire [31:0] T_1270;\n  wire [31:0] T_1298;\n  wire  T_1300;\n  wire  T_1313;\n  wire [31:0] T_1329;\n  wire [7:0] T_1334;\n  wire [7:0] T_1338;\n  wire  T_1340;\n  wire  T_1353;\n  wire [7:0] T_1354;\n  wire [7:0] T_1369;\n  wire  T_1393;\n  wire [31:0] T_1409;\n  wire  T_1433;\n  wire [7:0] T_1449;\n  wire  T_1473;\n  wire [31:0] T_1489;\n  wire  T_1513;\n  wire [31:0] T_1529;\n  wire  T_1553;\n  wire [31:0] T_1569;\n  wire  T_1593;\n  wire [7:0] T_1609;\n  wire  T_1633;\n  wire [7:0] T_1649;\n  wire  T_1673;\n  wire [7:0] T_1689;\n  wire  T_1695;\n  wire  T_1697;\n  wire  T_1702;\n  wire  T_1704;\n  wire  T_1706;\n  wire  T_1708;\n  wire  T_1710;\n  wire  T_1712;\n  wire  T_1717;\n  wire  T_1719;\n  wire  T_1721;\n  wire  T_1723;\n  wire  T_1725;\n  wire  T_1727;\n  wire  T_1729;\n  wire  T_1731;\n  wire  T_1733;\n  wire  T_1735;\n  wire  T_1737;\n  wire  T_1739;\n  wire  T_1771_0;\n  wire  T_1771_1;\n  wire  T_1771_2;\n  wire  T_1771_3;\n  wire  T_1771_4;\n  wire  T_1771_5;\n  wire  T_1771_6;\n  wire  T_1771_7;\n  wire  T_1771_8;\n  wire  T_1771_9;\n  wire  T_1771_10;\n  wire  T_1771_11;\n  wire  T_1771_12;\n  wire  T_1771_13;\n  wire  T_1771_14;\n  wire  T_1771_15;\n  wire  T_1793;\n  wire  T_1800;\n  wire  T_1804;\n  wire  T_1808;\n  wire  T_1815;\n  wire  T_1819;\n  wire  T_1823;\n  wire  T_1827;\n  wire  T_1831;\n  wire  T_1835;\n  wire  T_1867_0;\n  wire  T_1867_1;\n  wire  T_1867_2;\n  wire  T_1867_3;\n  wire  T_1867_4;\n  wire  T_1867_5;\n  wire  T_1867_6;\n  wire  T_1867_7;\n  wire  T_1867_8;\n  wire  T_1867_9;\n  wire  T_1867_10;\n  wire  T_1867_11;\n  wire  T_1867_12;\n  wire  T_1867_13;\n  wire  T_1867_14;\n  wire  T_1867_15;\n  wire  T_1889;\n  wire  T_1896;\n  wire  T_1900;\n  wire  T_1904;\n  wire  T_1911;\n  wire  T_1915;\n  wire  T_1919;\n  wire  T_1923;\n  wire  T_1927;\n  wire  T_1931;\n  wire  T_1963_0;\n  wire  T_1963_1;\n  wire  T_1963_2;\n  wire  T_1963_3;\n  wire  T_1963_4;\n  wire  T_1963_5;\n  wire  T_1963_6;\n  wire  T_1963_7;\n  wire  T_1963_8;\n  wire  T_1963_9;\n  wire  T_1963_10;\n  wire  T_1963_11;\n  wire  T_1963_12;\n  wire  T_1963_13;\n  wire  T_1963_14;\n  wire  T_1963_15;\n  wire  T_1985;\n  wire  T_1992;\n  wire  T_1996;\n  wire  T_2000;\n  wire  T_2007;\n  wire  T_2011;\n  wire  T_2015;\n  wire  T_2019;\n  wire  T_2023;\n  wire  T_2027;\n  wire  T_2059_0;\n  wire  T_2059_1;\n  wire  T_2059_2;\n  wire  T_2059_3;\n  wire  T_2059_4;\n  wire  T_2059_5;\n  wire  T_2059_6;\n  wire  T_2059_7;\n  wire  T_2059_8;\n  wire  T_2059_9;\n  wire  T_2059_10;\n  wire  T_2059_11;\n  wire  T_2059_12;\n  wire  T_2059_13;\n  wire  T_2059_14;\n  wire  T_2059_15;\n  wire  T_2078;\n  wire  T_2079;\n  wire  T_2080;\n  wire  T_2081;\n  wire [1:0] T_2088;\n  wire [1:0] T_2089;\n  wire [3:0] T_2090;\n  wire  GEN_0;\n  wire  GEN_6;\n  wire  GEN_7;\n  wire  GEN_8;\n  wire  GEN_9;\n  wire  GEN_10;\n  wire  GEN_11;\n  wire  GEN_12;\n  wire  GEN_13;\n  wire  GEN_14;\n  wire  GEN_15;\n  wire  GEN_16;\n  wire  GEN_17;\n  wire  GEN_18;\n  wire  GEN_19;\n  wire  GEN_20;\n  wire  GEN_1;\n  wire  GEN_21;\n  wire  GEN_22;\n  wire  GEN_23;\n  wire  GEN_24;\n  wire  GEN_25;\n  wire  GEN_26;\n  wire  GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_31;\n  wire  GEN_32;\n  wire  GEN_33;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  T_2106;\n  wire  GEN_2;\n  wire  GEN_36;\n  wire  GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire  GEN_40;\n  wire  GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire  GEN_48;\n  wire  GEN_49;\n  wire  GEN_50;\n  wire  GEN_3;\n  wire  GEN_51;\n  wire  GEN_52;\n  wire  GEN_53;\n  wire  GEN_54;\n  wire  GEN_55;\n  wire  GEN_56;\n  wire  GEN_57;\n  wire  GEN_58;\n  wire  GEN_59;\n  wire  GEN_60;\n  wire  GEN_61;\n  wire  GEN_62;\n  wire  GEN_63;\n  wire  GEN_64;\n  wire  GEN_65;\n  wire  T_2109;\n  wire  T_2110;\n  wire  T_2111;\n  wire  T_2112;\n  wire  T_2113;\n  wire [15:0] T_2115;\n  wire [1:0] T_2116;\n  wire [1:0] T_2117;\n  wire [3:0] T_2118;\n  wire [1:0] T_2119;\n  wire [1:0] T_2120;\n  wire [3:0] T_2121;\n  wire [7:0] T_2122;\n  wire [1:0] T_2123;\n  wire [1:0] T_2124;\n  wire [3:0] T_2125;\n  wire [7:0] T_2129;\n  wire [15:0] T_2130;\n  wire [15:0] T_2131;\n  wire  T_2150;\n  wire  T_2151;\n  wire  T_2152;\n  wire  T_2153;\n  wire  T_2156;\n  wire  T_2157;\n  wire  T_2159;\n  wire  T_2160;\n  wire  T_2161;\n  wire  T_2163;\n  wire  T_2167;\n  wire  T_2169;\n  wire  T_2192;\n  wire  T_2193;\n  wire  T_2199;\n  wire  T_2203;\n  wire  T_2209;\n  wire  T_2212;\n  wire  T_2213;\n  wire  T_2219;\n  wire  T_2223;\n  wire  T_2229;\n  wire  T_2232;\n  wire  T_2233;\n  wire  T_2239;\n  wire  T_2243;\n  wire  T_2249;\n  wire  T_2272;\n  wire  T_2273;\n  wire  T_2279;\n  wire  T_2283;\n  wire  T_2289;\n  wire  T_2292;\n  wire  T_2293;\n  wire  T_2299;\n  wire  T_2303;\n  wire  T_2309;\n  wire  T_2312;\n  wire  T_2313;\n  wire  T_2319;\n  wire  T_2323;\n  wire  T_2329;\n  wire  T_2332;\n  wire  T_2333;\n  wire  T_2339;\n  wire  T_2343;\n  wire  T_2349;\n  wire  T_2352;\n  wire  T_2353;\n  wire  T_2359;\n  wire  T_2363;\n  wire  T_2369;\n  wire  T_2372;\n  wire  T_2373;\n  wire  T_2379;\n  wire  T_2383;\n  wire  T_2389;\n  wire  T_2529_0;\n  wire  T_2529_1;\n  wire  T_2529_2;\n  wire  T_2529_3;\n  wire  T_2529_4;\n  wire  T_2529_5;\n  wire  T_2529_6;\n  wire  T_2529_7;\n  wire  T_2529_8;\n  wire  T_2529_9;\n  wire  T_2529_10;\n  wire  T_2529_11;\n  wire  T_2529_12;\n  wire  T_2529_13;\n  wire  T_2529_14;\n  wire  T_2529_15;\n  wire [31:0] T_2568_0;\n  wire [31:0] T_2568_1;\n  wire [31:0] T_2568_2;\n  wire [31:0] T_2568_3;\n  wire [31:0] T_2568_4;\n  wire [31:0] T_2568_5;\n  wire [31:0] T_2568_6;\n  wire [31:0] T_2568_7;\n  wire [31:0] T_2568_8;\n  wire [31:0] T_2568_9;\n  wire [31:0] T_2568_10;\n  wire [31:0] T_2568_11;\n  wire [31:0] T_2568_12;\n  wire [31:0] T_2568_13;\n  wire [31:0] T_2568_14;\n  wire [31:0] T_2568_15;\n  wire  GEN_4;\n  wire  GEN_66;\n  wire  GEN_67;\n  wire  GEN_68;\n  wire  GEN_69;\n  wire  GEN_70;\n  wire  GEN_71;\n  wire  GEN_72;\n  wire  GEN_73;\n  wire  GEN_74;\n  wire  GEN_75;\n  wire  GEN_76;\n  wire  GEN_77;\n  wire  GEN_78;\n  wire  GEN_79;\n  wire  GEN_80;\n  wire [31:0] GEN_5;\n  wire [31:0] GEN_81;\n  wire [31:0] GEN_82;\n  wire [31:0] GEN_83;\n  wire [31:0] GEN_84;\n  wire [31:0] GEN_85;\n  wire [31:0] GEN_86;\n  wire [31:0] GEN_87;\n  wire [31:0] GEN_88;\n  wire [31:0] GEN_89;\n  wire [31:0] GEN_90;\n  wire [31:0] GEN_91;\n  wire [31:0] GEN_92;\n  wire [31:0] GEN_93;\n  wire [31:0] GEN_94;\n  wire [31:0] GEN_95;\n  wire [31:0] T_2589;\n  wire [1:0] T_2590;\n  wire [4:0] T_2592;\n  wire [2:0] T_2593;\n  wire [2:0] T_2604_opcode;\n  wire [1:0] T_2604_param;\n  wire [2:0] T_2604_size;\n  wire [4:0] T_2604_source;\n  wire  T_2604_sink;\n  wire [1:0] T_2604_addr_lo;\n  wire [31:0] T_2604_data;\n  wire  T_2604_error;\n  wire [2:0] GEN_96 = 3'b0;\n  reg [31:0] GEN_103;\n  wire [1:0] GEN_97 = 2'b0;\n  reg [31:0] GEN_104;\n  wire [2:0] GEN_98 = 3'b0;\n  reg [31:0] GEN_105;\n  wire [4:0] GEN_99 = 5'b0;\n  reg [31:0] GEN_106;\n  wire [28:0] GEN_100 = 29'b0;\n  reg [31:0] GEN_107;\n  wire [3:0] GEN_101 = 4'b0;\n  reg [31:0] GEN_108;\n  wire [31:0] GEN_102 = 32'b0;\n  reg [31:0] GEN_109;\n  sirv_pwm8_core pwm (\n    .clock(pwm_clock),\n    .reset(pwm_reset),\n    .io_regs_cfg_write_valid(pwm_io_regs_cfg_write_valid),\n    .io_regs_cfg_write_bits(pwm_io_regs_cfg_write_bits),\n    .io_regs_cfg_read(pwm_io_regs_cfg_read),\n    .io_regs_countLo_write_valid(pwm_io_regs_countLo_write_valid),\n    .io_regs_countLo_write_bits(pwm_io_regs_countLo_write_bits),\n    .io_regs_countLo_read(pwm_io_regs_countLo_read),\n    .io_regs_countHi_write_valid(pwm_io_regs_countHi_write_valid),\n    .io_regs_countHi_write_bits(pwm_io_regs_countHi_write_bits),\n    .io_regs_countHi_read(pwm_io_regs_countHi_read),\n    .io_regs_s_write_valid(pwm_io_regs_s_write_valid),\n    .io_regs_s_write_bits(pwm_io_regs_s_write_bits),\n    .io_regs_s_read(pwm_io_regs_s_read),\n    .io_regs_cmp_0_write_valid(pwm_io_regs_cmp_0_write_valid),\n    .io_regs_cmp_0_write_bits(pwm_io_regs_cmp_0_write_bits),\n    .io_regs_cmp_0_read(pwm_io_regs_cmp_0_read),\n    .io_regs_cmp_1_write_valid(pwm_io_regs_cmp_1_write_valid),\n    .io_regs_cmp_1_write_bits(pwm_io_regs_cmp_1_write_bits),\n    .io_regs_cmp_1_read(pwm_io_regs_cmp_1_read),\n    .io_regs_cmp_2_write_valid(pwm_io_regs_cmp_2_write_valid),\n    .io_regs_cmp_2_write_bits(pwm_io_regs_cmp_2_write_bits),\n    .io_regs_cmp_2_read(pwm_io_regs_cmp_2_read),\n    .io_regs_cmp_3_write_valid(pwm_io_regs_cmp_3_write_valid),\n    .io_regs_cmp_3_write_bits(pwm_io_regs_cmp_3_write_bits),\n    .io_regs_cmp_3_read(pwm_io_regs_cmp_3_read),\n    .io_regs_feed_write_valid(pwm_io_regs_feed_write_valid),\n    .io_regs_feed_write_bits(pwm_io_regs_feed_write_bits),\n    .io_regs_feed_read(pwm_io_regs_feed_read),\n    .io_regs_key_write_valid(pwm_io_regs_key_write_valid),\n    .io_regs_key_write_bits(pwm_io_regs_key_write_bits),\n    .io_regs_key_read(pwm_io_regs_key_read),\n    .io_ip_0(pwm_io_ip_0),\n    .io_ip_1(pwm_io_ip_1),\n    .io_ip_2(pwm_io_ip_2),\n    .io_ip_3(pwm_io_ip_3),\n    .io_gpio_0(pwm_io_gpio_0),\n    .io_gpio_1(pwm_io_gpio_1),\n    .io_gpio_2(pwm_io_gpio_2),\n    .io_gpio_3(pwm_io_gpio_3)\n  );\n  assign io_interrupts_0_0 = pwm_io_ip_0;\n  assign io_interrupts_0_1 = pwm_io_ip_1;\n  assign io_interrupts_0_2 = pwm_io_ip_2;\n  assign io_interrupts_0_3 = pwm_io_ip_3;\n  assign io_in_0_a_ready = T_912_ready;\n  assign io_in_0_b_valid = 1'h0;\n  assign io_in_0_b_bits_opcode = GEN_96;\n  assign io_in_0_b_bits_param = GEN_97;\n  assign io_in_0_b_bits_size = GEN_98;\n  assign io_in_0_b_bits_source = GEN_99;\n  assign io_in_0_b_bits_address = GEN_100;\n  assign io_in_0_b_bits_mask = GEN_101;\n  assign io_in_0_b_bits_data = GEN_102;\n  assign io_in_0_c_ready = 1'h1;\n  assign io_in_0_d_valid = T_951_valid;\n  assign io_in_0_d_bits_opcode = {{2'd0}, T_951_bits_read};\n  assign io_in_0_d_bits_param = T_2604_param;\n  assign io_in_0_d_bits_size = T_2604_size;\n  assign io_in_0_d_bits_source = T_2604_source;\n  assign io_in_0_d_bits_sink = T_2604_sink;\n  assign io_in_0_d_bits_addr_lo = T_2604_addr_lo;\n  assign io_in_0_d_bits_data = T_951_bits_data;\n  assign io_in_0_d_bits_error = T_2604_error;\n  assign io_in_0_e_ready = 1'h1;\n  assign io_gpio_0 = pwm_io_gpio_0;\n  assign io_gpio_1 = pwm_io_gpio_1;\n  assign io_gpio_2 = pwm_io_gpio_2;\n  assign io_gpio_3 = pwm_io_gpio_3;\n  assign pwm_clock = clock;\n  assign pwm_reset = reset;\n  assign pwm_io_regs_cfg_write_valid = T_1313;\n  assign pwm_io_regs_cfg_write_bits = T_987_bits_data;\n  assign pwm_io_regs_countLo_write_valid = T_1473;\n  assign pwm_io_regs_countLo_write_bits = T_987_bits_data;\n  assign pwm_io_regs_countHi_write_valid = T_1553;\n  assign pwm_io_regs_countHi_write_bits = T_987_bits_data;\n  assign pwm_io_regs_s_write_valid = T_1673;\n  assign pwm_io_regs_s_write_bits = T_1354;\n  assign pwm_io_regs_cmp_0_write_valid = T_1633;\n  assign pwm_io_regs_cmp_0_write_bits = T_1354;\n  assign pwm_io_regs_cmp_1_write_valid = T_1433;\n  assign pwm_io_regs_cmp_1_write_bits = T_1354;\n  assign pwm_io_regs_cmp_2_write_valid = T_1353;\n  assign pwm_io_regs_cmp_2_write_bits = T_1354;\n  assign pwm_io_regs_cmp_3_write_valid = T_1593;\n  assign pwm_io_regs_cmp_3_write_bits = T_1354;\n  assign pwm_io_regs_feed_write_valid = T_1393;\n  assign pwm_io_regs_feed_write_bits = T_987_bits_data;\n  assign pwm_io_regs_key_write_valid = T_1513;\n  assign pwm_io_regs_key_write_bits = T_987_bits_data;\n  assign T_912_ready = T_2110;\n  assign T_912_valid = io_in_0_a_valid;\n  assign T_912_bits_read = T_929;\n  assign T_912_bits_index = T_930[9:0];\n  assign T_912_bits_data = io_in_0_a_bits_data;\n  assign T_912_bits_mask = io_in_0_a_bits_mask;\n  assign T_912_bits_extra = T_933;\n  assign T_929 = io_in_0_a_bits_opcode == 3'h4;\n  assign T_930 = io_in_0_a_bits_address[28:2];\n  assign T_931 = io_in_0_a_bits_address[1:0];\n  assign T_932 = {T_931,io_in_0_a_bits_source};\n  assign T_933 = {T_932,io_in_0_a_bits_size};\n  assign T_951_ready = io_in_0_d_ready;\n  assign T_951_valid = T_2113;\n  assign T_951_bits_read = T_987_bits_read;\n  assign T_951_bits_data = T_2589;\n  assign T_951_bits_extra = T_987_bits_extra;\n  assign T_987_ready = T_2112;\n  assign T_987_valid = T_2111;\n  assign T_987_bits_read = T_912_bits_read;\n  assign T_987_bits_index = T_912_bits_index;\n  assign T_987_bits_data = T_912_bits_data;\n  assign T_987_bits_mask = T_912_bits_mask;\n  assign T_987_bits_extra = T_912_bits_extra;\n  assign T_1040 = T_987_bits_index & 10'h3f0;\n  assign T_1042 = T_1040 == 10'h0;\n  assign T_1048 = T_987_bits_index ^ 10'ha;\n  assign T_1049 = T_1048 & 10'h3f0;\n  assign T_1051 = T_1049 == 10'h0;\n  assign T_1057 = T_987_bits_index ^ 10'h6;\n  assign T_1058 = T_1057 & 10'h3f0;\n  assign T_1060 = T_1058 == 10'h0;\n  assign T_1066 = T_987_bits_index ^ 10'h9;\n  assign T_1067 = T_1066 & 10'h3f0;\n  assign T_1069 = T_1067 == 10'h0;\n  assign T_1075 = T_987_bits_index ^ 10'h2;\n  assign T_1076 = T_1075 & 10'h3f0;\n  assign T_1078 = T_1076 == 10'h0;\n  assign T_1084 = T_987_bits_index ^ 10'h7;\n  assign T_1085 = T_1084 & 10'h3f0;\n  assign T_1087 = T_1085 == 10'h0;\n  assign T_1093 = T_987_bits_index ^ 10'h3;\n  assign T_1094 = T_1093 & 10'h3f0;\n  assign T_1096 = T_1094"}
{"text": " == 10'h0;\n  assign T_1102 = T_987_bits_index ^ 10'hb;\n  assign T_1103 = T_1102 & 10'h3f0;\n  assign T_1105 = T_1103 == 10'h0;\n  assign T_1111 = T_987_bits_index ^ 10'h8;\n  assign T_1112 = T_1111 & 10'h3f0;\n  assign T_1114 = T_1112 == 10'h0;\n  assign T_1120 = T_987_bits_index ^ 10'h4;\n  assign T_1121 = T_1120 & 10'h3f0;\n  assign T_1123 = T_1121 == 10'h0;\n  assign T_1131_0 = T_2153;\n  assign T_1131_1 = T_2353;\n  assign T_1131_2 = T_2273;\n  assign T_1131_3 = T_2333;\n  assign T_1131_4 = T_2193;\n  assign T_1131_5 = T_2293;\n  assign T_1131_6 = T_2213;\n  assign T_1131_7 = T_2373;\n  assign T_1131_8 = T_2313;\n  assign T_1131_9 = T_2233;\n  assign T_1136_0 = T_2159;\n  assign T_1136_1 = T_2359;\n  assign T_1136_2 = T_2279;\n  assign T_1136_3 = T_2339;\n  assign T_1136_4 = T_2199;\n  assign T_1136_5 = T_2299;\n  assign T_1136_6 = T_2219;\n  assign T_1136_7 = T_2379;\n  assign T_1136_8 = T_2319;\n  assign T_1136_9 = T_2239;\n  assign T_1141_0 = 1'h1;\n  assign T_1141_1 = 1'h1;\n  assign T_1141_2 = 1'h1;\n  assign T_1141_3 = 1'h1;\n  assign T_1141_4 = 1'h1;\n  assign T_1141_5 = 1'h1;\n  assign T_1141_6 = 1'h1;\n  assign T_1141_7 = 1'h1;\n  assign T_1141_8 = 1'h1;\n  assign T_1141_9 = 1'h1;\n  assign T_1146_0 = 1'h1;\n  assign T_1146_1 = 1'h1;\n  assign T_1146_2 = 1'h1;\n  assign T_1146_3 = 1'h1;\n  assign T_1146_4 = 1'h1;\n  assign T_1146_5 = 1'h1;\n  assign T_1146_6 = 1'h1;\n  assign T_1146_7 = 1'h1;\n  assign T_1146_8 = 1'h1;\n  assign T_1146_9 = 1'h1;\n  assign T_1151_0 = 1'h1;\n  assign T_1151_1 = 1'h1;\n  assign T_1151_2 = 1'h1;\n  assign T_1151_3 = 1'h1;\n  assign T_1151_4 = 1'h1;\n  assign T_1151_5 = 1'h1;\n  assign T_1151_6 = 1'h1;\n  assign T_1151_7 = 1'h1;\n  assign T_1151_8 = 1'h1;\n  assign T_1151_9 = 1'h1;\n  assign T_1156_0 = 1'h1;\n  assign T_1156_1 = 1'h1;\n  assign T_1156_2 = 1'h1;\n  assign T_1156_3 = 1'h1;\n  assign T_1156_4 = 1'h1;\n  assign T_1156_5 = 1'h1;\n  assign T_1156_6 = 1'h1;\n  assign T_1156_7 = 1'h1;\n  assign T_1156_8 = 1'h1;\n  assign T_1156_9 = 1'h1;\n  assign T_1161_0 = T_2163;\n  assign T_1161_1 = T_2363;\n  assign T_1161_2 = T_2283;\n  assign T_1161_3 = T_2343;\n  assign T_1161_4 = T_2203;\n  assign T_1161_5 = T_2303;\n  assign T_1161_6 = T_2223;\n  assign T_1161_7 = T_2383;\n  assign T_1161_8 = T_2323;\n  assign T_1161_9 = T_2243;\n  assign T_1166_0 = T_2169;\n  assign T_1166_1 = T_2369;\n  assign T_1166_2 = T_2289;\n  assign T_1166_3 = T_2349;\n  assign T_1166_4 = T_2209;\n  assign T_1166_5 = T_2309;\n  assign T_1166_6 = T_2229;\n  assign T_1166_7 = T_2389;\n  assign T_1166_8 = T_2329;\n  assign T_1166_9 = T_2249;\n  assign T_1248 = T_987_bits_mask[0];\n  assign T_1249 = T_987_bits_mask[1];\n  assign T_1250 = T_987_bits_mask[2];\n  assign T_1251 = T_987_bits_mask[3];\n  assign T_1255 = T_1248 ? 8'hff : 8'h0;\n  assign T_1259 = T_1249 ? 8'hff : 8'h0;\n  assign T_1263 = T_1250 ? 8'hff : 8'h0;\n  assign T_1267 = T_1251 ? 8'hff : 8'h0;\n  assign T_1268 = {T_1259,T_1255};\n  assign T_1269 = {T_1267,T_1263};\n  assign T_1270 = {T_1269,T_1268};\n  assign T_1298 = ~ T_1270;\n  assign T_1300 = T_1298 == 32'h0;\n  assign T_1313 = T_1166_0 & T_1300;\n  assign T_1329 = pwm_io_regs_cfg_read;\n  assign T_1334 = T_1270[7:0];\n  assign T_1338 = ~ T_1334;\n  assign T_1340 = T_1338 == 8'h0;\n  assign T_1353 = T_1166_1 & T_1340;\n  assign T_1354 = T_987_bits_data[7:0];\n  assign T_1369 = pwm_io_regs_cmp_2_read;\n  assign T_1393 = T_1166_2 & T_1300;\n  assign T_1409 = pwm_io_regs_feed_read;\n  assign T_1433 = T_1166_3 & T_1340;\n  assign T_1449 = pwm_io_regs_cmp_1_read;\n  assign T_1473 = T_1166_4 & T_1300;\n  assign T_1489 = pwm_io_regs_countLo_read;\n  assign T_1513 = T_1166_5 & T_1300;\n  assign T_1529 = pwm_io_regs_key_read;\n  assign T_1553 = T_1166_6 & T_1300;\n  assign T_1569 = pwm_io_regs_countHi_read;\n  assign T_1593 = T_1166_7 & T_1340;\n  assign T_1609 = pwm_io_regs_cmp_3_read;\n  assign T_1633 = T_1166_8 & T_1340;\n  assign T_1649 = pwm_io_regs_cmp_0_read;\n  assign T_1673 = T_1166_9 & T_1340;\n  assign T_1689 = pwm_io_regs_s_read;\n  assign T_1695 = T_1042 == 1'h0;\n  assign T_1697 = T_1695 | T_1141_0;\n  assign T_1702 = T_1078 == 1'h0;\n  assign T_1704 = T_1702 | T_1141_4;\n  assign T_1706 = T_1096 == 1'h0;\n  assign T_1708 = T_1706 | T_1141_6;\n  assign T_1710 = T_1123 == 1'h0;\n  assign T_1712 = T_1710 | T_1141_9;\n  assign T_1717 = T_1060 == 1'h0;\n  assign T_1719 = T_1717 | T_1141_2;\n  assign T_1721 = T_1087 == 1'h0;\n  assign T_1723 = T_1721 | T_1141_5;\n  assign T_1725 = T_1114 == 1'h0;\n  assign T_1727 = T_1725 | T_1141_8;\n  assign T_1729 = T_1069 == 1'h0;\n  assign T_1731 = T_1729 | T_1141_3;\n  assign T_1733 = T_1051 == 1'h0;\n  assign T_1735 = T_1733 | T_1141_1;\n  assign T_1737 = T_1105 == 1'h0;\n  assign T_1739 = T_1737 | T_1141_7;\n  assign T_1771_0 = T_1697;\n  assign T_1771_1 = 1'h1;\n  assign T_1771_2 = T_1704;\n  assign T_1771_3 = T_1708;\n  assign T_1771_4 = T_1712;\n  assign T_1771_5 = 1'h1;\n  assign T_1771_6 = T_1719;\n  assign T_1771_7 = T_1723;\n  assign T_1771_8 = T_1727;\n  assign T_1771_9 = T_1731;\n  assign T_1771_10 = T_1735;\n  assign T_1771_11 = T_1739;\n  assign T_1771_12 = 1'h1;\n  assign T_1771_13 = 1'h1;\n  assign T_1771_14 = 1'h1;\n  assign T_1771_15 = 1'h1;\n  assign T_1793 = T_1695 | T_1146_0;\n  assign T_1800 = T_1702 | T_1146_4;\n  assign T_1804 = T_1706 | T_1146_6;\n  assign T_1808 = T_1710 | T_1146_9;\n  assign T_1815 = T_1717 | T_1146_2;\n  assign T_1819 = T_1721 | T_1146_5;\n  assign T_1823 = T_1725 | T_1146_8;\n  assign T_1827 = T_1729 | T_1146_3;\n  assign T_1831 = T_1733 | T_1146_1;\n  assign T_1835 = T_1737 | T_1146_7;\n  assign T_1867_0 = T_1793;\n  assign T_1867_1 = 1'h1;\n  assign T_1867_2 = T_1800;\n  assign T_1867_3 = T_1804;\n  assign T_1867_4 = T_1808;\n  assign T_1867_5 = 1'h1;\n  assign T_1867_6 = T_1815;\n  assign T_1867_7 = T_1819;\n  assign T_1867_8 = T_1823;\n  assign T_1867_9 = T_1827;\n  assign T_1867_10 = T_1831;\n  assign T_1867_11 = T_1835;\n  assign T_1867_12 = 1'h1;\n  assign T_1867_13 = 1'h1;\n  assign T_1867_14 = 1'h1;\n  assign T_1867_15 = 1'h1;\n  assign T_1889 = T_1695 | T_1151_0;\n  assign T_1896 = T_1702 | T_1151_4;\n  assign T_1900 = T_1706 | T_1151_6;\n  assign T_1904 = T_1710 | T_1151_9;\n  assign T_1911 = T_1717 | T_1151_2;\n  assign T_1915 = T_1721 | T_1151_5;\n  assign T_1919 = T_1725 | T_1151_8;\n  assign T_1923 = T_1729 | T_1151_3;\n  assign T_1927 = T_1733 | T_1151_1;\n  assign T_1931 = T_1737 | T_1151_7;\n  assign T_1963_0 = T_1889;\n  assign T_1963_1 = 1'h1;\n  assign T_1963_2 = T_1896;\n  assign T_1963_3 = T_1900;\n  assign T_1963_4 = T_1904;\n  assign T_1963_5 = 1'h1;\n  assign T_1963_6 = T_1911;\n  assign T_1963_7 = T_1915;\n  assign T_1963_8 = T_1919;\n  assign T_1963_9 = T_1923;\n  assign T_1963_10 = T_1927;\n  assign T_1963_11 = T_1931;\n  assign T_1963_12 = 1'h1;\n  assign T_1963_13 = 1'h1;\n  assign T_1963_14 = 1'h1;\n  assign T_1963_15 = 1'h1;\n  assign T_1985 = T_1695 | T_1156_0;\n  assign T_1992 = T_1702 | T_1156_4;\n  assign T_1996 = T_1706 | T_1156_6;\n  assign T_2000 = T_1710 | T_1156_9;\n  assign T_2007 = T_1717 | T_1156_2;\n  assign T_2011 = T_1721 | T_1156_5;\n  assign T_2015 = T_1725 | T_1156_8;\n  assign T_2019 = T_1729 | T_1156_3;\n  assign T_2023 = T_1733 | T_1156_1;\n  assign T_2027 = T_1737 | T_1156_7;\n  assign T_2059_0 = T_1985;\n  assign T_2059_1 = 1'h1;\n  assign T_2059_2 = T_1992;\n  assign T_2059_3 = T_1996;\n  assign T_2059_4 = T_2000;\n  assign T_2059_5 = 1'h1;\n  assign T_2059_6 = T_2007;\n  assign T_2059_7 = T_2011;\n  assign T_2059_8 = T_2015;\n  assign T_2059_9 = T_2019;\n  assign T_2059_10 = T_2023;\n  assign T_2059_11 = T_2027;\n  assign T_2059_12 = 1'h1;\n  assign T_2059_13 = 1'h1;\n  assign T_2059_14 = 1'h1;\n  assign T_2059_15 = 1'h1;\n  assign T_2078 = T_987_bits_index[0];\n  assign T_2079 = T_987_bits_index[1];\n  assign T_2080 = T_987_bits_index[2];\n  assign T_2081 = T_987_bits_index[3];\n  assign T_2088 = {T_2079,T_2078};\n  assign T_2089 = {T_2081,T_2080};\n  assign T_2090 = {T_2089,T_2088};\n  assign GEN_0 = GEN_20;\n  assign GEN_6 = 4'h1 == T_2090 ? T_1771_1 : T_1771_0;\n  assign GEN_7 = 4'h2 == T_2090 ? T_1771_2 : GEN_6;\n  assign GEN_8 = 4'h3 == T_2090 ? T_1771_3 : GEN_7;\n  assign GEN_9 = 4'h4 == T_2090 ? T_1771_4 : GEN_8;\n  assign GEN_10 = 4'h5 == T_2090 ? T_1771_5 : GEN_9;\n  assign GEN_11 = 4'h6 == T_2090 ? T_1771_6 : GEN_10;\n  assign GEN_12 = 4'h7 == T_2090 ? T_1771_7 : GEN_11;\n  assign GEN_13 = 4'h8 == T_2090 ? T_1771_8 : GEN_12;\n  assign GEN_14 = 4'h9 == T_2090 ? T_1771_9 : GEN_13;\n  assign GEN_15 = 4'ha == T_2090 ? T_1771_10 : GEN_14;\n  assign GEN_16 = 4'hb == T_2090 ? T_1771_11 : GEN_15;\n  assign GEN_17 = 4'hc == T_2090 ? T_1771_12 : GEN_16;\n  assign GEN_18 = 4'hd == T_2090 ? T_1771_13 : GEN_17;\n  assign GEN_19 = 4'he == T_2090 ? T_1771_14 : GEN_18;\n  assign GEN_20 = 4'hf == T_2090 ? T_1771_15 : GEN_19;\n  assign GEN_1 = GEN_35;\n  assign GEN_21 = 4'h1 == T_2090 ? T_1867_1 : T_1867_0;\n  assign GEN_22 = 4'h2 == T_2090 ? T_1867_2 : GEN_21;\n  assign GEN_23 = 4'h3 == T_2090 ? T_1867_3 : GEN_22;\n  assign GEN_24 = 4'h4 == T_2090 ? T_1867_4 : GEN_23;\n  assign GEN_25 = 4'h5 == T_2090 ? T_1867_5 : GEN_24;\n  assign GEN_26 = 4'h6 == T_2090 ? T_1867_6 : GEN_25;\n  assign GEN_27 = 4'h7 == T_2090 ? T_1867_7 : GEN_26;\n  assign GEN_28 = 4'h8 == T_2090 ? T_1867_8 : GEN_27;\n  assign GEN_29 = 4'h9 == T_2090 ? T_1867_9 : GEN_28;\n  assign GEN_30 = 4'ha == T_2090 ? T_1867_10 : GEN_29;\n  assign GEN_31 = 4'hb == T_2090 ? T_1867_11 : GEN_30;\n  assign GEN_32 = 4'hc == T_2090 ? T_1867_12 : GEN_31;\n  assign GEN_33 = 4'hd == T_2090 ? T_1867_13 : GEN_32;\n  assign GEN_34 = 4'he == T_2090 ? T_1867_14 : GEN_33;\n  assign GEN_35 = 4'hf == T_2090 ? T_1867_15 : GEN_34;\n  assign T_2106 = T_987_bits_read ? GEN_0 : GEN_1;\n  assign GEN_2 = GEN_50;\n  assign GEN_36 = 4'h1 == T_2090 ? T_1963_1 : T_1963_0;\n  assign GEN_37 = 4'h2 == T_2090 ? T_1963_2 : GEN_36;\n  assign GEN_38 = 4'h3 == T_2090 ? T_1963_3 : GEN_37;\n  assign GEN_39 = 4'h4 == T_2090 ? T_1963_4 : GEN_38;\n  assign GEN_40 = 4'h5 == T_2090 ? T_1963_5 : GEN_39;\n  assign GEN_41 = 4'h6 == T_2090 ? T_1963_6 : GEN_40;\n  assign GEN_42 = 4'h7 == T_2090 ? T_1963_7 : GEN_41;\n  assign GEN_43 = 4'h8 == T_2090 ? T_1963_8 : GEN_42;\n  assign GEN_44 = 4'h9 == T_2090 ? T_1963_9 : GEN_43;\n  assign GEN_45 = 4'ha == T_2090 ? T_1963_10 : GEN_44;\n  assign GEN_46 = 4'hb == T_2090 ? T_1963_11 : GEN_45;\n  assign GEN_47 = 4'hc == T_2090 ? T_1963_12 : GEN_46;\n  assign GEN_48 = 4'hd == T_2090 ? T_1963_13 : GEN_47;\n  assign GEN_49 = 4'he == T_2090 ? T_1963_14 : GEN_48;\n  assign GEN_50 = 4'hf == T_2090 ? T_1963_15 : GEN_49;\n  assign GEN_3 = GEN_65;\n  assign GEN_51 = 4'h1 == T_2090 ? T_2059_1 : T_2059_0;\n  assign GEN_52 = 4'h2 == T_2090 ? T_2059_2 : GEN_51;\n  assign GEN_53 = 4'h3 == T_2090 ? T_2059_3 : GEN_52;\n  assign GEN_54 = 4'h4 == T_2090 ? T_2059_4 : GEN_53;\n  assign GEN_55 = 4'h5 == T_2090 ? T_2059_5 : GEN_54;\n  assign GEN_56 = 4'h6 == T_2090 ? T_2059_6 : GEN_55;\n  assign GEN_57 = 4'h7 == T_2090 ? T_2059_7 : GEN_56;\n  assign GEN_58 = 4'h8 == T_2090 ? T_2059_8 : GEN_57;\n  assign GEN_59 = 4'h9 == T_2090 ? T_2059_9 : GEN_58;\n  assign GEN_60 = 4'ha == T_2090 ? T_2059_10 : GEN_59;\n  assign GEN_61 = 4'hb == T_2090 ? T_2059_11 : GEN_60;\n  assign GEN_62 = 4'hc == T_2090 ? T_2059_12 : GEN_61;\n  assign GEN_63 = 4'hd == T_2090 ? T_2059_13 : GEN_62;\n  assign GEN_64 = 4'he == T_2090 ? T_2059_14 : GEN_63;\n  assign GEN_65 = 4'hf == T_2090 ? T_2059_15 : GEN_64;\n  assign T_2109 = T_987_bits_read ? GEN_2 : GEN_3;\n  assign T_2110 = T_987_ready & T_2106;\n  assign T_2111 = T_912_valid & T_2106;\n  assign T_2112 = T_951_ready & T_2109;\n  assign T_2113 = T_987_valid & T_2109;\n  assign T_2115 = 16'h1 << T_2090;\n  assign T_2116 = {1'h1,T_1042};\n  assign T_2117 = {T_1096,T_1078};\n  assign T_2118 = {T_2117,T_2116};\n  assign T_2119 = {1'h1,T_1123};\n  assign T_2120 = {T_1087,T_1060};\n  assign T_2121 = {T_2120,T_2119};\n  assign T_2122 = {T_2121,T_2118};\n  assign T_2123 = {T_1069,T_1114};\n  assign T_2124 = {T_1105,T_1051};\n  assign T_2125 = {T_2124,T_2123};\n  assign T_2129 = {4'hf,T_2125};\n  assign T_2130 = {T_2129,T_2122};\n  assign T_2131 = T_2115 & T_2130;\n  assign T_2150 = T_912_valid & T_987_ready;\n  assign T_2151 = T_2150 & T_987_bits_read;\n  assign T_2152 = T_2131[0];\n  assign T_2153 = T_2151 & T_2152;\n  assign T_2156 = T_987_bits_read == 1'h0;\n  assign T_2157 = T_2150 & T_2156;\n  assign T_2159 = T_2157 & T_2152;\n  assign T_2160 = T_987_valid & T_951_ready;\n  assign T_2161 = T_2160 & T_987_bits_read;\n  assign T_2163 = T_2161 & T_2152;\n  assign T_2167 = T_2160 & T_2156;\n  assign T_2169 = T_2167 & T_2152;\n  assign T_2192 = T_2131[2];\n  assign T_2193 = T_2151 & T_2192;\n  assign T_2199 = T_2157 & T_2192;\n  assign T_2203 = T_2161 & T_2192;\n  assign T_2209 = T_2167 & T_2192;\n  assign T_2212 = T_2131[3];\n  assign T_2213 = T_2151 & T_2212;\n  assign T_2219 = T_2157 & T_2212;\n  assign T_2223 = T_2161 & T_2212;\n  assign T_2229 = T_2167 & T_2212;\n  assign T_2232 = T_2131[4];\n  assign T_2233 = T_2151 & T_2232;\n  assign T_2239 = T_2157 & T_2232;\n  assign T_2243 = T_2161 & T_2232;\n  assign T_2249 = T_2167 & T_2232;\n  assign T_2272 = T_2131[6];\n  assign T_2273 = T_2151 & T_2272;\n  assign T_2279 = T_2157 & T_2272;\n  assign T_2283 = T_2161 & T_2272;\n  assign T_2289 = T_2167 & T_2272;\n  assign T_2292 = T_2131[7];\n  assign T_2293 = T_2151 & T_2292;\n  assign T_2299 = T_2157 & T_2292;\n  assign T_2303 = T_2161 & T_2292;\n  assign T_2309 = T_2167 & T_2292;\n  assign T_2312 = T_2131[8];\n  assign T_2313 = T_2151 & T_2312;\n  assign T_2319 = T_2157 & T_2312;\n  assign T_2323 = T_2161 & T_2312;\n  assign T_2329 = T_2167 & T_2312;\n  assign T_2332 = T_2131[9];\n  assign T_2333 = T_2151 & T_2332;\n  assign T_2339 = T_2157 & T_2332;\n  assign T_2343 = T_2161 & T_2332;\n  assign T_2349 = T_2167 & T_2332;\n  assign T_2352 = T_2131[10];\n  assign T_2353 = T_2151 & T_2352;\n  assign T_2359 = T_2157 & T_2352;\n  assign T_2363 = T_2161 & T_2352;\n  assign T_2369 = T_2167 & T_2352;\n  assign T_2372 = T_2131[11];\n  assign T_2373 = T_2151 & T_2372;\n  assign T_2379 = T_2157 & T_2372;\n  assign T_2383 = T_2161 & T_2372;\n  assign T_2389 = T_2167 & T_2372;\n  assign T_2529_0 = T_1042;\n  assign T_2529_1 = 1'h1;\n  assign T_2529_2 = T_1078;\n  assign T_2529_3 = T_1096;\n  assign T_2529_4 = T_1123;\n  assign T_2529_5 = 1'h1;\n  assign T_2529_6 = T_1060;\n  assign T_2529_7 = T_1087;\n  assign T_2529_8 = T_1114;\n  assign T_2529_9 = T_1069;\n  assign T_2529_10 = T_1051;\n  assign T_2529_11 = T_1105;\n  assign T_2529_12 = 1'h1;\n  assign T_2529_13 = 1'h1;\n  assign T_2529_14 = 1'h1;\n  assign T_2529_15 = 1'h1;\n  assign T_2568_0 = T_1329;\n  assign T_2568_1 = 32'h0;\n  assign T_2568_2 = T_1489;\n  assign T_2568_3 = T_1569;\n  assign T_2568_4 = {{24'd0}, T_1689};\n  assign T_2568_5 = 32'h0;\n  assign T_2568_6 = T_1409;\n  assign T_2568_7 = T_1529;\n  assign T_2568_8 = {{24'd0}, T_1649};\n  assign T_2568_9 = {{24'd0}, T_1449};\n  assign T_2568_10 = {{24'd0}, T_1369};\n  assign T_2568_11 = {{24'd0}, T_1609};\n  assign T_2568_12 = 32'h0;\n  assign T_2568_13 = 32'h0;\n  assign T_2568_14 = 32'h0;\n  assign T_2568_15 = 32'h0;\n  assign GEN_4 = GEN_80;\n  assign GEN_66 = 4'h1 == T_2090 ? T_2529_1 : T_2529_0;\n  assign GEN_67 = 4'h2 == T_2090 ? T_2529_2 : GEN_66;\n  assign GEN_68 = 4'h3 == T_2090 ? T_2529_3 : GEN_67;\n  assign GEN_69 = 4'h4 == T_2090 ? T_2529_4 : GEN_68;\n  assign GEN_70 = 4'h5 == T_2090 ? T_2529_5 : GEN_69;\n  assign GEN_71 = 4'h6 == T_2090 ? T_2529_6 : GEN_70;\n  assign GEN_72 = 4'h7 == T_2090 ? T_2529_7 : GEN_71;\n  assign GEN_73 = 4'h8 == T_2090 ? T_2529_8 : GEN_72;\n  assign GEN_74 = 4'h9 == T_2090 ? T_2529_9 : GEN_73;\n  assign GEN_75 = 4'ha == T_2090 ? T_2529_10 : GEN_74;\n  assign GEN_76 = 4'hb == T_2090 ? T_2529_11 : GEN_75;\n  assign GEN_77 = 4'hc == T_2090 ? T_2529_12 : GEN_76;\n  assign GEN_78 = 4'hd == T_2090 ? T_2529_13 : GEN_77;\n  assign GEN_79 = 4'he == T_2090 ? T_2529_14 : GEN_78;\n  assign GEN_80 = 4'hf == T_2090 ? T_2529_15 : GEN_79;\n  assign GEN_5 = GEN_95;\n  assign GEN_81 = 4'h1 == T_2090 ? T_2568_1 : T_2568_0;\n  assign GEN_82 = 4'h2 == T_2090 ? T_2568_2 : GEN_81;\n  assign GEN_83 = 4'h3 == T_2090 ? T_2568_3 : GEN_82;\n  assign GEN_84 = 4'h4 == T_2090 ? T_2568_4 : GEN_83;\n  assign GEN_85 = 4'h5 == T_2090 ? T_2568_5 : GEN_84;\n  assign GEN_86 = 4'h6 == T_2090 ? T_2568_6 : GEN_85;\n  assign GEN_87 = 4'h7 == T_2090 ? T_2568_7 : GEN_86;\n  assign GEN_88 = 4'h8 == T_2090 ? T_2568_8 : GEN_87;\n  assign GEN_89 = 4'h9 == T_2090 ? T_2568_9 : GEN_88;\n  assign GEN_90 = 4'ha == T_2090 ? T_2568_10 : GEN_89;\n  assign GEN_91 = 4'hb == T_2090 ? T_2568_11 : GEN_90;\n  assign GEN_92 = 4'hc == T_2090 ? T_2568_12 : GEN_91;\n  assign GEN_93 = 4'hd == T_2090 ? T_2568_13 : GEN_92;\n  assign GEN_94 = 4'he == T_2090 ? T_2568_14 : GEN_93;\n  assign GEN_95 = 4'hf == T_2090 ? T_2568_15 : GEN_94;\n  assign T_2589 = GEN_4 ? GEN_5 : 32'h0;\n  assign T_2590 = T_951_bits_extra[9:8];\n  assign T_2592 = T_951_bits_extra[7:3];\n  assign T_2593 = T_951_bits_extra[2:0];\n  assign T_2604_opcode = 3'h0;\n  assign T_2604_param = 2'h0;\n  assign T_2604_size = T_2593;\n  assign T_2604_source = T_2592;\n  assign T_2604_sink = 1'h0;\n  assign T_2604_addr_lo = T_2590;\n  assign T_2604_data = 32'h0;\n  assign T_2604_error = 1'h0;\n`ifdef RANDOMIZE\n  integer initvar;\n  initial begin\n    `ifndef verilator\n      #0.002 begin end\n    `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_103 = {1{$random}};\n  GEN_96 = GEN_103[2:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_104 = {1{$random}};\n  GEN_97 = GEN_104[1:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_105 = {1{$random}};\n  GEN_98 = GEN_105[2:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_106 = {1{$random}};\n  GEN_99 = GEN_106[4:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_107 = {1{$random}};\n  GEN_100 = GEN_107[28:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_108 = {1{$random}};\n  GEN_101 = GEN_108[3:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_109 = {1{$random}};\n  GEN_102 = GEN_109[31:0];\n  `endif\n  end\n`endif\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_pwm8_core(\n  input   clock,\n  input   reset,\n  input   io_regs_cfg_write_valid,\n  input  [31:0] io_regs_cfg_write_bits,\n  output [31:0] io_regs_cfg_read,\n  input   io_regs_countLo_write_valid,\n  input  [31:0] io_regs_countLo_write_bits,\n  output [31:0] io_regs_countLo_read,\n  input   io_regs_countHi_write_valid,\n  input  [31:0] io_regs_countHi_write_bits,\n  output [31:0] io_regs_countHi_read,\n  input   io_regs_s_write_valid,\n  input  [7:0] io_regs_s_write_bits,\n  output [7:0] io_regs_s_read,\n  input   io_regs_cmp_0_write_valid,\n  input  [7:0] io_regs_cmp_0_write_bits,\n  output [7:0] io_regs_cmp_0_read,\n  input   io_regs_cmp_1_write_valid,\n  input  [7:0] io_regs_cmp_1_write_bits,\n  output [7:0] io_regs_cmp_1_read,\n  input   io_regs_cmp_2_write_valid,\n  input  [7:0] io_regs_cmp_2_write_bits,\n  output [7:0] io_regs_cmp_2_read,\n  input   io_regs_cmp_3_write_valid,\n  input  [7:0] io_regs_cmp_3_write_bits,\n  output [7:0] io_regs_cmp_3_read,\n  input   io_regs_feed_write_valid,\n  input  [31:0] io_regs_feed_write_bits,\n  output [31:0] io_regs_feed_read,\n  input   io_regs_key_write_valid,\n  input  [31:0] io_regs_key_write_bits,\n  output [31:0] io_regs_key_read,\n  output  io_ip_0,\n  output  io_ip_1,\n  output  io_ip_2,\n  output  io_ip_3,\n  output  io_gpio_0,\n  output  io_gpio_1,\n  output  io_gpio_2,\n  output  io_gpio_3\n);\n  wire [3:0] T_178;\n  reg [3:0] scale;\n  reg [31:0] GEN_21;\n  wire [3:0] GEN_0;\n  reg [7:0] cmp_0;\n  reg [31:0] GEN_22;\n  wire [7:0] GEN_1;\n  reg [7:0] cmp_1;\n  reg [31:0] GEN_23;\n  wire [7:0] GEN_2;\n  reg [7:0] cmp_2;\n  reg [31:0] GEN_24;\n  wire [7:0] GEN_3;\n  reg [7:0] cmp_3;\n  reg [31:0] GEN_25;\n  wire [7:0] GEN_4;\n  wire  countEn;\n  reg [4:0] T_196;\n  reg [31:0] GEN_26;\n  wire [4:0] GEN_18;\n  wire [5:0] T_197;\n  reg [17:0] T_199;\n  reg [31:0] GEN_27;\n  wire  T_200;\n  wire [18:0] T_202;\n  wire [18:0] GEN_5;\n  wire [22:0] T_203;\n  wire [32:0] T_207;\n  wire [27:0] T_208;\n  wire [32:0] GEN_6;\n  wire [27:0] GEN_7;\n  wire [22:0] T_209;\n  wire [7:0] s;\n  wire  T_210;\n  wire [3:0] T_211;\n  reg [3:0] center;\n  reg [31:0] GEN_28;\n  wire [3:0] GEN_8;\n  wire  T_215;\n  wire  T_216;\n  wire [7:0] T_217;\n  wire [7:0] T_218;\n  wire  elapsed_0;\n  wire  T_220;\n  wire  T_221;\n  wire [7:0] T_223;\n  wire  elapsed_1;\n  wire  T_225;\n  wire  T_226;\n  wire [7:0] T_228;\n  wire  elapsed_2;\n  wire  T_230;\n  wire  T_231;\n  wire [7:0] T_233;\n  wire  elapsed_3;\n  wire [5:0] GEN_19;\n  wire [5:0] T_234;\n  wire [4:0] T_235;\n  wire [18:0] GEN_20;\n  wire [18:0] T_239;\n  wire [18:0] T_241;\n  wire [17:0] T_242;\n  wire [22:0] T_243;\n  wire [4:0] T_245;\n  wire [3:0] T_246;\n  wire [22:0] T_247;\n  wire  feed;\n  wire  T_248;\n  reg  zerocmp;\n  reg [31:0] GEN_29;\n  wire  GEN_9;\n  wire  T_252;\n  wire  countReset;\n  wire [32:0] GEN_10;\n  wire [27:0] GEN_11;\n  wire  T_255;\n  reg  T_259;\n  reg [31:0] GEN_30;\n  wire  GEN_12;\n  wire  T_261;\n  wire  T_262;\n  wire  T_263;\n  reg  T_267;\n  reg [31:0] GEN_31;\n  wire  GEN_13;\n  wire  T_268;\n  reg  T_269;\n  reg [31:0] GEN_32;\n  wire [1:0] T_282;\n  wire [1:0] T_283;\n  wire [3:0] T_284;\n  reg [3:0] ip;\n  reg [31:0] GEN_33;\n  wire [1:0] T_286;\n  wire [1:0] T_287;\n  wire [3:0] T_288;\n  wire [3:0] T_289;\n  wire [3:0] T_290;\n  wire [3:0] T_297;\n  wire [3:0] T_298;\n  wire [3:0] T_299;\n  wire [3:0] T_300;\n  wire [3:0] T_301;\n  wire [3:0] T_304;\n  wire [3:0] GEN_14;\n  wire [3:0] T_305;\n  reg [3:0] gang;\n  reg [31:0] GEN_34;\n  wire [3:0] GEN_15;\n  wire  T_316;\n  wire  T_319;\n  wire  T_323;\n  reg  oneShot;\n  reg [31:0] GEN_35;\n  wire  GEN_16;\n  wire  T_325;\n  reg  countAlways;\n  reg [31:0] GEN_36;\n  wire  GEN_17;\n  wire [4:0] T_333;\n  wire [8:0] T_334;\n  wire [1:0] T_335;\n  wire [2:0] T_336;\n  wire [11:0] T_337;\n  wire [2:0] T_338;\n  wire [3:0] T_339;\n  wire [7:0] T_340;\n  wire [7:0] T_341;\n  wire [15:0] T_342;\n  wire [19:0] T_343;\n  wire [31:0] T_344;\n  wire  T_350_0;\n  wire  T_350_1;\n  wire  T_350_2;\n  wire  T_350_3;\n  wire  T_352;\n  wire  T_353;\n  wire  T_354;\n  wire  T_355;\n  wire [2:0] T_357;\n  wire [3:0] T_358;\n  wire [3:0] T_359;\n  wire [3:0] T_360;\n  wire [3:0] T_361;\n  wire  T_364_0;\n  wire  T_364_1;\n  wire  T_364_2;\n  wire  T_364_3;\n  wire  T_366;\n  wire  T_367;\n  wire  T_368;\n  wire  T_369;\n  wire  T_370;\n  assign io_regs_cfg_read = T_344;\n  assign io_regs_countLo_read = {{9'd0}, T_203};\n  assign io_regs_countHi_read = 32'h0;\n  assign io_regs_s_read = s;\n  assign io_regs_cmp_0_read = cmp_0;\n  assign io_regs_cmp_1_read = cmp_1;\n  assign io_regs_cmp_2_read = cmp_2;\n  assign io_regs_cmp_3_read = cmp_3;\n  assign io_regs_feed_read = 32'h0;\n  assign io_regs_key_read = 32'h1;\n  assign io_ip_0 = T_350_0;\n  assign io_ip_1 = T_350_1;\n  assign io_ip_2 = T_350_2;\n  assign io_ip_3 = T_350_3;\n  assign io_gpio_0 = T_364_0;\n  assign io_gpio_1 = T_364_1;\n  assign io_gpio_2 = T_364_2;\n  assign io_gpio_3 = T_364_3;\n  assign T_178 = io_regs_cfg_write_bits[3:0];\n  assign GEN_0 = io_regs_cfg_write_valid ? T_178 : scale;\n  assign GEN_1 = io_regs_cmp_0_write_valid ? io_regs_cmp_0_write_bits : cmp_0;\n  assign GEN_2 = io_regs_cmp_1_write_valid ? io_regs_cmp_1_write_bits : cmp_1;\n  assign GEN_3 = io_regs_cmp_2_write_valid ? io_regs_cmp_2_write_bits : cmp_2;\n  assign GEN_4 = io_regs_cmp_3_write_valid ? io_regs_cmp_3_write_bits : cmp_3;\n  assign countEn = T_370;\n  assign GEN_18 = {{4'd0}, countEn};\n  assign T_197 = T_196 + GEN_18;\n  assign T_200 = T_197[5];\n  assign T_202 = T_199 + 18'h1;\n  assign GEN_5 = T_200 ? T_202 : {{1'd0}, T_199};\n  assign T_203 = {T_199,T_196};\n  assign T_207 = {1'h0,io_regs_countLo_write_bits};\n  assign T_208 = T_207[32:5];\n  assign GEN_6 = io_regs_countLo_write_valid ? T_207 : {{27'd0}, T_197};\n  assign GEN_7 = io_regs_countLo_write_valid ? T_208 : {{9'd0}, GEN_5};\n  assign T_209 = T_203 >> scale;\n  assign s = T_209[7:0];\n  assign T_210 = s[7];\n  assign T_211 = io_regs_cfg_write_bits[19:16];\n  assign GEN_8 = io_regs_cfg_write_valid ? T_211 : center;\n  assign T_215 = center[0];\n  assign T_216 = T_210 & T_215;\n  assign T_217 = ~ s;\n  assign T_218 = T_216 ? T_217 : s;\n  assign elapsed_0 = T_218 >= cmp_0;\n  assign T_220 = center[1];\n  assign T_221 = T_210 & T_220;\n  assign T_223 = T_221 ? T_217 : s;\n  assign elapsed_1 = T_223 >= cmp_1;\n  assign T_225 = center[2];\n  assign T_226 = T_210 & T_225;\n  assign T_228 = T_226 ? T_217 : s;\n  assign elapsed_2 = T_228 >= cmp_2;\n  assign T_230 = center[3];\n  assign T_231 = T_210 & T_230;\n  assign T_233 = T_231 ? T_217 : s;\n  assign elapsed_3 = T_233 >= cmp_3;\n  assign GEN_19 = {{1'd0}, T_196};\n  assign T_234 = GEN_19 ^ T_197;\n  assign T_235 = T_234[5:1];\n  assign GEN_20 = {{1'd0}, T_199};\n  assign T_239 = GEN_20 ^ T_202;\n  assign T_241 = T_200 ? T_239 : 19'h0;\n  assign T_242 = T_241[18:1];\n  assign T_243 = {T_242,T_235};\n  assign T_245 = scale + 4'h8;\n  assign T_246 = T_245[3:0];\n  assign T_247 = T_243 >> T_246;\n  assign feed = T_247[0];\n  assign T_248 = io_regs_cfg_write_bits[9];\n  assign GEN_9 = io_regs_cfg_write_valid ? T_248 : zerocmp;\n  assign T_252 = zerocmp & elapsed_0;\n  assign countReset = feed | T_252;\n  assign GEN_10 = countReset ? 33'h0 : GEN_6;\n  assign GEN_11 = countReset ? 28'h0 : GEN_7;\n  assign T_255 = io_regs_cfg_write_bits[10];\n  assign GEN_12 = io_regs_cfg_write_valid ? T_255 : T_259;\n  assign T_261 = countReset == 1'h0;\n  assign T_262 = T_259 & T_261;\n  assign T_263 = io_regs_cfg_write_bits[8];\n  assign GEN_13 = io_regs_cfg_write_valid ? T_263 : T_267;\n  assign T_268 = T_262 | T_267;\n  assign T_282 = {T_221,T_216};\n  assign T_283 = {T_231,T_226};\n  assign T_284 = {T_283,T_282};\n  assign T_286 = {elapsed_1,elapsed_0};\n  assign T_287 = {elapsed_3,elapsed_2};\n  assign T_288 = {T_287,T_286};\n  assign T_289 = T_284 & T_288;\n  assign T_290 = ~ T_284;\n  assign T_297 = T_269 ? 4'hf : 4'h0;\n  assign T_298 = T_297 & ip;\n  assign T_299 = T_288 | T_298;\n  assign T_300 = T_290 & T_299;\n  assign T_301 = T_289 | T_300;\n  assign T_304 = io_regs_cfg_write_bits[31:28];\n  assign GEN_14 = io_regs_cfg_write_valid ? T_304 : T_301;\n  assign T_305 = io_regs_cfg_write_bits[27:24];\n  assign GEN_15 = io_regs_cfg_write_valid ? T_305 : gang;\n  assign T_316 = io_regs_cfg_write_bits[13];\n  assign T_319 = T_316 & T_261;\n  assign T_323 = io_regs_cfg_write_valid | countReset;\n  assign GEN_16 = T_323 ? T_319 : oneShot;\n  assign T_325 = io_regs_cfg_write_bits[12];\n  assign GEN_17 = io_regs_cfg_write_valid ? T_325 : countAlways;\n  assign T_333 = {T_267,4'h0};\n  assign T_334 = {T_333,scale};\n  assign T_335 = {1'h0,T_259};\n  assign T_336 = {T_335,zerocmp};\n  assign T_337 = {T_336,T_334};\n  assign T_338 = {2'h0,oneShot};\n  assign T_339 = {T_338,countAlways};\n  assign T_340 = {4'h0,center};\n  assign T_341 = {ip,gang};\n  assign T_342 = {T_341,T_340};\n  assign T_343 = {T_342,T_339};\n  assign T_344 = {T_343,T_337};\n  assign T_350_0 = T_352;\n  assign T_350_1 = T_353;\n  assign T_350_2 = T_354;\n  assign T_350_3 = T_355;\n  assign T_352 = ip[0];\n  assign T_353 = ip[1];\n  assign T_354 = ip[2];\n  assign T_355 = ip[3];\n  assign T_357 = ip[3:1];\n  assign T_358 = {T_352,T_357};\n  assign T_359 = gang & T_358;\n  assign T_360 = ~ T_359;\n  assign T_361 = ip & T_360;\n  assign T_364_0 = T_366;\n  assign T_364_1 = T_367;\n  assign T_364_2 = T_368;\n  assign T_364_3 = T_369;\n  assign T_366 = T_361[0];\n  assign T_367 = T_361[1];\n  assign T_368 = T_361[2];\n  assign T_369 = T_361[3];\n  assign T_370 = countAlways | oneShot;\n  \n  always @(posedge clock or posedge reset)\n  if(reset) begin\n      scale <= 4'b0;\n      cmp_0 <= 8'b0;\n      cmp_1 <= 8'b0;\n      cmp_2 <= 8'b0;\n      cmp_3 <= 8'b0;\n      T_196 <= 5'b0;\n      T_199 <= 18'b0;\n      center <= 4'b0;\n      zerocmp <= 1'b0;\n      T_259 <= 1'b0;\n      T_267 <= 1'b0;\n      T_269 <= 1'b0;\n      ip <= 4'b0;\n      gang <= 4'b0;\n  end\n  else begin\n    if (io_regs_cfg_write_valid) begin\n      scale <= T_178;\n    end\n    if (io_regs_cmp_0_write_valid) begin\n      cmp_0 <= io_regs_cmp_0_write_bits;\n    end\n    if (io_regs_cmp_1_write_valid) begin\n      cmp_1 <= io_regs_cmp_1_write_bits;\n    end\n    if (io_regs_cmp_2_write_valid) begin\n      cmp_2 <= io_regs_cmp_2_write_bits;\n    end\n    if (io_regs_cmp_3_write_valid) begin\n      cmp_3 <= io_regs_cmp_3_write_bits;\n    end\n    T_196 <= GEN_10[4:0];\n    T_199 <= GEN_11[17:0];\n    if (io_regs_cfg_write_valid) begin\n      center <= T_211;\n    end\n    if (io_regs_cfg_write_valid) begin\n      zerocmp <= T_248;\n    end\n    if (io_regs_cfg_write_valid) begin\n      T_259 <= T_255;\n    end\n    if (io_regs_cfg_write_valid) begin\n      T_267 <= T_263;\n    end\n    T_269 <= T_268;\n    if (io_regs_cfg_write_valid) begin\n      ip <= T_304;\n    end else begin\n      ip <= T_301;\n    end\n    if (io_regs_cfg_write_valid) begin\n      gang <= T_305;\n    end\n  end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      oneShot <= 1'h0;\n    end else begin\n      if (T_323) begin\n        oneShot <= T_319;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      countAlways <= 1'h0;\n    end else begin\n      if (io_regs_cfg_write_valid) begin\n        countAlways <= T_325;\n      end\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top level module of pwm8\n//\n// ====================================================================\n\nmodule sirv_pwm8_top(\n  input   clk,\n  input   rst_n,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [32-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n  output  io_interrupts_0_0,\n  output  io_interrupts_0_1,\n  output  io_interrupts_0_2,\n  output  io_interrupts_0_3,\n\n  output  io_gpio_0,\n  output  io_gpio_1,\n  output  io_gpio_2,\n  output  io_gpio_3\n);\n\n  wire  io_in_0_a_ready;\n  assign  i_icb_cmd_ready  = io_in_0_a_ready;\n  wire  io_in_0_a_valid  = i_icb_cmd_valid;\n  wire  [2:0] io_in_0_a_bits_opcode  = i_icb_cmd_read ? 3'h4 : 3'h0;\n  wire  [2:0] io_in_0_a_bits_param  = 3'b0;\n  wire  [2:0] io_in_0_a_bits_size = 3'd2;\n  wire  [4:0] io_in_0_a_bits_source  = 5'b0;\n  wire  [28:0] io_in_0_a_bits_address  = i_icb_cmd_addr[28:0];\n  wire  [3:0] io_in_0_a_bits_mask  = 4'b1111;\n  wire  [31:0] io_in_0_a_bits_data  = i_icb_cmd_wdata;\n\n  \n  wire  io_in_0_d_ready = i_icb_rsp_ready;\n\n  wire  [2:0] io_in_0_d_bits_opcode;\n  wire  [1:0] io_in_0_d_bits_param;\n  wire  [2:0] io_in_0_d_bits_size;\n  wire  [4:0] io_in_0_d_bits_source;\n  wire  io_in_0_d_bits_sink;\n  wire  [1:0] io_in_0_d_bits_addr_lo;\n  wire  [31:0] io_in_0_d_bits_data;\n  wire  io_in_0_d_bits_error;\n  wire  io_in_0_d_valid;\n\n  assign  i_icb_rsp_valid = io_in_0_d_valid;\n  assign  i_icb_rsp_rdata = io_in_0_d_bits_data;\n\n  // Not used\n  wire  io_in_0_b_ready = 1'b0;\n  wire  io_in_0_b_valid;\n  wire  [2:0] io_in_0_b_bits_opcode;\n  wire  [1:0] io_in_0_b_bits_param;\n  wire  [2:0] io_in_0_b_bits_size;\n  wire  [4:0] io_in_0_b_bits_source;\n  wire  [28:0] io_in_0_b_bits_address;\n  wire  [3:0] io_in_0_b_bits_mask;\n  wire  [31:0] io_in_0_b_bits_data;\n\n  // Not used\n  wire  io_in_0_c_ready;\n  wire  io_in_0_c_valid = 1'b0;\n  wire  [2:0] io_in_0_c_bits_opcode = 3'b0;\n  wire  [2:0] io_in_0_c_bits_param = 3'b0;\n  wire  [2:0] io_in_0_c_bits_size = 3'd2;\n  wire  [4:0] io_in_0_c_bits_source = 5'b0;\n  wire  [28:0] io_in_0_c_bits_address = 29'b0;\n  wire  [31:0] io_in_0_c_bits_data = 32'b0;\n  wire  io_in_0_c_bits_error = 1'b0;\n\n  // Not used\n  wire  io_in_0_e_ready;\n  wire  io_in_0_e_valid = 1'b0;\n  wire  io_in_0_e_bits_sink = 1'b0;\n\nsirv_pwm8 u_sirv_pwm8(\n  .clock                            (clk                              ),\n  .reset                            (~rst_n                           ),\n\n  .io_interrupts_0_0                (io_interrupts_0_0                ),\n  .io_interrupts_0_1                (io_interrupts_0_1                ),\n  .io_interrupts_0_2                (io_interrupts_0_2                ),\n  .io_interrupts_0_3                (io_interrupts_0_3                ),\n                                                                      \n  .io_gpio_0                        (io_gpio_0                        ),\n  .io_gpio_1                        (io_gpio_1                        ),\n  .io_gpio_2                        (io_gpio_2                        ),\n  .io_gpio_3                        (io_gpio_3                        ),\n\n  .io_in_0_a_ready                  (io_in_0_a_ready                  ),\n  .io_in_0_a_valid                  (io_in_0_a_valid                  ),\n  .io_in_0_a_bits_opcode            (io_in_0_a_bits_opcode            ),\n  .io_in_0_a_bits_param             (io_in_0_a_bits_param             ),\n  .io_in_0_a_bits_size              (io_in_0_a_bits_size              ),\n  .io_in_0_a_bits_source            (io_in_0_a_bits_source            ),\n  .io_in_0_a_bits_address           (io_in_0_a_bits_address           ),\n  .io_in_0_a_bits_mask              (io_in_0_a_bits_mask              ),\n  .io_in_0_a_bits_data              (io_in_0_a_bits_data              ),\n  .io_in_0_b_ready                  (io_in_0_b_ready                  ),\n  .io_in_0_b_valid                  (io_in_0_b_valid                  ),\n  .io_in_0_b_bits_opcode            (io_in_0_b_bits_opcode            ),\n  .io_in_0_b_bits_param             (io_in_0_b_bits_param             ),\n  .io_in_0_b_bits_size              (io_in_0_b_bits_size              ),\n  .io_in_0_b_bits_source            (io_in_0_b_bits_source            ),\n  .io_in_0_b_bits_address           (io_in_0_b_bits_address           ),\n  .io_in_0_b_bits_mask              (io_in_0_b_bits_mask              ),\n  .io_in_0_b_bits_data              (io_in_0_b_bits_data              ),\n  .io_in_0_c_ready                  (io_in_0_c_ready                  ),\n  .io_in_0_c_valid                  (io_in_0_c_valid                  ),\n  .io_in_0_c_bits_opcode            (io_in_0_c_bits_opcode            ),\n  .io_in_0_c_bits_param             (io_in_0_c_bits_param             ),\n  .io_in_0_c_bits_size              (io_in_0_c_bits_size              ),\n  .io_in_0_c_bits_source            (io_in_0_c_bits_source            ),\n  .io_in_0_c_bits_address           (io_in_0_c_bits_address           ),\n  .io_in_0_c_bits_data              (io_in_0_c_bits_data              ),\n  .io_in_0_c_bits_error             (io_in_0_c_bits_error             ),\n  .io_in_0_d_ready                  (io_in_0_d_ready                  ),\n  .io_in_0_d_valid                  (io_in_0_d_valid                  ),\n  .io_in_0_d_bits_opcode            (io_in_0_d_bits_opcode            ),\n  .io_in_0_d_bits_param             (io_in_0_d_bits_param             ),\n  .io_in_0_d_bits_size              (io_in_0_d_bits_size              ),\n  .io_in_0_d_bits_source            (io_in_0_d_bits_source            ),\n  .io_in_0_d_bits_sink              (io_in_0_d_bits_sink              ),\n  .io_in_0_d_bits_addr_lo           (io_in_0_d_bits_addr_lo           ),\n  .io_in_0_d_bits_data              (io_in_0_d_bits_data              ),\n  .io_in_0_d_bits_error             (io_in_0_d_bits_error             ),\n  .io_in_0_e_ready                  (io_in_0_e_ready                  ),\n  .io_in_0_e_valid                  (io_in_0_e_valid                  ),\n  .io_in_0_e_bits_sink              (io_in_0_e_bits_sink              ) \n);\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_pwmgpioport(\n  input   clock,\n  input   reset,\n  input   io_pwm_port_0,\n  input   io_pwm_port_1,\n  input   io_pwm_port_2,\n  input   io_pwm_port_3,\n  input   io_pins_pwm_0_i_ival,\n  output  io_pins_pwm_0_o_oval,\n  output  io_pins_pwm_0_o_oe,\n  output  io_pins_pwm_0_o_ie,\n  output  io_pins_pwm_0_o_pue,\n  output  io_pins_pwm_0_o_ds,\n  input   io_pins_pwm_1_i_ival,\n  output  io_pins_pwm_1_o_oval,\n  output  io_pins_pwm_1_o_oe,\n  output  io_pins_pwm_1_o_ie,\n  output  io_pins_pwm_1_o_pue,\n  output  io_pins_pwm_1_o_ds,\n  input   io_pins_pwm_2_i_ival,\n  output  io_pins_pwm_2_o_oval,\n  output  io_pins_pwm_2_o_oe,\n  output  io_pins_pwm_2_o_ie,\n  output  io_pins_pwm_2_o_pue,\n  output  io_pins_pwm_2_o_ds,\n  input   io_pins_pwm_3_i_ival,\n  output  io_pins_pwm_3_o_oval,\n  output  io_pins_pwm_3_o_oe,\n  output  io_pins_pwm_3_o_ie,\n  output  io_pins_pwm_3_o_pue,\n  output  io_pins_pwm_3_o_ds\n);\n  wire [1:0] T_108;\n  wire [1:0] T_109;\n  wire [3:0] T_110;\n  wire  T_114;\n  wire  T_115;\n  wire  T_116;\n  wire  T_117;\n  assign io_pins_pwm_0_o_oval = T_114;\n  assign io_pins_pwm_0_o_oe = 1'h1;\n  assign io_pins_pwm_0_o_ie = 1'h0;\n  assign io_pins_pwm_0_o_pue = 1'h0;\n  assign io_pins_pwm_0_o_ds = 1'h0;\n  assign io_pins_pwm_1_o_oval = T_115;\n  assign io_pins_pwm_1_o_oe = 1'h1;\n  assign io_pins_pwm_1_o_ie = 1'h0;\n  assign io_pins_pwm_1_o_pue = 1'h0;\n  assign io_pins_pwm_1_o_ds = 1'h0;\n  assign io_pins_pwm_2_o_oval = T_116;\n  assign io_pins_pwm_2_o_oe = 1'h1;\n  assign io_pins_pwm_2_o_ie = 1'h0;\n  assign io_pins_pwm_2_o_pue = 1'h0;\n  assign io_pins_pwm_2_o_ds = 1'h0;\n  assign io_pins_pwm_3_o_oval = T_117;\n  assign io_pins_pwm_3_o_oe = 1'h1;\n  assign io_pins_pwm_3_o_ie = 1'h0;\n  assign io_pins_pwm_3_o_pue = 1'h0;\n  assign io_pins_pwm_3_o_ds = 1'h0;\n  assign T_108 = {io_pwm_port_1,io_pwm_port_0};\n  assign T_109 = {io_pwm_port_3,io_pwm_port_2};\n  assign T_110 = {T_109,T_108};\n  assign T_114 = T_110[0];\n  assign T_115 = T_110[1];\n  assign T_116 = T_110[2];\n  assign T_117 = T_110[3];\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_qspi_1cs(\n  input   clock,\n  input   reset,\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  output  io_tl_i_0_0,\n  output  io_tl_r_0_a_ready,\n  input   io_tl_r_0_a_valid,\n  input  [2:0] io_tl_r_0_a_bits_opcode,\n  input  [2:0] io_tl_r_0_a_bits_param,\n  input  [2:0] io_tl_r_0_a_bits_size,\n  input  [4:0] io_tl_r_0_a_bits_source,\n  input  [28:0] io_tl_r_0_a_bits_address,\n  input  [3:0] io_tl_r_0_a_bits_mask,\n  input  [31:0] io_tl_r_0_a_bits_data,\n  input   io_tl_r_0_b_ready,\n  output  io_tl_r_0_b_valid,\n  output [2:0] io_tl_r_0_b_bits_opcode,\n  output [1:0] io_tl_r_0_b_bits_param,\n  output [2:0] io_tl_r_0_b_bits_size,\n  output [4:0] io_tl_r_0_b_bits_source,\n  output [28:0] io_tl_r_0_b_bits_address,\n  output [3:0] io_tl_r_0_b_bits_mask,\n  output [31:0] io_tl_r_0_b_bits_data,\n  output  io_tl_r_0_c_ready,\n  input   io_tl_r_0_c_valid,\n  input  [2:0] io_tl_r_0_c_bits_opcode,\n  input  [2:0] io_tl_r_0_c_bits_param,\n  input  [2:0] io_tl_r_0_c_bits_size,\n  input  [4:0] io_tl_r_0_c_bits_source,\n  input  [28:0] io_tl_r_0_c_bits_address,\n  input  [31:0] io_tl_r_0_c_bits_data,\n  input   io_tl_r_0_c_bits_error,\n  input   io_tl_r_0_d_ready,\n  output  io_tl_r_0_d_valid,\n  output [2:0] io_tl_r_0_d_bits_opcode,\n  output [1:0] io_tl_r_0_d_bits_param,\n  output [2:0] io_tl_r_0_d_bits_size,\n  output [4:0] io_tl_r_0_d_bits_source,\n  output  io_tl_r_0_d_bits_sink,\n  output [1:0] io_tl_r_0_d_bits_addr_lo,\n  output [31:0] io_tl_r_0_d_bits_data,\n  output  io_tl_r_0_d_bits_error,\n  output  io_tl_r_0_e_ready,\n  input   io_tl_r_0_e_valid,\n  input   io_tl_r_0_e_bits_sink\n);\n  wire [1:0] T_955_fmt_proto;\n  wire  T_955_fmt_endian;\n  wire  T_955_fmt_iodir;\n  wire [3:0] T_955_fmt_len;\n  wire [11:0] T_955_sck_div;\n  wire  T_955_sck_pol;\n  wire  T_955_sck_pha;\n  wire  T_955_cs_id;\n  wire  T_955_cs_dflt_0;\n  wire [1:0] T_955_cs_mode;\n  wire [7:0] T_955_dla_cssck;\n  wire [7:0] T_955_dla_sckcs;\n  wire [7:0] T_955_dla_intercs;\n  wire [7:0] T_955_dla_interxfr;\n  wire [3:0] T_955_wm_tx;\n  wire [3:0] T_955_wm_rx;\n  reg [1:0] ctrl_fmt_proto;\n  reg [31:0] GEN_236;\n  reg  ctrl_fmt_endian;\n  reg [31:0] GEN_237;\n  reg  ctrl_fmt_iodir;\n  reg [31:0] GEN_238;\n  reg [3:0] ctrl_fmt_len;\n  reg [31:0] GEN_239;\n  reg [11:0] ctrl_sck_div;\n  reg [31:0] GEN_240;\n  reg  ctrl_sck_pol;\n  reg [31:0] GEN_241;\n  reg  ctrl_sck_pha;\n  reg [31:0] GEN_242;\n  reg  ctrl_cs_id;\n  reg [31:0] GEN_243;\n  reg  ctrl_cs_dflt_0;\n  reg [31:0] GEN_244;\n  reg [1:0] ctrl_cs_mode;\n  reg [31:0] GEN_245;\n  reg [7:0] ctrl_dla_cssck;\n  reg [31:0] GEN_246;\n  reg [7:0] ctrl_dla_sckcs;\n  reg [31:0] GEN_247;\n  reg [7:0] ctrl_dla_intercs;\n  reg [31:0] GEN_248;\n  reg [7:0] ctrl_dla_interxfr;\n  reg [31:0] GEN_249;\n  reg [3:0] ctrl_wm_tx;\n  reg [31:0] GEN_250;\n  reg [3:0] ctrl_wm_rx;\n  reg [31:0] GEN_251;\n  wire  fifo_clock;\n  wire  fifo_reset;\n  wire [1:0] fifo_io_ctrl_fmt_proto;\n  wire  fifo_io_ctrl_fmt_endian;\n  wire  fifo_io_ctrl_fmt_iodir;\n  wire [3:0] fifo_io_ctrl_fmt_len;\n  wire [1:0] fifo_io_ctrl_cs_mode;\n  wire [3:0] fifo_io_ctrl_wm_tx;\n  wire [3:0] fifo_io_ctrl_wm_rx;\n  wire  fifo_io_link_tx_ready;\n  wire  fifo_io_link_tx_valid;\n  wire [7:0] fifo_io_link_tx_bits;\n  wire  fifo_io_link_rx_valid;\n  wire [7:0] fifo_io_link_rx_bits;\n  wire [7:0] fifo_io_link_cnt;\n  wire [1:0] fifo_io_link_fmt_proto;\n  wire  fifo_io_link_fmt_endian;\n  wire  fifo_io_link_fmt_iodir;\n  wire  fifo_io_link_cs_set;\n  wire  fifo_io_link_cs_clear;\n  wire  fifo_io_link_cs_hold;\n  wire  fifo_io_link_active;\n  wire  fifo_io_link_lock;\n  wire  fifo_io_tx_ready;\n  wire  fifo_io_tx_valid;\n  wire [7:0] fifo_io_tx_bits;\n  wire  fifo_io_rx_ready;\n  wire  fifo_io_rx_valid;\n  wire [7:0] fifo_io_rx_bits;\n  wire  fifo_io_ip_txwm;\n  wire  fifo_io_ip_rxwm;\n  wire  mac_clock;\n  wire  mac_reset;\n  wire  mac_io_port_sck;\n  wire  mac_io_port_dq_0_i;\n  wire  mac_io_port_dq_0_o;\n  wire  mac_io_port_dq_0_oe;\n  wire  mac_io_port_dq_1_i;\n  wire  mac_io_port_dq_1_o;\n  wire  mac_io_port_dq_1_oe;\n  wire  mac_io_port_dq_2_i;\n  wire  mac_io_port_dq_2_o;\n  wire  mac_io_port_dq_2_oe;\n  wire  mac_io_port_dq_3_i;\n  wire  mac_io_port_dq_3_o;\n  wire  mac_io_port_dq_3_oe;\n  wire  mac_io_port_cs_0;\n  wire [11:0] mac_io_ctrl_sck_div;\n  wire  mac_io_ctrl_sck_pol;\n  wire  mac_io_ctrl_sck_pha;\n  wire [7:0] mac_io_ctrl_dla_cssck;\n  wire [7:0] mac_io_ctrl_dla_sckcs;\n  wire [7:0] mac_io_ctrl_dla_intercs;\n  wire [7:0] mac_io_ctrl_dla_interxfr;\n  wire  mac_io_ctrl_cs_id;\n  wire  mac_io_ctrl_cs_dflt_0;\n  wire  mac_io_link_tx_ready;\n  wire  mac_io_link_tx_valid;\n  wire [7:0] mac_io_link_tx_bits;\n  wire  mac_io_link_rx_valid;\n  wire [7:0] mac_io_link_rx_bits;\n  wire [7:0] mac_io_link_cnt;\n  wire [1:0] mac_io_link_fmt_proto;\n  wire  mac_io_link_fmt_endian;\n  wire  mac_io_link_fmt_iodir;\n  wire  mac_io_link_cs_set;\n  wire  mac_io_link_cs_clear;\n  wire  mac_io_link_cs_hold;\n  wire  mac_io_link_active;\n  wire  T_1021_txwm;\n  wire  T_1021_rxwm;\n  wire [1:0] T_1025;\n  wire  T_1026;\n  wire  T_1027;\n  reg  ie_txwm;\n  reg [31:0] GEN_252;\n  reg  ie_rxwm;\n  reg [31:0] GEN_253;\n  wire  T_1030;\n  wire  T_1031;\n  wire  T_1032;\n  wire  T_1036;\n  wire  T_1039;\n  wire  T_1063_ready;\n  wire  T_1063_valid;\n  wire  T_1063_bits_read;\n  wire [9:0] T_1063_bits_index;\n  wire [31:0] T_1063_bits_data;\n  wire [3:0] T_1063_bits_mask;\n  wire [9:0] T_1063_bits_extra;\n  wire  T_1080;\n  wire [26:0] T_1081;\n  wire [1:0] T_1082;\n  wire [6:0] T_1083;\n  wire [9:0] T_1084;\n  wire  T_1102_ready;\n  wire  T_1102_valid;\n  wire  T_1102_bits_read;\n  wire [31:0] T_1102_bits_data;\n  wire [9:0] T_1102_bits_extra;\n  wire  T_1138_ready;\n  wire  T_1138_valid;\n  wire  T_1138_bits_read;\n  wire [9:0] T_1138_bits_index;\n  wire [31:0] T_1138_bits_data;\n  wire [3:0] T_1138_bits_mask;\n  wire [9:0] T_1138_bits_extra;\n  wire [9:0] T_1223;\n  wire  T_1225;\n  wire [9:0] T_1231;\n  wire [9:0] T_1232;\n  wire  T_1234;\n  wire [9:0] T_1240;\n  wire [9:0] T_1241;\n  wire  T_1243;\n  wire [9:0] T_1249;\n  wire [9:0] T_1250;\n  wire  T_1252;\n  wire [9:0] T_1258;\n  wire [9:0] T_1259;\n  wire  T_1261;\n  wire [9:0] T_1267;\n  wire [9:0] T_1268;\n  wire  T_1270;\n  wire [9:0] T_1276;\n  wire [9:0] T_1277;\n  wire  T_1279;\n  wire [9:0] T_1285;\n  wire [9:0] T_1286;\n  wire  T_1288;\n  wire [9:0] T_1294;\n  wire [9:0] T_1295;\n  wire  T_1297;\n  wire [9:0] T_1303;\n  wire [9:0] T_1304;\n  wire  T_1306;\n  wire [9:0] T_1312;\n  wire [9:0] T_1313;\n  wire  T_1315;\n  wire [9:0] T_1321;\n  wire [9:0] T_1322;\n  wire  T_1324;\n  wire [9:0] T_1330;\n  wire [9:0] T_1331;\n  wire  T_1333;\n  wire [9:0] T_1339;\n  wire [9:0] T_1340;\n  wire  T_1342;\n  wire  T_1350_0;\n  wire  T_1350_1;\n  wire  T_1350_2;\n  wire  T_1350_3;\n  wire  T_1350_4;\n  wire  T_1350_5;\n  wire  T_1350_6;\n  wire  T_1350_7;\n  wire  T_1350_8;\n  wire  T_1350_9;\n  wire  T_1350_10;\n  wire  T_1350_11;\n  wire  T_1350_12;\n  wire  T_1350_13;\n  wire  T_1350_14;\n  wire  T_1350_15;\n  wire  T_1350_16;\n  wire  T_1350_17;\n  wire  T_1350_18;\n  wire  T_1350_19;\n  wire  T_1350_20;\n  wire  T_1350_21;\n  wire  T_1350_22;\n  wire  T_1350_23;\n  wire  T_1350_24;\n  wire  T_1350_25;\n  wire  T_1355_0;\n  wire  T_1355_1;\n  wire  T_1355_2;\n  wire  T_1355_3;\n  wire  T_1355_4;\n  wire  T_1355_5;\n  wire  T_1355_6;\n  wire  T_1355_7;\n  wire  T_1355_8;\n  wire  T_1355_9;\n  wire  T_1355_10;\n  wire  T_1355_11;\n  wire  T_1355_12;\n  wire  T_1355_13;\n  wire  T_1355_14;\n  wire  T_1355_15;\n  wire  T_1355_16;\n  wire  T_1355_17;\n  wire  T_1355_18;\n  wire  T_1355_19;\n  wire  T_1355_20;\n  wire  T_1355_21;\n  wire  T_1355_22;\n  wire  T_1355_23;\n  wire  T_1355_24;\n  wire  T_1355_25;\n  wire  T_1360_0;\n  wire  T_1360_1;\n  wire  T_1360_2;\n  wire  T_1360_3;\n  wire  T_1360_4;\n  wire  T_1360_5;\n  wire  T_1360_6;\n  wire  T_1360_7;\n  wire  T_1360_8;\n  wire  T_1360_9;\n  wire  T_1360_10;\n  wire  T_1360_11;\n  wire  T_1360_12;\n  wire  T_1360_13;\n  wire  T_1360_14;\n  wire  T_1360_15;\n  wire  T_1360_16;\n  wire  T_1360_17;\n  wire  T_1360_18;\n  wire  T_1360_19;\n  wire  T_1360_20;\n  wire  T_1360_21;\n  wire  T_1360_22;\n  wire  T_1360_23;\n  wire  T_1360_24;\n  wire  T_1360_25;\n  wire  T_1365_0;\n  wire  T_1365_1;\n  wire  T_1365_2;\n  wire  T_1365_3;\n  wire  T_1365_4;\n  wire  T_1365_5;\n  wire  T_1365_6;\n  wire  T_1365_7;\n  wire  T_1365_8;\n  wire  T_1365_9;\n  wire  T_1365_10;\n  wire  T_1365_11;\n  wire  T_1365_12;\n  wire  T_1365_13;\n  wire  T_1365_14;\n  wire  T_1365_15;\n  wire  T_1365_16;\n  wire  T_1365_17;\n  wire  T_1365_18;\n  wire  T_1365_19;\n  wire  T_1365_20;\n  wire  T_1365_21;\n  wire  T_1365_22;\n  wire  T_1365_23;\n  wire  T_1365_24;\n  wire  T_1365_25;\n  wire  T_1370_0;\n  wire  T_1370_1;\n  wire  T_1370_2;\n  wire  T_1370_3;\n  wire  T_1370_4;\n  wire  T_1370_5;\n  wire  T_1370_6;\n  wire  T_1370_7;\n  wire  T_1370_8;\n  wire  T_1370_9;\n  wire  T_1370_10;\n  wire  T_1370_11;\n  wire  T_1370_12;\n  wire  T_1370_13;\n  wire  T_1370_14;\n  wire  T_1370_15;\n  wire  T_1370_16;\n  wire  T_1370_17;\n  wire  T_1370_18;\n  wire  T_1370_19;\n  wire  T_1370_20;\n  wire  T_1370_21;\n  wire  T_1370_22;\n  wire  T_1370_23;\n  wire  T_1370_24;\n  wire  T_1370_25;\n  wire  T_1375_0;\n  wire  T_1375_1;\n  wire  T_1375_2;\n  wire  T_1375_3;\n  wire  T_1375_4;\n  wire  T_1375_5;\n  wire  T_1375_6;\n  wire  T_1375_7;\n  wire  T_1375_8;\n  wire  T_1375_9;\n  wire  T_1375_10;\n  wire  T_1375_11;\n  wire  T_1375_12;\n  wire  T_1375_13;\n  wire  T_1375_14;\n  wire  T_1375_15;\n  wire  T_1375_16;\n  wire  T_1375_17;\n  wire  T_1375_18;\n  wire  T_1375_19;\n  wire  T_1375_20;\n  wire  T_1375_21;\n  wire  T_1375_22;\n  wire  T_1375_23;\n  wire  T_1375_24;\n  wire  T_1375_25;\n  wire  T_1380_0;\n  wire  T_1380_1;\n  wire  T_1380_2;\n  wire  T_1380_3;\n  wire  T_1380_4;\n  wire  T_1380_5;\n  wire  T_1380_6;\n  wire  T_1380_7;\n  wire  T_1380_8;\n  wire  T_1380_9;\n  wire  T_1380_10;\n  wire  T_1380_11;\n  wire  T_1380_12;\n  wire  T_1380_13;\n  wire  T_1380_14;\n  wire  T_1380_15;\n  wire  T_1380_16;\n  wire  T_1380_17;\n  wire  T_1380_18;\n  wire  T_1380_19;\n  wire  T_1380_20;\n  wire  T_1380_21;\n  wire  T_1380_22;\n  wire  T_1380_23;\n  wire  T_1380_24;\n  wire  T_1380_25;\n  wire  T_1385_0;\n  wire  T_1385_1;\n  wire  T_1385_2;\n  wire  T_1385_3;\n  wire  T_1385_4;\n  wire  T_1385_5;\n  wire  T_1385_6;\n  wire  T_1385_7;\n  wire  T_1385_8;\n  wire  T_1385_9;\n  wire  T_1385_10;\n  wire  T_1385_11;\n  wire  T_1385_12;\n  wire  T_1385_13;\n  wire  T_1385_14;\n  wire  T_1385_15;\n  wire  T_1385_16;\n  wire  T_1385_17;\n  wire  T_1385_18;\n  wire  T_1385_19;\n  wire  T_1385_20;\n  wire  T_1385_21;\n  wire  T_1385_22;\n  wire  T_1385_23;\n  wire  T_1385_24;\n  wire  T_1385_25;\n  wire  T_1547;\n  wire  T_1548;\n  wire  T_1549;\n  wire  T_1550;\n  wire [7:0] T_1554;\n  wire [7:0] T_1558;\n  wire [7:0] T_1562;\n  wire [7:0] T_1566;\n  wire [15:0] T_1567;\n  wire [15:0] T_1568;\n  wire [31:0] T_1569;\n  wire [11:0] T_1593;\n  wire [11:0] T_1597;\n  wire  T_1599;\n  wire  T_1612;\n  wire [11:0] T_1613;\n  wire [11:0] GEN_6;\n  wire  T_1633;\n  wire  T_1637;\n  wire  T_1639;\n  wire  T_1652;\n  wire  T_1653;\n  wire  GEN_7;\n  wire [7:0] T_1673;\n  wire  T_1675;\n  wire [7:0] T_1677;\n  wire  T_1679;\n  wire  T_1692;\n  wire [7:0] T_1693;\n  wire [7:0] GEN_8;\n  wire [7:0] T_1713;\n  wire [7:0] T_1717;\n  wire  T_1719;\n  wire  T_1732;\n  wire [7:0] T_1733;\n  wire [7:0] GEN_9;\n  wire [23:0] GEN_210;\n  wire [23:0] T_1748;\n  wire [23:0] GEN_211;\n  wire [23:0] T_1752;\n  wire [3:0] T_1753;\n  wire [3:0] T_1757;\n  wire  T_1759;\n  wire  T_1772;\n  wire [3:0] T_1773;\n  wire [3:0] GEN_10;\n  wire  T_1828;\n  wire  T_1833;\n  wire  T_1837;\n  wire  T_1839;\n  wire  T_1853;\n  wire [1:0] GEN_212;\n  wire [1:0] T_1868;\n  wire [1:0] GEN_213;\n  wire [1:0] T_1872;\n  wire  T_1892;\n  wire  GEN_11;\n  wire  T_1932;\n  wire  GEN_12;\n  wire [1:0] GEN_214;\n  wire [1:0] T_1948;\n  wire [1:0] GEN_215;\n  wire [1:0] T_1952;\n  wire [1:0] T_1953;\n  wire [1:0] T_1957;\n  wire  T_1959;\n  wire  T_1972;\n  wire [1:0] T_1973;\n  wire [1:0] GEN_13;\n  wire  T_2012;\n  wire  GEN_14;\n  wire  T_2052;\n  wire  GEN_15;\n  wire [1:0] GEN_216;\n  wire [1:0] T_2068;\n  wire [1:0] GEN_217;\n  wire [1:0] T_2072;\n  wire  T_2092;\n  wire [3:0] GEN_16;\n  wire  T_2132;\n  wire [31:0] GEN_218;\n  wire [31:0] T_2228;\n  wire  T_2252;\n  wire [1:0] GEN_17;\n  wire  T_2273;\n  wire  T_2277;\n  wire  T_2279;\n  wire  T_2292;\n  wire  T_2293;\n  wire  GEN_18;\n  wire [2:0] GEN_219;\n  wire [2:0] T_2308;\n  wire [2:0] GEN_220;\n  wire [2:0] T_2312;\n  wire  T_2313;\n  wire  T_2317;\n  wire  T_2319;\n  wire  T_2332;\n  wire  T_2333;\n  wire  GEN_19;\n  wire [3:0] GEN_221;\n  wire [3:0] T_2348;\n  wire [3:0] GEN_222;\n  wire [3:0] T_2352;\n  wire [3:0] T_2353;\n  wire [3:0] T_2357;\n  wire  T_2359;\n  wire  T_2372;\n  wire [3:0] T_2373;\n  wire [3:0] GEN_20;\n  wire [19:0] GEN_223;\n  wire [19:0] T_2388;\n  wire [19:0] GEN_224;\n  wire [19:0] T_2392;\n  wire  T_2412;\n  wire [7:0] GEN_21;\n  wire  T_2452;\n  wire [7:0] GEN_22;\n  wire [23:0] GEN_225;\n  wire [23:0] T_2468;\n  wire [23:0] GEN_226;\n  wire [23:0] T_2472;\n  wire  T_2488;\n  wire [7:0] T_2508;\n  wire [30:0] T_2552;\n  wire [31:0] GEN_227;\n  wire [31:0] T_2588;\n  wire [31:0] GEN_228;\n  wire [31:0] T_2592;\n  wire  T_2612;\n  wire  GEN_23;\n  wire  T_2634;\n  wire  T_2636;\n  wire  T_2638;\n  wire  T_2639;\n  wire  T_2641;\n  wire  T_2649;\n  wire  T_2651;\n  wire  T_2653;\n  wire  T_2655;\n  wire  T_2657;\n  wire  T_2659;\n  wire  T_2670;\n  wire  T_2671;\n  wire  T_2673;\n  wire  T_2675;\n  wire  T_2676;\n  wire  T_2678;\n  wire  T_2692;\n  wire  T_2693;\n  wire  T_2694;\n  wire  T_2695;\n  wire  T_2697;\n  wire  T_2702;\n  wire  T_2703;\n  wire  T_2704;\n  wire  T_2706;\n  wire  T_2708;\n  wire  T_2709;\n  wire  T_2710;\n  wire  T_2712;\n  wire  T_2714;\n  wire  T_2716;\n  wire  T_2718;\n  wire  T_2720;\n  wire  T_2740;\n  wire  T_2741;\n  wire  T_2743;\n  wire  T_2745;\n  wire  T_2746;\n  wire  T_2748;\n  wire  T_2790_0;\n  wire  T_2790_1;\n  wire  T_2790_2;\n  wire  T_2790_3;\n  wire  T_2790_4;\n  wire  T_2790_5;\n  wire  T_2790_6;\n  wire  T_2790_7;\n  wire  T_2790_8;\n  wire  T_2790_9;\n  wire  T_2790_10;\n  wire  T_2790_11;\n  wire  T_2790_12;\n  wire  T_2790_13;\n  wire  T_2790_14;\n  wire  T_2790_15;\n  wire  T_2790_16;\n  wire  T_2790_17;\n  wire  T_2790_18;\n  wire  T_2790_19;\n  wire  T_2790_20;\n  wire  T_2790_21;\n  wire  T_2790_22;\n  wire  T_2790_23;\n  wire  T_2790_24;\n  wire  T_2790_25;\n  wire  T_2790_26;\n  wire  T_2790_27;\n  wire  T_2790_28;\n  wire  T_2790_29;\n  wire  T_2790_30;\n  wire  T_2790_31;\n  wire  T_2828;\n  wire  T_2831;\n  wire  T_2833;\n  wire  T_2843;\n  wire  T_2847;\n  wire  T_2851;\n  wire  T_2863;\n  wire  T_2865;\n  wire  T_2868;\n  wire  T_2870;\n  wire  T_2885;\n  wire  T_2886;\n  wire  T_2887;\n  wire  T_2889;\n  wire  T_2895;\n  wire  T_2896;\n  wire  T_2898;\n  wire  T_2901;\n  wire  T_2902;\n  wire  T_2904;\n  wire  T_2908;\n  wire  T_2912;\n  wire  T_2933;\n  wire  T_2935;\n  wire  T_2938;\n  wire  T_2940;\n  wire  T_2982_0;\n  wire  T_2982_1;\n  wire  T_2982_2;\n  wire  T_2982_3;\n  wire  T_2982_4;\n  wire  T_2982_5;\n  wire  T_2982_6;\n  wire  T_2982_7;\n  wire  T_2982_8;\n  wire  T_2982_9;\n  wire  T_2982_10;\n  wire  T_2982_11;\n  wire  T_2982_12;\n  wire  T_2982_13;\n  wire  T_2982_14;\n  wire  T_2982_15;\n  wire  T_2982_16;\n  wire  T_2982_17;\n  wire  T_2982_18;\n  wire  T_2982_19;\n  wire  T_2982_20;\n  wire  T_2982_21;\n  wire  T_2982_22;\n  wire  T_2982_23;\n  wire  T_2982_24;\n  wire  T_2982_25;\n  wire  T_2982_26;\n  wire  T_2982_27;\n  wire  T_2982_28;\n  wire  T_2982_29;\n  wire  T_2982_30;\n  wire  T_2982_31;\n  wire  T_3020;\n  wire  T_3023;\n  wire  T_3025;\n  wire  T_3035;\n  wire  T_3039;\n  wire  T_3043;\n  wire  T_3055;\n  wire  T_3057;\n  wire  T_3060;\n  wire  T_3062;\n  wire  T_3077;\n  wire  T_3078;\n  wire  T_3079;\n  wire  T_3081;\n  wire  T_3087;\n  wire  T_3088;\n  wire  T_3090;\n  wire  T_3093;\n  wire  T_3094;\n  wire  T_3096;\n  wire  T_3100;\n  wire  T_3104;\n  wire  T_3125;\n  wire  T_3127;\n  wire  T_3130;\n  wire  T_3132;\n  wire  T_3174_0;\n  wire  T_3174_1;\n  wire  T_3174_2;\n  wire  T_3174_3;\n  wire  T_3174_4;\n  wire  T_3174_5;\n  wire  T_3174_6;\n  wire  T_3174_7;\n  wire  T_3174_8;\n  wire  T_3174_9;\n  wire  T_3174_10;\n  wire  T_3174_11;\n  wire  T_3174_12;\n  wire  T_3174_13;\n  wire  T_3174_14;\n  wire  T_3174_15;\n  wire  T_3174_16;\n  wire  T_3174_17;\n  wire  T_3174_18;\n  wire  T_3174_19;\n  wire  T_3174_20;\n  wire  T_3174_21;\n  wire  T_3174_22;\n  wire  T_3174_23;\n  wire  T_3174_24;\n  wire  T_3174_25;\n  wire  T_3174_26;\n  wire  T_3174_27;\n  wire  T_3174_28;\n  wire  T_3174_29;\n  wire  T_3174_30;\n  wire  T_3174_31;\n  wire  T_3212;\n  wire  T_3215;\n  wire  T_3217;\n  wire  T_3227;\n  wire  T_3231;\n  wire  T_3235;\n  wire  T_3247;\n  wire  T_3249;\n  wire  T_3252;\n  wire  T_3254;\n  wire  T_3269;\n  wire  T_3270;\n  wire  T_3271;\n  wire  T_3273;\n  wire  T_3279;\n  wire  T_3280;\n  wire  T_3282;\n  wire  T_3285;\n  wire  T_3286;\n  wire  T_3288;\n  wire  T_3292;\n  wire  T_3296;\n  wire  T_3317;\n  wire  T_3319;\n  wire  T_3322;\n  wire  T_3324;\n  wire  T_3366_0;\n  wire  T_3366_1;\n  wire  T_3366_2;\n  wire  T_3366_3;\n  wire  T_3366_4;\n  wire  T_3366_5;\n  wire  T_3366_6;\n  wire  T_3366_7;\n  wire  T_3366_8;\n  wire  T_3366_9;\n  wire  T_3366_10;\n  wire  T_3366_11;\n  wire  T_3366_12;\n  wire  T_3366_13;\n  wire  T_3366_14;\n  wire  T_3366_15;\n  wire  T_3366_16;\n  wire  T_3366_17;\n  wire  T_3366_18;\n  wire  T_3366_19;\n  wire  T_3366_20;\n  wire  T_3366_21;\n  wire  T_3366_22;\n  wire  T_3366_23;\n  wire  T_3366_24;\n  wire  T_3366_25;\n  wire  T_3366_26;\n  wire  T_3366_27;\n  wire  T_3366_28;\n  wire  T_3366_29;\n  wire  T_3366_30;\n  wire  T_3366_31;\n  wire  T_3401;\n  wire  T_3402;\n  wire  T_3403;\n  wire  T_3404;\n  wire  T_3405;\n  wire [1:0] T_3411;\n  wire [1:0] T_3412;\n  wire [2:0] T_3413;\n  wire [4:0] T_3414;\n  wire  GEN_0;\n  wire  GEN_24;\n  wire  GEN_25;\n  wire  GEN_26;\n  wire  GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_31;\n  wire  GEN_32;\n  wire  GEN_33;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  GEN_36;\n  wire  GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire  GEN_40;\n  wire  GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire  GEN_48;\n  wire  GEN_49;\n  wire  GEN_50;\n  wire  GEN_51;\n  wire  GEN_52;\n  wire  GEN_53;\n  wire  GEN_54;\n  wire  GEN_1;\n  wire  GEN_55;\n  wire  GEN_56;\n  wire  GEN_57;\n  wire  GEN_58;\n  wire  GEN_59;\n  wire  GEN_60;\n  wire  GEN_61;\n  wire  GEN_62;\n  wire  GEN_63;\n  wire  GEN_64;\n  wire  GEN_65;\n  wire  GEN_66;\n  wire  GEN_67;\n  wire  GEN_68;\n  wire  GEN_69;\n  wire  GEN_70;\n  wire  GEN_71;\n  wire  GEN_72;\n  wire  GEN_73;\n  wire  GEN_74;\n  wire  GEN_75;\n  wire  GEN_76;\n  wire  GEN_77;\n  wire  GEN_78;\n  wire  GEN_79;\n  wire  GEN_80;\n  wire  GEN_81;\n  wire  GEN_82;\n  wire  GEN_83;\n  wire  GEN_84;\n  wire  GEN_85;\n  wire "}
{"text": " T_3431;\n  wire  GEN_2;\n  wire  GEN_86;\n  wire  GEN_87;\n  wire  GEN_88;\n  wire  GEN_89;\n  wire  GEN_90;\n  wire  GEN_91;\n  wire  GEN_92;\n  wire  GEN_93;\n  wire  GEN_94;\n  wire  GEN_95;\n  wire  GEN_96;\n  wire  GEN_97;\n  wire  GEN_98;\n  wire  GEN_99;\n  wire  GEN_100;\n  wire  GEN_101;\n  wire  GEN_102;\n  wire  GEN_103;\n  wire  GEN_104;\n  wire  GEN_105;\n  wire  GEN_106;\n  wire  GEN_107;\n  wire  GEN_108;\n  wire  GEN_109;\n  wire  GEN_110;\n  wire  GEN_111;\n  wire  GEN_112;\n  wire  GEN_113;\n  wire  GEN_114;\n  wire  GEN_115;\n  wire  GEN_116;\n  wire  GEN_3;\n  wire  GEN_117;\n  wire  GEN_118;\n  wire  GEN_119;\n  wire  GEN_120;\n  wire  GEN_121;\n  wire  GEN_122;\n  wire  GEN_123;\n  wire  GEN_124;\n  wire  GEN_125;\n  wire  GEN_126;\n  wire  GEN_127;\n  wire  GEN_128;\n  wire  GEN_129;\n  wire  GEN_130;\n  wire  GEN_131;\n  wire  GEN_132;\n  wire  GEN_133;\n  wire  GEN_134;\n  wire  GEN_135;\n  wire  GEN_136;\n  wire  GEN_137;\n  wire  GEN_138;\n  wire  GEN_139;\n  wire  GEN_140;\n  wire  GEN_141;\n  wire  GEN_142;\n  wire  GEN_143;\n  wire  GEN_144;\n  wire  GEN_145;\n  wire  GEN_146;\n  wire  GEN_147;\n  wire  T_3434;\n  wire  T_3435;\n  wire  T_3436;\n  wire  T_3437;\n  wire  T_3438;\n  wire [31:0] T_3440;\n  wire [1:0] T_3441;\n  wire [3:0] T_3443;\n  wire [1:0] T_3444;\n  wire [1:0] T_3445;\n  wire [3:0] T_3446;\n  wire [7:0] T_3447;\n  wire [1:0] T_3449;\n  wire [3:0] T_3450;\n  wire [7:0] T_3454;\n  wire [15:0] T_3455;\n  wire [1:0] T_3456;\n  wire [1:0] T_3457;\n  wire [3:0] T_3458;\n  wire [1:0] T_3459;\n  wire [3:0] T_3461;\n  wire [7:0] T_3462;\n  wire [1:0] T_3466;\n  wire [3:0] T_3468;\n  wire [7:0] T_3469;\n  wire [15:0] T_3470;\n  wire [31:0] T_3471;\n  wire [31:0] T_3472;\n  wire  T_3507;\n  wire  T_3508;\n  wire  T_3509;\n  wire  T_3510;\n  wire  T_3513;\n  wire  T_3514;\n  wire  T_3516;\n  wire  T_3517;\n  wire  T_3518;\n  wire  T_3520;\n  wire  T_3524;\n  wire  T_3526;\n  wire  T_3529;\n  wire  T_3530;\n  wire  T_3536;\n  wire  T_3540;\n  wire  T_3546;\n  wire  T_3589;\n  wire  T_3590;\n  wire  T_3596;\n  wire  T_3600;\n  wire  T_3606;\n  wire  T_3609;\n  wire  T_3610;\n  wire  T_3616;\n  wire  T_3620;\n  wire  T_3626;\n  wire  T_3629;\n  wire  T_3630;\n  wire  T_3636;\n  wire  T_3640;\n  wire  T_3646;\n  wire  T_3709;\n  wire  T_3710;\n  wire  T_3716;\n  wire  T_3720;\n  wire  T_3726;\n  wire  T_3729;\n  wire  T_3730;\n  wire  T_3736;\n  wire  T_3740;\n  wire  T_3746;\n  wire  T_3829;\n  wire  T_3830;\n  wire  T_3836;\n  wire  T_3840;\n  wire  T_3846;\n  wire  T_3869;\n  wire  T_3870;\n  wire  T_3876;\n  wire  T_3880;\n  wire  T_3886;\n  wire  T_3889;\n  wire  T_3890;\n  wire  T_3896;\n  wire  T_3900;\n  wire  T_3906;\n  wire  T_3909;\n  wire  T_3910;\n  wire  T_3916;\n  wire  T_3920;\n  wire  T_3926;\n  wire  T_3929;\n  wire  T_3930;\n  wire  T_3936;\n  wire  T_3940;\n  wire  T_3946;\n  wire  T_4069;\n  wire  T_4070;\n  wire  T_4076;\n  wire  T_4080;\n  wire  T_4086;\n  wire  T_4089;\n  wire  T_4090;\n  wire  T_4096;\n  wire  T_4100;\n  wire  T_4106;\n  wire  T_4155;\n  wire  T_4157;\n  wire  T_4159;\n  wire  T_4161;\n  wire  T_4163;\n  wire  T_4165;\n  wire  T_4167;\n  wire  T_4169;\n  wire  T_4175;\n  wire  T_4177;\n  wire  T_4179;\n  wire  T_4181;\n  wire  T_4183;\n  wire  T_4185;\n  wire  T_4187;\n  wire  T_4189;\n  wire  T_4191;\n  wire  T_4193;\n  wire  T_4195;\n  wire  T_4197;\n  wire  T_4199;\n  wire  T_4201;\n  wire  T_4203;\n  wire  T_4205;\n  wire  T_4211;\n  wire  T_4213;\n  wire  T_4215;\n  wire  T_4217;\n  wire  T_4219;\n  wire  T_4221;\n  wire  T_4223;\n  wire  T_4225;\n  wire  T_4231;\n  wire  T_4232;\n  wire  T_4234;\n  wire  T_4235;\n  wire  T_4237;\n  wire  T_4238;\n  wire  T_4240;\n  wire  T_4241;\n  wire  T_4244;\n  wire  T_4247;\n  wire  T_4250;\n  wire  T_4253;\n  wire  T_4255;\n  wire  T_4256;\n  wire  T_4258;\n  wire  T_4259;\n  wire  T_4261;\n  wire  T_4262;\n  wire  T_4264;\n  wire  T_4265;\n  wire  T_4267;\n  wire  T_4268;\n  wire  T_4269;\n  wire  T_4271;\n  wire  T_4272;\n  wire  T_4273;\n  wire  T_4275;\n  wire  T_4276;\n  wire  T_4277;\n  wire  T_4279;\n  wire  T_4280;\n  wire  T_4281;\n  wire  T_4285;\n  wire  T_4289;\n  wire  T_4293;\n  wire  T_4297;\n  wire  T_4300;\n  wire  T_4301;\n  wire  T_4304;\n  wire  T_4305;\n  wire  T_4308;\n  wire  T_4309;\n  wire  T_4312;\n  wire  T_4313;\n  wire  T_4315;\n  wire  T_4316;\n  wire  T_4317;\n  wire  T_4319;\n  wire  T_4320;\n  wire  T_4321;\n  wire  T_4323;\n  wire  T_4324;\n  wire  T_4325;\n  wire  T_4327;\n  wire  T_4328;\n  wire  T_4329;\n  wire  T_4331;\n  wire  T_4333;\n  wire  T_4335;\n  wire  T_4337;\n  wire  T_4339;\n  wire  T_4341;\n  wire  T_4343;\n  wire  T_4345;\n  wire  T_4347;\n  wire  T_4348;\n  wire  T_4350;\n  wire  T_4351;\n  wire  T_4353;\n  wire  T_4354;\n  wire  T_4356;\n  wire  T_4357;\n  wire  T_4360;\n  wire  T_4363;\n  wire  T_4366;\n  wire  T_4369;\n  wire  T_4371;\n  wire  T_4372;\n  wire  T_4374;\n  wire  T_4375;\n  wire  T_4377;\n  wire  T_4378;\n  wire  T_4380;\n  wire  T_4381;\n  wire  T_4422_0;\n  wire  T_4422_1;\n  wire  T_4422_2;\n  wire  T_4422_3;\n  wire  T_4422_4;\n  wire  T_4422_5;\n  wire  T_4422_6;\n  wire  T_4422_7;\n  wire  T_4422_8;\n  wire  T_4422_9;\n  wire  T_4422_10;\n  wire  T_4422_11;\n  wire  T_4422_12;\n  wire  T_4422_13;\n  wire  T_4422_14;\n  wire  T_4422_15;\n  wire  T_4422_16;\n  wire  T_4422_17;\n  wire  T_4422_18;\n  wire  T_4422_19;\n  wire  T_4422_20;\n  wire  T_4422_21;\n  wire  T_4422_22;\n  wire  T_4422_23;\n  wire  T_4422_24;\n  wire  T_4422_25;\n  wire  T_4422_26;\n  wire  T_4422_27;\n  wire  T_4422_28;\n  wire  T_4422_29;\n  wire  T_4422_30;\n  wire  T_4422_31;\n  wire [31:0] T_4493_0;\n  wire [31:0] T_4493_1;\n  wire [31:0] T_4493_2;\n  wire [31:0] T_4493_3;\n  wire [31:0] T_4493_4;\n  wire [31:0] T_4493_5;\n  wire [31:0] T_4493_6;\n  wire [31:0] T_4493_7;\n  wire [31:0] T_4493_8;\n  wire [31:0] T_4493_9;\n  wire [31:0] T_4493_10;\n  wire [31:0] T_4493_11;\n  wire [31:0] T_4493_12;\n  wire [31:0] T_4493_13;\n  wire [31:0] T_4493_14;\n  wire [31:0] T_4493_15;\n  wire [31:0] T_4493_16;\n  wire [31:0] T_4493_17;\n  wire [31:0] T_4493_18;\n  wire [31:0] T_4493_19;\n  wire [31:0] T_4493_20;\n  wire [31:0] T_4493_21;\n  wire [31:0] T_4493_22;\n  wire [31:0] T_4493_23;\n  wire [31:0] T_4493_24;\n  wire [31:0] T_4493_25;\n  wire [31:0] T_4493_26;\n  wire [31:0] T_4493_27;\n  wire [31:0] T_4493_28;\n  wire [31:0] T_4493_29;\n  wire [31:0] T_4493_30;\n  wire [31:0] T_4493_31;\n  wire  GEN_4;\n  wire  GEN_148;\n  wire  GEN_149;\n  wire  GEN_150;\n  wire  GEN_151;\n  wire  GEN_152;\n  wire  GEN_153;\n  wire  GEN_154;\n  wire  GEN_155;\n  wire  GEN_156;\n  wire  GEN_157;\n  wire  GEN_158;\n  wire  GEN_159;\n  wire  GEN_160;\n  wire  GEN_161;\n  wire  GEN_162;\n  wire  GEN_163;\n  wire  GEN_164;\n  wire  GEN_165;\n  wire  GEN_166;\n  wire  GEN_167;\n  wire  GEN_168;\n  wire  GEN_169;\n  wire  GEN_170;\n  wire  GEN_171;\n  wire  GEN_172;\n  wire  GEN_173;\n  wire  GEN_174;\n  wire  GEN_175;\n  wire  GEN_176;\n  wire  GEN_177;\n  wire  GEN_178;\n  wire [31:0] GEN_5;\n  wire [31:0] GEN_179;\n  wire [31:0] GEN_180;\n  wire [31:0] GEN_181;\n  wire [31:0] GEN_182;\n  wire [31:0] GEN_183;\n  wire [31:0] GEN_184;\n  wire [31:0] GEN_185;\n  wire [31:0] GEN_186;\n  wire [31:0] GEN_187;\n  wire [31:0] GEN_188;\n  wire [31:0] GEN_189;\n  wire [31:0] GEN_190;\n  wire [31:0] GEN_191;\n  wire [31:0] GEN_192;\n  wire [31:0] GEN_193;\n  wire [31:0] GEN_194;\n  wire [31:0] GEN_195;\n  wire [31:0] GEN_196;\n  wire [31:0] GEN_197;\n  wire [31:0] GEN_198;\n  wire [31:0] GEN_199;\n  wire [31:0] GEN_200;\n  wire [31:0] GEN_201;\n  wire [31:0] GEN_202;\n  wire [31:0] GEN_203;\n  wire [31:0] GEN_204;\n  wire [31:0] GEN_205;\n  wire [31:0] GEN_206;\n  wire [31:0] GEN_207;\n  wire [31:0] GEN_208;\n  wire [31:0] GEN_209;\n  wire [31:0] T_4530;\n  wire [1:0] T_4531;\n  wire [4:0] T_4533;\n  wire [2:0] T_4534;\n  wire [2:0] T_4545_opcode;\n  wire [1:0] T_4545_param;\n  wire [2:0] T_4545_size;\n  wire [4:0] T_4545_source;\n  wire  T_4545_sink;\n  wire [1:0] T_4545_addr_lo;\n  wire [31:0] T_4545_data;\n  wire  T_4545_error;\n  wire [2:0] GEN_229 = 3'b0;\n  reg [31:0] GEN_254;\n  wire [1:0] GEN_230 = 2'b0;\n  reg [31:0] GEN_255;\n  wire [2:0] GEN_231 = 3'b0;\n  reg [31:0] GEN_256;\n  wire [4:0] GEN_232 = 5'b0;\n  reg [31:0] GEN_257;\n  wire [28:0] GEN_233 = 29'b0;\n  reg [31:0] GEN_258;\n  wire [3:0] GEN_234 = 4'b0;\n  reg [31:0] GEN_259;\n  wire [31:0] GEN_235 = 32'b0;\n  reg [31:0] GEN_260;\n  sirv_qspi_fifo fifo (\n    .clock(fifo_clock),\n    .reset(fifo_reset),\n    .io_ctrl_fmt_proto(fifo_io_ctrl_fmt_proto),\n    .io_ctrl_fmt_endian(fifo_io_ctrl_fmt_endian),\n    .io_ctrl_fmt_iodir(fifo_io_ctrl_fmt_iodir),\n    .io_ctrl_fmt_len(fifo_io_ctrl_fmt_len),\n    .io_ctrl_cs_mode(fifo_io_ctrl_cs_mode),\n    .io_ctrl_wm_tx(fifo_io_ctrl_wm_tx),\n    .io_ctrl_wm_rx(fifo_io_ctrl_wm_rx),\n    .io_link_tx_ready(fifo_io_link_tx_ready),\n    .io_link_tx_valid(fifo_io_link_tx_valid),\n    .io_link_tx_bits(fifo_io_link_tx_bits),\n    .io_link_rx_valid(fifo_io_link_rx_valid),\n    .io_link_rx_bits(fifo_io_link_rx_bits),\n    .io_link_cnt(fifo_io_link_cnt),\n    .io_link_fmt_proto(fifo_io_link_fmt_proto),\n    .io_link_fmt_endian(fifo_io_link_fmt_endian),\n    .io_link_fmt_iodir(fifo_io_link_fmt_iodir),\n    .io_link_cs_set(fifo_io_link_cs_set),\n    .io_link_cs_clear(fifo_io_link_cs_clear),\n    .io_link_cs_hold(fifo_io_link_cs_hold),\n    .io_link_active(fifo_io_link_active),\n    .io_link_lock(fifo_io_link_lock),\n    .io_tx_ready(fifo_io_tx_ready),\n    .io_tx_valid(fifo_io_tx_valid),\n    .io_tx_bits(fifo_io_tx_bits),\n    .io_rx_ready(fifo_io_rx_ready),\n    .io_rx_valid(fifo_io_rx_valid),\n    .io_rx_bits(fifo_io_rx_bits),\n    .io_ip_txwm(fifo_io_ip_txwm),\n    .io_ip_rxwm(fifo_io_ip_rxwm)\n  );\n  sirv_qspi_media_2 mac (\n    .clock(mac_clock),\n    .reset(mac_reset),\n    .io_port_sck(mac_io_port_sck),\n    .io_port_dq_0_i(mac_io_port_dq_0_i),\n    .io_port_dq_0_o(mac_io_port_dq_0_o),\n    .io_port_dq_0_oe(mac_io_port_dq_0_oe),\n    .io_port_dq_1_i(mac_io_port_dq_1_i),\n    .io_port_dq_1_o(mac_io_port_dq_1_o),\n    .io_port_dq_1_oe(mac_io_port_dq_1_oe),\n    .io_port_dq_2_i(mac_io_port_dq_2_i),\n    .io_port_dq_2_o(mac_io_port_dq_2_o),\n    .io_port_dq_2_oe(mac_io_port_dq_2_oe),\n    .io_port_dq_3_i(mac_io_port_dq_3_i),\n    .io_port_dq_3_o(mac_io_port_dq_3_o),\n    .io_port_dq_3_oe(mac_io_port_dq_3_oe),\n    .io_port_cs_0(mac_io_port_cs_0),\n    .io_ctrl_sck_div(mac_io_ctrl_sck_div),\n    .io_ctrl_sck_pol(mac_io_ctrl_sck_pol),\n    .io_ctrl_sck_pha(mac_io_ctrl_sck_pha),\n    .io_ctrl_dla_cssck(mac_io_ctrl_dla_cssck),\n    .io_ctrl_dla_sckcs(mac_io_ctrl_dla_sckcs),\n    .io_ctrl_dla_intercs(mac_io_ctrl_dla_intercs),\n    .io_ctrl_dla_interxfr(mac_io_ctrl_dla_interxfr),\n    .io_ctrl_cs_id(mac_io_ctrl_cs_id),\n    .io_ctrl_cs_dflt_0(mac_io_ctrl_cs_dflt_0),\n    .io_link_tx_ready(mac_io_link_tx_ready),\n    .io_link_tx_valid(mac_io_link_tx_valid),\n    .io_link_tx_bits(mac_io_link_tx_bits),\n    .io_link_rx_valid(mac_io_link_rx_valid),\n    .io_link_rx_bits(mac_io_link_rx_bits),\n    .io_link_cnt(mac_io_link_cnt),\n    .io_link_fmt_proto(mac_io_link_fmt_proto),\n    .io_link_fmt_endian(mac_io_link_fmt_endian),\n    .io_link_fmt_iodir(mac_io_link_fmt_iodir),\n    .io_link_cs_set(mac_io_link_cs_set),\n    .io_link_cs_clear(mac_io_link_cs_clear),\n    .io_link_cs_hold(mac_io_link_cs_hold),\n    .io_link_active(mac_io_link_active)\n  );\n  assign io_port_sck = mac_io_port_sck;\n  assign io_port_dq_0_o = mac_io_port_dq_0_o;\n  assign io_port_dq_0_oe = mac_io_port_dq_0_oe;\n  assign io_port_dq_1_o = mac_io_port_dq_1_o;\n  assign io_port_dq_1_oe = mac_io_port_dq_1_oe;\n  assign io_port_dq_2_o = mac_io_port_dq_2_o;\n  assign io_port_dq_2_oe = mac_io_port_dq_2_oe;\n  assign io_port_dq_3_o = mac_io_port_dq_3_o;\n  assign io_port_dq_3_oe = mac_io_port_dq_3_oe;\n  assign io_port_cs_0 = mac_io_port_cs_0;\n  assign io_tl_i_0_0 = T_1032;\n  assign io_tl_r_0_a_ready = T_1063_ready;\n  assign io_tl_r_0_b_valid = 1'h0;\n  assign io_tl_r_0_b_bits_opcode = GEN_229;\n  assign io_tl_r_0_b_bits_param = GEN_230;\n  assign io_tl_r_0_b_bits_size = GEN_231;\n  assign io_tl_r_0_b_bits_source = GEN_232;\n  assign io_tl_r_0_b_bits_address = GEN_233;\n  assign io_tl_r_0_b_bits_mask = GEN_234;\n  assign io_tl_r_0_b_bits_data = GEN_235;\n  assign io_tl_r_0_c_ready = 1'h1;\n  assign io_tl_r_0_d_valid = T_1102_valid;\n  assign io_tl_r_0_d_bits_opcode = {{2'd0}, T_1102_bits_read};\n  assign io_tl_r_0_d_bits_param = T_4545_param;\n  assign io_tl_r_0_d_bits_size = T_4545_size;\n  assign io_tl_r_0_d_bits_source = T_4545_source;\n  assign io_tl_r_0_d_bits_sink = T_4545_sink;\n  assign io_tl_r_0_d_bits_addr_lo = T_4545_addr_lo;\n  assign io_tl_r_0_d_bits_data = T_1102_bits_data;\n  assign io_tl_r_0_d_bits_error = T_4545_error;\n  assign io_tl_r_0_e_ready = 1'h1;\n  assign T_955_fmt_proto = 2'h0;\n  assign T_955_fmt_endian = 1'h0;\n  assign T_955_fmt_iodir = 1'h0;\n  assign T_955_fmt_len = 4'h8;\n  assign T_955_sck_div = 12'h3;\n  assign T_955_sck_pol = 1'h0;\n  assign T_955_sck_pha = 1'h0;\n  assign T_955_cs_id = 1'h0;\n  assign T_955_cs_dflt_0 = 1'h1;\n  assign T_955_cs_mode = 2'h0;\n  assign T_955_dla_cssck = 8'h1;\n  assign T_955_dla_sckcs = 8'h1;\n  assign T_955_dla_intercs = 8'h1;\n  assign T_955_dla_interxfr = 8'h0;\n  assign T_955_wm_tx = 4'h0;\n  assign T_955_wm_rx = 4'h0;\n  assign fifo_clock = clock;\n  assign fifo_reset = reset;\n  assign fifo_io_ctrl_fmt_proto = ctrl_fmt_proto;\n  assign fifo_io_ctrl_fmt_endian = ctrl_fmt_endian;\n  assign fifo_io_ctrl_fmt_iodir = ctrl_fmt_iodir;\n  assign fifo_io_ctrl_fmt_len = ctrl_fmt_len;\n  assign fifo_io_ctrl_cs_mode = ctrl_cs_mode;\n  assign fifo_io_ctrl_wm_tx = ctrl_wm_tx;\n  assign fifo_io_ctrl_wm_rx = ctrl_wm_rx;\n  assign fifo_io_link_tx_ready = mac_io_link_tx_ready;\n  assign fifo_io_link_rx_valid = mac_io_link_rx_valid;\n  assign fifo_io_link_rx_bits = mac_io_link_rx_bits;\n  assign fifo_io_link_active = mac_io_link_active;\n  assign fifo_io_tx_valid = T_2132;\n  assign fifo_io_tx_bits = T_1693;\n  assign fifo_io_rx_ready = T_2488;\n  assign mac_clock = clock;\n  assign mac_reset = reset;\n  assign mac_io_port_dq_0_i = io_port_dq_0_i;\n  assign mac_io_port_dq_1_i = io_port_dq_1_i;\n  assign mac_io_port_dq_2_i = io_port_dq_2_i;\n  assign mac_io_port_dq_3_i = io_port_dq_3_i;\n  assign mac_io_ctrl_sck_div = ctrl_sck_div;\n  assign mac_io_ctrl_sck_pol = ctrl_sck_pol;\n  assign mac_io_ctrl_sck_pha = ctrl_sck_pha;\n  assign mac_io_ctrl_dla_cssck = ctrl_dla_cssck;\n  assign mac_io_ctrl_dla_sckcs = ctrl_dla_sckcs;\n  assign mac_io_ctrl_dla_intercs = ctrl_dla_intercs;\n  assign mac_io_ctrl_dla_interxfr = ctrl_dla_interxfr;\n  assign mac_io_ctrl_cs_id = ctrl_cs_id;\n  assign mac_io_ctrl_cs_dflt_0 = ctrl_cs_dflt_0;\n  assign mac_io_link_tx_valid = fifo_io_link_tx_valid;\n  assign mac_io_link_tx_bits = fifo_io_link_tx_bits;\n  assign mac_io_link_cnt = fifo_io_link_cnt;\n  assign mac_io_link_fmt_proto = fifo_io_link_fmt_proto;\n  assign mac_io_link_fmt_endian = fifo_io_link_fmt_endian;\n  assign mac_io_link_fmt_iodir = fifo_io_link_fmt_iodir;\n  assign mac_io_link_cs_set = fifo_io_link_cs_set;\n  assign mac_io_link_cs_clear = fifo_io_link_cs_clear;\n  assign mac_io_link_cs_hold = fifo_io_link_cs_hold;\n  assign T_1021_txwm = T_1027;\n  assign T_1021_rxwm = T_1026;\n  assign T_1025 = 2'h0;\n  assign T_1026 = T_1025[0];\n  assign T_1027 = T_1025[1];\n  assign T_1030 = fifo_io_ip_txwm & ie_txwm;\n  assign T_1031 = fifo_io_ip_rxwm & ie_rxwm;\n  assign T_1032 = T_1030 | T_1031;\n  assign T_1036 = fifo_io_tx_ready == 1'h0;\n  assign T_1039 = fifo_io_rx_valid == 1'h0;\n  assign T_1063_ready = T_3435;\n  assign T_1063_valid = io_tl_r_0_a_valid;\n  assign T_1063_bits_read = T_1080;\n  assign T_1063_bits_index = T_1081[9:0];\n  assign T_1063_bits_data = io_tl_r_0_a_bits_data;\n  assign T_1063_bits_mask = io_tl_r_0_a_bits_mask;\n  assign T_1063_bits_extra = T_1084;\n  assign T_1080 = io_tl_r_0_a_bits_opcode == 3'h4;\n  assign T_1081 = io_tl_r_0_a_bits_address[28:2];\n  assign T_1082 = io_tl_r_0_a_bits_address[1:0];\n  assign T_1083 = {T_1082,io_tl_r_0_a_bits_source};\n  assign T_1084 = {T_1083,io_tl_r_0_a_bits_size};\n  assign T_1102_ready = io_tl_r_0_d_ready;\n  assign T_1102_valid = T_3438;\n  assign T_1102_bits_read = T_1138_bits_read;\n  assign T_1102_bits_data = T_4530;\n  assign T_1102_bits_extra = T_1138_bits_extra;\n  assign T_1138_ready = T_3437;\n  assign T_1138_valid = T_3436;\n  assign T_1138_bits_read = T_1063_bits_read;\n  assign T_1138_bits_index = T_1063_bits_index;\n  assign T_1138_bits_data = T_1063_bits_data;\n  assign T_1138_bits_mask = T_1063_bits_mask;\n  assign T_1138_bits_extra = T_1063_bits_extra;\n  assign T_1223 = T_1138_bits_index & 10'h3e0;\n  assign T_1225 = T_1223 == 10'h0;\n  assign T_1231 = T_1138_bits_index ^ 10'h5;\n  assign T_1232 = T_1231 & 10'h3e0;\n  assign T_1234 = T_1232 == 10'h0;\n  assign T_1240 = T_1138_bits_index ^ 10'ha;\n  assign T_1241 = T_1240 & 10'h3e0;\n  assign T_1243 = T_1241 == 10'h0;\n  assign T_1249 = T_1138_bits_index ^ 10'h14;\n  assign T_1250 = T_1249 & 10'h3e0;\n  assign T_1252 = T_1250 == 10'h0;\n  assign T_1258 = T_1138_bits_index ^ 10'h1d;\n  assign T_1259 = T_1258 & 10'h3e0;\n  assign T_1261 = T_1259 == 10'h0;\n  assign T_1267 = T_1138_bits_index ^ 10'h1;\n  assign T_1268 = T_1267 & 10'h3e0;\n  assign T_1270 = T_1268 == 10'h0;\n  assign T_1276 = T_1138_bits_index ^ 10'h6;\n  assign T_1277 = T_1276 & 10'h3e0;\n  assign T_1279 = T_1277 == 10'h0;\n  assign T_1285 = T_1138_bits_index ^ 10'h1c;\n  assign T_1286 = T_1285 & 10'h3e0;\n  assign T_1288 = T_1286 == 10'h0;\n  assign T_1294 = T_1138_bits_index ^ 10'h15;\n  assign T_1295 = T_1294 & 10'h3e0;\n  assign T_1297 = T_1295 == 10'h0;\n  assign T_1303 = T_1138_bits_index ^ 10'h12;\n  assign T_1304 = T_1303 & 10'h3e0;\n  assign T_1306 = T_1304 == 10'h0;\n  assign T_1312 = T_1138_bits_index ^ 10'h10;\n  assign T_1313 = T_1312 & 10'h3e0;\n  assign T_1315 = T_1313 == 10'h0;\n  assign T_1321 = T_1138_bits_index ^ 10'hb;\n  assign T_1322 = T_1321 & 10'h3e0;\n  assign T_1324 = T_1322 == 10'h0;\n  assign T_1330 = T_1138_bits_index ^ 10'h13;\n  assign T_1331 = T_1330 & 10'h3e0;\n  assign T_1333 = T_1331 == 10'h0;\n  assign T_1339 = T_1138_bits_index ^ 10'h4;\n  assign T_1340 = T_1339 & 10'h3e0;\n  assign T_1342 = T_1340 == 10'h0;\n  assign T_1350_0 = T_3510;\n  assign T_1350_1 = T_3610;\n  assign T_1350_2 = T_4155;\n  assign T_1350_3 = T_4163;\n  assign T_1350_4 = T_3910;\n  assign T_1350_5 = T_4175;\n  assign T_1350_6 = T_4183;\n  assign T_1350_7 = T_4191;\n  assign T_1350_8 = T_4199;\n  assign T_1350_9 = T_3630;\n  assign T_1350_10 = T_4211;\n  assign T_1350_11 = T_4219;\n  assign T_1350_12 = T_3930;\n  assign T_1350_13 = T_4232;\n  assign T_1350_14 = T_4244;\n  assign T_1350_15 = T_4256;\n  assign T_1350_16 = T_4269;\n  assign T_1350_17 = T_4285;\n  assign T_1350_18 = T_4301;\n  assign T_1350_19 = T_4317;\n  assign T_1350_20 = T_4331;\n  assign T_1350_21 = T_4339;\n  assign T_1350_22 = T_4348;\n  assign T_1350_23 = T_4360;\n  assign T_1350_24 = T_4372;\n  assign T_1350_25 = T_3590;\n  assign T_1355_0 = T_3516;\n  assign T_1355_1 = T_3616;\n  assign T_1355_2 = T_4157;\n  assign T_1355_3 = T_4165;\n  assign T_1355_4 = T_3916;\n  assign T_1355_5 = T_4177;\n  assign T_1355_6 = T_4185;\n  assign T_1355_7 = T_4193;\n  assign T_1355_8 = T_4201;\n  assign T_1355_9 = T_3636;\n  assign T_1355_10 = T_4213;\n  assign T_1355_11 = T_4221;\n  assign T_1355_12 = T_3936;\n  assign T_1355_13 = T_4235;\n  assign T_1355_14 = T_4247;\n  assign T_1355_15 = T_4259;\n  assign T_1355_16 = T_4273;\n  assign T_1355_17 = T_4289;\n  assign T_1355_18 = T_4305;\n  assign T_1355_19 = T_4321;\n  assign T_1355_20 = T_4333;\n  assign T_1355_21 = T_4341;\n  assign T_1355_22 = T_4351;\n  assign T_1355_23 = T_4363;\n  assign T_1355_24 = T_4375;\n  assign T_1355_25 = T_3596;\n  assign T_1360_0 = 1'h1;\n  assign T_1360_1 = 1'h1;\n  assign T_1360_2 = 1'h1;\n  assign T_1360_3 = 1'h1;\n  assign T_1360_4 = 1'h1;\n  assign T_1360_5 = 1'h1;\n  assign T_1360_6 = 1'h1;\n  assign T_1360_7 = 1'h1;\n  assign T_1360_8 = 1'h1;\n  assign T_1360_9 = 1'h1;\n  assign T_1360_10 = 1'h1;\n  assign T_1360_11 = 1'h1;\n  assign T_1360_12 = 1'h1;\n  assign T_1360_13 = 1'h1;\n  assign T_1360_14 = 1'h1;\n  assign T_1360_15 = 1'h1;\n  assign T_1360_16 = 1'h1;\n  assign T_1360_17 = 1'h1;\n  assign T_1360_18 = 1'h1;\n  assign T_1360_19 = 1'h1;\n  assign T_1360_20 = 1'h1;\n  assign T_1360_21 = 1'h1;\n  assign T_1360_22 = 1'h1;\n  assign T_1360_23 = 1'h1;\n  assign T_1360_24 = 1'h1;\n  assign T_1360_25 = 1'h1;\n  assign T_1365_0 = 1'h1;\n  assign T_1365_1 = 1'h1;\n  assign T_1365_2 = 1'h1;\n  assi"}
{"text": "gn T_1365_3 = 1'h1;\n  assign T_1365_4 = 1'h1;\n  assign T_1365_5 = 1'h1;\n  assign T_1365_6 = 1'h1;\n  assign T_1365_7 = 1'h1;\n  assign T_1365_8 = 1'h1;\n  assign T_1365_9 = 1'h1;\n  assign T_1365_10 = 1'h1;\n  assign T_1365_11 = 1'h1;\n  assign T_1365_12 = 1'h1;\n  assign T_1365_13 = 1'h1;\n  assign T_1365_14 = 1'h1;\n  assign T_1365_15 = 1'h1;\n  assign T_1365_16 = 1'h1;\n  assign T_1365_17 = 1'h1;\n  assign T_1365_18 = 1'h1;\n  assign T_1365_19 = 1'h1;\n  assign T_1365_20 = 1'h1;\n  assign T_1365_21 = 1'h1;\n  assign T_1365_22 = 1'h1;\n  assign T_1365_23 = 1'h1;\n  assign T_1365_24 = 1'h1;\n  assign T_1365_25 = 1'h1;\n  assign T_1370_0 = 1'h1;\n  assign T_1370_1 = 1'h1;\n  assign T_1370_2 = 1'h1;\n  assign T_1370_3 = 1'h1;\n  assign T_1370_4 = 1'h1;\n  assign T_1370_5 = 1'h1;\n  assign T_1370_6 = 1'h1;\n  assign T_1370_7 = 1'h1;\n  assign T_1370_8 = 1'h1;\n  assign T_1370_9 = 1'h1;\n  assign T_1370_10 = 1'h1;\n  assign T_1370_11 = 1'h1;\n  assign T_1370_12 = 1'h1;\n  assign T_1370_13 = 1'h1;\n  assign T_1370_14 = 1'h1;\n  assign T_1370_15 = 1'h1;\n  assign T_1370_16 = 1'h1;\n  assign T_1370_17 = 1'h1;\n  assign T_1370_18 = 1'h1;\n  assign T_1370_19 = 1'h1;\n  assign T_1370_20 = 1'h1;\n  assign T_1370_21 = 1'h1;\n  assign T_1370_22 = 1'h1;\n  assign T_1370_23 = 1'h1;\n  assign T_1370_24 = 1'h1;\n  assign T_1370_25 = 1'h1;\n  assign T_1375_0 = 1'h1;\n  assign T_1375_1 = 1'h1;\n  assign T_1375_2 = 1'h1;\n  assign T_1375_3 = 1'h1;\n  assign T_1375_4 = 1'h1;\n  assign T_1375_5 = 1'h1;\n  assign T_1375_6 = 1'h1;\n  assign T_1375_7 = 1'h1;\n  assign T_1375_8 = 1'h1;\n  assign T_1375_9 = 1'h1;\n  assign T_1375_10 = 1'h1;\n  assign T_1375_11 = 1'h1;\n  assign T_1375_12 = 1'h1;\n  assign T_1375_13 = 1'h1;\n  assign T_1375_14 = 1'h1;\n  assign T_1375_15 = 1'h1;\n  assign T_1375_16 = 1'h1;\n  assign T_1375_17 = 1'h1;\n  assign T_1375_18 = 1'h1;\n  assign T_1375_19 = 1'h1;\n  assign T_1375_20 = 1'h1;\n  assign T_1375_21 = 1'h1;\n  assign T_1375_22 = 1'h1;\n  assign T_1375_23 = 1'h1;\n  assign T_1375_24 = 1'h1;\n  assign T_1375_25 = 1'h1;\n  assign T_1380_0 = T_3520;\n  assign T_1380_1 = T_3620;\n  assign T_1380_2 = T_4159;\n  assign T_1380_3 = T_4167;\n  assign T_1380_4 = T_3920;\n  assign T_1380_5 = T_4179;\n  assign T_1380_6 = T_4187;\n  assign T_1380_7 = T_4195;\n  assign T_1380_8 = T_4203;\n  assign T_1380_9 = T_3640;\n  assign T_1380_10 = T_4215;\n  assign T_1380_11 = T_4223;\n  assign T_1380_12 = T_3940;\n  assign T_1380_13 = T_4238;\n  assign T_1380_14 = T_4250;\n  assign T_1380_15 = T_4262;\n  assign T_1380_16 = T_4277;\n  assign T_1380_17 = T_4293;\n  assign T_1380_18 = T_4309;\n  assign T_1380_19 = T_4325;\n  assign T_1380_20 = T_4335;\n  assign T_1380_21 = T_4343;\n  assign T_1380_22 = T_4354;\n  assign T_1380_23 = T_4366;\n  assign T_1380_24 = T_4378;\n  assign T_1380_25 = T_3600;\n  assign T_1385_0 = T_3526;\n  assign T_1385_1 = T_3626;\n  assign T_1385_2 = T_4161;\n  assign T_1385_3 = T_4169;\n  assign T_1385_4 = T_3926;\n  assign T_1385_5 = T_4181;\n  assign T_1385_6 = T_4189;\n  assign T_1385_7 = T_4197;\n  assign T_1385_8 = T_4205;\n  assign T_1385_9 = T_3646;\n  assign T_1385_10 = T_4217;\n  assign T_1385_11 = T_4225;\n  assign T_1385_12 = T_3946;\n  assign T_1385_13 = T_4241;\n  assign T_1385_14 = T_4253;\n  assign T_1385_15 = T_4265;\n  assign T_1385_16 = T_4281;\n  assign T_1385_17 = T_4297;\n  assign T_1385_18 = T_4313;\n  assign T_1385_19 = T_4329;\n  assign T_1385_20 = T_4337;\n  assign T_1385_21 = T_4345;\n  assign T_1385_22 = T_4357;\n  assign T_1385_23 = T_4369;\n  assign T_1385_24 = T_4381;\n  assign T_1385_25 = T_3606;\n  assign T_1547 = T_1138_bits_mask[0];\n  assign T_1548 = T_1138_bits_mask[1];\n  assign T_1549 = T_1138_bits_mask[2];\n  assign T_1550 = T_1138_bits_mask[3];\n  assign T_1554 = T_1547 ? 8'hff : 8'h0;\n  assign T_1558 = T_1548 ? 8'hff : 8'h0;\n  assign T_1562 = T_1549 ? 8'hff : 8'h0;\n  assign T_1566 = T_1550 ? 8'hff : 8'h0;\n  assign T_1567 = {T_1558,T_1554};\n  assign T_1568 = {T_1566,T_1562};\n  assign T_1569 = {T_1568,T_1567};\n  assign T_1593 = T_1569[11:0];\n  assign T_1597 = ~ T_1593;\n  assign T_1599 = T_1597 == 12'h0;\n  assign T_1612 = T_1385_0 & T_1599;\n  assign T_1613 = T_1138_bits_data[11:0];\n  assign GEN_6 = T_1612 ? T_1613 : ctrl_sck_div;\n  assign T_1633 = T_1569[0];\n  assign T_1637 = ~ T_1633;\n  assign T_1639 = T_1637 == 1'h0;\n  assign T_1652 = T_1385_1 & T_1639;\n  assign T_1653 = T_1138_bits_data[0];\n  assign GEN_7 = T_1652 ? T_1653 : ctrl_cs_dflt_0;\n  assign T_1673 = T_1569[7:0];\n  assign T_1675 = T_1673 != 8'h0;\n  assign T_1677 = ~ T_1673;\n  assign T_1679 = T_1677 == 8'h0;\n  assign T_1692 = T_1385_2 & T_1679;\n  assign T_1693 = T_1138_bits_data[7:0];\n  assign GEN_8 = T_1692 ? T_1693 : ctrl_dla_cssck;\n  assign T_1713 = T_1569[23:16];\n  assign T_1717 = ~ T_1713;\n  assign T_1719 = T_1717 == 8'h0;\n  assign T_1732 = T_1385_3 & T_1719;\n  assign T_1733 = T_1138_bits_data[23:16];\n  assign GEN_9 = T_1732 ? T_1733 : ctrl_dla_sckcs;\n  assign GEN_210 = {{16'd0}, ctrl_dla_sckcs};\n  assign T_1748 = GEN_210 << 16;\n  assign GEN_211 = {{16'd0}, ctrl_dla_cssck};\n  assign T_1752 = GEN_211 | T_1748;\n  assign T_1753 = T_1569[3:0];\n  assign T_1757 = ~ T_1753;\n  assign T_1759 = T_1757 == 4'h0;\n  assign T_1772 = T_1385_4 & T_1759;\n  assign T_1773 = T_1138_bits_data[3:0];\n  assign GEN_10 = T_1772 ? T_1773 : ctrl_wm_tx;\n  assign T_1828 = fifo_io_ip_txwm;\n  assign T_1833 = T_1569[1];\n  assign T_1837 = ~ T_1833;\n  assign T_1839 = T_1837 == 1'h0;\n  assign T_1853 = T_1138_bits_data[1];\n  assign GEN_212 = {{1'd0}, fifo_io_ip_rxwm};\n  assign T_1868 = GEN_212 << 1;\n  assign GEN_213 = {{1'd0}, T_1828};\n  assign T_1872 = GEN_213 | T_1868;\n  assign T_1892 = T_1385_7 & T_1639;\n  assign GEN_11 = T_1892 ? T_1653 : ctrl_sck_pha;\n  assign T_1932 = T_1385_8 & T_1839;\n  assign GEN_12 = T_1932 ? T_1853 : ctrl_sck_pol;\n  assign GEN_214 = {{1'd0}, ctrl_sck_pol};\n  assign T_1948 = GEN_214 << 1;\n  assign GEN_215 = {{1'd0}, ctrl_sck_pha};\n  assign T_1952 = GEN_215 | T_1948;\n  assign T_1953 = T_1569[1:0];\n  assign T_1957 = ~ T_1953;\n  assign T_1959 = T_1957 == 2'h0;\n  assign T_1972 = T_1385_9 & T_1959;\n  assign T_1973 = T_1138_bits_data[1:0];\n  assign GEN_13 = T_1972 ? T_1973 : ctrl_cs_mode;\n  assign T_2012 = T_1385_10 & T_1639;\n  assign GEN_14 = T_2012 ? T_1653 : ie_txwm;\n  assign T_2052 = T_1385_11 & T_1839;\n  assign GEN_15 = T_2052 ? T_1853 : ie_rxwm;\n  assign GEN_216 = {{1'd0}, ie_rxwm};\n  assign T_2068 = GEN_216 << 1;\n  assign GEN_217 = {{1'd0}, ie_txwm};\n  assign T_2072 = GEN_217 | T_2068;\n  assign T_2092 = T_1385_12 & T_1759;\n  assign GEN_16 = T_2092 ? T_1773 : ctrl_wm_rx;\n  assign T_2132 = T_1385_13 & T_1679;\n  assign GEN_218 = {{31'd0}, T_1036};\n  assign T_2228 = GEN_218 << 31;\n  assign T_2252 = T_1385_16 & T_1959;\n  assign GEN_17 = T_2252 ? T_1973 : ctrl_fmt_proto;\n  assign T_2273 = T_1569[2];\n  assign T_2277 = ~ T_2273;\n  assign T_2279 = T_2277 == 1'h0;\n  assign T_2292 = T_1385_17 & T_2279;\n  assign T_2293 = T_1138_bits_data[2];\n  assign GEN_18 = T_2292 ? T_2293 : ctrl_fmt_endian;\n  assign GEN_219 = {{2'd0}, ctrl_fmt_endian};\n  assign T_2308 = GEN_219 << 2;\n  assign GEN_220 = {{1'd0}, ctrl_fmt_proto};\n  assign T_2312 = GEN_220 | T_2308;\n  assign T_2313 = T_1569[3];\n  assign T_2317 = ~ T_2313;\n  assign T_2319 = T_2317 == 1'h0;\n  assign T_2332 = T_1385_18 & T_2319;\n  assign T_2333 = T_1138_bits_data[3];\n  assign GEN_19 = T_2332 ? T_2333 : ctrl_fmt_iodir;\n  assign GEN_221 = {{3'd0}, ctrl_fmt_iodir};\n  assign T_2348 = GEN_221 << 3;\n  assign GEN_222 = {{1'd0}, T_2312};\n  assign T_2352 = GEN_222 | T_2348;\n  assign T_2353 = T_1569[19:16];\n  assign T_2357 = ~ T_2353;\n  assign T_2359 = T_2357 == 4'h0;\n  assign T_2372 = T_1385_19 & T_2359;\n  assign T_2373 = T_1138_bits_data[19:16];\n  assign GEN_20 = T_2372 ? T_2373 : ctrl_fmt_len;\n  assign GEN_223 = {{16'd0}, ctrl_fmt_len};\n  assign T_2388 = GEN_223 << 16;\n  assign GEN_224 = {{16'd0}, T_2352};\n  assign T_2392 = GEN_224 | T_2388;\n  assign T_2412 = T_1385_20 & T_1679;\n  assign GEN_21 = T_2412 ? T_1693 : ctrl_dla_intercs;\n  assign T_2452 = T_1385_21 & T_1719;\n  assign GEN_22 = T_2452 ? T_1733 : ctrl_dla_interxfr;\n  assign GEN_225 = {{16'd0}, ctrl_dla_interxfr};\n  assign T_2468 = GEN_225 << 16;\n  assign GEN_226 = {{16'd0}, ctrl_dla_intercs};\n  assign T_2472 = GEN_226 | T_2468;\n  assign T_2488 = T_1380_22 & T_1675;\n  assign T_2508 = fifo_io_rx_bits;\n  assign T_2552 = {{23'd0}, T_2508};\n  assign GEN_227 = {{31'd0}, T_1039};\n  assign T_2588 = GEN_227 << 31;\n  assign GEN_228 = {{1'd0}, T_2552};\n  assign T_2592 = GEN_228 | T_2588;\n  assign T_2612 = T_1385_25 & T_1639;\n  assign GEN_23 = T_2612 ? T_1653 : ctrl_cs_id;\n  assign T_2634 = T_1225 == 1'h0;\n  assign T_2636 = T_2634 | T_1360_0;\n  assign T_2638 = T_1270 == 1'h0;\n  assign T_2639 = T_1360_8 & T_1360_7;\n  assign T_2641 = T_2638 | T_2639;\n  assign T_2649 = T_1342 == 1'h0;\n  assign T_2651 = T_2649 | T_1360_25;\n  assign T_2653 = T_1234 == 1'h0;\n  assign T_2655 = T_2653 | T_1360_1;\n  assign T_2657 = T_1279 == 1'h0;\n  assign T_2659 = T_2657 | T_1360_9;\n  assign T_2670 = T_1243 == 1'h0;\n  assign T_2671 = T_1360_3 & T_1360_2;\n  assign T_2673 = T_2670 | T_2671;\n  assign T_2675 = T_1324 == 1'h0;\n  assign T_2676 = T_1360_21 & T_1360_20;\n  assign T_2678 = T_2675 | T_2676;\n  assign T_2692 = T_1315 == 1'h0;\n  assign T_2693 = T_1360_19 & T_1360_18;\n  assign T_2694 = T_2693 & T_1360_17;\n  assign T_2695 = T_2694 & T_1360_16;\n  assign T_2697 = T_2692 | T_2695;\n  assign T_2702 = T_1306 == 1'h0;\n  assign T_2703 = T_1360_15 & T_1360_14;\n  assign T_2704 = T_2703 & T_1360_13;\n  assign T_2706 = T_2702 | T_2704;\n  assign T_2708 = T_1333 == 1'h0;\n  assign T_2709 = T_1360_24 & T_1360_23;\n  assign T_2710 = T_2709 & T_1360_22;\n  assign T_2712 = T_2708 | T_2710;\n  assign T_2714 = T_1252 == 1'h0;\n  assign T_2716 = T_2714 | T_1360_4;\n  assign T_2718 = T_1297 == 1'h0;\n  assign T_2720 = T_2718 | T_1360_12;\n  assign T_2740 = T_1288 == 1'h0;\n  assign T_2741 = T_1360_11 & T_1360_10;\n  assign T_2743 = T_2740 | T_2741;\n  assign T_2745 = T_1261 == 1'h0;\n  assign T_2746 = T_1360_6 & T_1360_5;\n  assign T_2748 = T_2745 | T_2746;\n  assign T_2790_0 = T_2636;\n  assign T_2790_1 = T_2641;\n  assign T_2790_2 = 1'h1;\n  assign T_2790_3 = 1'h1;\n  assign T_2790_4 = T_2651;\n  assign T_2790_5 = T_2655;\n  assign T_2790_6 = T_2659;\n  assign T_2790_7 = 1'h1;\n  assign T_2790_8 = 1'h1;\n  assign T_2790_9 = 1'h1;\n  assign T_2790_10 = T_2673;\n  assign T_2790_11 = T_2678;\n  assign T_2790_12 = 1'h1;\n  assign T_2790_13 = 1'h1;\n  assign T_2790_14 = 1'h1;\n  assign T_2790_15 = 1'h1;\n  assign T_2790_16 = T_2697;\n  assign T_2790_17 = 1'h1;\n  assign T_2790_18 = T_2706;\n  assign T_2790_19 = T_2712;\n  assign T_2790_20 = T_2716;\n  assign T_2790_21 = T_2720;\n  assign T_2790_22 = 1'h1;\n  assign T_2790_23 = 1'h1;\n  assign T_2790_24 = 1'h1;\n  assign T_2790_25 = 1'h1;\n  assign T_2790_26 = 1'h1;\n  assign T_2790_27 = 1'h1;\n  assign T_2790_28 = T_2743;\n  assign T_2790_29 = T_2748;\n  assign T_2790_30 = 1'h1;\n  assign T_2790_31 = 1'h1;\n  assign T_2828 = T_2634 | T_1365_0;\n  assign T_2831 = T_1365_8 & T_1365_7;\n  assign T_2833 = T_2638 | T_2831;\n  assign T_2843 = T_2649 | T_1365_25;\n  assign T_2847 = T_2653 | T_1365_1;\n  assign T_2851 = T_2657 | T_1365_9;\n  assign T_2863 = T_1365_3 & T_1365_2;\n  assign T_2865 = T_2670 | T_2863;\n  assign T_2868 = T_1365_21 & T_1365_20;\n  assign T_2870 = T_2675 | T_2868;\n  assign T_2885 = T_1365_19 & T_1365_18;\n  assign T_2886 = T_2885 & T_1365_17;\n  assign T_2887 = T_2886 & T_1365_16;\n  assign T_2889 = T_2692 | T_2887;\n  assign T_2895 = T_1365_15 & T_1365_14;\n  assign T_2896 = T_2895 & T_1365_13;\n  assign T_2898 = T_2702 | T_2896;\n  assign T_2901 = T_1365_24 & T_1365_23;\n  assign T_2902 = T_2901 & T_1365_22;\n  assign T_2904 = T_2708 | T_2902;\n  assign T_2908 = T_2714 | T_1365_4;\n  assign T_2912 = T_2718 | T_1365_12;\n  assign T_2933 = T_1365_11 & T_1365_10;\n  assign T_2935 = T_2740 | T_2933;\n  assign T_2938 = T_1365_6 & T_1365_5;\n  assign T_2940 = T_2745 | T_2938;\n  assign T_2982_0 = T_2828;\n  assign T_2982_1 = T_2833;\n  assign T_2982_2 = 1'h1;\n  assign T_2982_3 = 1'h1;\n  assign T_2982_4 = T_2843;\n  assign T_2982_5 = T_2847;\n  assign T_2982_6 = T_2851;\n  assign T_2982_7 = 1'h1;\n  assign T_2982_8 = 1'h1;\n  assign T_2982_9 = 1'h1;\n  assign T_2982_10 = T_2865;\n  assign T_2982_11 = T_2870;\n  assign T_2982_12 = 1'h1;\n  assign T_2982_13 = 1'h1;\n  assign T_2982_14 = 1'h1;\n  assign T_2982_15 = 1'h1;\n  assign T_2982_16 = T_2889;\n  assign T_2982_17 = 1'h1;\n  assign T_2982_18 = T_2898;\n  assign T_2982_19 = T_2904;\n  assign T_2982_20 = T_2908;\n  assign T_2982_21 = T_2912;\n  assign T_2982_22 = 1'h1;\n  assign T_2982_23 = 1'h1;\n  assign T_2982_24 = 1'h1;\n  assign T_2982_25 = 1'h1;\n  assign T_2982_26 = 1'h1;\n  assign T_2982_27 = 1'h1;\n  assign T_2982_28 = T_2935;\n  assign T_2982_29 = T_2940;\n  assign T_2982_30 = 1'h1;\n  assign T_2982_31 = 1'h1;\n  assign T_3020 = T_2634 | T_1370_0;\n  assign T_3023 = T_1370_8 & T_1370_7;\n  assign T_3025 = T_2638 | T_3023;\n  assign T_3035 = T_2649 | T_1370_25;\n  assign T_3039 = T_2653 | T_1370_1;\n  assign T_3043 = T_2657 | T_1370_9;\n  assign T_3055 = T_1370_3 & T_1370_2;\n  assign T_3057 = T_2670 | T_3055;\n  assign T_3060 = T_1370_21 & T_1370_20;\n  assign T_3062 = T_2675 | T_3060;\n  assign T_3077 = T_1370_19 & T_1370_18;\n  assign T_3078 = T_3077 & T_1370_17;\n  assign T_3079 = T_3078 & T_1370_16;\n  assign T_3081 = T_2692 | T_3079;\n  assign T_3087 = T_1370_15 & T_1370_14;\n  assign T_3088 = T_3087 & T_1370_13;\n  assign T_3090 = T_2702 | T_3088;\n  assign T_3093 = T_1370_24 & T_1370_23;\n  assign T_3094 = T_3093 & T_1370_22;\n  assign T_3096 = T_2708 | T_3094;\n  assign T_3100 = T_2714 | T_1370_4;\n  assign T_3104 = T_2718 | T_1370_12;\n  assign T_3125 = T_1370_11 & T_1370_10;\n  assign T_3127 = T_2740 | T_3125;\n  assign T_3130 = T_1370_6 & T_1370_5;\n  assign T_3132 = T_2745 | T_3130;\n  assign T_3174_0 = T_3020;\n  assign T_3174_1 = T_3025;\n  assign T_3174_2 = 1'h1;\n  assign T_3174_3 = 1'h1;\n  assign T_3174_4 = T_3035;\n  assign T_3174_5 = T_3039;\n  assign T_3174_6 = T_3043;\n  assign T_3174_7 = 1'h1;\n  assign T_3174_8 = 1'h1;\n  assign T_3174_9 = 1'h1;\n  assign T_3174_10 = T_3057;\n  assign T_3174_11 = T_3062;\n  assign T_3174_12 = 1'h1;\n  assign T_3174_13 = 1'h1;\n  assign T_3174_14 = 1'h1;\n  assign T_3174_15 = 1'h1;\n  assign T_3174_16 = T_3081;\n  assign T_3174_17 = 1'h1;\n  assign T_3174_18 = T_3090;\n  assign T_3174_19 = T_3096;\n  assign T_3174_20 = T_3100;\n  assign T_3174_21 = T_3104;\n  assign T_3174_22 = 1'h1;\n  assign T_3174_23 = 1'h1;\n  assign T_3174_24 = 1'h1;\n  assign T_3174_25 = 1'h1;\n  assign T_3174_26 = 1'h1;\n  assign T_3174_27 = 1'h1;\n  assign T_3174_28 = T_3127;\n  assign T_3174_29 = T_3132;\n  assign T_3174_30 = 1'h1;\n  assign T_3174_31 = 1'h1;\n  assign T_3212 = T_2634 | T_1375_0;\n  assign T_3215 = T_1375_8 & T_1375_7;\n  assign T_3217 = T_2638 | T_3215;\n  assign T_3227 = T_2649 | T_1375_25;\n  assign T_3231 = T_2653 | T_1375_1;\n  assign T_3235 = T_2657 | T_1375_9;\n  assign T_3247 = T_1375_3 & T_1375_2;\n  assign T_3249 = T_2670 | T_3247;\n  assign T_3252 = T_1375_21 & T_1375_20;\n  assign T_3254 = T_2675 | T_3252;\n  assign T_3269 = T_1375_19 & T_1375_18;\n  assign T_3270 = T_3269 & T_1375_17;\n  assign T_3271 = T_3270 & T_1375_16;\n  assign T_3273 = T_2692 | T_3271;\n  assign T_3279 = T_1375_15 & T_1375_14;\n  assign T_3280 = T_3279 & T_1375_13;\n  assign T_3282 = T_2702 | T_3280;\n  assign T_3285 = T_1375_24 & T_1375_23;\n  assign T_3286 = T_3285 & T_1375_22;\n  assign T_3288 = T_2708 | T_3286;\n  assign T_3292 = T_2714 | T_1375_4;\n  assign T_3296 = T_2718 | T_1375_12;\n  assign T_3317 = T_1375_11 & T_1375_10;\n  assign T_3319 = T_2740 | T_3317;\n  assign T_3322 = T_1375_6 & T_1375_5;\n  assign T_3324 = T_2745 | T_3322;\n  assign T_3366_0 = T_3212;\n  assign T_3366_1 = T_3217;\n  assign T_3366_2 = 1'h1;\n  assign T_3366_3 = 1'h1;\n  assign T_3366_4 = T_3227;\n  assign T_3366_5 = T_3231;\n  assign T_3366_6 = T_3235;\n  assign T_3366_7 = 1'h1;\n  assign T_3366_8 = 1'h1;\n  assign T_3366_9 = 1'h1;\n  assign T_3366_10 = T_3249;\n  assign T_3366_11 = T_3254;\n  assign T_3366_12 = 1'h1;\n  assign T_3366_13 = 1'h1;\n  assign T_3366_14 = 1'h1;\n  assign T_3366_15 = 1'h1;\n  assign T_3366_16 = T_3273;\n  assign T_3366_17 = 1'h1;\n  assign T_3366_18 = T_3282;\n  assign T_3366_19 = T_3288;\n  assign T_3366_20 = T_3292;\n  assign T_3366_21 = T_3296;\n  assign T_3366_22 = 1'h1;\n  assign T_3366_23 = 1'h1;\n  assign T_3366_24 = 1'h1;\n  assign T_3366_25 = 1'h1;\n  assign T_3366_26 = 1'h1;\n  assign T_3366_27 = 1'h1;\n  assign T_3366_28 = T_3319;\n  assign T_3366_29 = T_3324;\n  assign T_3366_30 = 1'h1;\n  assign T_3366_31 = 1'h1;\n  assign T_3401 = T_1138_bits_index[0];\n  assign T_3402 = T_1138_bits_index[1];\n  assign T_3403 = T_1138_bits_index[2];\n  assign T_3404 = T_1138_bits_index[3];\n  assign T_3405 = T_1138_bits_index[4];\n  assign T_3411 = {T_3402,T_3401};\n  assign T_3412 = {T_3405,T_3404};\n  assign T_3413 = {T_3412,T_3403};\n  assign T_3414 = {T_3413,T_3411};\n  assign GEN_0 = GEN_54;\n  assign GEN_24 = 5'h1 == T_3414 ? T_2790_1 : T_2790_0;\n  assign GEN_25 = 5'h2 == T_3414 ? T_2790_2 : GEN_24;\n  assign GEN_26 = 5'h3 == T_3414 ? T_2790_3 : GEN_25;\n  assign GEN_27 = 5'h4 == T_3414 ? T_2790_4 : GEN_26;\n  assign GEN_28 = 5'h5 == T_3414 ? T_2790_5 : GEN_27;\n  assign GEN_29 = 5'h6 == T_3414 ? T_2790_6 : GEN_28;\n  assign GEN_30 = 5'h7 == T_3414 ? T_2790_7 : GEN_29;\n  assign GEN_31 = 5'h8 == T_3414 ? T_2790_8 : GEN_30;\n  assign GEN_32 = 5'h9 == T_3414 ? T_2790_9 : GEN_31;\n  assign GEN_33 = 5'ha == T_3414 ? T_2790_10 : GEN_32;\n  assign GEN_34 = 5'hb == T_3414 ? T_2790_11 : GEN_33;\n  assign GEN_35 = 5'hc == T_3414 ? T_2790_12 : GEN_34;\n  assign GEN_36 = 5'hd == T_3414 ? T_2790_13 : GEN_35;\n  assign GEN_37 = 5'he == T_3414 ? T_2790_14 : GEN_36;\n  assign GEN_38 = 5'hf == T_3414 ? T_2790_15 : GEN_37;\n  assign GEN_39 = 5'h10 == T_3414 ? T_2790_16 : GEN_38;\n  assign GEN_40 = 5'h11 == T_3414 ? T_2790_17 : GEN_39;\n  assign GEN_41 = 5'h12 == T_3414 ? T_2790_18 : GEN_40;\n  assign GEN_42 = 5'h13 == T_3414 ? T_2790_19 : GEN_41;\n  assign GEN_43 = 5'h14 == T_3414 ? T_2790_20 : GEN_42;\n  assign GEN_44 = 5'h15 == T_3414 ? T_2790_21 : GEN_43;\n  assign GEN_45 = 5'h16 == T_3414 ? T_2790_22 : GEN_44;\n  assign GEN_46 = 5'h17 == T_3414 ? T_2790_23 : GEN_45;\n  assign GEN_47 = 5'h18 == T_3414 ? T_2790_24 : GEN_46;\n  assign GEN_48 = 5'h19 == T_3414 ? T_2790_25 : GEN_47;\n  assign GEN_49 = 5'h1a == T_3414 ? T_2790_26 : GEN_48;\n  assign GEN_50 = 5'h1b == T_3414 ? T_2790_27 : GEN_49;\n  assign GEN_51 = 5'h1c == T_3414 ? T_2790_28 : GEN_50;\n  assign GEN_52 = 5'h1d == T_3414 ? T_2790_29 : GEN_51;\n  assign GEN_53 = 5'h1e == T_3414 ? T_2790_30 : GEN_52;\n  assign GEN_54 = 5'h1f == T_3414 ? T_2790_31 : GEN_53;\n  assign GEN_1 = GEN_85;\n  assign GEN_55 = 5'h1 == T_3414 ? T_2982_1 : T_2982_0;\n  assign GEN_56 = 5'h2 == T_3414 ? T_2982_2 : GEN_55;\n  assign GEN_57 = 5'h3 == T_3414 ? T_2982_3 : GEN_56;\n  assign GEN_58 = 5'h4 == T_3414 ? T_2982_4 : GEN_57;\n  assign GEN_59 = 5'h5 == T_3414 ? T_2982_5 : GEN_58;\n  assign GEN_60 = 5'h6 == T_3414 ? T_2982_6 : GEN_59;\n  assign GEN_61 = 5'h7 == T_3414 ? T_2982_7 : GEN_60;\n  assign GEN_62 = 5'h8 == T_3414 ? T_2982_8 : GEN_61;\n  assign GEN_63 = 5'h9 == T_3414 ? T_2982_9 : GEN_62;\n  assign GEN_64 = 5'ha == T_3414 ? T_2982_10 : GEN_63;\n  assign GEN_65 = 5'hb == T_3414 ? T_2982_11 : GEN_64;\n  assign GEN_66 = 5'hc == T_3414 ? T_2982_12 : GEN_65;\n  assign GEN_67 = 5'hd == T_3414 ? T_2982_13 : GEN_66;\n  assign GEN_68 = 5'he == T_3414 ? T_2982_14 : GEN_67;\n  assign GEN_69 = 5'hf == T_3414 ? T_2982_15 : GEN_68;\n  assign GEN_70 = 5'h10 == T_3414 ? T_2982_16 : GEN_69;\n  assign GEN_71 = 5'h11 == T_3414 ? T_2982_17 : GEN_70;\n  assign GEN_72 = 5'h12 == T_3414 ? T_2982_18 : GEN_71;\n  assign GEN_73 = 5'h13 == T_3414 ? T_2982_19 : GEN_72;\n  assign GEN_74 = 5'h14 == T_3414 ? T_2982_20 : GEN_73;\n  assign GEN_75 = 5'h15 == T_3414 ? T_2982_21 : GEN_74;\n  assign GEN_76 = 5'h16 == T_3414 ? T_2982_22 : GEN_75;\n  assign GEN_77 = 5'h17 == T_3414 ? T_2982_23 : GEN_76;\n  assign GEN_78 = 5'h18 == T_3414 ? T_2982_24 : GEN_77;\n  assign GEN_79 = 5'h19 == T_3414 ? T_2982_25 : GEN_78;\n  assign GEN_80 = 5'h1a == T_3414 ? T_2982_26 : GEN_79;\n  assign GEN_81 = 5'h1b == T_3414 ? T_2982_27 : GEN_80;\n  as"}
{"text": "sign GEN_82 = 5'h1c == T_3414 ? T_2982_28 : GEN_81;\n  assign GEN_83 = 5'h1d == T_3414 ? T_2982_29 : GEN_82;\n  assign GEN_84 = 5'h1e == T_3414 ? T_2982_30 : GEN_83;\n  assign GEN_85 = 5'h1f == T_3414 ? T_2982_31 : GEN_84;\n  assign T_3431 = T_1138_bits_read ? GEN_0 : GEN_1;\n  assign GEN_2 = GEN_116;\n  assign GEN_86 = 5'h1 == T_3414 ? T_3174_1 : T_3174_0;\n  assign GEN_87 = 5'h2 == T_3414 ? T_3174_2 : GEN_86;\n  assign GEN_88 = 5'h3 == T_3414 ? T_3174_3 : GEN_87;\n  assign GEN_89 = 5'h4 == T_3414 ? T_3174_4 : GEN_88;\n  assign GEN_90 = 5'h5 == T_3414 ? T_3174_5 : GEN_89;\n  assign GEN_91 = 5'h6 == T_3414 ? T_3174_6 : GEN_90;\n  assign GEN_92 = 5'h7 == T_3414 ? T_3174_7 : GEN_91;\n  assign GEN_93 = 5'h8 == T_3414 ? T_3174_8 : GEN_92;\n  assign GEN_94 = 5'h9 == T_3414 ? T_3174_9 : GEN_93;\n  assign GEN_95 = 5'ha == T_3414 ? T_3174_10 : GEN_94;\n  assign GEN_96 = 5'hb == T_3414 ? T_3174_11 : GEN_95;\n  assign GEN_97 = 5'hc == T_3414 ? T_3174_12 : GEN_96;\n  assign GEN_98 = 5'hd == T_3414 ? T_3174_13 : GEN_97;\n  assign GEN_99 = 5'he == T_3414 ? T_3174_14 : GEN_98;\n  assign GEN_100 = 5'hf == T_3414 ? T_3174_15 : GEN_99;\n  assign GEN_101 = 5'h10 == T_3414 ? T_3174_16 : GEN_100;\n  assign GEN_102 = 5'h11 == T_3414 ? T_3174_17 : GEN_101;\n  assign GEN_103 = 5'h12 == T_3414 ? T_3174_18 : GEN_102;\n  assign GEN_104 = 5'h13 == T_3414 ? T_3174_19 : GEN_103;\n  assign GEN_105 = 5'h14 == T_3414 ? T_3174_20 : GEN_104;\n  assign GEN_106 = 5'h15 == T_3414 ? T_3174_21 : GEN_105;\n  assign GEN_107 = 5'h16 == T_3414 ? T_3174_22 : GEN_106;\n  assign GEN_108 = 5'h17 == T_3414 ? T_3174_23 : GEN_107;\n  assign GEN_109 = 5'h18 == T_3414 ? T_3174_24 : GEN_108;\n  assign GEN_110 = 5'h19 == T_3414 ? T_3174_25 : GEN_109;\n  assign GEN_111 = 5'h1a == T_3414 ? T_3174_26 : GEN_110;\n  assign GEN_112 = 5'h1b == T_3414 ? T_3174_27 : GEN_111;\n  assign GEN_113 = 5'h1c == T_3414 ? T_3174_28 : GEN_112;\n  assign GEN_114 = 5'h1d == T_3414 ? T_3174_29 : GEN_113;\n  assign GEN_115 = 5'h1e == T_3414 ? T_3174_30 : GEN_114;\n  assign GEN_116 = 5'h1f == T_3414 ? T_3174_31 : GEN_115;\n  assign GEN_3 = GEN_147;\n  assign GEN_117 = 5'h1 == T_3414 ? T_3366_1 : T_3366_0;\n  assign GEN_118 = 5'h2 == T_3414 ? T_3366_2 : GEN_117;\n  assign GEN_119 = 5'h3 == T_3414 ? T_3366_3 : GEN_118;\n  assign GEN_120 = 5'h4 == T_3414 ? T_3366_4 : GEN_119;\n  assign GEN_121 = 5'h5 == T_3414 ? T_3366_5 : GEN_120;\n  assign GEN_122 = 5'h6 == T_3414 ? T_3366_6 : GEN_121;\n  assign GEN_123 = 5'h7 == T_3414 ? T_3366_7 : GEN_122;\n  assign GEN_124 = 5'h8 == T_3414 ? T_3366_8 : GEN_123;\n  assign GEN_125 = 5'h9 == T_3414 ? T_3366_9 : GEN_124;\n  assign GEN_126 = 5'ha == T_3414 ? T_3366_10 : GEN_125;\n  assign GEN_127 = 5'hb == T_3414 ? T_3366_11 : GEN_126;\n  assign GEN_128 = 5'hc == T_3414 ? T_3366_12 : GEN_127;\n  assign GEN_129 = 5'hd == T_3414 ? T_3366_13 : GEN_128;\n  assign GEN_130 = 5'he == T_3414 ? T_3366_14 : GEN_129;\n  assign GEN_131 = 5'hf == T_3414 ? T_3366_15 : GEN_130;\n  assign GEN_132 = 5'h10 == T_3414 ? T_3366_16 : GEN_131;\n  assign GEN_133 = 5'h11 == T_3414 ? T_3366_17 : GEN_132;\n  assign GEN_134 = 5'h12 == T_3414 ? T_3366_18 : GEN_133;\n  assign GEN_135 = 5'h13 == T_3414 ? T_3366_19 : GEN_134;\n  assign GEN_136 = 5'h14 == T_3414 ? T_3366_20 : GEN_135;\n  assign GEN_137 = 5'h15 == T_3414 ? T_3366_21 : GEN_136;\n  assign GEN_138 = 5'h16 == T_3414 ? T_3366_22 : GEN_137;\n  assign GEN_139 = 5'h17 == T_3414 ? T_3366_23 : GEN_138;\n  assign GEN_140 = 5'h18 == T_3414 ? T_3366_24 : GEN_139;\n  assign GEN_141 = 5'h19 == T_3414 ? T_3366_25 : GEN_140;\n  assign GEN_142 = 5'h1a == T_3414 ? T_3366_26 : GEN_141;\n  assign GEN_143 = 5'h1b == T_3414 ? T_3366_27 : GEN_142;\n  assign GEN_144 = 5'h1c == T_3414 ? T_3366_28 : GEN_143;\n  assign GEN_145 = 5'h1d == T_3414 ? T_3366_29 : GEN_144;\n  assign GEN_146 = 5'h1e == T_3414 ? T_3366_30 : GEN_145;\n  assign GEN_147 = 5'h1f == T_3414 ? T_3366_31 : GEN_146;\n  assign T_3434 = T_1138_bits_read ? GEN_2 : GEN_3;\n  assign T_3435 = T_1138_ready & T_3431;\n  assign T_3436 = T_1063_valid & T_3431;\n  assign T_3437 = T_1102_ready & T_3434;\n  assign T_3438 = T_1138_valid & T_3434;\n  assign T_3440 = 32'h1 << T_3414;\n  assign T_3441 = {T_1270,T_1225};\n  assign T_3443 = {2'h3,T_3441};\n  assign T_3444 = {T_1234,T_1342};\n  assign T_3445 = {1'h1,T_1279};\n  assign T_3446 = {T_3445,T_3444};\n  assign T_3447 = {T_3446,T_3443};\n  assign T_3449 = {T_1324,T_1243};\n  assign T_3450 = {T_3449,2'h3};\n  assign T_3454 = {4'hf,T_3450};\n  assign T_3455 = {T_3454,T_3447};\n  assign T_3456 = {1'h1,T_1315};\n  assign T_3457 = {T_1333,T_1306};\n  assign T_3458 = {T_3457,T_3456};\n  assign T_3459 = {T_1297,T_1252};\n  assign T_3461 = {2'h3,T_3459};\n  assign T_3462 = {T_3461,T_3458};\n  assign T_3466 = {T_1261,T_1288};\n  assign T_3468 = {2'h3,T_3466};\n  assign T_3469 = {T_3468,4'hf};\n  assign T_3470 = {T_3469,T_3462};\n  assign T_3471 = {T_3470,T_3455};\n  assign T_3472 = T_3440 & T_3471;\n  assign T_3507 = T_1063_valid & T_1138_ready;\n  assign T_3508 = T_3507 & T_1138_bits_read;\n  assign T_3509 = T_3472[0];\n  assign T_3510 = T_3508 & T_3509;\n  assign T_3513 = T_1138_bits_read == 1'h0;\n  assign T_3514 = T_3507 & T_3513;\n  assign T_3516 = T_3514 & T_3509;\n  assign T_3517 = T_1138_valid & T_1102_ready;\n  assign T_3518 = T_3517 & T_1138_bits_read;\n  assign T_3520 = T_3518 & T_3509;\n  assign T_3524 = T_3517 & T_3513;\n  assign T_3526 = T_3524 & T_3509;\n  assign T_3529 = T_3472[1];\n  assign T_3530 = T_3508 & T_3529;\n  assign T_3536 = T_3514 & T_3529;\n  assign T_3540 = T_3518 & T_3529;\n  assign T_3546 = T_3524 & T_3529;\n  assign T_3589 = T_3472[4];\n  assign T_3590 = T_3508 & T_3589;\n  assign T_3596 = T_3514 & T_3589;\n  assign T_3600 = T_3518 & T_3589;\n  assign T_3606 = T_3524 & T_3589;\n  assign T_3609 = T_3472[5];\n  assign T_3610 = T_3508 & T_3609;\n  assign T_3616 = T_3514 & T_3609;\n  assign T_3620 = T_3518 & T_3609;\n  assign T_3626 = T_3524 & T_3609;\n  assign T_3629 = T_3472[6];\n  assign T_3630 = T_3508 & T_3629;\n  assign T_3636 = T_3514 & T_3629;\n  assign T_3640 = T_3518 & T_3629;\n  assign T_3646 = T_3524 & T_3629;\n  assign T_3709 = T_3472[10];\n  assign T_3710 = T_3508 & T_3709;\n  assign T_3716 = T_3514 & T_3709;\n  assign T_3720 = T_3518 & T_3709;\n  assign T_3726 = T_3524 & T_3709;\n  assign T_3729 = T_3472[11];\n  assign T_3730 = T_3508 & T_3729;\n  assign T_3736 = T_3514 & T_3729;\n  assign T_3740 = T_3518 & T_3729;\n  assign T_3746 = T_3524 & T_3729;\n  assign T_3829 = T_3472[16];\n  assign T_3830 = T_3508 & T_3829;\n  assign T_3836 = T_3514 & T_3829;\n  assign T_3840 = T_3518 & T_3829;\n  assign T_3846 = T_3524 & T_3829;\n  assign T_3869 = T_3472[18];\n  assign T_3870 = T_3508 & T_3869;\n  assign T_3876 = T_3514 & T_3869;\n  assign T_3880 = T_3518 & T_3869;\n  assign T_3886 = T_3524 & T_3869;\n  assign T_3889 = T_3472[19];\n  assign T_3890 = T_3508 & T_3889;\n  assign T_3896 = T_3514 & T_3889;\n  assign T_3900 = T_3518 & T_3889;\n  assign T_3906 = T_3524 & T_3889;\n  assign T_3909 = T_3472[20];\n  assign T_3910 = T_3508 & T_3909;\n  assign T_3916 = T_3514 & T_3909;\n  assign T_3920 = T_3518 & T_3909;\n  assign T_3926 = T_3524 & T_3909;\n  assign T_3929 = T_3472[21];\n  assign T_3930 = T_3508 & T_3929;\n  assign T_3936 = T_3514 & T_3929;\n  assign T_3940 = T_3518 & T_3929;\n  assign T_3946 = T_3524 & T_3929;\n  assign T_4069 = T_3472[28];\n  assign T_4070 = T_3508 & T_4069;\n  assign T_4076 = T_3514 & T_4069;\n  assign T_4080 = T_3518 & T_4069;\n  assign T_4086 = T_3524 & T_4069;\n  assign T_4089 = T_3472[29];\n  assign T_4090 = T_3508 & T_4089;\n  assign T_4096 = T_3514 & T_4089;\n  assign T_4100 = T_3518 & T_4089;\n  assign T_4106 = T_3524 & T_4089;\n  assign T_4155 = T_3710 & T_1360_3;\n  assign T_4157 = T_3716 & T_1365_3;\n  assign T_4159 = T_3720 & T_1370_3;\n  assign T_4161 = T_3726 & T_1375_3;\n  assign T_4163 = T_3710 & T_1360_2;\n  assign T_4165 = T_3716 & T_1365_2;\n  assign T_4167 = T_3720 & T_1370_2;\n  assign T_4169 = T_3726 & T_1375_2;\n  assign T_4175 = T_4090 & T_1360_6;\n  assign T_4177 = T_4096 & T_1365_6;\n  assign T_4179 = T_4100 & T_1370_6;\n  assign T_4181 = T_4106 & T_1375_6;\n  assign T_4183 = T_4090 & T_1360_5;\n  assign T_4185 = T_4096 & T_1365_5;\n  assign T_4187 = T_4100 & T_1370_5;\n  assign T_4189 = T_4106 & T_1375_5;\n  assign T_4191 = T_3530 & T_1360_8;\n  assign T_4193 = T_3536 & T_1365_8;\n  assign T_4195 = T_3540 & T_1370_8;\n  assign T_4197 = T_3546 & T_1375_8;\n  assign T_4199 = T_3530 & T_1360_7;\n  assign T_4201 = T_3536 & T_1365_7;\n  assign T_4203 = T_3540 & T_1370_7;\n  assign T_4205 = T_3546 & T_1375_7;\n  assign T_4211 = T_4070 & T_1360_11;\n  assign T_4213 = T_4076 & T_1365_11;\n  assign T_4215 = T_4080 & T_1370_11;\n  assign T_4217 = T_4086 & T_1375_11;\n  assign T_4219 = T_4070 & T_1360_10;\n  assign T_4221 = T_4076 & T_1365_10;\n  assign T_4223 = T_4080 & T_1370_10;\n  assign T_4225 = T_4086 & T_1375_10;\n  assign T_4231 = T_3870 & T_1360_15;\n  assign T_4232 = T_4231 & T_1360_14;\n  assign T_4234 = T_3876 & T_1365_15;\n  assign T_4235 = T_4234 & T_1365_14;\n  assign T_4237 = T_3880 & T_1370_15;\n  assign T_4238 = T_4237 & T_1370_14;\n  assign T_4240 = T_3886 & T_1375_15;\n  assign T_4241 = T_4240 & T_1375_14;\n  assign T_4244 = T_4231 & T_1360_13;\n  assign T_4247 = T_4234 & T_1365_13;\n  assign T_4250 = T_4237 & T_1370_13;\n  assign T_4253 = T_4240 & T_1375_13;\n  assign T_4255 = T_3870 & T_1360_14;\n  assign T_4256 = T_4255 & T_1360_13;\n  assign T_4258 = T_3876 & T_1365_14;\n  assign T_4259 = T_4258 & T_1365_13;\n  assign T_4261 = T_3880 & T_1370_14;\n  assign T_4262 = T_4261 & T_1370_13;\n  assign T_4264 = T_3886 & T_1375_14;\n  assign T_4265 = T_4264 & T_1375_13;\n  assign T_4267 = T_3830 & T_1360_19;\n  assign T_4268 = T_4267 & T_1360_18;\n  assign T_4269 = T_4268 & T_1360_17;\n  assign T_4271 = T_3836 & T_1365_19;\n  assign T_4272 = T_4271 & T_1365_18;\n  assign T_4273 = T_4272 & T_1365_17;\n  assign T_4275 = T_3840 & T_1370_19;\n  assign T_4276 = T_4275 & T_1370_18;\n  assign T_4277 = T_4276 & T_1370_17;\n  assign T_4279 = T_3846 & T_1375_19;\n  assign T_4280 = T_4279 & T_1375_18;\n  assign T_4281 = T_4280 & T_1375_17;\n  assign T_4285 = T_4268 & T_1360_16;\n  assign T_4289 = T_4272 & T_1365_16;\n  assign T_4293 = T_4276 & T_1370_16;\n  assign T_4297 = T_4280 & T_1375_16;\n  assign T_4300 = T_4267 & T_1360_17;\n  assign T_4301 = T_4300 & T_1360_16;\n  assign T_4304 = T_4271 & T_1365_17;\n  assign T_4305 = T_4304 & T_1365_16;\n  assign T_4308 = T_4275 & T_1370_17;\n  assign T_4309 = T_4308 & T_1370_16;\n  assign T_4312 = T_4279 & T_1375_17;\n  assign T_4313 = T_4312 & T_1375_16;\n  assign T_4315 = T_3830 & T_1360_18;\n  assign T_4316 = T_4315 & T_1360_17;\n  assign T_4317 = T_4316 & T_1360_16;\n  assign T_4319 = T_3836 & T_1365_18;\n  assign T_4320 = T_4319 & T_1365_17;\n  assign T_4321 = T_4320 & T_1365_16;\n  assign T_4323 = T_3840 & T_1370_18;\n  assign T_4324 = T_4323 & T_1370_17;\n  assign T_4325 = T_4324 & T_1370_16;\n  assign T_4327 = T_3846 & T_1375_18;\n  assign T_4328 = T_4327 & T_1375_17;\n  assign T_4329 = T_4328 & T_1375_16;\n  assign T_4331 = T_3730 & T_1360_21;\n  assign T_4333 = T_3736 & T_1365_21;\n  assign T_4335 = T_3740 & T_1370_21;\n  assign T_4337 = T_3746 & T_1375_21;\n  assign T_4339 = T_3730 & T_1360_20;\n  assign T_4341 = T_3736 & T_1365_20;\n  assign T_4343 = T_3740 & T_1370_20;\n  assign T_4345 = T_3746 & T_1375_20;\n  assign T_4347 = T_3890 & T_1360_24;\n  assign T_4348 = T_4347 & T_1360_23;\n  assign T_4350 = T_3896 & T_1365_24;\n  assign T_4351 = T_4350 & T_1365_23;\n  assign T_4353 = T_3900 & T_1370_24;\n  assign T_4354 = T_4353 & T_1370_23;\n  assign T_4356 = T_3906 & T_1375_24;\n  assign T_4357 = T_4356 & T_1375_23;\n  assign T_4360 = T_4347 & T_1360_22;\n  assign T_4363 = T_4350 & T_1365_22;\n  assign T_4366 = T_4353 & T_1370_22;\n  assign T_4369 = T_4356 & T_1375_22;\n  assign T_4371 = T_3890 & T_1360_23;\n  assign T_4372 = T_4371 & T_1360_22;\n  assign T_4374 = T_3896 & T_1365_23;\n  assign T_4375 = T_4374 & T_1365_22;\n  assign T_4377 = T_3900 & T_1370_23;\n  assign T_4378 = T_4377 & T_1370_22;\n  assign T_4380 = T_3906 & T_1375_23;\n  assign T_4381 = T_4380 & T_1375_22;\n  assign T_4422_0 = T_1225;\n  assign T_4422_1 = T_1270;\n  assign T_4422_2 = 1'h1;\n  assign T_4422_3 = 1'h1;\n  assign T_4422_4 = T_1342;\n  assign T_4422_5 = T_1234;\n  assign T_4422_6 = T_1279;\n  assign T_4422_7 = 1'h1;\n  assign T_4422_8 = 1'h1;\n  assign T_4422_9 = 1'h1;\n  assign T_4422_10 = T_1243;\n  assign T_4422_11 = T_1324;\n  assign T_4422_12 = 1'h1;\n  assign T_4422_13 = 1'h1;\n  assign T_4422_14 = 1'h1;\n  assign T_4422_15 = 1'h1;\n  assign T_4422_16 = T_1315;\n  assign T_4422_17 = 1'h1;\n  assign T_4422_18 = T_1306;\n  assign T_4422_19 = T_1333;\n  assign T_4422_20 = T_1252;\n  assign T_4422_21 = T_1297;\n  assign T_4422_22 = 1'h1;\n  assign T_4422_23 = 1'h1;\n  assign T_4422_24 = 1'h1;\n  assign T_4422_25 = 1'h1;\n  assign T_4422_26 = 1'h1;\n  assign T_4422_27 = 1'h1;\n  assign T_4422_28 = T_1288;\n  assign T_4422_29 = T_1261;\n  assign T_4422_30 = 1'h1;\n  assign T_4422_31 = 1'h1;\n  assign T_4493_0 = {{20'd0}, ctrl_sck_div};\n  assign T_4493_1 = {{30'd0}, T_1952};\n  assign T_4493_2 = 32'h0;\n  assign T_4493_3 = 32'h0;\n  assign T_4493_4 = {{31'd0}, ctrl_cs_id};\n  assign T_4493_5 = {{31'd0}, ctrl_cs_dflt_0};\n  assign T_4493_6 = {{30'd0}, ctrl_cs_mode};\n  assign T_4493_7 = 32'h0;\n  assign T_4493_8 = 32'h0;\n  assign T_4493_9 = 32'h0;\n  assign T_4493_10 = {{8'd0}, T_1752};\n  assign T_4493_11 = {{8'd0}, T_2472};\n  assign T_4493_12 = 32'h0;\n  assign T_4493_13 = 32'h0;\n  assign T_4493_14 = 32'h0;\n  assign T_4493_15 = 32'h0;\n  assign T_4493_16 = {{12'd0}, T_2392};\n  assign T_4493_17 = 32'h0;\n  assign T_4493_18 = T_2228;\n  assign T_4493_19 = T_2592;\n  assign T_4493_20 = {{28'd0}, ctrl_wm_tx};\n  assign T_4493_21 = {{28'd0}, ctrl_wm_rx};\n  assign T_4493_22 = 32'h0;\n  assign T_4493_23 = 32'h0;\n  assign T_4493_24 = 32'h0;\n  assign T_4493_25 = 32'h0;\n  assign T_4493_26 = 32'h0;\n  assign T_4493_27 = 32'h0;\n  assign T_4493_28 = {{30'd0}, T_2072};\n  assign T_4493_29 = {{30'd0}, T_1872};\n  assign T_4493_30 = 32'h0;\n  assign T_4493_31 = 32'h0;\n  assign GEN_4 = GEN_178;\n  assign GEN_148 = 5'h1 == T_3414 ? T_4422_1 : T_4422_0;\n  assign GEN_149 = 5'h2 == T_3414 ? T_4422_2 : GEN_148;\n  assign GEN_150 = 5'h3 == T_3414 ? T_4422_3 : GEN_149;\n  assign GEN_151 = 5'h4 == T_3414 ? T_4422_4 : GEN_150;\n  assign GEN_152 = 5'h5 == T_3414 ? T_4422_5 : GEN_151;\n  assign GEN_153 = 5'h6 == T_3414 ? T_4422_6 : GEN_152;\n  assign GEN_154 = 5'h7 == T_3414 ? T_4422_7 : GEN_153;\n  assign GEN_155 = 5'h8 == T_3414 ? T_4422_8 : GEN_154;\n  assign GEN_156 = 5'h9 == T_3414 ? T_4422_9 : GEN_155;\n  assign GEN_157 = 5'ha == T_3414 ? T_4422_10 : GEN_156;\n  assign GEN_158 = 5'hb == T_3414 ? T_4422_11 : GEN_157;\n  assign GEN_159 = 5'hc == T_3414 ? T_4422_12 : GEN_158;\n  assign GEN_160 = 5'hd == T_3414 ? T_4422_13 : GEN_159;\n  assign GEN_161 = 5'he == T_3414 ? T_4422_14 : GEN_160;\n  assign GEN_162 = 5'hf == T_3414 ? T_4422_15 : GEN_161;\n  assign GEN_163 = 5'h10 == T_3414 ? T_4422_16 : GEN_162;\n  assign GEN_164 = 5'h11 == T_3414 ? T_4422_17 : GEN_163;\n  assign GEN_165 = 5'h12 == T_3414 ? T_4422_18 : GEN_164;\n  assign GEN_166 = 5'h13 == T_3414 ? T_4422_19 : GEN_165;\n  assign GEN_167 = 5'h14 == T_3414 ? T_4422_20 : GEN_166;\n  assign GEN_168 = 5'h15 == T_3414 ? T_4422_21 : GEN_167;\n  assign GEN_169 = 5'h16 == T_3414 ? T_4422_22 : GEN_168;\n  assign GEN_170 = 5'h17 == T_3414 ? T_4422_23 : GEN_169;\n  assign GEN_171 = 5'h18 == T_3414 ? T_4422_24 : GEN_170;\n  assign GEN_172 = 5'h19 == T_3414 ? T_4422_25 : GEN_171;\n  assign GEN_173 = 5'h1a == T_3414 ? T_4422_26 : GEN_172;\n  assign GEN_174 = 5'h1b == T_3414 ? T_4422_27 : GEN_173;\n  assign GEN_175 = 5'h1c == T_3414 ? T_4422_28 : GEN_174;\n  assign GEN_176 = 5'h1d == T_3414 ? T_4422_29 : GEN_175;\n  assign GEN_177 = 5'h1e == T_3414 ? T_4422_30 : GEN_176;\n  assign GEN_178 = 5'h1f == T_3414 ? T_4422_31 : GEN_177;\n  assign GEN_5 = GEN_209;\n  assign GEN_179 = 5'h1 == T_3414 ? T_4493_1 : T_4493_0;\n  assign GEN_180 = 5'h2 == T_3414 ? T_4493_2 : GEN_179;\n  assign GEN_181 = 5'h3 == T_3414 ? T_4493_3 : GEN_180;\n  assign GEN_182 = 5'h4 == T_3414 ? T_4493_4 : GEN_181;\n  assign GEN_183 = 5'h5 == T_3414 ? T_4493_5 : GEN_182;\n  assign GEN_184 = 5'h6 == T_3414 ? T_4493_6 : GEN_183;\n  assign GEN_185 = 5'h7 == T_3414 ? T_4493_7 : GEN_184;\n  assign GEN_186 = 5'h8 == T_3414 ? T_4493_8 : GEN_185;\n  assign GEN_187 = 5'h9 == T_3414 ? T_4493_9 : GEN_186;\n  assign GEN_188 = 5'ha == T_3414 ? T_4493_10 : GEN_187;\n  assign GEN_189 = 5'hb == T_3414 ? T_4493_11 : GEN_188;\n  assign GEN_190 = 5'hc == T_3414 ? T_4493_12 : GEN_189;\n  assign GEN_191 = 5'hd == T_3414 ? T_4493_13 : GEN_190;\n  assign GEN_192 = 5'he == T_3414 ? T_4493_14 : GEN_191;\n  assign GEN_193 = 5'hf == T_3414 ? T_4493_15 : GEN_192;\n  assign GEN_194 = 5'h10 == T_3414 ? T_4493_16 : GEN_193;\n  assign GEN_195 = 5'h11 == T_3414 ? T_4493_17 : GEN_194;\n  assign GEN_196 = 5'h12 == T_3414 ? T_4493_18 : GEN_195;\n  assign GEN_197 = 5'h13 == T_3414 ? T_4493_19 : GEN_196;\n  assign GEN_198 = 5'h14 == T_3414 ? T_4493_20 : GEN_197;\n  assign GEN_199 = 5'h15 == T_3414 ? T_4493_21 : GEN_198;\n  assign GEN_200 = 5'h16 == T_3414 ? T_4493_22 : GEN_199;\n  assign GEN_201 = 5'h17 == T_3414 ? T_4493_23 : GEN_200;\n  assign GEN_202 = 5'h18 == T_3414 ? T_4493_24 : GEN_201;\n  assign GEN_203 = 5'h19 == T_3414 ? T_4493_25 : GEN_202;\n  assign GEN_204 = 5'h1a == T_3414 ? T_4493_26 : GEN_203;\n  assign GEN_205 = 5'h1b == T_3414 ? T_4493_27 : GEN_204;\n  assign GEN_206 = 5'h1c == T_3414 ? T_4493_28 : GEN_205;\n  assign GEN_207 = 5'h1d == T_3414 ? T_4493_29 : GEN_206;\n  assign GEN_208 = 5'h1e == T_3414 ? T_4493_30 : GEN_207;\n  assign GEN_209 = 5'h1f == T_3414 ? T_4493_31 : GEN_208;\n  assign T_4530 = GEN_4 ? GEN_5 : 32'h0;\n  assign T_4531 = T_1102_bits_extra[9:8];\n  assign T_4533 = T_1102_bits_extra[7:3];\n  assign T_4534 = T_1102_bits_extra[2:0];\n  assign T_4545_opcode = 3'h0;\n  assign T_4545_param = 2'h0;\n  assign T_4545_size = T_4534;\n  assign T_4545_source = T_4533;\n  assign T_4545_sink = 1'h0;\n  assign T_4545_addr_lo = T_4531;\n  assign T_4545_data = 32'h0;\n  assign T_4545_error = 1'h0;\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_proto <= T_955_fmt_proto;\n    end else begin\n      if (T_2252) begin\n        ctrl_fmt_proto <= T_1973;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_endian <= T_955_fmt_endian;\n    end else begin\n      if (T_2292) begin\n        ctrl_fmt_endian <= T_2293;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_iodir <= T_955_fmt_iodir;\n    end else begin\n      if (T_2332) begin\n        ctrl_fmt_iodir <= T_2333;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_len <= T_955_fmt_len;\n    end else begin\n      if (T_2372) begin\n        ctrl_fmt_len <= T_2373;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_sck_div <= T_955_sck_div;\n    end else begin\n      if (T_1612) begin\n        ctrl_sck_div <= T_1613;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_sck_pol <= T_955_sck_pol;\n    end else begin\n      if (T_1932) begin\n        ctrl_sck_pol <= T_1853;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_sck_pha <= T_955_sck_pha;\n    end else begin\n      if (T_1892) begin\n        ctrl_sck_pha <= T_1653;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_id <= T_955_cs_id;\n    end else begin\n      if (T_2612) begin\n        ctrl_cs_id <= T_1653;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_dflt_0 <= T_955_cs_dflt_0;\n    end else begin\n      if (T_1652) begin\n        ctrl_cs_dflt_0 <= T_1653;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_mode <= T_955_cs_mode;\n    end else begin\n      if (T_1972) begin\n        ctrl_cs_mode <= T_1973;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_cssck <= T_955_dla_cssck;\n    end else begin\n      if (T_1692) begin\n        ctr"}
{"text": "l_dla_cssck <= T_1693;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_sckcs <= T_955_dla_sckcs;\n    end else begin\n      if (T_1732) begin\n        ctrl_dla_sckcs <= T_1733;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_intercs <= T_955_dla_intercs;\n    end else begin\n      if (T_2412) begin\n        ctrl_dla_intercs <= T_1693;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_interxfr <= T_955_dla_interxfr;\n    end else begin\n      if (T_2452) begin\n        ctrl_dla_interxfr <= T_1733;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_wm_tx <= T_955_wm_tx;\n    end else begin\n      if (T_1772) begin\n        ctrl_wm_tx <= T_1773;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_wm_rx <= T_955_wm_rx;\n    end else begin\n      if (T_2092) begin\n        ctrl_wm_rx <= T_1773;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ie_txwm <= T_1021_txwm;\n    end else begin\n      if (T_2012) begin\n        ie_txwm <= T_1653;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ie_rxwm <= T_1021_rxwm;\n    end else begin\n      if (T_2052) begin\n        ie_rxwm <= T_1853;\n      end\n    end\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top level module of qspi_1cs\n//\n// ====================================================================\n\nmodule sirv_qspi_1cs_top(\n  input   clk,\n  input   rst_n,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [32-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  output  io_tl_i_0_0 \n);\n\n\n  wire  io_tl_r_0_a_ready;\n  assign  i_icb_cmd_ready  = io_tl_r_0_a_ready;\n  wire  io_tl_r_0_a_valid  = i_icb_cmd_valid;\n  wire  [2:0] io_tl_r_0_a_bits_opcode  = i_icb_cmd_read ? 3'h4 : 3'h0;\n  wire  [2:0] io_tl_r_0_a_bits_param  = 3'b0;\n  wire  [2:0] io_tl_r_0_a_bits_size = 3'd2;\n  wire  [4:0] io_tl_r_0_a_bits_source  = 5'b0;\n  wire  [28:0] io_tl_r_0_a_bits_address  = i_icb_cmd_addr[28:0];\n  wire  [3:0] io_tl_r_0_a_bits_mask  = 4'b1111;\n  wire  [31:0] io_tl_r_0_a_bits_data  = i_icb_cmd_wdata;\n\n  \n  wire  io_tl_r_0_d_ready = i_icb_rsp_ready;\n\n  wire  [2:0] io_tl_r_0_d_bits_opcode;\n  wire  [1:0] io_tl_r_0_d_bits_param;\n  wire  [2:0] io_tl_r_0_d_bits_size;\n  wire  [4:0] io_tl_r_0_d_bits_source;\n  wire  io_tl_r_0_d_bits_sink;\n  wire  [1:0] io_tl_r_0_d_bits_addr_lo;\n  wire  [31:0] io_tl_r_0_d_bits_data;\n  wire  io_tl_r_0_d_bits_error;\n  wire  io_tl_r_0_d_valid;\n\n  assign  i_icb_rsp_valid = io_tl_r_0_d_valid;\n  assign  i_icb_rsp_rdata = io_tl_r_0_d_bits_data;\n\n  // Not used\n  wire  io_tl_r_0_b_ready = 1'b0;\n  wire  io_tl_r_0_b_valid;\n  wire  [2:0] io_tl_r_0_b_bits_opcode;\n  wire  [1:0] io_tl_r_0_b_bits_param;\n  wire  [2:0] io_tl_r_0_b_bits_size;\n  wire  [4:0] io_tl_r_0_b_bits_source;\n  wire  [28:0] io_tl_r_0_b_bits_address;\n  wire  [3:0] io_tl_r_0_b_bits_mask;\n  wire  [31:0] io_tl_r_0_b_bits_data;\n\n  // Not used\n  wire  io_tl_r_0_c_ready;\n  wire  io_tl_r_0_c_valid = 1'b0;\n  wire  [2:0] io_tl_r_0_c_bits_opcode = 3'b0;\n  wire  [2:0] io_tl_r_0_c_bits_param = 3'b0;\n  wire  [2:0] io_tl_r_0_c_bits_size = 3'd2;\n  wire  [4:0] io_tl_r_0_c_bits_source = 5'b0;\n  wire  [28:0] io_tl_r_0_c_bits_address = 29'b0;\n  wire  [31:0] io_tl_r_0_c_bits_data = 32'b0;\n  wire  io_tl_r_0_c_bits_error = 1'b0;\n\n  // Not used\n  wire  io_tl_r_0_e_ready;\n  wire  io_tl_r_0_e_valid = 1'b0;\n  wire  io_tl_r_0_e_bits_sink = 1'b0;\n\nsirv_qspi_1cs u_sirv_qspi_1cs(\n  .clock                            (clk                              ),\n  .reset                            (~rst_n                           ),\n\n  .io_tl_r_0_a_ready                  (io_tl_r_0_a_ready                  ),\n  .io_tl_r_0_a_valid                  (io_tl_r_0_a_valid                  ),\n  .io_tl_r_0_a_bits_opcode            (io_tl_r_0_a_bits_opcode            ),\n  .io_tl_r_0_a_bits_param             (io_tl_r_0_a_bits_param             ),\n  .io_tl_r_0_a_bits_size              (io_tl_r_0_a_bits_size              ),\n  .io_tl_r_0_a_bits_source            (io_tl_r_0_a_bits_source            ),\n  .io_tl_r_0_a_bits_address           (io_tl_r_0_a_bits_address           ),\n  .io_tl_r_0_a_bits_mask              (io_tl_r_0_a_bits_mask              ),\n  .io_tl_r_0_a_bits_data              (io_tl_r_0_a_bits_data              ),\n  .io_tl_r_0_b_ready                  (io_tl_r_0_b_ready                  ),\n  .io_tl_r_0_b_valid                  (io_tl_r_0_b_valid                  ),\n  .io_tl_r_0_b_bits_opcode            (io_tl_r_0_b_bits_opcode            ),\n  .io_tl_r_0_b_bits_param             (io_tl_r_0_b_bits_param             ),\n  .io_tl_r_0_b_bits_size              (io_tl_r_0_b_bits_size              ),\n  .io_tl_r_0_b_bits_source            (io_tl_r_0_b_bits_source            ),\n  .io_tl_r_0_b_bits_address           (io_tl_r_0_b_bits_address           ),\n  .io_tl_r_0_b_bits_mask              (io_tl_r_0_b_bits_mask              ),\n  .io_tl_r_0_b_bits_data              (io_tl_r_0_b_bits_data              ),\n  .io_tl_r_0_c_ready                  (io_tl_r_0_c_ready                  ),\n  .io_tl_r_0_c_valid                  (io_tl_r_0_c_valid                  ),\n  .io_tl_r_0_c_bits_opcode            (io_tl_r_0_c_bits_opcode            ),\n  .io_tl_r_0_c_bits_param             (io_tl_r_0_c_bits_param             ),\n  .io_tl_r_0_c_bits_size              (io_tl_r_0_c_bits_size              ),\n  .io_tl_r_0_c_bits_source            (io_tl_r_0_c_bits_source            ),\n  .io_tl_r_0_c_bits_address           (io_tl_r_0_c_bits_address           ),\n  .io_tl_r_0_c_bits_data              (io_tl_r_0_c_bits_data              ),\n  .io_tl_r_0_c_bits_error             (io_tl_r_0_c_bits_error             ),\n  .io_tl_r_0_d_ready                  (io_tl_r_0_d_ready                  ),\n  .io_tl_r_0_d_valid                  (io_tl_r_0_d_valid                  ),\n  .io_tl_r_0_d_bits_opcode            (io_tl_r_0_d_bits_opcode            ),\n  .io_tl_r_0_d_bits_param             (io_tl_r_0_d_bits_param             ),\n  .io_tl_r_0_d_bits_size              (io_tl_r_0_d_bits_size              ),\n  .io_tl_r_0_d_bits_source            (io_tl_r_0_d_bits_source            ),\n  .io_tl_r_0_d_bits_sink              (io_tl_r_0_d_bits_sink              ),\n  .io_tl_r_0_d_bits_addr_lo           (io_tl_r_0_d_bits_addr_lo           ),\n  .io_tl_r_0_d_bits_data              (io_tl_r_0_d_bits_data              ),\n  .io_tl_r_0_d_bits_error             (io_tl_r_0_d_bits_error             ),\n  .io_tl_r_0_e_ready                  (io_tl_r_0_e_ready                  ),\n  .io_tl_r_0_e_valid                  (io_tl_r_0_e_valid                  ),\n  .io_tl_r_0_e_bits_sink              (io_tl_r_0_e_bits_sink              ),\n\n  .io_port_sck       (io_port_sck    ),\n  .io_port_dq_0_i    (io_port_dq_0_i ),\n  .io_port_dq_0_o    (io_port_dq_0_o ),\n  .io_port_dq_0_oe   (io_port_dq_0_oe),\n  .io_port_dq_1_i    (io_port_dq_1_i ),\n  .io_port_dq_1_o    (io_port_dq_1_o ),\n  .io_port_dq_1_oe   (io_port_dq_1_oe),\n  .io_port_dq_2_i    (io_port_dq_2_i ),\n  .io_port_dq_2_o    (io_port_dq_2_o ),\n  .io_port_dq_2_oe   (io_port_dq_2_oe),\n  .io_port_dq_3_i    (io_port_dq_3_i ),\n  .io_port_dq_3_o    (io_port_dq_3_o ),\n  .io_port_dq_3_oe   (io_port_dq_3_oe), \n  .io_port_cs_0      (io_port_cs_0   ),\n  .io_tl_i_0_0       (io_tl_i_0_0    ) \n\n);\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_qspi_4cs(\n  input   clock,\n  input   reset,\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  output  io_port_cs_1,\n  output  io_port_cs_2,\n  output  io_port_cs_3,\n  output  io_tl_i_0_0,\n  output  io_tl_r_0_a_ready,\n  input   io_tl_r_0_a_valid,\n  input  [2:0] io_tl_r_0_a_bits_opcode,\n  input  [2:0] io_tl_r_0_a_bits_param,\n  input  [2:0] io_tl_r_0_a_bits_size,\n  input  [4:0] io_tl_r_0_a_bits_source,\n  input  [28:0] io_tl_r_0_a_bits_address,\n  input  [3:0] io_tl_r_0_a_bits_mask,\n  input  [31:0] io_tl_r_0_a_bits_data,\n  input   io_tl_r_0_b_ready,\n  output  io_tl_r_0_b_valid,\n  output [2:0] io_tl_r_0_b_bits_opcode,\n  output [1:0] io_tl_r_0_b_bits_param,\n  output [2:0] io_tl_r_0_b_bits_size,\n  output [4:0] io_tl_r_0_b_bits_source,\n  output [28:0] io_tl_r_0_b_bits_address,\n  output [3:0] io_tl_r_0_b_bits_mask,\n  output [31:0] io_tl_r_0_b_bits_data,\n  output  io_tl_r_0_c_ready,\n  input   io_tl_r_0_c_valid,\n  input  [2:0] io_tl_r_0_c_bits_opcode,\n  input  [2:0] io_tl_r_0_c_bits_param,\n  input  [2:0] io_tl_r_0_c_bits_size,\n  input  [4:0] io_tl_r_0_c_bits_source,\n  input  [28:0] io_tl_r_0_c_bits_address,\n  input  [31:0] io_tl_r_0_c_bits_data,\n  input   io_tl_r_0_c_bits_error,\n  input   io_tl_r_0_d_ready,\n  output  io_tl_r_0_d_valid,\n  output [2:0] io_tl_r_0_d_bits_opcode,\n  output [1:0] io_tl_r_0_d_bits_param,\n  output [2:0] io_tl_r_0_d_bits_size,\n  output [4:0] io_tl_r_0_d_bits_source,\n  output  io_tl_r_0_d_bits_sink,\n  output [1:0] io_tl_r_0_d_bits_addr_lo,\n  output [31:0] io_tl_r_0_d_bits_data,\n  output  io_tl_r_0_d_bits_error,\n  output  io_tl_r_0_e_ready,\n  input   io_tl_r_0_e_valid,\n  input   io_tl_r_0_e_bits_sink\n);\n  wire [1:0] T_955_fmt_proto;\n  wire  T_955_fmt_endian;\n  wire  T_955_fmt_iodir;\n  wire [3:0] T_955_fmt_len;\n  wire [11:0] T_955_sck_div;\n  wire  T_955_sck_pol;\n  wire  T_955_sck_pha;\n  wire [1:0] T_955_cs_id;\n  wire  T_955_cs_dflt_0;\n  wire  T_955_cs_dflt_1;\n  wire  T_955_cs_dflt_2;\n  wire  T_955_cs_dflt_3;\n  wire [1:0] T_955_cs_mode;\n  wire [7:0] T_955_dla_cssck;\n  wire [7:0] T_955_dla_sckcs;\n  wire [7:0] T_955_dla_intercs;\n  wire [7:0] T_955_dla_interxfr;\n  wire [3:0] T_955_wm_tx;\n  wire [3:0] T_955_wm_rx;\n  reg [1:0] ctrl_fmt_proto;\n  reg [31:0] GEN_245;\n  reg  ctrl_fmt_endian;\n  reg [31:0] GEN_246;\n  reg  ctrl_fmt_iodir;\n  reg [31:0] GEN_247;\n  reg [3:0] ctrl_fmt_len;\n  reg [31:0] GEN_248;\n  reg [11:0] ctrl_sck_div;\n  reg [31:0] GEN_249;\n  reg  ctrl_sck_pol;\n  reg [31:0] GEN_250;\n  reg  ctrl_sck_pha;\n  reg [31:0] GEN_251;\n  reg [1:0] ctrl_cs_id;\n  reg [31:0] GEN_252;\n  reg  ctrl_cs_dflt_0;\n  reg [31:0] GEN_253;\n  reg  ctrl_cs_dflt_1;\n  reg [31:0] GEN_254;\n  reg  ctrl_cs_dflt_2;\n  reg [31:0] GEN_255;\n  reg  ctrl_cs_dflt_3;\n  reg [31:0] GEN_256;\n  reg [1:0] ctrl_cs_mode;\n  reg [31:0] GEN_257;\n  reg [7:0] ctrl_dla_cssck;\n  reg [31:0] GEN_258;\n  reg [7:0] ctrl_dla_sckcs;\n  reg [31:0] GEN_259;\n  reg [7:0] ctrl_dla_intercs;\n  reg [31:0] GEN_260;\n  reg [7:0] ctrl_dla_interxfr;\n  reg [31:0] GEN_261;\n  reg [3:0] ctrl_wm_tx;\n  reg [31:0] GEN_262;\n  reg [3:0] ctrl_wm_rx;\n  reg [31:0] GEN_263;\n  wire  fifo_clock;\n  wire  fifo_reset;\n  wire [1:0] fifo_io_ctrl_fmt_proto;\n  wire  fifo_io_ctrl_fmt_endian;\n  wire  fifo_io_ctrl_fmt_iodir;\n  wire [3:0] fifo_io_ctrl_fmt_len;\n  wire [1:0] fifo_io_ctrl_cs_mode;\n  wire [3:0] fifo_io_ctrl_wm_tx;\n  wire [3:0] fifo_io_ctrl_wm_rx;\n  wire  fifo_io_link_tx_ready;\n  wire  fifo_io_link_tx_valid;\n  wire [7:0] fifo_io_link_tx_bits;\n  wire  fifo_io_link_rx_valid;\n  wire [7:0] fifo_io_link_rx_bits;\n  wire [7:0] fifo_io_link_cnt;\n  wire [1:0] fifo_io_link_fmt_proto;\n  wire  fifo_io_link_fmt_endian;\n  wire  fifo_io_link_fmt_iodir;\n  wire  fifo_io_link_cs_set;\n  wire  fifo_io_link_cs_clear;\n  wire  fifo_io_link_cs_hold;\n  wire  fifo_io_link_active;\n  wire  fifo_io_link_lock;\n  wire  fifo_io_tx_ready;\n  wire  fifo_io_tx_valid;\n  wire [7:0] fifo_io_tx_bits;\n  wire  fifo_io_rx_ready;\n  wire  fifo_io_rx_valid;\n  wire [7:0] fifo_io_rx_bits;\n  wire  fifo_io_ip_txwm;\n  wire  fifo_io_ip_rxwm;\n  wire  mac_clock;\n  wire  mac_reset;\n  wire  mac_io_port_sck;\n  wire  mac_io_port_dq_0_i;\n  wire  mac_io_port_dq_0_o;\n  wire  mac_io_port_dq_0_oe;\n  wire  mac_io_port_dq_1_i;\n  wire  mac_io_port_dq_1_o;\n  wire  mac_io_port_dq_1_oe;\n  wire  mac_io_port_dq_2_i;\n  wire  mac_io_port_dq_2_o;\n  wire  mac_io_port_dq_2_oe;\n  wire  mac_io_port_dq_3_i;\n  wire  mac_io_port_dq_3_o;\n  wire  mac_io_port_dq_3_oe;\n  wire  mac_io_port_cs_0;\n  wire  mac_io_port_cs_1;\n  wire  mac_io_port_cs_2;\n  wire  mac_io_port_cs_3;\n  wire [11:0] mac_io_ctrl_sck_div;\n  wire  mac_io_ctrl_sck_pol;\n  wire  mac_io_ctrl_sck_pha;\n  wire [7:0] mac_io_ctrl_dla_cssck;\n  wire [7:0] mac_io_ctrl_dla_sckcs;\n  wire [7:0] mac_io_ctrl_dla_intercs;\n  wire [7:0] mac_io_ctrl_dla_interxfr;\n  wire [1:0] mac_io_ctrl_cs_id;\n  wire  mac_io_ctrl_cs_dflt_0;\n  wire  mac_io_ctrl_cs_dflt_1;\n  wire  mac_io_ctrl_cs_dflt_2;\n  wire  mac_io_ctrl_cs_dflt_3;\n  wire  mac_io_link_tx_ready;\n  wire  mac_io_link_tx_valid;\n  wire [7:0] mac_io_link_tx_bits;\n  wire  mac_io_link_rx_valid;\n  wire [7:0] mac_io_link_rx_bits;\n  wire [7:0] mac_io_link_cnt;\n  wire [1:0] mac_io_link_fmt_proto;\n  wire  mac_io_link_fmt_endian;\n  wire  mac_io_link_fmt_iodir;\n  wire  mac_io_link_cs_set;\n  wire  mac_io_link_cs_clear;\n  wire  mac_io_link_cs_hold;\n  wire  mac_io_link_active;\n  wire  T_1024_txwm;\n  wire  T_1024_rxwm;\n  wire [1:0] T_1028;\n  wire  T_1029;\n  wire  T_1030;\n  reg  ie_txwm;\n  reg [31:0] GEN_264;\n  reg  ie_rxwm;\n  reg [31:0] GEN_265;\n  wire  T_1033;\n  wire  T_1034;\n  wire  T_1035;\n  wire  T_1039;\n  wire  T_1042;\n  wire  T_1066_ready;\n  wire  T_1066_valid;\n  wire  T_1066_bits_read;\n  wire [9:0] T_1066_bits_index;\n  wire [31:0] T_1066_bits_data;\n  wire [3:0] T_1066_bits_mask;\n  wire [9:0] T_1066_bits_extra;\n  wire  T_1083;\n  wire [26:0] T_1084;\n  wire [1:0] T_1085;\n  wire [6:0] T_1086;\n  wire [9:0] T_1087;\n  wire  T_1105_ready;\n  wire  T_1105_valid;\n  wire  T_1105_bits_read;\n  wire [31:0] T_1105_bits_data;\n  wire [9:0] T_1105_bits_extra;\n  wire  T_1141_ready;\n  wire  T_1141_valid;\n  wire  T_1141_bits_read;\n  wire [9:0] T_1141_bits_index;\n  wire [31:0] T_1141_bits_data;\n  wire [3:0] T_1141_bits_mask;\n  wire [9:0] T_1141_bits_extra;\n  wire [9:0] T_1226;\n  wire  T_1228;\n  wire [9:0] T_1234;\n  wire [9:0] T_1235;\n  wire  T_1237;\n  wire [9:0] T_1243;\n  wire [9:0] T_1244;\n  wire  T_1246;\n  wire [9:0] T_1252;\n  wire [9:0] T_1253;\n  wire  T_1255;\n  wire [9:0] T_1261;\n  wire [9:0] T_1262;\n  wire  T_1264;\n  wire [9:0] T_1270;\n  wire [9:0] T_1271;\n  wire  T_1273;\n  wire [9:0] T_1279;\n  wire [9:0] T_1280;\n  wire  T_1282;\n  wire [9:0] T_1288;\n  wire [9:0] T_1289;\n  wire  T_1291;\n  wire [9:0] T_1297;\n  wire [9:0] T_1298;\n  wire  T_1300;\n  wire [9:0] T_1306;\n  wire [9:0] T_1307;\n  wire  T_1309;\n  wire [9:0] T_1315;\n  wire [9:0] T_1316;\n  wire  T_1318;\n  wire [9:0] T_1324;\n  wire [9:0] T_1325;\n  wire  T_1327;\n  wire [9:0] T_1333;\n  wire [9:0] T_1334;\n  wire  T_1336;\n  wire [9:0] T_1342;\n  wire [9:0] T_1343;\n  wire  T_1345;\n  wire  T_1353_0;\n  wire  T_1353_1;\n  wire  T_1353_2;\n  wire  T_1353_3;\n  wire  T_1353_4;\n  wire  T_1353_5;\n  wire  T_1353_6;\n  wire  T_1353_7;\n  wire  T_1353_8;\n  wire  T_1353_9;\n  wire  T_1353_10;\n  wire  T_1353_11;\n  wire  T_1353_12;\n  wire  T_1353_13;\n  wire  T_1353_14;\n  wire  T_1353_15;\n  wire  T_1353_16;\n  wire  T_1353_17;\n  wire  T_1353_18;\n  wire  T_1353_19;\n  wire  T_1353_20;\n  wire  T_1353_21;\n  wire  T_1353_22;\n  wire  T_1353_23;\n  wire  T_1353_24;\n  wire  T_1353_25;\n  wire  T_1353_26;\n  wire  T_1353_27;\n  wire  T_1353_28;\n  wire  T_1358_0;\n  wire  T_1358_1;\n  wire  T_1358_2;\n  wire  T_1358_3;\n  wire  T_1358_4;\n  wire  T_1358_5;\n  wire  T_1358_6;\n  wire  T_1358_7;\n  wire  T_1358_8;\n  wire  T_1358_9;\n  wire  T_1358_10;\n  wire  T_1358_11;\n  wire  T_1358_12;\n  wire  T_1358_13;\n  wire  T_1358_14;\n  wire  T_1358_15;\n  wire  T_1358_16;\n  wire  T_1358_17;\n  wire  T_1358_18;\n  wire  T_1358_19;\n  wire  T_1358_20;\n  wire  T_1358_21;\n  wire  T_1358_22;\n  wire  T_1358_23;\n  wire  T_1358_24;\n  wire  T_1358_25;\n  wire  T_1358_26;\n  wire  T_1358_27;\n  wire  T_1358_28;\n  wire  T_1363_0;\n  wire  T_1363_1;\n  wire  T_1363_2;\n  wire  T_1363_3;\n  wire  T_1363_4;\n  wire  T_1363_5;\n  wire  T_1363_6;\n  wire  T_1363_7;\n  wire  T_1363_8;\n  wire  T_1363_9;\n  wire  T_1363_10;\n  wire  T_1363_11;\n  wire  T_1363_12;\n  wire  T_1363_13;\n  wire  T_1363_14;\n  wire  T_1363_15;\n  wire  T_1363_16;\n  wire  T_1363_17;\n  wire  T_1363_18;\n  wire  T_1363_19;\n  wire  T_1363_20;\n  wire  T_1363_21;\n  wire  T_1363_22;\n  wire  T_1363_23;\n  wire  T_1363_24;\n  wire  T_1363_25;\n  wire  T_1363_26;\n  wire  T_1363_27;\n  wire  T_1363_28;\n  wire  T_1368_0;\n  wire  T_1368_1;\n  wire  T_1368_2;\n  wire  T_1368_3;\n  wire  T_1368_4;\n  wire  T_1368_5;\n  wire  T_1368_6;\n  wire  T_1368_7;\n  wire  T_1368_8;\n  wire  T_1368_9;\n  wire  T_1368_10;\n  wire  T_1368_11;\n  wire  T_1368_12;\n  wire  T_1368_13;\n  wire  T_1368_14;\n  wire  T_1368_15;\n  wire  T_1368_16;\n  wire  T_1368_17;\n  wire  T_1368_18;\n  wire  T_1368_19;\n  wire  T_1368_20;\n  wire  T_1368_21;\n  wire  T_1368_22;\n  wire  T_1368_23;\n  wire  T_1368_24;\n  wire  T_1368_25;\n  wire  T_1368_26;\n  wire  T_1368_27;\n  wire  T_1368_28;\n  wire  T_1373_0;\n  wire  T_1373_1;\n  wire  T_1373_2;\n  wire  T_1373_3;\n  wire  T_1373_4;\n  wire  T_1373_5;\n  wire  T_1373_6;\n  wire  T_1373_7;\n  wire  T_1373_8;\n  wire  T_1373_9;\n  wire  T_1373_10;\n  wire  T_1373_11;\n  wire  T_1373_12;\n  wire  T_1373_13;\n  wire  T_1373_14;\n  wire  T_1373_15;\n  wire  T_1373_16;\n  wire  T_1373_17;\n  wire  T_1373_18;\n  wire  T_1373_19;\n  wire  T_1373_20;\n  wire  T_1373_21;\n  wire  T_1373_22;\n  wire  T_1373_23;\n  wire  T_1373_24;\n  wire  T_1373_25;\n  wire  T_1373_26;\n  wire  T_1373_27;\n  wire  T_1373_28;\n  wire  T_1378_0;\n  wire  T_1378_1;\n  wire  T_1378_2;\n  wire  T_1378_3;\n  wire  T_1378_4;\n  wire  T_1378_5;\n  wire  T_1378_6;\n  wire  T_1378_7;\n  wire  T_1378_8;\n  wire  T_1378_9;\n  wire  T_1378_10;\n  wire  T_1378_11;\n  wire  T_1378_12;\n  wire  T_1378_13;\n  wire  T_1378_14;\n  wire  T_1378_15;\n  wire  T_1378_16;\n  wire  T_1378_17;\n  wire  T_1378_18;\n  wire  T_1378_19;\n  wire  T_1378_20;\n  wire  T_1378_21;\n  wire  T_1378_22;\n  wire  T_1378_23;\n  wire  T_1378_24;\n  wire  T_1378_25;\n  wire  T_1378_26;\n  wire  T_1378_27;\n  wire  T_1378_28;\n  wire  T_1383_0;\n  wire  T_1383_1;\n  wire  T_1383_2;\n  wire  T_1383_3;\n  wire  T_1383_4;\n  wire  T_1383_5;\n  wire  T_1383_6;\n  wire  T_1383_7;\n  wire  T_1383_8;\n  wire  T_1383_9;\n  wire  T_1383_10;\n  wire  T_1383_11;\n  wire  T_1383_12;\n  wire  T_1383_13;\n  wire  T_1383_14;\n  wire  T_1383_15;\n  wire  T_1383_16;\n  wire  T_1383_17;\n  wire  T_1383_18;\n  wire  T_1383_19;\n  wire  T_1383_20;\n  wire  T_1383_21;\n  wire  T_1383_22;\n  wire  T_1383_23;\n  wire  T_1383_24;\n  wire  T_1383_25;\n  wire  T_1383_26;\n  wire  T_1383_27;\n  wire  T_1383_28;\n  wire  T_1388_0;\n  wire  T_1388_1;\n  wire  T_1388_2;\n  wire  T_1388_3;\n  wire  T_1388_4;\n  wire  T_1388_5;\n  wire  T_1388_6;\n  wire  T_1388_7;\n  wire  T_1388_8;\n  wire  T_1388_9;\n  wire  T_1388_10;\n  wire  T_1388_11;\n  wire  T_1388_12;\n  wire  T_1388_13;\n  wire  T_1388_14;\n  wire  T_1388_15;\n  wire  T_1388_16;\n  wire  T_1388_17;\n  wire  T_1388_18;\n  wire  T_1388_19;\n  wire  T_1388_20;\n  wire  T_1388_21;\n  wire  T_1388_22;\n  wire  T_1388_23;\n  wire  T_1388_24;\n  wire  T_1388_25;\n  wire  T_1388_26;\n  wire  T_1388_27;\n  wire  T_1388_28;\n  wire  T_1550;\n  wire  T_1551;\n  wire  T_1552;\n  wire  T_1553;\n  wire [7:0] T_1557;\n  wire [7:0] T_1561;\n  wire [7:0] T_1565;\n  wire [7:0] T_1569;\n  wire [15:0] T_1570;\n  wire [15:0] T_1571;\n  wire [31:0] T_1572;\n  wire [11:0] T_1596;\n  wire [11:0] T_1600;\n  wire  T_1602;\n  wire  T_1615;\n  wire [11:0] T_1616;\n  wire [11:0] GEN_6;\n  wire  T_1636;\n  wire  T_1640;\n  wire  T_1642;\n  wire  T_1655;\n  wire  T_1656;\n  wire  GEN_7;\n  wire  T_1676;\n  wire  T_1680;\n  wire  T_1682;\n  wire  T_1695;\n  wire  T_1696;\n  wire  GEN_8;\n  wire [1:0] GEN_213;\n  wire [1:0] T_1711;\n  wire [1:0] GEN_214;\n  wire [1:0] T_1715;\n  wire  T_1716;\n  wire  T_1720;\n  wire  T_1722;\n  wire  T_1735;\n  wire  T_1736;\n  wire  GEN_9;\n  wire [2:0] GEN_215;\n  wire [2:0] T_1751;\n  wire [2:0] GEN_216;\n  wire [2:0] T_1755;\n  wire  T_1756;\n  wire  T_1760;\n  wire  T_1762;\n  wire  T_1775;\n  wire  T_1776;\n  wire  GEN_10;\n  wire [3:0] GEN_217;\n  wire [3:0] T_1791;\n  wire [3:0] GEN_218;\n  wire [3:0] T_1795;\n  wire [7:0] T_1796;\n  wire  T_1798;\n  wire [7:0] T_1800;\n  wire  T_1802;\n  wire  T_1815;\n  wire [7:0] T_1816;\n  wire [7:0] GEN_11;\n  wire [7:0] T_1836;\n  wire [7:0] T_1840;\n  wire  T_1842;\n  wire  T_1855;\n  wire [7:0] T_1856;\n  wire [7:0] GEN_12;\n  wire [23:0] GEN_219;\n  wire [23:0] T_1871;\n  wire [23:0] GEN_220;\n  wire [23:0] T_1875;\n  wire [3:0] T_1876;\n  wire [3:0] T_1880;\n  wire  T_1882;\n  wire  T_1895;\n  wire [3:0] T_1896;\n  wire [3:0] GEN_13;\n  wire  T_1951;\n  wire [1:0] GEN_221;\n  wire [1:0] T_1991;\n  wire [1:0] GEN_222;\n  wire [1:0] T_1995;\n  wire  T_2015;\n  wire  GEN_14;\n  wire  T_2055;\n  wire  GEN_15;\n  wire [1:0] GEN_223;\n  wire [1:0] T_2071;\n  wire [1:0] GEN_224;\n  wire [1:0] T_2075;\n  wire [1:0] T_2076;\n  wire [1:0] T_2080;\n  wire  T_2082;\n  wire  T_2095;\n  wire [1:0] T_2096;\n  wire [1:0] GEN_16;\n  wire  T_2135;\n  wire  GEN_17;\n  wire  T_2175;\n  wire  GEN_18;\n  wire [1:0] GEN_225;\n  wire [1:0] T_2191;\n  wire [1:0] GEN_226;\n  wire [1:0] T_2195;\n  wire  T_2215;\n  wire [3:0] GEN_19;\n  wire  T_2255;\n  wire [31:0] GEN_227;\n  wire [31:0] T_2351;\n  wire  T_2375;\n  wire [1:0] GEN_20;\n  wire  T_2415;\n  wire  GEN_21;\n  wire [2:0] GEN_228;\n  wire [2:0] T_2431;\n  wire [2:0] GEN_229;\n  wire [2:0] T_2435;\n  wire  T_2455;\n  wire  GEN_22;\n  wire [3:0] GEN_230;\n  wire [3:0] T_2471;\n  wire [3:0] GEN_231;\n  wire [3:0] T_2475;\n  wire [3:0] T_2476;\n  wire [3:0] T_2480;\n  wire  T_2482;\n  wire  T_2495;\n  wire [3:0] T_2496;\n  wire [3:0] GEN_23;\n  wire [19:0] GEN_232;\n  wire [19:0] T_2511;\n  wire [19:0] GEN_233;\n  wire [19:0] T_2515;\n  wire  T_2535;\n  wire [7:0] GEN_24;\n  wire  T_2575;\n  wire [7:0] GEN_25;\n  wire [23:0] GEN_234;\n  wire [23:0] T_2591;\n  wire [23:0] GEN_235;\n  wire [23:0] T_2595;\n  wire  T_2611;\n  wire [7:0] T_2631;\n  wire [30:0] T_2675;\n  wire [31:0] GEN_236;\n  wire [31:0] T_2711;\n  wire [31:0] GEN_237;\n  wire [31:0] T_2715;\n  wire  T_2735;\n  wire [1:0] GEN_26;\n  wire  T_2757;\n  wire  T_2759;\n  wire  T_2761;\n  wire  T_2762;\n  wire  T_2764;\n  wire  T_2772;\n  wire  T_2774;\n  wire  T_2776;\n  wire  T_2777;\n  wire  T_2778;\n  wire  T_2779;\n  wire  T_2781;\n  wire  T_2783;\n  wire  T_2785;\n  wire  T_2796;\n  wire  T_2797;\n  wire  T_2799;\n  wire  T_2801;\n  wire  T_2802;\n  wire  T_2804;\n  wire  T_2818;\n  wire  T_2819;\n  wire  T_2820;\n  wire  T_2821;\n  wire  T_2823;\n  wire  T_2828;\n  wire  T_2829;\n  wire  T_2830;\n  wire  T_2832;\n  wire  T_2834;\n  wire  T_2835;\n  wire  T_2836;\n  wire  T_2838;\n  wire  T_2840;\n  wire  T_2842;\n  wire  T_2844;\n  wire  T_2846;\n  wire  T_2866;\n  wire  T_2867;\n  wire  T_2869;\n  wire  T_2871;\n  wire  T_2872;\n  wire  T_2874;\n  wire  T_2916_0;\n  wire  T_2916_1;\n  wire  T_2916_2;\n  wire  T_2916_3;\n  wire  T_2916_4;\n  wire  T_2916_5;\n  wire  T_2916_6;\n  wire  T_2916_7;\n  wire  T_2916_8;\n  wire  T_2916_9;\n  wire  T_2916_10;\n  wire  T_2916_11;\n  wire  T_2916_12;\n  wire  T_2916_13;\n  wire  T_2916_14;\n  wire  T_2916_15;\n  wire  T_2916_16;\n  wire  T_2916_17;\n  wire  T_2916_18;\n  wire  T_2916_19;\n  wire  T_2916_20;\n  wire  T_2916_21;\n  wire  T_2916_22;\n  wire  T_2916_23;\n  wire  T_2916_24;\n  wire  T_2916_25;\n  wire  T_2916_26;\n  wire  T_2916_27;\n  wire  T_2916_28;\n  wire  T_2916_29;\n  wire  T_2916_30;\n  wire  T_2916_31;\n  wire  T_2954;\n  wire  T_2957;\n  wire  T_2959;\n  wire  T_2969;\n  wire  T_2972;\n  wire  T_2973;\n  wire  T_2974;\n  wire  T_2976;\n  wire  T_2980;\n  wire  T_2992;\n  wire  T_2994;\n  wire  T_2997;\n  wire  T_2999;\n  wire  T_3014;\n  wire  T_3015;\n  wire  T_3016;\n  wire  T_3018;\n  wire  T_3024;\n  wire  T_3025;\n  wire  T_3027;\n  wire  T_3030;\n  wire  T_3031;\n  wire  T_3033;\n  wire  T_3037;\n  wire  T_3041;\n  wire  T_3062;\n  wire  T_3064;\n  wire  T_3067;\n  wire  T_3069;\n  wire  T_3111_0;\n  wire  T_3111_1;\n  wire  T_3111_2;\n  wire  T_3111_3;\n  wire  T_3111_4;\n  wire  T_3111_5;\n  wire  T_3111_6;\n  wire  T_3111_7;\n  wire  T_3111_8;\n  wire  T_3111_9;\n  wire  T_3111_10;\n  wire  T_3111_11;\n  wire  T_3111_12;\n  wire  T_3111_13;\n  wire  T_3111_14;\n  wire  T_3111_15;\n  wire  T_3111_16;\n  wire  T_3111_17;\n  wire  T_3111_18;\n  wire  T_3111_19;\n  wire  T_3111_20;\n  wire  T_3111_21;\n  wire  T_3111_22;\n  wire  T_3111_23;\n  wire  T_3111_24;\n  wire  T_3111_25;\n  wire  T_3111_26;\n  wire  T_3111_27;\n  wire  T_3111_28;\n  wire  T_3111_29;\n  wire  T_3111_30;\n  wire  T_3111_31;\n  wire  T_3149;\n  wire  T_3152;\n  wire  T_3154;\n  wire  T_3164;\n  wire  T_3167;\n  wire  T_3168;\n  wire  T_3169;\n  wire  T_3171;\n  wire  T_3175;\n  wire  T_3187;\n  wire  T_3189;\n  wire  T_3192;\n  wire  T_3194;\n  wire  T_3209;\n  wire  T_3210;\n  wire  T_3211;\n  wire  T_3213;\n  wire  T_3219;\n  wire  T_3220;\n  wire  T_3222;\n  wire  T_3225;\n  wire  T_3226;\n  wire  T_3228;\n  wire  T_3232;\n  wire  T_3236;\n  wire  T_3257;\n  wire  T_3259;\n  wire  T_3262;\n  wire  T_3264;\n  wire  T_3306_0;\n  wire  T_3306_1;\n  wire  T_3306_2;\n  wire  T_3306_3;\n  wire  T_3306_4;\n  wire  T_3306_5;\n  wire  T_3306_6;\n  wire  T_3306_7;\n  wire  T_3306_8;\n  wire  T_3306_9;\n  wire  T_3306_10;\n  wire  T_3306_11;\n  wire  T_3306_12;\n  wire  T_3306_13;\n  wire  T_3306_14;\n  wire  T_3306_15;\n  wire  T_3306_16;\n  wire  T_3306_17;\n  wire  T_3306_18;\n  wire  T_3306_19;\n  wire  T_3306_20;\n  wire  T_3306_21;\n  wire  T_3306_22;\n  wire  T_3306_23;\n  wire  T_3306_24;\n  wire  T_3306_25;\n  wire  T_3306_26;\n  wire  T_3306_27;\n  wire  T_3306_28;\n  wire  T_3306_29;\n  wire  T_3306_30;\n  wire  T_3306_31;\n  wire  T_3344;\n  wire  T_3347;\n  wire  T_3349;\n  wire  T_3359;\n  wire  T_3362;\n  wire  T_3363;\n  wire  T_3364;\n  wire  T_3366;\n  wire  T_3370;\n  wire  T_3382;\n  wire  T_3384;\n  wire  T_3387;\n  wire  T_3389;\n  wire  T_3404;\n  wire  T_3405;\n  wire  T_3406;\n  wire  T_3408;\n  wire  T_3414;\n  wire  T_3415;\n  wire  T_3417;\n  wire  T_3420;\n  wire  T_3421;\n  wire  T_3423;\n  wire  T_3427;\n  wire  T_3431;\n  wire  T_3452;\n  wire  T_3454;\n  wire  T_3457;\n  wire  T_3459;\n  wire  T_3501_0;\n  wire  T_3501_1;\n  wire  T_3501_2;\n  wire  T_3501_3;\n  wire  T_3501_4;\n  wire  T_3501_5;\n  wire  T_3501_6;\n  wire  T_3501_7;\n  wire  T_3501_8;\n  wire  T_3501_9;\n  wire  T_3501_10;\n  wire  T_3501_11;\n  wire  T_3501_12;\n  wire  T_3501_13;\n  wire  T_3501_14;\n  wire  T_3501_15;\n  wire  T_3501_16;\n  w"}
{"text": "ire  T_3501_17;\n  wire  T_3501_18;\n  wire  T_3501_19;\n  wire  T_3501_20;\n  wire  T_3501_21;\n  wire  T_3501_22;\n  wire  T_3501_23;\n  wire  T_3501_24;\n  wire  T_3501_25;\n  wire  T_3501_26;\n  wire  T_3501_27;\n  wire  T_3501_28;\n  wire  T_3501_29;\n  wire  T_3501_30;\n  wire  T_3501_31;\n  wire  T_3536;\n  wire  T_3537;\n  wire  T_3538;\n  wire  T_3539;\n  wire  T_3540;\n  wire [1:0] T_3546;\n  wire [1:0] T_3547;\n  wire [2:0] T_3548;\n  wire [4:0] T_3549;\n  wire  GEN_0;\n  wire  GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_31;\n  wire  GEN_32;\n  wire  GEN_33;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  GEN_36;\n  wire  GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire  GEN_40;\n  wire  GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire  GEN_48;\n  wire  GEN_49;\n  wire  GEN_50;\n  wire  GEN_51;\n  wire  GEN_52;\n  wire  GEN_53;\n  wire  GEN_54;\n  wire  GEN_55;\n  wire  GEN_56;\n  wire  GEN_57;\n  wire  GEN_1;\n  wire  GEN_58;\n  wire  GEN_59;\n  wire  GEN_60;\n  wire  GEN_61;\n  wire  GEN_62;\n  wire  GEN_63;\n  wire  GEN_64;\n  wire  GEN_65;\n  wire  GEN_66;\n  wire  GEN_67;\n  wire  GEN_68;\n  wire  GEN_69;\n  wire  GEN_70;\n  wire  GEN_71;\n  wire  GEN_72;\n  wire  GEN_73;\n  wire  GEN_74;\n  wire  GEN_75;\n  wire  GEN_76;\n  wire  GEN_77;\n  wire  GEN_78;\n  wire  GEN_79;\n  wire  GEN_80;\n  wire  GEN_81;\n  wire  GEN_82;\n  wire  GEN_83;\n  wire  GEN_84;\n  wire  GEN_85;\n  wire  GEN_86;\n  wire  GEN_87;\n  wire  GEN_88;\n  wire  T_3566;\n  wire  GEN_2;\n  wire  GEN_89;\n  wire  GEN_90;\n  wire  GEN_91;\n  wire  GEN_92;\n  wire  GEN_93;\n  wire  GEN_94;\n  wire  GEN_95;\n  wire  GEN_96;\n  wire  GEN_97;\n  wire  GEN_98;\n  wire  GEN_99;\n  wire  GEN_100;\n  wire  GEN_101;\n  wire  GEN_102;\n  wire  GEN_103;\n  wire  GEN_104;\n  wire  GEN_105;\n  wire  GEN_106;\n  wire  GEN_107;\n  wire  GEN_108;\n  wire  GEN_109;\n  wire  GEN_110;\n  wire  GEN_111;\n  wire  GEN_112;\n  wire  GEN_113;\n  wire  GEN_114;\n  wire  GEN_115;\n  wire  GEN_116;\n  wire  GEN_117;\n  wire  GEN_118;\n  wire  GEN_119;\n  wire  GEN_3;\n  wire  GEN_120;\n  wire  GEN_121;\n  wire  GEN_122;\n  wire  GEN_123;\n  wire  GEN_124;\n  wire  GEN_125;\n  wire  GEN_126;\n  wire  GEN_127;\n  wire  GEN_128;\n  wire  GEN_129;\n  wire  GEN_130;\n  wire  GEN_131;\n  wire  GEN_132;\n  wire  GEN_133;\n  wire  GEN_134;\n  wire  GEN_135;\n  wire  GEN_136;\n  wire  GEN_137;\n  wire  GEN_138;\n  wire  GEN_139;\n  wire  GEN_140;\n  wire  GEN_141;\n  wire  GEN_142;\n  wire  GEN_143;\n  wire  GEN_144;\n  wire  GEN_145;\n  wire  GEN_146;\n  wire  GEN_147;\n  wire  GEN_148;\n  wire  GEN_149;\n  wire  GEN_150;\n  wire  T_3569;\n  wire  T_3570;\n  wire  T_3571;\n  wire  T_3572;\n  wire  T_3573;\n  wire [31:0] T_3575;\n  wire [1:0] T_3576;\n  wire [3:0] T_3578;\n  wire [1:0] T_3579;\n  wire [1:0] T_3580;\n  wire [3:0] T_3581;\n  wire [7:0] T_3582;\n  wire [1:0] T_3584;\n  wire [3:0] T_3585;\n  wire [7:0] T_3589;\n  wire [15:0] T_3590;\n  wire [1:0] T_3591;\n  wire [1:0] T_3592;\n  wire [3:0] T_3593;\n  wire [1:0] T_3594;\n  wire [3:0] T_3596;\n  wire [7:0] T_3597;\n  wire [1:0] T_3601;\n  wire [3:0] T_3603;\n  wire [7:0] T_3604;\n  wire [15:0] T_3605;\n  wire [31:0] T_3606;\n  wire [31:0] T_3607;\n  wire  T_3642;\n  wire  T_3643;\n  wire  T_3644;\n  wire  T_3645;\n  wire  T_3648;\n  wire  T_3649;\n  wire  T_3651;\n  wire  T_3652;\n  wire  T_3653;\n  wire  T_3655;\n  wire  T_3659;\n  wire  T_3661;\n  wire  T_3664;\n  wire  T_3665;\n  wire  T_3671;\n  wire  T_3675;\n  wire  T_3681;\n  wire  T_3724;\n  wire  T_3725;\n  wire  T_3731;\n  wire  T_3735;\n  wire  T_3741;\n  wire  T_3744;\n  wire  T_3745;\n  wire  T_3751;\n  wire  T_3755;\n  wire  T_3761;\n  wire  T_3764;\n  wire  T_3765;\n  wire  T_3771;\n  wire  T_3775;\n  wire  T_3781;\n  wire  T_3844;\n  wire  T_3845;\n  wire  T_3851;\n  wire  T_3855;\n  wire  T_3861;\n  wire  T_3864;\n  wire  T_3865;\n  wire  T_3871;\n  wire  T_3875;\n  wire  T_3881;\n  wire  T_3964;\n  wire  T_3965;\n  wire  T_3971;\n  wire  T_3975;\n  wire  T_3981;\n  wire  T_4004;\n  wire  T_4005;\n  wire  T_4011;\n  wire  T_4015;\n  wire  T_4021;\n  wire  T_4024;\n  wire  T_4025;\n  wire  T_4031;\n  wire  T_4035;\n  wire  T_4041;\n  wire  T_4044;\n  wire  T_4045;\n  wire  T_4051;\n  wire  T_4055;\n  wire  T_4061;\n  wire  T_4064;\n  wire  T_4065;\n  wire  T_4071;\n  wire  T_4075;\n  wire  T_4081;\n  wire  T_4204;\n  wire  T_4205;\n  wire  T_4211;\n  wire  T_4215;\n  wire  T_4221;\n  wire  T_4224;\n  wire  T_4225;\n  wire  T_4231;\n  wire  T_4235;\n  wire  T_4241;\n  wire  T_4286;\n  wire  T_4287;\n  wire  T_4288;\n  wire  T_4290;\n  wire  T_4291;\n  wire  T_4292;\n  wire  T_4294;\n  wire  T_4295;\n  wire  T_4296;\n  wire  T_4298;\n  wire  T_4299;\n  wire  T_4300;\n  wire  T_4304;\n  wire  T_4308;\n  wire  T_4312;\n  wire  T_4316;\n  wire  T_4319;\n  wire  T_4320;\n  wire  T_4323;\n  wire  T_4324;\n  wire  T_4327;\n  wire  T_4328;\n  wire  T_4331;\n  wire  T_4332;\n  wire  T_4334;\n  wire  T_4335;\n  wire  T_4336;\n  wire  T_4338;\n  wire  T_4339;\n  wire  T_4340;\n  wire  T_4342;\n  wire  T_4343;\n  wire  T_4344;\n  wire  T_4346;\n  wire  T_4347;\n  wire  T_4348;\n  wire  T_4350;\n  wire  T_4352;\n  wire  T_4354;\n  wire  T_4356;\n  wire  T_4358;\n  wire  T_4360;\n  wire  T_4362;\n  wire  T_4364;\n  wire  T_4370;\n  wire  T_4372;\n  wire  T_4374;\n  wire  T_4376;\n  wire  T_4378;\n  wire  T_4380;\n  wire  T_4382;\n  wire  T_4384;\n  wire  T_4386;\n  wire  T_4388;\n  wire  T_4390;\n  wire  T_4392;\n  wire  T_4394;\n  wire  T_4396;\n  wire  T_4398;\n  wire  T_4400;\n  wire  T_4406;\n  wire  T_4408;\n  wire  T_4410;\n  wire  T_4412;\n  wire  T_4414;\n  wire  T_4416;\n  wire  T_4418;\n  wire  T_4420;\n  wire  T_4426;\n  wire  T_4427;\n  wire  T_4429;\n  wire  T_4430;\n  wire  T_4432;\n  wire  T_4433;\n  wire  T_4435;\n  wire  T_4436;\n  wire  T_4439;\n  wire  T_4442;\n  wire  T_4445;\n  wire  T_4448;\n  wire  T_4450;\n  wire  T_4451;\n  wire  T_4453;\n  wire  T_4454;\n  wire  T_4456;\n  wire  T_4457;\n  wire  T_4459;\n  wire  T_4460;\n  wire  T_4462;\n  wire  T_4463;\n  wire  T_4464;\n  wire  T_4466;\n  wire  T_4467;\n  wire  T_4468;\n  wire  T_4470;\n  wire  T_4471;\n  wire  T_4472;\n  wire  T_4474;\n  wire  T_4475;\n  wire  T_4476;\n  wire  T_4480;\n  wire  T_4484;\n  wire  T_4488;\n  wire  T_4492;\n  wire  T_4495;\n  wire  T_4496;\n  wire  T_4499;\n  wire  T_4500;\n  wire  T_4503;\n  wire  T_4504;\n  wire  T_4507;\n  wire  T_4508;\n  wire  T_4510;\n  wire  T_4511;\n  wire  T_4512;\n  wire  T_4514;\n  wire  T_4515;\n  wire  T_4516;\n  wire  T_4518;\n  wire  T_4519;\n  wire  T_4520;\n  wire  T_4522;\n  wire  T_4523;\n  wire  T_4524;\n  wire  T_4526;\n  wire  T_4528;\n  wire  T_4530;\n  wire  T_4532;\n  wire  T_4534;\n  wire  T_4536;\n  wire  T_4538;\n  wire  T_4540;\n  wire  T_4542;\n  wire  T_4543;\n  wire  T_4545;\n  wire  T_4546;\n  wire  T_4548;\n  wire  T_4549;\n  wire  T_4551;\n  wire  T_4552;\n  wire  T_4555;\n  wire  T_4558;\n  wire  T_4561;\n  wire  T_4564;\n  wire  T_4566;\n  wire  T_4567;\n  wire  T_4569;\n  wire  T_4570;\n  wire  T_4572;\n  wire  T_4573;\n  wire  T_4575;\n  wire  T_4576;\n  wire  T_4617_0;\n  wire  T_4617_1;\n  wire  T_4617_2;\n  wire  T_4617_3;\n  wire  T_4617_4;\n  wire  T_4617_5;\n  wire  T_4617_6;\n  wire  T_4617_7;\n  wire  T_4617_8;\n  wire  T_4617_9;\n  wire  T_4617_10;\n  wire  T_4617_11;\n  wire  T_4617_12;\n  wire  T_4617_13;\n  wire  T_4617_14;\n  wire  T_4617_15;\n  wire  T_4617_16;\n  wire  T_4617_17;\n  wire  T_4617_18;\n  wire  T_4617_19;\n  wire  T_4617_20;\n  wire  T_4617_21;\n  wire  T_4617_22;\n  wire  T_4617_23;\n  wire  T_4617_24;\n  wire  T_4617_25;\n  wire  T_4617_26;\n  wire  T_4617_27;\n  wire  T_4617_28;\n  wire  T_4617_29;\n  wire  T_4617_30;\n  wire  T_4617_31;\n  wire [31:0] T_4688_0;\n  wire [31:0] T_4688_1;\n  wire [31:0] T_4688_2;\n  wire [31:0] T_4688_3;\n  wire [31:0] T_4688_4;\n  wire [31:0] T_4688_5;\n  wire [31:0] T_4688_6;\n  wire [31:0] T_4688_7;\n  wire [31:0] T_4688_8;\n  wire [31:0] T_4688_9;\n  wire [31:0] T_4688_10;\n  wire [31:0] T_4688_11;\n  wire [31:0] T_4688_12;\n  wire [31:0] T_4688_13;\n  wire [31:0] T_4688_14;\n  wire [31:0] T_4688_15;\n  wire [31:0] T_4688_16;\n  wire [31:0] T_4688_17;\n  wire [31:0] T_4688_18;\n  wire [31:0] T_4688_19;\n  wire [31:0] T_4688_20;\n  wire [31:0] T_4688_21;\n  wire [31:0] T_4688_22;\n  wire [31:0] T_4688_23;\n  wire [31:0] T_4688_24;\n  wire [31:0] T_4688_25;\n  wire [31:0] T_4688_26;\n  wire [31:0] T_4688_27;\n  wire [31:0] T_4688_28;\n  wire [31:0] T_4688_29;\n  wire [31:0] T_4688_30;\n  wire [31:0] T_4688_31;\n  wire  GEN_4;\n  wire  GEN_151;\n  wire  GEN_152;\n  wire  GEN_153;\n  wire  GEN_154;\n  wire  GEN_155;\n  wire  GEN_156;\n  wire  GEN_157;\n  wire  GEN_158;\n  wire  GEN_159;\n  wire  GEN_160;\n  wire  GEN_161;\n  wire  GEN_162;\n  wire  GEN_163;\n  wire  GEN_164;\n  wire  GEN_165;\n  wire  GEN_166;\n  wire  GEN_167;\n  wire  GEN_168;\n  wire  GEN_169;\n  wire  GEN_170;\n  wire  GEN_171;\n  wire  GEN_172;\n  wire  GEN_173;\n  wire  GEN_174;\n  wire  GEN_175;\n  wire  GEN_176;\n  wire  GEN_177;\n  wire  GEN_178;\n  wire  GEN_179;\n  wire  GEN_180;\n  wire  GEN_181;\n  wire [31:0] GEN_5;\n  wire [31:0] GEN_182;\n  wire [31:0] GEN_183;\n  wire [31:0] GEN_184;\n  wire [31:0] GEN_185;\n  wire [31:0] GEN_186;\n  wire [31:0] GEN_187;\n  wire [31:0] GEN_188;\n  wire [31:0] GEN_189;\n  wire [31:0] GEN_190;\n  wire [31:0] GEN_191;\n  wire [31:0] GEN_192;\n  wire [31:0] GEN_193;\n  wire [31:0] GEN_194;\n  wire [31:0] GEN_195;\n  wire [31:0] GEN_196;\n  wire [31:0] GEN_197;\n  wire [31:0] GEN_198;\n  wire [31:0] GEN_199;\n  wire [31:0] GEN_200;\n  wire [31:0] GEN_201;\n  wire [31:0] GEN_202;\n  wire [31:0] GEN_203;\n  wire [31:0] GEN_204;\n  wire [31:0] GEN_205;\n  wire [31:0] GEN_206;\n  wire [31:0] GEN_207;\n  wire [31:0] GEN_208;\n  wire [31:0] GEN_209;\n  wire [31:0] GEN_210;\n  wire [31:0] GEN_211;\n  wire [31:0] GEN_212;\n  wire [31:0] T_4725;\n  wire [1:0] T_4726;\n  wire [4:0] T_4728;\n  wire [2:0] T_4729;\n  wire [2:0] T_4740_opcode;\n  wire [1:0] T_4740_param;\n  wire [2:0] T_4740_size;\n  wire [4:0] T_4740_source;\n  wire  T_4740_sink;\n  wire [1:0] T_4740_addr_lo;\n  wire [31:0] T_4740_data;\n  wire  T_4740_error;\n  wire [2:0] GEN_238 = 3'b0;\n  reg [31:0] GEN_266;\n  wire [1:0] GEN_239 = 2'b0;\n  reg [31:0] GEN_267;\n  wire [2:0] GEN_240 = 3'b0;\n  reg [31:0] GEN_268;\n  wire [4:0] GEN_241 = 5'b0;\n  reg [31:0] GEN_269;\n  wire [28:0] GEN_242 = 29'b0;\n  reg [31:0] GEN_270;\n  wire [3:0] GEN_243 = 4'b0;\n  reg [31:0] GEN_271;\n  wire [31:0] GEN_244 = 32'b0;\n  reg [31:0] GEN_272;\n  sirv_qspi_fifo fifo (\n    .clock(fifo_clock),\n    .reset(fifo_reset),\n    .io_ctrl_fmt_proto(fifo_io_ctrl_fmt_proto),\n    .io_ctrl_fmt_endian(fifo_io_ctrl_fmt_endian),\n    .io_ctrl_fmt_iodir(fifo_io_ctrl_fmt_iodir),\n    .io_ctrl_fmt_len(fifo_io_ctrl_fmt_len),\n    .io_ctrl_cs_mode(fifo_io_ctrl_cs_mode),\n    .io_ctrl_wm_tx(fifo_io_ctrl_wm_tx),\n    .io_ctrl_wm_rx(fifo_io_ctrl_wm_rx),\n    .io_link_tx_ready(fifo_io_link_tx_ready),\n    .io_link_tx_valid(fifo_io_link_tx_valid),\n    .io_link_tx_bits(fifo_io_link_tx_bits),\n    .io_link_rx_valid(fifo_io_link_rx_valid),\n    .io_link_rx_bits(fifo_io_link_rx_bits),\n    .io_link_cnt(fifo_io_link_cnt),\n    .io_link_fmt_proto(fifo_io_link_fmt_proto),\n    .io_link_fmt_endian(fifo_io_link_fmt_endian),\n    .io_link_fmt_iodir(fifo_io_link_fmt_iodir),\n    .io_link_cs_set(fifo_io_link_cs_set),\n    .io_link_cs_clear(fifo_io_link_cs_clear),\n    .io_link_cs_hold(fifo_io_link_cs_hold),\n    .io_link_active(fifo_io_link_active),\n    .io_link_lock(fifo_io_link_lock),\n    .io_tx_ready(fifo_io_tx_ready),\n    .io_tx_valid(fifo_io_tx_valid),\n    .io_tx_bits(fifo_io_tx_bits),\n    .io_rx_ready(fifo_io_rx_ready),\n    .io_rx_valid(fifo_io_rx_valid),\n    .io_rx_bits(fifo_io_rx_bits),\n    .io_ip_txwm(fifo_io_ip_txwm),\n    .io_ip_rxwm(fifo_io_ip_rxwm)\n  );\n  sirv_qspi_media_1 mac (\n    .clock(mac_clock),\n    .reset(mac_reset),\n    .io_port_sck(mac_io_port_sck),\n    .io_port_dq_0_i(mac_io_port_dq_0_i),\n    .io_port_dq_0_o(mac_io_port_dq_0_o),\n    .io_port_dq_0_oe(mac_io_port_dq_0_oe),\n    .io_port_dq_1_i(mac_io_port_dq_1_i),\n    .io_port_dq_1_o(mac_io_port_dq_1_o),\n    .io_port_dq_1_oe(mac_io_port_dq_1_oe),\n    .io_port_dq_2_i(mac_io_port_dq_2_i),\n    .io_port_dq_2_o(mac_io_port_dq_2_o),\n    .io_port_dq_2_oe(mac_io_port_dq_2_oe),\n    .io_port_dq_3_i(mac_io_port_dq_3_i),\n    .io_port_dq_3_o(mac_io_port_dq_3_o),\n    .io_port_dq_3_oe(mac_io_port_dq_3_oe),\n    .io_port_cs_0(mac_io_port_cs_0),\n    .io_port_cs_1(mac_io_port_cs_1),\n    .io_port_cs_2(mac_io_port_cs_2),\n    .io_port_cs_3(mac_io_port_cs_3),\n    .io_ctrl_sck_div(mac_io_ctrl_sck_div),\n    .io_ctrl_sck_pol(mac_io_ctrl_sck_pol),\n    .io_ctrl_sck_pha(mac_io_ctrl_sck_pha),\n    .io_ctrl_dla_cssck(mac_io_ctrl_dla_cssck),\n    .io_ctrl_dla_sckcs(mac_io_ctrl_dla_sckcs),\n    .io_ctrl_dla_intercs(mac_io_ctrl_dla_intercs),\n    .io_ctrl_dla_interxfr(mac_io_ctrl_dla_interxfr),\n    .io_ctrl_cs_id(mac_io_ctrl_cs_id),\n    .io_ctrl_cs_dflt_0(mac_io_ctrl_cs_dflt_0),\n    .io_ctrl_cs_dflt_1(mac_io_ctrl_cs_dflt_1),\n    .io_ctrl_cs_dflt_2(mac_io_ctrl_cs_dflt_2),\n    .io_ctrl_cs_dflt_3(mac_io_ctrl_cs_dflt_3),\n    .io_link_tx_ready(mac_io_link_tx_ready),\n    .io_link_tx_valid(mac_io_link_tx_valid),\n    .io_link_tx_bits(mac_io_link_tx_bits),\n    .io_link_rx_valid(mac_io_link_rx_valid),\n    .io_link_rx_bits(mac_io_link_rx_bits),\n    .io_link_cnt(mac_io_link_cnt),\n    .io_link_fmt_proto(mac_io_link_fmt_proto),\n    .io_link_fmt_endian(mac_io_link_fmt_endian),\n    .io_link_fmt_iodir(mac_io_link_fmt_iodir),\n    .io_link_cs_set(mac_io_link_cs_set),\n    .io_link_cs_clear(mac_io_link_cs_clear),\n    .io_link_cs_hold(mac_io_link_cs_hold),\n    .io_link_active(mac_io_link_active)\n  );\n  assign io_port_sck = mac_io_port_sck;\n  assign io_port_dq_0_o = mac_io_port_dq_0_o;\n  assign io_port_dq_0_oe = mac_io_port_dq_0_oe;\n  assign io_port_dq_1_o = mac_io_port_dq_1_o;\n  assign io_port_dq_1_oe = mac_io_port_dq_1_oe;\n  assign io_port_dq_2_o = mac_io_port_dq_2_o;\n  assign io_port_dq_2_oe = mac_io_port_dq_2_oe;\n  assign io_port_dq_3_o = mac_io_port_dq_3_o;\n  assign io_port_dq_3_oe = mac_io_port_dq_3_oe;\n  assign io_port_cs_0 = mac_io_port_cs_0;\n  assign io_port_cs_1 = mac_io_port_cs_1;\n  assign io_port_cs_2 = mac_io_port_cs_2;\n  assign io_port_cs_3 = mac_io_port_cs_3;\n  assign io_tl_i_0_0 = T_1035;\n  assign io_tl_r_0_a_ready = T_1066_ready;\n  assign io_tl_r_0_b_valid = 1'h0;\n  assign io_tl_r_0_b_bits_opcode = GEN_238;\n  assign io_tl_r_0_b_bits_param = GEN_239;\n  assign io_tl_r_0_b_bits_size = GEN_240;\n  assign io_tl_r_0_b_bits_source = GEN_241;\n  assign io_tl_r_0_b_bits_address = GEN_242;\n  assign io_tl_r_0_b_bits_mask = GEN_243;\n  assign io_tl_r_0_b_bits_data = GEN_244;\n  assign io_tl_r_0_c_ready = 1'h1;\n  assign io_tl_r_0_d_valid = T_1105_valid;\n  assign io_tl_r_0_d_bits_opcode = {{2'd0}, T_1105_bits_read};\n  assign io_tl_r_0_d_bits_param = T_4740_param;\n  assign io_tl_r_0_d_bits_size = T_4740_size;\n  assign io_tl_r_0_d_bits_source = T_4740_source;\n  assign io_tl_r_0_d_bits_sink = T_4740_sink;\n  assign io_tl_r_0_d_bits_addr_lo = T_4740_addr_lo;\n  assign io_tl_r_0_d_bits_data = T_1105_bits_data;\n  assign io_tl_r_0_d_bits_error = T_4740_error;\n  assign io_tl_r_0_e_ready = 1'h1;\n  assign T_955_fmt_proto = 2'h0;\n  assign T_955_fmt_endian = 1'h0;\n  assign T_955_fmt_iodir = 1'h0;\n  assign T_955_fmt_len = 4'h8;\n  assign T_955_sck_div = 12'h3;\n  assign T_955_sck_pol = 1'h0;\n  assign T_955_sck_pha = 1'h0;\n  assign T_955_cs_id = 2'h0;\n  assign T_955_cs_dflt_0 = 1'h1;\n  assign T_955_cs_dflt_1 = 1'h1;\n  assign T_955_cs_dflt_2 = 1'h1;\n  assign T_955_cs_dflt_3 = 1'h1;\n  assign T_955_cs_mode = 2'h0;\n  assign T_955_dla_cssck = 8'h1;\n  assign T_955_dla_sckcs = 8'h1;\n  assign T_955_dla_intercs = 8'h1;\n  assign T_955_dla_interxfr = 8'h0;\n  assign T_955_wm_tx = 4'h0;\n  assign T_955_wm_rx = 4'h0;\n  assign fifo_clock = clock;\n  assign fifo_reset = reset;\n  assign fifo_io_ctrl_fmt_proto = ctrl_fmt_proto;\n  assign fifo_io_ctrl_fmt_endian = ctrl_fmt_endian;\n  assign fifo_io_ctrl_fmt_iodir = ctrl_fmt_iodir;\n  assign fifo_io_ctrl_fmt_len = ctrl_fmt_len;\n  assign fifo_io_ctrl_cs_mode = ctrl_cs_mode;\n  assign fifo_io_ctrl_wm_tx = ctrl_wm_tx;\n  assign fifo_io_ctrl_wm_rx = ctrl_wm_rx;\n  assign fifo_io_link_tx_ready = mac_io_link_tx_ready;\n  assign fifo_io_link_rx_valid = mac_io_link_rx_valid;\n  assign fifo_io_link_rx_bits = mac_io_link_rx_bits;\n  assign fifo_io_link_active = mac_io_link_active;\n  assign fifo_io_tx_valid = T_2255;\n  assign fifo_io_tx_bits = T_1816;\n  assign fifo_io_rx_ready = T_2611;\n  assign mac_clock = clock;\n  assign mac_reset = reset;\n  assign mac_io_port_dq_0_i = io_port_dq_0_i;\n  assign mac_io_port_dq_1_i = io_port_dq_1_i;\n  assign mac_io_port_dq_2_i = io_port_dq_2_i;\n  assign mac_io_port_dq_3_i = io_port_dq_3_i;\n  assign mac_io_ctrl_sck_div = ctrl_sck_div;\n  assign mac_io_ctrl_sck_pol = ctrl_sck_pol;\n  assign mac_io_ctrl_sck_pha = ctrl_sck_pha;\n  assign mac_io_ctrl_dla_cssck = ctrl_dla_cssck;\n  assign mac_io_ctrl_dla_sckcs = ctrl_dla_sckcs;\n  assign mac_io_ctrl_dla_intercs = ctrl_dla_intercs;\n  assign mac_io_ctrl_dla_interxfr = ctrl_dla_interxfr;\n  assign mac_io_ctrl_cs_id = ctrl_cs_id;\n  assign mac_io_ctrl_cs_dflt_0 = ctrl_cs_dflt_0;\n  assign mac_io_ctrl_cs_dflt_1 = ctrl_cs_dflt_1;\n  assign mac_io_ctrl_cs_dflt_2 = ctrl_cs_dflt_2;\n  assign mac_io_ctrl_cs_dflt_3 = ctrl_cs_dflt_3;\n  assign mac_io_link_tx_valid = fifo_io_link_tx_valid;\n  assign mac_io_link_tx_bits = fifo_io_link_tx_bits;\n  assign mac_io_link_cnt = fifo_io_link_cnt;\n  assign mac_io_link_fmt_proto = fifo_io_link_fmt_proto;\n  assign mac_io_link_fmt_endian = fifo_io_link_fmt_endian;\n  assign mac_io_link_fmt_iodir = fifo_io_link_fmt_iodir;\n  assign mac_io_link_cs_set = fifo_io_link_cs_set;\n  assign mac_io_link_cs_clear = fifo_io_link_cs_clear;\n  assign mac_io_link_cs_hold = fifo_io_link_cs_hold;\n  assign T_1024_txwm = T_1030;\n  assign T_1024_rxwm = T_1029;\n  assign T_1028 = 2'h0;\n  assign T_1029 = T_1028[0];\n  assign T_1030 = T_1028[1];\n  assign T_1033 = fifo_io_ip_txwm & ie_txwm;\n  assign T_1034 = fifo_io_ip_rxwm & ie_rxwm;\n  assign T_1035 = T_1033 | T_1034;\n  assign T_1039 = fifo_io_tx_ready == 1'h0;\n  assign T_1042 = fifo_io_rx_valid == 1'h0;\n  assign T_1066_ready = T_3570;\n  assign T_1066_valid = io_tl_r_0_a_valid;\n  assign T_1066_bits_read = T_1083;\n  assign T_1066_bits_index = T_1084[9:0];\n  assign T_1066_bits_data = io_tl_r_0_a_bits_data;\n  assign T_1066_bits_mask = io_tl_r_0_a_bits_mask;\n  assign T_1066_bits_extra = T_1087;\n  assign T_1083 = io_tl_r_0_a_bits_opcode == 3'h4;\n  assign T_1084 = io_tl_r_0_a_bits_address[28:2];\n  assign T_1085 = io_tl_r_0_a_bits_address[1:0];\n  assign T_1086 = {T_1085,io_tl_r_0_a_bits_source};\n  assign T_1087 = {T_1086,io_tl_r_0_a_bits_size};\n  assign T_1105_ready = io_tl_r_0_d_ready;\n  assign T_1105_valid = T_3573;\n  assign T_1105_bits_read = T_1141_bits_read;\n  assign T_1105_bits_data = T_4725;\n  assign T_1105_bits_extra = T_1141_bits_extra;\n  assign T_1141_ready = T_3572;\n  assign T_1141_valid = T_3571;\n  assign T_1141_bits_read = T_1066_bits_read;\n  assign T_1141_bits_index = T_1066_bits_index;\n  assign T_1141_bits_data = T_1066_bits_data;\n  assign T_1141_bits_mask = T_1066_bits_mask;\n  assign T_1141_bits_extra = T_1066_bits_extra;\n  assign T_1226 = T_1141_bits_index & 10'h3e0;\n  assign T_1228 = T_1226 == 10'h0;\n  assign T_1234 = T_1141_bits_index ^ 10'h5;\n  assign T_1235 = T_1234 & 10'h3e0;\n  assign T_1237 = T_1235 == 10'h0;\n  assign T_1243 = T_1141_bits_index ^ 10'ha;\n  assign T_1244 = T_1243 & 10'h3e0;\n  assign T_1246 = T_1244 == 10'h0;\n  assign T_1252 = T_1141_bits_index ^ 10'h14;\n  assign T_1253 = T_1252 & 10'h3e0;\n  assign T_1255 = T_1253 == 10'h0;\n  assign T_1261 = T_1141_bits_index ^ 10'h1d;\n  assign T_1262 = T_1261 & 10'h3e0;\n  assign T_1264 = T_1262 == 10'h0;\n  assign T_1270 = T_1141_bits_index ^ 10'h1;\n  assign T_1271 = T_1270 & 10'h3e0;\n  assign T_1273 = T_1271 == 10'h0;\n  assign T_1279 = T_1141_bits_index ^ 10'h6;\n  assign T_1280 = T_1279 & 10'h3e0;\n  assign T_1282 = T_1280 == 10'h0;\n  assign T_1288 = T_1141_bits_index ^ 10'h1c;\n  assign T_1289 = T_1288 & 10'h3e0;\n  assign T_1291 = T_1289 == 10'h0;\n  assign T_1297 = T_1141_bits_index ^ 10'h15;\n  assign T_1298 = T_1297 & 10'h3e0;\n  assign T_1300 = T_1298 == 10'h0;\n  assign T_1306 = T_1141_bits_index ^ 10'h12;\n  assign T_1307 = T_1306 & 10'h3e0;\n  assign T_1309 = T_1307 == 10'h0;\n  assign T_1315 = T_1141_bits_index ^ 10'h10;\n  assi"}
{"text": "gn T_1316 = T_1315 & 10'h3e0;\n  assign T_1318 = T_1316 == 10'h0;\n  assign T_1324 = T_1141_bits_index ^ 10'hb;\n  assign T_1325 = T_1324 & 10'h3e0;\n  assign T_1327 = T_1325 == 10'h0;\n  assign T_1333 = T_1141_bits_index ^ 10'h13;\n  assign T_1334 = T_1333 & 10'h3e0;\n  assign T_1336 = T_1334 == 10'h0;\n  assign T_1342 = T_1141_bits_index ^ 10'h4;\n  assign T_1343 = T_1342 & 10'h3e0;\n  assign T_1345 = T_1343 == 10'h0;\n  assign T_1353_0 = T_3645;\n  assign T_1353_1 = T_4288;\n  assign T_1353_2 = T_4304;\n  assign T_1353_3 = T_4320;\n  assign T_1353_4 = T_4336;\n  assign T_1353_5 = T_4350;\n  assign T_1353_6 = T_4358;\n  assign T_1353_7 = T_4045;\n  assign T_1353_8 = T_4370;\n  assign T_1353_9 = T_4378;\n  assign T_1353_10 = T_4386;\n  assign T_1353_11 = T_4394;\n  assign T_1353_12 = T_3765;\n  assign T_1353_13 = T_4406;\n  assign T_1353_14 = T_4414;\n  assign T_1353_15 = T_4065;\n  assign T_1353_16 = T_4427;\n  assign T_1353_17 = T_4439;\n  assign T_1353_18 = T_4451;\n  assign T_1353_19 = T_4464;\n  assign T_1353_20 = T_4480;\n  assign T_1353_21 = T_4496;\n  assign T_1353_22 = T_4512;\n  assign T_1353_23 = T_4526;\n  assign T_1353_24 = T_4534;\n  assign T_1353_25 = T_4543;\n  assign T_1353_26 = T_4555;\n  assign T_1353_27 = T_4567;\n  assign T_1353_28 = T_3725;\n  assign T_1358_0 = T_3651;\n  assign T_1358_1 = T_4292;\n  assign T_1358_2 = T_4308;\n  assign T_1358_3 = T_4324;\n  assign T_1358_4 = T_4340;\n  assign T_1358_5 = T_4352;\n  assign T_1358_6 = T_4360;\n  assign T_1358_7 = T_4051;\n  assign T_1358_8 = T_4372;\n  assign T_1358_9 = T_4380;\n  assign T_1358_10 = T_4388;\n  assign T_1358_11 = T_4396;\n  assign T_1358_12 = T_3771;\n  assign T_1358_13 = T_4408;\n  assign T_1358_14 = T_4416;\n  assign T_1358_15 = T_4071;\n  assign T_1358_16 = T_4430;\n  assign T_1358_17 = T_4442;\n  assign T_1358_18 = T_4454;\n  assign T_1358_19 = T_4468;\n  assign T_1358_20 = T_4484;\n  assign T_1358_21 = T_4500;\n  assign T_1358_22 = T_4516;\n  assign T_1358_23 = T_4528;\n  assign T_1358_24 = T_4536;\n  assign T_1358_25 = T_4546;\n  assign T_1358_26 = T_4558;\n  assign T_1358_27 = T_4570;\n  assign T_1358_28 = T_3731;\n  assign T_1363_0 = 1'h1;\n  assign T_1363_1 = 1'h1;\n  assign T_1363_2 = 1'h1;\n  assign T_1363_3 = 1'h1;\n  assign T_1363_4 = 1'h1;\n  assign T_1363_5 = 1'h1;\n  assign T_1363_6 = 1'h1;\n  assign T_1363_7 = 1'h1;\n  assign T_1363_8 = 1'h1;\n  assign T_1363_9 = 1'h1;\n  assign T_1363_10 = 1'h1;\n  assign T_1363_11 = 1'h1;\n  assign T_1363_12 = 1'h1;\n  assign T_1363_13 = 1'h1;\n  assign T_1363_14 = 1'h1;\n  assign T_1363_15 = 1'h1;\n  assign T_1363_16 = 1'h1;\n  assign T_1363_17 = 1'h1;\n  assign T_1363_18 = 1'h1;\n  assign T_1363_19 = 1'h1;\n  assign T_1363_20 = 1'h1;\n  assign T_1363_21 = 1'h1;\n  assign T_1363_22 = 1'h1;\n  assign T_1363_23 = 1'h1;\n  assign T_1363_24 = 1'h1;\n  assign T_1363_25 = 1'h1;\n  assign T_1363_26 = 1'h1;\n  assign T_1363_27 = 1'h1;\n  assign T_1363_28 = 1'h1;\n  assign T_1368_0 = 1'h1;\n  assign T_1368_1 = 1'h1;\n  assign T_1368_2 = 1'h1;\n  assign T_1368_3 = 1'h1;\n  assign T_1368_4 = 1'h1;\n  assign T_1368_5 = 1'h1;\n  assign T_1368_6 = 1'h1;\n  assign T_1368_7 = 1'h1;\n  assign T_1368_8 = 1'h1;\n  assign T_1368_9 = 1'h1;\n  assign T_1368_10 = 1'h1;\n  assign T_1368_11 = 1'h1;\n  assign T_1368_12 = 1'h1;\n  assign T_1368_13 = 1'h1;\n  assign T_1368_14 = 1'h1;\n  assign T_1368_15 = 1'h1;\n  assign T_1368_16 = 1'h1;\n  assign T_1368_17 = 1'h1;\n  assign T_1368_18 = 1'h1;\n  assign T_1368_19 = 1'h1;\n  assign T_1368_20 = 1'h1;\n  assign T_1368_21 = 1'h1;\n  assign T_1368_22 = 1'h1;\n  assign T_1368_23 = 1'h1;\n  assign T_1368_24 = 1'h1;\n  assign T_1368_25 = 1'h1;\n  assign T_1368_26 = 1'h1;\n  assign T_1368_27 = 1'h1;\n  assign T_1368_28 = 1'h1;\n  assign T_1373_0 = 1'h1;\n  assign T_1373_1 = 1'h1;\n  assign T_1373_2 = 1'h1;\n  assign T_1373_3 = 1'h1;\n  assign T_1373_4 = 1'h1;\n  assign T_1373_5 = 1'h1;\n  assign T_1373_6 = 1'h1;\n  assign T_1373_7 = 1'h1;\n  assign T_1373_8 = 1'h1;\n  assign T_1373_9 = 1'h1;\n  assign T_1373_10 = 1'h1;\n  assign T_1373_11 = 1'h1;\n  assign T_1373_12 = 1'h1;\n  assign T_1373_13 = 1'h1;\n  assign T_1373_14 = 1'h1;\n  assign T_1373_15 = 1'h1;\n  assign T_1373_16 = 1'h1;\n  assign T_1373_17 = 1'h1;\n  assign T_1373_18 = 1'h1;\n  assign T_1373_19 = 1'h1;\n  assign T_1373_20 = 1'h1;\n  assign T_1373_21 = 1'h1;\n  assign T_1373_22 = 1'h1;\n  assign T_1373_23 = 1'h1;\n  assign T_1373_24 = 1'h1;\n  assign T_1373_25 = 1'h1;\n  assign T_1373_26 = 1'h1;\n  assign T_1373_27 = 1'h1;\n  assign T_1373_28 = 1'h1;\n  assign T_1378_0 = 1'h1;\n  assign T_1378_1 = 1'h1;\n  assign T_1378_2 = 1'h1;\n  assign T_1378_3 = 1'h1;\n  assign T_1378_4 = 1'h1;\n  assign T_1378_5 = 1'h1;\n  assign T_1378_6 = 1'h1;\n  assign T_1378_7 = 1'h1;\n  assign T_1378_8 = 1'h1;\n  assign T_1378_9 = 1'h1;\n  assign T_1378_10 = 1'h1;\n  assign T_1378_11 = 1'h1;\n  assign T_1378_12 = 1'h1;\n  assign T_1378_13 = 1'h1;\n  assign T_1378_14 = 1'h1;\n  assign T_1378_15 = 1'h1;\n  assign T_1378_16 = 1'h1;\n  assign T_1378_17 = 1'h1;\n  assign T_1378_18 = 1'h1;\n  assign T_1378_19 = 1'h1;\n  assign T_1378_20 = 1'h1;\n  assign T_1378_21 = 1'h1;\n  assign T_1378_22 = 1'h1;\n  assign T_1378_23 = 1'h1;\n  assign T_1378_24 = 1'h1;\n  assign T_1378_25 = 1'h1;\n  assign T_1378_26 = 1'h1;\n  assign T_1378_27 = 1'h1;\n  assign T_1378_28 = 1'h1;\n  assign T_1383_0 = T_3655;\n  assign T_1383_1 = T_4296;\n  assign T_1383_2 = T_4312;\n  assign T_1383_3 = T_4328;\n  assign T_1383_4 = T_4344;\n  assign T_1383_5 = T_4354;\n  assign T_1383_6 = T_4362;\n  assign T_1383_7 = T_4055;\n  assign T_1383_8 = T_4374;\n  assign T_1383_9 = T_4382;\n  assign T_1383_10 = T_4390;\n  assign T_1383_11 = T_4398;\n  assign T_1383_12 = T_3775;\n  assign T_1383_13 = T_4410;\n  assign T_1383_14 = T_4418;\n  assign T_1383_15 = T_4075;\n  assign T_1383_16 = T_4433;\n  assign T_1383_17 = T_4445;\n  assign T_1383_18 = T_4457;\n  assign T_1383_19 = T_4472;\n  assign T_1383_20 = T_4488;\n  assign T_1383_21 = T_4504;\n  assign T_1383_22 = T_4520;\n  assign T_1383_23 = T_4530;\n  assign T_1383_24 = T_4538;\n  assign T_1383_25 = T_4549;\n  assign T_1383_26 = T_4561;\n  assign T_1383_27 = T_4573;\n  assign T_1383_28 = T_3735;\n  assign T_1388_0 = T_3661;\n  assign T_1388_1 = T_4300;\n  assign T_1388_2 = T_4316;\n  assign T_1388_3 = T_4332;\n  assign T_1388_4 = T_4348;\n  assign T_1388_5 = T_4356;\n  assign T_1388_6 = T_4364;\n  assign T_1388_7 = T_4061;\n  assign T_1388_8 = T_4376;\n  assign T_1388_9 = T_4384;\n  assign T_1388_10 = T_4392;\n  assign T_1388_11 = T_4400;\n  assign T_1388_12 = T_3781;\n  assign T_1388_13 = T_4412;\n  assign T_1388_14 = T_4420;\n  assign T_1388_15 = T_4081;\n  assign T_1388_16 = T_4436;\n  assign T_1388_17 = T_4448;\n  assign T_1388_18 = T_4460;\n  assign T_1388_19 = T_4476;\n  assign T_1388_20 = T_4492;\n  assign T_1388_21 = T_4508;\n  assign T_1388_22 = T_4524;\n  assign T_1388_23 = T_4532;\n  assign T_1388_24 = T_4540;\n  assign T_1388_25 = T_4552;\n  assign T_1388_26 = T_4564;\n  assign T_1388_27 = T_4576;\n  assign T_1388_28 = T_3741;\n  assign T_1550 = T_1141_bits_mask[0];\n  assign T_1551 = T_1141_bits_mask[1];\n  assign T_1552 = T_1141_bits_mask[2];\n  assign T_1553 = T_1141_bits_mask[3];\n  assign T_1557 = T_1550 ? 8'hff : 8'h0;\n  assign T_1561 = T_1551 ? 8'hff : 8'h0;\n  assign T_1565 = T_1552 ? 8'hff : 8'h0;\n  assign T_1569 = T_1553 ? 8'hff : 8'h0;\n  assign T_1570 = {T_1561,T_1557};\n  assign T_1571 = {T_1569,T_1565};\n  assign T_1572 = {T_1571,T_1570};\n  assign T_1596 = T_1572[11:0];\n  assign T_1600 = ~ T_1596;\n  assign T_1602 = T_1600 == 12'h0;\n  assign T_1615 = T_1388_0 & T_1602;\n  assign T_1616 = T_1141_bits_data[11:0];\n  assign GEN_6 = T_1615 ? T_1616 : ctrl_sck_div;\n  assign T_1636 = T_1572[0];\n  assign T_1640 = ~ T_1636;\n  assign T_1642 = T_1640 == 1'h0;\n  assign T_1655 = T_1388_1 & T_1642;\n  assign T_1656 = T_1141_bits_data[0];\n  assign GEN_7 = T_1655 ? T_1656 : ctrl_cs_dflt_0;\n  assign T_1676 = T_1572[1];\n  assign T_1680 = ~ T_1676;\n  assign T_1682 = T_1680 == 1'h0;\n  assign T_1695 = T_1388_2 & T_1682;\n  assign T_1696 = T_1141_bits_data[1];\n  assign GEN_8 = T_1695 ? T_1696 : ctrl_cs_dflt_1;\n  assign GEN_213 = {{1'd0}, ctrl_cs_dflt_1};\n  assign T_1711 = GEN_213 << 1;\n  assign GEN_214 = {{1'd0}, ctrl_cs_dflt_0};\n  assign T_1715 = GEN_214 | T_1711;\n  assign T_1716 = T_1572[2];\n  assign T_1720 = ~ T_1716;\n  assign T_1722 = T_1720 == 1'h0;\n  assign T_1735 = T_1388_3 & T_1722;\n  assign T_1736 = T_1141_bits_data[2];\n  assign GEN_9 = T_1735 ? T_1736 : ctrl_cs_dflt_2;\n  assign GEN_215 = {{2'd0}, ctrl_cs_dflt_2};\n  assign T_1751 = GEN_215 << 2;\n  assign GEN_216 = {{1'd0}, T_1715};\n  assign T_1755 = GEN_216 | T_1751;\n  assign T_1756 = T_1572[3];\n  assign T_1760 = ~ T_1756;\n  assign T_1762 = T_1760 == 1'h0;\n  assign T_1775 = T_1388_4 & T_1762;\n  assign T_1776 = T_1141_bits_data[3];\n  assign GEN_10 = T_1775 ? T_1776 : ctrl_cs_dflt_3;\n  assign GEN_217 = {{3'd0}, ctrl_cs_dflt_3};\n  assign T_1791 = GEN_217 << 3;\n  assign GEN_218 = {{1'd0}, T_1755};\n  assign T_1795 = GEN_218 | T_1791;\n  assign T_1796 = T_1572[7:0];\n  assign T_1798 = T_1796 != 8'h0;\n  assign T_1800 = ~ T_1796;\n  assign T_1802 = T_1800 == 8'h0;\n  assign T_1815 = T_1388_5 & T_1802;\n  assign T_1816 = T_1141_bits_data[7:0];\n  assign GEN_11 = T_1815 ? T_1816 : ctrl_dla_cssck;\n  assign T_1836 = T_1572[23:16];\n  assign T_1840 = ~ T_1836;\n  assign T_1842 = T_1840 == 8'h0;\n  assign T_1855 = T_1388_6 & T_1842;\n  assign T_1856 = T_1141_bits_data[23:16];\n  assign GEN_12 = T_1855 ? T_1856 : ctrl_dla_sckcs;\n  assign GEN_219 = {{16'd0}, ctrl_dla_sckcs};\n  assign T_1871 = GEN_219 << 16;\n  assign GEN_220 = {{16'd0}, ctrl_dla_cssck};\n  assign T_1875 = GEN_220 | T_1871;\n  assign T_1876 = T_1572[3:0];\n  assign T_1880 = ~ T_1876;\n  assign T_1882 = T_1880 == 4'h0;\n  assign T_1895 = T_1388_7 & T_1882;\n  assign T_1896 = T_1141_bits_data[3:0];\n  assign GEN_13 = T_1895 ? T_1896 : ctrl_wm_tx;\n  assign T_1951 = fifo_io_ip_txwm;\n  assign GEN_221 = {{1'd0}, fifo_io_ip_rxwm};\n  assign T_1991 = GEN_221 << 1;\n  assign GEN_222 = {{1'd0}, T_1951};\n  assign T_1995 = GEN_222 | T_1991;\n  assign T_2015 = T_1388_10 & T_1642;\n  assign GEN_14 = T_2015 ? T_1656 : ctrl_sck_pha;\n  assign T_2055 = T_1388_11 & T_1682;\n  assign GEN_15 = T_2055 ? T_1696 : ctrl_sck_pol;\n  assign GEN_223 = {{1'd0}, ctrl_sck_pol};\n  assign T_2071 = GEN_223 << 1;\n  assign GEN_224 = {{1'd0}, ctrl_sck_pha};\n  assign T_2075 = GEN_224 | T_2071;\n  assign T_2076 = T_1572[1:0];\n  assign T_2080 = ~ T_2076;\n  assign T_2082 = T_2080 == 2'h0;\n  assign T_2095 = T_1388_12 & T_2082;\n  assign T_2096 = T_1141_bits_data[1:0];\n  assign GEN_16 = T_2095 ? T_2096 : ctrl_cs_mode;\n  assign T_2135 = T_1388_13 & T_1642;\n  assign GEN_17 = T_2135 ? T_1656 : ie_txwm;\n  assign T_2175 = T_1388_14 & T_1682;\n  assign GEN_18 = T_2175 ? T_1696 : ie_rxwm;\n  assign GEN_225 = {{1'd0}, ie_rxwm};\n  assign T_2191 = GEN_225 << 1;\n  assign GEN_226 = {{1'd0}, ie_txwm};\n  assign T_2195 = GEN_226 | T_2191;\n  assign T_2215 = T_1388_15 & T_1882;\n  assign GEN_19 = T_2215 ? T_1896 : ctrl_wm_rx;\n  assign T_2255 = T_1388_16 & T_1802;\n  assign GEN_227 = {{31'd0}, T_1039};\n  assign T_2351 = GEN_227 << 31;\n  assign T_2375 = T_1388_19 & T_2082;\n  assign GEN_20 = T_2375 ? T_2096 : ctrl_fmt_proto;\n  assign T_2415 = T_1388_20 & T_1722;\n  assign GEN_21 = T_2415 ? T_1736 : ctrl_fmt_endian;\n  assign GEN_228 = {{2'd0}, ctrl_fmt_endian};\n  assign T_2431 = GEN_228 << 2;\n  assign GEN_229 = {{1'd0}, ctrl_fmt_proto};\n  assign T_2435 = GEN_229 | T_2431;\n  assign T_2455 = T_1388_21 & T_1762;\n  assign GEN_22 = T_2455 ? T_1776 : ctrl_fmt_iodir;\n  assign GEN_230 = {{3'd0}, ctrl_fmt_iodir};\n  assign T_2471 = GEN_230 << 3;\n  assign GEN_231 = {{1'd0}, T_2435};\n  assign T_2475 = GEN_231 | T_2471;\n  assign T_2476 = T_1572[19:16];\n  assign T_2480 = ~ T_2476;\n  assign T_2482 = T_2480 == 4'h0;\n  assign T_2495 = T_1388_22 & T_2482;\n  assign T_2496 = T_1141_bits_data[19:16];\n  assign GEN_23 = T_2495 ? T_2496 : ctrl_fmt_len;\n  assign GEN_232 = {{16'd0}, ctrl_fmt_len};\n  assign T_2511 = GEN_232 << 16;\n  assign GEN_233 = {{16'd0}, T_2475};\n  assign T_2515 = GEN_233 | T_2511;\n  assign T_2535 = T_1388_23 & T_1802;\n  assign GEN_24 = T_2535 ? T_1816 : ctrl_dla_intercs;\n  assign T_2575 = T_1388_24 & T_1842;\n  assign GEN_25 = T_2575 ? T_1856 : ctrl_dla_interxfr;\n  assign GEN_234 = {{16'd0}, ctrl_dla_interxfr};\n  assign T_2591 = GEN_234 << 16;\n  assign GEN_235 = {{16'd0}, ctrl_dla_intercs};\n  assign T_2595 = GEN_235 | T_2591;\n  assign T_2611 = T_1383_25 & T_1798;\n  assign T_2631 = fifo_io_rx_bits;\n  assign T_2675 = {{23'd0}, T_2631};\n  assign GEN_236 = {{31'd0}, T_1042};\n  assign T_2711 = GEN_236 << 31;\n  assign GEN_237 = {{1'd0}, T_2675};\n  assign T_2715 = GEN_237 | T_2711;\n  assign T_2735 = T_1388_28 & T_2082;\n  assign GEN_26 = T_2735 ? T_2096 : ctrl_cs_id;\n  assign T_2757 = T_1228 == 1'h0;\n  assign T_2759 = T_2757 | T_1363_0;\n  assign T_2761 = T_1273 == 1'h0;\n  assign T_2762 = T_1363_11 & T_1363_10;\n  assign T_2764 = T_2761 | T_2762;\n  assign T_2772 = T_1345 == 1'h0;\n  assign T_2774 = T_2772 | T_1363_28;\n  assign T_2776 = T_1237 == 1'h0;\n  assign T_2777 = T_1363_4 & T_1363_3;\n  assign T_2778 = T_2777 & T_1363_2;\n  assign T_2779 = T_2778 & T_1363_1;\n  assign T_2781 = T_2776 | T_2779;\n  assign T_2783 = T_1282 == 1'h0;\n  assign T_2785 = T_2783 | T_1363_12;\n  assign T_2796 = T_1246 == 1'h0;\n  assign T_2797 = T_1363_6 & T_1363_5;\n  assign T_2799 = T_2796 | T_2797;\n  assign T_2801 = T_1327 == 1'h0;\n  assign T_2802 = T_1363_24 & T_1363_23;\n  assign T_2804 = T_2801 | T_2802;\n  assign T_2818 = T_1318 == 1'h0;\n  assign T_2819 = T_1363_22 & T_1363_21;\n  assign T_2820 = T_2819 & T_1363_20;\n  assign T_2821 = T_2820 & T_1363_19;\n  assign T_2823 = T_2818 | T_2821;\n  assign T_2828 = T_1309 == 1'h0;\n  assign T_2829 = T_1363_18 & T_1363_17;\n  assign T_2830 = T_2829 & T_1363_16;\n  assign T_2832 = T_2828 | T_2830;\n  assign T_2834 = T_1336 == 1'h0;\n  assign T_2835 = T_1363_27 & T_1363_26;\n  assign T_2836 = T_2835 & T_1363_25;\n  assign T_2838 = T_2834 | T_2836;\n  assign T_2840 = T_1255 == 1'h0;\n  assign T_2842 = T_2840 | T_1363_7;\n  assign T_2844 = T_1300 == 1'h0;\n  assign T_2846 = T_2844 | T_1363_15;\n  assign T_2866 = T_1291 == 1'h0;\n  assign T_2867 = T_1363_14 & T_1363_13;\n  assign T_2869 = T_2866 | T_2867;\n  assign T_2871 = T_1264 == 1'h0;\n  assign T_2872 = T_1363_9 & T_1363_8;\n  assign T_2874 = T_2871 | T_2872;\n  assign T_2916_0 = T_2759;\n  assign T_2916_1 = T_2764;\n  assign T_2916_2 = 1'h1;\n  assign T_2916_3 = 1'h1;\n  assign T_2916_4 = T_2774;\n  assign T_2916_5 = T_2781;\n  assign T_2916_6 = T_2785;\n  assign T_2916_7 = 1'h1;\n  assign T_2916_8 = 1'h1;\n  assign T_2916_9 = 1'h1;\n  assign T_2916_10 = T_2799;\n  assign T_2916_11 = T_2804;\n  assign T_2916_12 = 1'h1;\n  assign T_2916_13 = 1'h1;\n  assign T_2916_14 = 1'h1;\n  assign T_2916_15 = 1'h1;\n  assign T_2916_16 = T_2823;\n  assign T_2916_17 = 1'h1;\n  assign T_2916_18 = T_2832;\n  assign T_2916_19 = T_2838;\n  assign T_2916_20 = T_2842;\n  assign T_2916_21 = T_2846;\n  assign T_2916_22 = 1'h1;\n  assign T_2916_23 = 1'h1;\n  assign T_2916_24 = 1'h1;\n  assign T_2916_25 = 1'h1;\n  assign T_2916_26 = 1'h1;\n  assign T_2916_27 = 1'h1;\n  assign T_2916_28 = T_2869;\n  assign T_2916_29 = T_2874;\n  assign T_2916_30 = 1'h1;\n  assign T_2916_31 = 1'h1;\n  assign T_2954 = T_2757 | T_1368_0;\n  assign T_2957 = T_1368_11 & T_1368_10;\n  assign T_2959 = T_2761 | T_2957;\n  assign T_2969 = T_2772 | T_1368_28;\n  assign T_2972 = T_1368_4 & T_1368_3;\n  assign T_2973 = T_2972 & T_1368_2;\n  assign T_2974 = T_2973 & T_1368_1;\n  assign T_2976 = T_2776 | T_2974;\n  assign T_2980 = T_2783 | T_1368_12;\n  assign T_2992 = T_1368_6 & T_1368_5;\n  assign T_2994 = T_2796 | T_2992;\n  assign T_2997 = T_1368_24 & T_1368_23;\n  assign T_2999 = T_2801 | T_2997;\n  assign T_3014 = T_1368_22 & T_1368_21;\n  assign T_3015 = T_3014 & T_1368_20;\n  assign T_3016 = T_3015 & T_1368_19;\n  assign T_3018 = T_2818 | T_3016;\n  assign T_3024 = T_1368_18 & T_1368_17;\n  assign T_3025 = T_3024 & T_1368_16;\n  assign T_3027 = T_2828 | T_3025;\n  assign T_3030 = T_1368_27 & T_1368_26;\n  assign T_3031 = T_3030 & T_1368_25;\n  assign T_3033 = T_2834 | T_3031;\n  assign T_3037 = T_2840 | T_1368_7;\n  assign T_3041 = T_2844 | T_1368_15;\n  assign T_3062 = T_1368_14 & T_1368_13;\n  assign T_3064 = T_2866 | T_3062;\n  assign T_3067 = T_1368_9 & T_1368_8;\n  assign T_3069 = T_2871 | T_3067;\n  assign T_3111_0 = T_2954;\n  assign T_3111_1 = T_2959;\n  assign T_3111_2 = 1'h1;\n  assign T_3111_3 = 1'h1;\n  assign T_3111_4 = T_2969;\n  assign T_3111_5 = T_2976;\n  assign T_3111_6 = T_2980;\n  assign T_3111_7 = 1'h1;\n  assign T_3111_8 = 1'h1;\n  assign T_3111_9 = 1'h1;\n  assign T_3111_10 = T_2994;\n  assign T_3111_11 = T_2999;\n  assign T_3111_12 = 1'h1;\n  assign T_3111_13 = 1'h1;\n  assign T_3111_14 = 1'h1;\n  assign T_3111_15 = 1'h1;\n  assign T_3111_16 = T_3018;\n  assign T_3111_17 = 1'h1;\n  assign T_3111_18 = T_3027;\n  assign T_3111_19 = T_3033;\n  assign T_3111_20 = T_3037;\n  assign T_3111_21 = T_3041;\n  assign T_3111_22 = 1'h1;\n  assign T_3111_23 = 1'h1;\n  assign T_3111_24 = 1'h1;\n  assign T_3111_25 = 1'h1;\n  assign T_3111_26 = 1'h1;\n  assign T_3111_27 = 1'h1;\n  assign T_3111_28 = T_3064;\n  assign T_3111_29 = T_3069;\n  assign T_3111_30 = 1'h1;\n  assign T_3111_31 = 1'h1;\n  assign T_3149 = T_2757 | T_1373_0;\n  assign T_3152 = T_1373_11 & T_1373_10;\n  assign T_3154 = T_2761 | T_3152;\n  assign T_3164 = T_2772 | T_1373_28;\n  assign T_3167 = T_1373_4 & T_1373_3;\n  assign T_3168 = T_3167 & T_1373_2;\n  assign T_3169 = T_3168 & T_1373_1;\n  assign T_3171 = T_2776 | T_3169;\n  assign T_3175 = T_2783 | T_1373_12;\n  assign T_3187 = T_1373_6 & T_1373_5;\n  assign T_3189 = T_2796 | T_3187;\n  assign T_3192 = T_1373_24 & T_1373_23;\n  assign T_3194 = T_2801 | T_3192;\n  assign T_3209 = T_1373_22 & T_1373_21;\n  assign T_3210 = T_3209 & T_1373_20;\n  assign T_3211 = T_3210 & T_1373_19;\n  assign T_3213 = T_2818 | T_3211;\n  assign T_3219 = T_1373_18 & T_1373_17;\n  assign T_3220 = T_3219 & T_1373_16;\n  assign T_3222 = T_2828 | T_3220;\n  assign T_3225 = T_1373_27 & T_1373_26;\n  assign T_3226 = T_3225 & T_1373_25;\n  assign T_3228 = T_2834 | T_3226;\n  assign T_3232 = T_2840 | T_1373_7;\n  assign T_3236 = T_2844 | T_1373_15;\n  assign T_3257 = T_1373_14 & T_1373_13;\n  assign T_3259 = T_2866 | T_3257;\n  assign T_3262 = T_1373_9 & T_1373_8;\n  assign T_3264 = T_2871 | T_3262;\n  assign T_3306_0 = T_3149;\n  assign T_3306_1 = T_3154;\n  assign T_3306_2 = 1'h1;\n  assign T_3306_3 = 1'h1;\n  assign T_3306_4 = T_3164;\n  assign T_3306_5 = T_3171;\n  assign T_3306_6 = T_3175;\n  assign T_3306_7 = 1'h1;\n  assign T_3306_8 = 1'h1;\n  assign T_3306_9 = 1'h1;\n  assign T_3306_10 = T_3189;\n  assign T_3306_11 = T_3194;\n  assign T_3306_12 = 1'h1;\n  assign T_3306_13 = 1'h1;\n  assign T_3306_14 = 1'h1;\n  assign T_3306_15 = 1'h1;\n  assign T_3306_16 = T_3213;\n  assign T_3306_17 = 1'h1;\n  assign T_3306_18 = T_3222;\n  assign T_3306_19 = T_3228;\n  assign T_3306_20 = T_3232;\n  assign T_3306_21 = T_3236;\n  assign T_3306_22 = 1'h1;\n  assign T_3306_23 = 1'h1;\n  assign T_3306_24 = 1'h1;\n  assign T_3306_25 = 1'h1;\n  assign T_3306_26 = 1'h1;\n  assign T_3306_27 = 1'h1;\n  assign T_3306_28 = T_3259;\n  assign T_3306_29 = T_3264;\n  assign T_3306_30 = 1'h1;\n  assign T_3306_31 = 1'h1;\n  assign T_3344 = T_2757 | T_1378_0;\n  assign T_3347 = T_1378_11 & T_1378_10;\n  assign T_3349 = T_2761 | T_3347;\n  assign T_3359 = T_2772 | T_1378_28;\n  assign T_3362 = T_1378_4 & T_1378_3;\n  assign T_3363 = T_3362 & T_1378_2;\n  assign T_3364 = T_3363 & T_1378_1;\n  assign T_3366 = T_2776 | T_3364;\n  assign T_3370 = T_2783 | T_1378_12;\n  assign T_3382 = T_1378_6 & T_1378_5;\n  assign T_3384 = T_2796 | T_3382;\n  assign T_3387 = T_1378_24 & T_1378_23;\n  assign T_3389 = T_2801 | T_3387;\n  assign T_3404 = T_1378_22 & T_1378_21;\n  assign T_3405 = T_3404 & T_1378_20;\n  assign T_3406 = T_3405 & T_1378_19;\n  assign T_3408 = T_2818 | T_3406;\n  assign T_3414 = T_1378_18 & T_1378_17;\n  assign T_3415 = T_3414 & T_1378_16;\n  assign T_3417 = T_2828 | T_3415;\n  assign T_3420 = T_1378_27 & T_1378_26;\n  assign T_3421 = T_3420 & T_1378_25;\n  assign T_3423 = T_2834 | T_3421;\n  assign T_3427 = T_2840 | T_1378_7;\n  assign T_3431 = T_2844 | T_1378_15;\n  assign T_3452 = T_1378_14 & T_1378_13;\n  assign T_3454 = T_2866 | T_3452;\n  assign T_3457 = T_"}
{"text": "1378_9 & T_1378_8;\n  assign T_3459 = T_2871 | T_3457;\n  assign T_3501_0 = T_3344;\n  assign T_3501_1 = T_3349;\n  assign T_3501_2 = 1'h1;\n  assign T_3501_3 = 1'h1;\n  assign T_3501_4 = T_3359;\n  assign T_3501_5 = T_3366;\n  assign T_3501_6 = T_3370;\n  assign T_3501_7 = 1'h1;\n  assign T_3501_8 = 1'h1;\n  assign T_3501_9 = 1'h1;\n  assign T_3501_10 = T_3384;\n  assign T_3501_11 = T_3389;\n  assign T_3501_12 = 1'h1;\n  assign T_3501_13 = 1'h1;\n  assign T_3501_14 = 1'h1;\n  assign T_3501_15 = 1'h1;\n  assign T_3501_16 = T_3408;\n  assign T_3501_17 = 1'h1;\n  assign T_3501_18 = T_3417;\n  assign T_3501_19 = T_3423;\n  assign T_3501_20 = T_3427;\n  assign T_3501_21 = T_3431;\n  assign T_3501_22 = 1'h1;\n  assign T_3501_23 = 1'h1;\n  assign T_3501_24 = 1'h1;\n  assign T_3501_25 = 1'h1;\n  assign T_3501_26 = 1'h1;\n  assign T_3501_27 = 1'h1;\n  assign T_3501_28 = T_3454;\n  assign T_3501_29 = T_3459;\n  assign T_3501_30 = 1'h1;\n  assign T_3501_31 = 1'h1;\n  assign T_3536 = T_1141_bits_index[0];\n  assign T_3537 = T_1141_bits_index[1];\n  assign T_3538 = T_1141_bits_index[2];\n  assign T_3539 = T_1141_bits_index[3];\n  assign T_3540 = T_1141_bits_index[4];\n  assign T_3546 = {T_3537,T_3536};\n  assign T_3547 = {T_3540,T_3539};\n  assign T_3548 = {T_3547,T_3538};\n  assign T_3549 = {T_3548,T_3546};\n  assign GEN_0 = GEN_57;\n  assign GEN_27 = 5'h1 == T_3549 ? T_2916_1 : T_2916_0;\n  assign GEN_28 = 5'h2 == T_3549 ? T_2916_2 : GEN_27;\n  assign GEN_29 = 5'h3 == T_3549 ? T_2916_3 : GEN_28;\n  assign GEN_30 = 5'h4 == T_3549 ? T_2916_4 : GEN_29;\n  assign GEN_31 = 5'h5 == T_3549 ? T_2916_5 : GEN_30;\n  assign GEN_32 = 5'h6 == T_3549 ? T_2916_6 : GEN_31;\n  assign GEN_33 = 5'h7 == T_3549 ? T_2916_7 : GEN_32;\n  assign GEN_34 = 5'h8 == T_3549 ? T_2916_8 : GEN_33;\n  assign GEN_35 = 5'h9 == T_3549 ? T_2916_9 : GEN_34;\n  assign GEN_36 = 5'ha == T_3549 ? T_2916_10 : GEN_35;\n  assign GEN_37 = 5'hb == T_3549 ? T_2916_11 : GEN_36;\n  assign GEN_38 = 5'hc == T_3549 ? T_2916_12 : GEN_37;\n  assign GEN_39 = 5'hd == T_3549 ? T_2916_13 : GEN_38;\n  assign GEN_40 = 5'he == T_3549 ? T_2916_14 : GEN_39;\n  assign GEN_41 = 5'hf == T_3549 ? T_2916_15 : GEN_40;\n  assign GEN_42 = 5'h10 == T_3549 ? T_2916_16 : GEN_41;\n  assign GEN_43 = 5'h11 == T_3549 ? T_2916_17 : GEN_42;\n  assign GEN_44 = 5'h12 == T_3549 ? T_2916_18 : GEN_43;\n  assign GEN_45 = 5'h13 == T_3549 ? T_2916_19 : GEN_44;\n  assign GEN_46 = 5'h14 == T_3549 ? T_2916_20 : GEN_45;\n  assign GEN_47 = 5'h15 == T_3549 ? T_2916_21 : GEN_46;\n  assign GEN_48 = 5'h16 == T_3549 ? T_2916_22 : GEN_47;\n  assign GEN_49 = 5'h17 == T_3549 ? T_2916_23 : GEN_48;\n  assign GEN_50 = 5'h18 == T_3549 ? T_2916_24 : GEN_49;\n  assign GEN_51 = 5'h19 == T_3549 ? T_2916_25 : GEN_50;\n  assign GEN_52 = 5'h1a == T_3549 ? T_2916_26 : GEN_51;\n  assign GEN_53 = 5'h1b == T_3549 ? T_2916_27 : GEN_52;\n  assign GEN_54 = 5'h1c == T_3549 ? T_2916_28 : GEN_53;\n  assign GEN_55 = 5'h1d == T_3549 ? T_2916_29 : GEN_54;\n  assign GEN_56 = 5'h1e == T_3549 ? T_2916_30 : GEN_55;\n  assign GEN_57 = 5'h1f == T_3549 ? T_2916_31 : GEN_56;\n  assign GEN_1 = GEN_88;\n  assign GEN_58 = 5'h1 == T_3549 ? T_3111_1 : T_3111_0;\n  assign GEN_59 = 5'h2 == T_3549 ? T_3111_2 : GEN_58;\n  assign GEN_60 = 5'h3 == T_3549 ? T_3111_3 : GEN_59;\n  assign GEN_61 = 5'h4 == T_3549 ? T_3111_4 : GEN_60;\n  assign GEN_62 = 5'h5 == T_3549 ? T_3111_5 : GEN_61;\n  assign GEN_63 = 5'h6 == T_3549 ? T_3111_6 : GEN_62;\n  assign GEN_64 = 5'h7 == T_3549 ? T_3111_7 : GEN_63;\n  assign GEN_65 = 5'h8 == T_3549 ? T_3111_8 : GEN_64;\n  assign GEN_66 = 5'h9 == T_3549 ? T_3111_9 : GEN_65;\n  assign GEN_67 = 5'ha == T_3549 ? T_3111_10 : GEN_66;\n  assign GEN_68 = 5'hb == T_3549 ? T_3111_11 : GEN_67;\n  assign GEN_69 = 5'hc == T_3549 ? T_3111_12 : GEN_68;\n  assign GEN_70 = 5'hd == T_3549 ? T_3111_13 : GEN_69;\n  assign GEN_71 = 5'he == T_3549 ? T_3111_14 : GEN_70;\n  assign GEN_72 = 5'hf == T_3549 ? T_3111_15 : GEN_71;\n  assign GEN_73 = 5'h10 == T_3549 ? T_3111_16 : GEN_72;\n  assign GEN_74 = 5'h11 == T_3549 ? T_3111_17 : GEN_73;\n  assign GEN_75 = 5'h12 == T_3549 ? T_3111_18 : GEN_74;\n  assign GEN_76 = 5'h13 == T_3549 ? T_3111_19 : GEN_75;\n  assign GEN_77 = 5'h14 == T_3549 ? T_3111_20 : GEN_76;\n  assign GEN_78 = 5'h15 == T_3549 ? T_3111_21 : GEN_77;\n  assign GEN_79 = 5'h16 == T_3549 ? T_3111_22 : GEN_78;\n  assign GEN_80 = 5'h17 == T_3549 ? T_3111_23 : GEN_79;\n  assign GEN_81 = 5'h18 == T_3549 ? T_3111_24 : GEN_80;\n  assign GEN_82 = 5'h19 == T_3549 ? T_3111_25 : GEN_81;\n  assign GEN_83 = 5'h1a == T_3549 ? T_3111_26 : GEN_82;\n  assign GEN_84 = 5'h1b == T_3549 ? T_3111_27 : GEN_83;\n  assign GEN_85 = 5'h1c == T_3549 ? T_3111_28 : GEN_84;\n  assign GEN_86 = 5'h1d == T_3549 ? T_3111_29 : GEN_85;\n  assign GEN_87 = 5'h1e == T_3549 ? T_3111_30 : GEN_86;\n  assign GEN_88 = 5'h1f == T_3549 ? T_3111_31 : GEN_87;\n  assign T_3566 = T_1141_bits_read ? GEN_0 : GEN_1;\n  assign GEN_2 = GEN_119;\n  assign GEN_89 = 5'h1 == T_3549 ? T_3306_1 : T_3306_0;\n  assign GEN_90 = 5'h2 == T_3549 ? T_3306_2 : GEN_89;\n  assign GEN_91 = 5'h3 == T_3549 ? T_3306_3 : GEN_90;\n  assign GEN_92 = 5'h4 == T_3549 ? T_3306_4 : GEN_91;\n  assign GEN_93 = 5'h5 == T_3549 ? T_3306_5 : GEN_92;\n  assign GEN_94 = 5'h6 == T_3549 ? T_3306_6 : GEN_93;\n  assign GEN_95 = 5'h7 == T_3549 ? T_3306_7 : GEN_94;\n  assign GEN_96 = 5'h8 == T_3549 ? T_3306_8 : GEN_95;\n  assign GEN_97 = 5'h9 == T_3549 ? T_3306_9 : GEN_96;\n  assign GEN_98 = 5'ha == T_3549 ? T_3306_10 : GEN_97;\n  assign GEN_99 = 5'hb == T_3549 ? T_3306_11 : GEN_98;\n  assign GEN_100 = 5'hc == T_3549 ? T_3306_12 : GEN_99;\n  assign GEN_101 = 5'hd == T_3549 ? T_3306_13 : GEN_100;\n  assign GEN_102 = 5'he == T_3549 ? T_3306_14 : GEN_101;\n  assign GEN_103 = 5'hf == T_3549 ? T_3306_15 : GEN_102;\n  assign GEN_104 = 5'h10 == T_3549 ? T_3306_16 : GEN_103;\n  assign GEN_105 = 5'h11 == T_3549 ? T_3306_17 : GEN_104;\n  assign GEN_106 = 5'h12 == T_3549 ? T_3306_18 : GEN_105;\n  assign GEN_107 = 5'h13 == T_3549 ? T_3306_19 : GEN_106;\n  assign GEN_108 = 5'h14 == T_3549 ? T_3306_20 : GEN_107;\n  assign GEN_109 = 5'h15 == T_3549 ? T_3306_21 : GEN_108;\n  assign GEN_110 = 5'h16 == T_3549 ? T_3306_22 : GEN_109;\n  assign GEN_111 = 5'h17 == T_3549 ? T_3306_23 : GEN_110;\n  assign GEN_112 = 5'h18 == T_3549 ? T_3306_24 : GEN_111;\n  assign GEN_113 = 5'h19 == T_3549 ? T_3306_25 : GEN_112;\n  assign GEN_114 = 5'h1a == T_3549 ? T_3306_26 : GEN_113;\n  assign GEN_115 = 5'h1b == T_3549 ? T_3306_27 : GEN_114;\n  assign GEN_116 = 5'h1c == T_3549 ? T_3306_28 : GEN_115;\n  assign GEN_117 = 5'h1d == T_3549 ? T_3306_29 : GEN_116;\n  assign GEN_118 = 5'h1e == T_3549 ? T_3306_30 : GEN_117;\n  assign GEN_119 = 5'h1f == T_3549 ? T_3306_31 : GEN_118;\n  assign GEN_3 = GEN_150;\n  assign GEN_120 = 5'h1 == T_3549 ? T_3501_1 : T_3501_0;\n  assign GEN_121 = 5'h2 == T_3549 ? T_3501_2 : GEN_120;\n  assign GEN_122 = 5'h3 == T_3549 ? T_3501_3 : GEN_121;\n  assign GEN_123 = 5'h4 == T_3549 ? T_3501_4 : GEN_122;\n  assign GEN_124 = 5'h5 == T_3549 ? T_3501_5 : GEN_123;\n  assign GEN_125 = 5'h6 == T_3549 ? T_3501_6 : GEN_124;\n  assign GEN_126 = 5'h7 == T_3549 ? T_3501_7 : GEN_125;\n  assign GEN_127 = 5'h8 == T_3549 ? T_3501_8 : GEN_126;\n  assign GEN_128 = 5'h9 == T_3549 ? T_3501_9 : GEN_127;\n  assign GEN_129 = 5'ha == T_3549 ? T_3501_10 : GEN_128;\n  assign GEN_130 = 5'hb == T_3549 ? T_3501_11 : GEN_129;\n  assign GEN_131 = 5'hc == T_3549 ? T_3501_12 : GEN_130;\n  assign GEN_132 = 5'hd == T_3549 ? T_3501_13 : GEN_131;\n  assign GEN_133 = 5'he == T_3549 ? T_3501_14 : GEN_132;\n  assign GEN_134 = 5'hf == T_3549 ? T_3501_15 : GEN_133;\n  assign GEN_135 = 5'h10 == T_3549 ? T_3501_16 : GEN_134;\n  assign GEN_136 = 5'h11 == T_3549 ? T_3501_17 : GEN_135;\n  assign GEN_137 = 5'h12 == T_3549 ? T_3501_18 : GEN_136;\n  assign GEN_138 = 5'h13 == T_3549 ? T_3501_19 : GEN_137;\n  assign GEN_139 = 5'h14 == T_3549 ? T_3501_20 : GEN_138;\n  assign GEN_140 = 5'h15 == T_3549 ? T_3501_21 : GEN_139;\n  assign GEN_141 = 5'h16 == T_3549 ? T_3501_22 : GEN_140;\n  assign GEN_142 = 5'h17 == T_3549 ? T_3501_23 : GEN_141;\n  assign GEN_143 = 5'h18 == T_3549 ? T_3501_24 : GEN_142;\n  assign GEN_144 = 5'h19 == T_3549 ? T_3501_25 : GEN_143;\n  assign GEN_145 = 5'h1a == T_3549 ? T_3501_26 : GEN_144;\n  assign GEN_146 = 5'h1b == T_3549 ? T_3501_27 : GEN_145;\n  assign GEN_147 = 5'h1c == T_3549 ? T_3501_28 : GEN_146;\n  assign GEN_148 = 5'h1d == T_3549 ? T_3501_29 : GEN_147;\n  assign GEN_149 = 5'h1e == T_3549 ? T_3501_30 : GEN_148;\n  assign GEN_150 = 5'h1f == T_3549 ? T_3501_31 : GEN_149;\n  assign T_3569 = T_1141_bits_read ? GEN_2 : GEN_3;\n  assign T_3570 = T_1141_ready & T_3566;\n  assign T_3571 = T_1066_valid & T_3566;\n  assign T_3572 = T_1105_ready & T_3569;\n  assign T_3573 = T_1141_valid & T_3569;\n  assign T_3575 = 32'h1 << T_3549;\n  assign T_3576 = {T_1273,T_1228};\n  assign T_3578 = {2'h3,T_3576};\n  assign T_3579 = {T_1237,T_1345};\n  assign T_3580 = {1'h1,T_1282};\n  assign T_3581 = {T_3580,T_3579};\n  assign T_3582 = {T_3581,T_3578};\n  assign T_3584 = {T_1327,T_1246};\n  assign T_3585 = {T_3584,2'h3};\n  assign T_3589 = {4'hf,T_3585};\n  assign T_3590 = {T_3589,T_3582};\n  assign T_3591 = {1'h1,T_1318};\n  assign T_3592 = {T_1336,T_1309};\n  assign T_3593 = {T_3592,T_3591};\n  assign T_3594 = {T_1300,T_1255};\n  assign T_3596 = {2'h3,T_3594};\n  assign T_3597 = {T_3596,T_3593};\n  assign T_3601 = {T_1264,T_1291};\n  assign T_3603 = {2'h3,T_3601};\n  assign T_3604 = {T_3603,4'hf};\n  assign T_3605 = {T_3604,T_3597};\n  assign T_3606 = {T_3605,T_3590};\n  assign T_3607 = T_3575 & T_3606;\n  assign T_3642 = T_1066_valid & T_1141_ready;\n  assign T_3643 = T_3642 & T_1141_bits_read;\n  assign T_3644 = T_3607[0];\n  assign T_3645 = T_3643 & T_3644;\n  assign T_3648 = T_1141_bits_read == 1'h0;\n  assign T_3649 = T_3642 & T_3648;\n  assign T_3651 = T_3649 & T_3644;\n  assign T_3652 = T_1141_valid & T_1105_ready;\n  assign T_3653 = T_3652 & T_1141_bits_read;\n  assign T_3655 = T_3653 & T_3644;\n  assign T_3659 = T_3652 & T_3648;\n  assign T_3661 = T_3659 & T_3644;\n  assign T_3664 = T_3607[1];\n  assign T_3665 = T_3643 & T_3664;\n  assign T_3671 = T_3649 & T_3664;\n  assign T_3675 = T_3653 & T_3664;\n  assign T_3681 = T_3659 & T_3664;\n  assign T_3724 = T_3607[4];\n  assign T_3725 = T_3643 & T_3724;\n  assign T_3731 = T_3649 & T_3724;\n  assign T_3735 = T_3653 & T_3724;\n  assign T_3741 = T_3659 & T_3724;\n  assign T_3744 = T_3607[5];\n  assign T_3745 = T_3643 & T_3744;\n  assign T_3751 = T_3649 & T_3744;\n  assign T_3755 = T_3653 & T_3744;\n  assign T_3761 = T_3659 & T_3744;\n  assign T_3764 = T_3607[6];\n  assign T_3765 = T_3643 & T_3764;\n  assign T_3771 = T_3649 & T_3764;\n  assign T_3775 = T_3653 & T_3764;\n  assign T_3781 = T_3659 & T_3764;\n  assign T_3844 = T_3607[10];\n  assign T_3845 = T_3643 & T_3844;\n  assign T_3851 = T_3649 & T_3844;\n  assign T_3855 = T_3653 & T_3844;\n  assign T_3861 = T_3659 & T_3844;\n  assign T_3864 = T_3607[11];\n  assign T_3865 = T_3643 & T_3864;\n  assign T_3871 = T_3649 & T_3864;\n  assign T_3875 = T_3653 & T_3864;\n  assign T_3881 = T_3659 & T_3864;\n  assign T_3964 = T_3607[16];\n  assign T_3965 = T_3643 & T_3964;\n  assign T_3971 = T_3649 & T_3964;\n  assign T_3975 = T_3653 & T_3964;\n  assign T_3981 = T_3659 & T_3964;\n  assign T_4004 = T_3607[18];\n  assign T_4005 = T_3643 & T_4004;\n  assign T_4011 = T_3649 & T_4004;\n  assign T_4015 = T_3653 & T_4004;\n  assign T_4021 = T_3659 & T_4004;\n  assign T_4024 = T_3607[19];\n  assign T_4025 = T_3643 & T_4024;\n  assign T_4031 = T_3649 & T_4024;\n  assign T_4035 = T_3653 & T_4024;\n  assign T_4041 = T_3659 & T_4024;\n  assign T_4044 = T_3607[20];\n  assign T_4045 = T_3643 & T_4044;\n  assign T_4051 = T_3649 & T_4044;\n  assign T_4055 = T_3653 & T_4044;\n  assign T_4061 = T_3659 & T_4044;\n  assign T_4064 = T_3607[21];\n  assign T_4065 = T_3643 & T_4064;\n  assign T_4071 = T_3649 & T_4064;\n  assign T_4075 = T_3653 & T_4064;\n  assign T_4081 = T_3659 & T_4064;\n  assign T_4204 = T_3607[28];\n  assign T_4205 = T_3643 & T_4204;\n  assign T_4211 = T_3649 & T_4204;\n  assign T_4215 = T_3653 & T_4204;\n  assign T_4221 = T_3659 & T_4204;\n  assign T_4224 = T_3607[29];\n  assign T_4225 = T_3643 & T_4224;\n  assign T_4231 = T_3649 & T_4224;\n  assign T_4235 = T_3653 & T_4224;\n  assign T_4241 = T_3659 & T_4224;\n  assign T_4286 = T_3745 & T_1363_4;\n  assign T_4287 = T_4286 & T_1363_3;\n  assign T_4288 = T_4287 & T_1363_2;\n  assign T_4290 = T_3751 & T_1368_4;\n  assign T_4291 = T_4290 & T_1368_3;\n  assign T_4292 = T_4291 & T_1368_2;\n  assign T_4294 = T_3755 & T_1373_4;\n  assign T_4295 = T_4294 & T_1373_3;\n  assign T_4296 = T_4295 & T_1373_2;\n  assign T_4298 = T_3761 & T_1378_4;\n  assign T_4299 = T_4298 & T_1378_3;\n  assign T_4300 = T_4299 & T_1378_2;\n  assign T_4304 = T_4287 & T_1363_1;\n  assign T_4308 = T_4291 & T_1368_1;\n  assign T_4312 = T_4295 & T_1373_1;\n  assign T_4316 = T_4299 & T_1378_1;\n  assign T_4319 = T_4286 & T_1363_2;\n  assign T_4320 = T_4319 & T_1363_1;\n  assign T_4323 = T_4290 & T_1368_2;\n  assign T_4324 = T_4323 & T_1368_1;\n  assign T_4327 = T_4294 & T_1373_2;\n  assign T_4328 = T_4327 & T_1373_1;\n  assign T_4331 = T_4298 & T_1378_2;\n  assign T_4332 = T_4331 & T_1378_1;\n  assign T_4334 = T_3745 & T_1363_3;\n  assign T_4335 = T_4334 & T_1363_2;\n  assign T_4336 = T_4335 & T_1363_1;\n  assign T_4338 = T_3751 & T_1368_3;\n  assign T_4339 = T_4338 & T_1368_2;\n  assign T_4340 = T_4339 & T_1368_1;\n  assign T_4342 = T_3755 & T_1373_3;\n  assign T_4343 = T_4342 & T_1373_2;\n  assign T_4344 = T_4343 & T_1373_1;\n  assign T_4346 = T_3761 & T_1378_3;\n  assign T_4347 = T_4346 & T_1378_2;\n  assign T_4348 = T_4347 & T_1378_1;\n  assign T_4350 = T_3845 & T_1363_6;\n  assign T_4352 = T_3851 & T_1368_6;\n  assign T_4354 = T_3855 & T_1373_6;\n  assign T_4356 = T_3861 & T_1378_6;\n  assign T_4358 = T_3845 & T_1363_5;\n  assign T_4360 = T_3851 & T_1368_5;\n  assign T_4362 = T_3855 & T_1373_5;\n  assign T_4364 = T_3861 & T_1378_5;\n  assign T_4370 = T_4225 & T_1363_9;\n  assign T_4372 = T_4231 & T_1368_9;\n  assign T_4374 = T_4235 & T_1373_9;\n  assign T_4376 = T_4241 & T_1378_9;\n  assign T_4378 = T_4225 & T_1363_8;\n  assign T_4380 = T_4231 & T_1368_8;\n  assign T_4382 = T_4235 & T_1373_8;\n  assign T_4384 = T_4241 & T_1378_8;\n  assign T_4386 = T_3665 & T_1363_11;\n  assign T_4388 = T_3671 & T_1368_11;\n  assign T_4390 = T_3675 & T_1373_11;\n  assign T_4392 = T_3681 & T_1378_11;\n  assign T_4394 = T_3665 & T_1363_10;\n  assign T_4396 = T_3671 & T_1368_10;\n  assign T_4398 = T_3675 & T_1373_10;\n  assign T_4400 = T_3681 & T_1378_10;\n  assign T_4406 = T_4205 & T_1363_14;\n  assign T_4408 = T_4211 & T_1368_14;\n  assign T_4410 = T_4215 & T_1373_14;\n  assign T_4412 = T_4221 & T_1378_14;\n  assign T_4414 = T_4205 & T_1363_13;\n  assign T_4416 = T_4211 & T_1368_13;\n  assign T_4418 = T_4215 & T_1373_13;\n  assign T_4420 = T_4221 & T_1378_13;\n  assign T_4426 = T_4005 & T_1363_18;\n  assign T_4427 = T_4426 & T_1363_17;\n  assign T_4429 = T_4011 & T_1368_18;\n  assign T_4430 = T_4429 & T_1368_17;\n  assign T_4432 = T_4015 & T_1373_18;\n  assign T_4433 = T_4432 & T_1373_17;\n  assign T_4435 = T_4021 & T_1378_18;\n  assign T_4436 = T_4435 & T_1378_17;\n  assign T_4439 = T_4426 & T_1363_16;\n  assign T_4442 = T_4429 & T_1368_16;\n  assign T_4445 = T_4432 & T_1373_16;\n  assign T_4448 = T_4435 & T_1378_16;\n  assign T_4450 = T_4005 & T_1363_17;\n  assign T_4451 = T_4450 & T_1363_16;\n  assign T_4453 = T_4011 & T_1368_17;\n  assign T_4454 = T_4453 & T_1368_16;\n  assign T_4456 = T_4015 & T_1373_17;\n  assign T_4457 = T_4456 & T_1373_16;\n  assign T_4459 = T_4021 & T_1378_17;\n  assign T_4460 = T_4459 & T_1378_16;\n  assign T_4462 = T_3965 & T_1363_22;\n  assign T_4463 = T_4462 & T_1363_21;\n  assign T_4464 = T_4463 & T_1363_20;\n  assign T_4466 = T_3971 & T_1368_22;\n  assign T_4467 = T_4466 & T_1368_21;\n  assign T_4468 = T_4467 & T_1368_20;\n  assign T_4470 = T_3975 & T_1373_22;\n  assign T_4471 = T_4470 & T_1373_21;\n  assign T_4472 = T_4471 & T_1373_20;\n  assign T_4474 = T_3981 & T_1378_22;\n  assign T_4475 = T_4474 & T_1378_21;\n  assign T_4476 = T_4475 & T_1378_20;\n  assign T_4480 = T_4463 & T_1363_19;\n  assign T_4484 = T_4467 & T_1368_19;\n  assign T_4488 = T_4471 & T_1373_19;\n  assign T_4492 = T_4475 & T_1378_19;\n  assign T_4495 = T_4462 & T_1363_20;\n  assign T_4496 = T_4495 & T_1363_19;\n  assign T_4499 = T_4466 & T_1368_20;\n  assign T_4500 = T_4499 & T_1368_19;\n  assign T_4503 = T_4470 & T_1373_20;\n  assign T_4504 = T_4503 & T_1373_19;\n  assign T_4507 = T_4474 & T_1378_20;\n  assign T_4508 = T_4507 & T_1378_19;\n  assign T_4510 = T_3965 & T_1363_21;\n  assign T_4511 = T_4510 & T_1363_20;\n  assign T_4512 = T_4511 & T_1363_19;\n  assign T_4514 = T_3971 & T_1368_21;\n  assign T_4515 = T_4514 & T_1368_20;\n  assign T_4516 = T_4515 & T_1368_19;\n  assign T_4518 = T_3975 & T_1373_21;\n  assign T_4519 = T_4518 & T_1373_20;\n  assign T_4520 = T_4519 & T_1373_19;\n  assign T_4522 = T_3981 & T_1378_21;\n  assign T_4523 = T_4522 & T_1378_20;\n  assign T_4524 = T_4523 & T_1378_19;\n  assign T_4526 = T_3865 & T_1363_24;\n  assign T_4528 = T_3871 & T_1368_24;\n  assign T_4530 = T_3875 & T_1373_24;\n  assign T_4532 = T_3881 & T_1378_24;\n  assign T_4534 = T_3865 & T_1363_23;\n  assign T_4536 = T_3871 & T_1368_23;\n  assign T_4538 = T_3875 & T_1373_23;\n  assign T_4540 = T_3881 & T_1378_23;\n  assign T_4542 = T_4025 & T_1363_27;\n  assign T_4543 = T_4542 & T_1363_26;\n  assign T_4545 = T_4031 & T_1368_27;\n  assign T_4546 = T_4545 & T_1368_26;\n  assign T_4548 = T_4035 & T_1373_27;\n  assign T_4549 = T_4548 & T_1373_26;\n  assign T_4551 = T_4041 & T_1378_27;\n  assign T_4552 = T_4551 & T_1378_26;\n  assign T_4555 = T_4542 & T_1363_25;\n  assign T_4558 = T_4545 & T_1368_25;\n  assign T_4561 = T_4548 & T_1373_25;\n  assign T_4564 = T_4551 & T_1378_25;\n  assign T_4566 = T_4025 & T_1363_26;\n  assign T_4567 = T_4566 & T_1363_25;\n  assign T_4569 = T_4031 & T_1368_26;\n  assign T_4570 = T_4569 & T_1368_25;\n  assign T_4572 = T_4035 & T_1373_26;\n  assign T_4573 = T_4572 & T_1373_25;\n  assign T_4575 = T_4041 & T_1378_26;\n  assign T_4576 = T_4575 & T_1378_25;\n  assign T_4617_0 = T_1228;\n  assign T_4617_1 = T_1273;\n  assign T_4617_2 = 1'h1;\n  assign T_4617_3 = 1'h1;\n  assign T_4617_4 = T_1345;\n  assign T_4617_5 = T_1237;\n  assign T_4617_6 = T_1282;\n  assign T_4617_7 = 1'h1;\n  assign T_4617_8 = 1'h1;\n  assign T_4617_9 = 1'h1;\n  assign T_4617_10 = T_1246;\n  assign T_4617_11 = T_1327;\n  assign T_4617_12 = 1'h1;\n  assign T_4617_13 = 1'h1;\n  assign T_4617_14 = 1'h1;\n  assign T_4617_15 = 1'h1;\n  assign T_4617_16 = T_1318;\n  assign T_4617_17 = 1'h1;\n  assign T_4617_18 = T_1309;\n  assign T_4617_19 = T_1336;\n  assign T_4617_20 = T_1255;\n  assign T_4617_21 = T_1300;\n  assign T_4617_22 = 1'h1;\n  assign T_4617_23 = 1'h1;\n  assign T_4617_24 = 1'h1;\n  assign T_4617_25 = 1'h1;\n  assign T_4617_26 = 1'h1;\n  assign T_4617_27 = 1'h1;\n  assign T_4617_28 = T_1291;\n  assign T_4617_29 = T_1264;\n  assign T_4617_30 = 1'h1;\n  assign T_4617_31 = 1'h1;\n  assign T_4688_0 = {{20'd0}, ctrl_sck_div};\n  assign T_4688_1 = {{30'd0}, T_2075};\n  assign T_4688_2 = 32'h0;\n  assign T_4688_3 = 32'h0;\n  assign T_4688_4 = {{30'd0}, ctrl_cs_id};\n  assign T_4688_5 = {{28'd0}, T_1795};\n  assign T_4688_6 = {{30'd0}, ctrl_cs_mode};\n  assign T_4688_7 = 32'h0;\n  assign T_4688_8 = 32'h0;\n  assign T_4688_9 = 32'h0;\n  assign T_4688_10 = {{8'd0}, T_1875};\n  assign T_4688_11 = {{8'd0}, T_2595};\n  assign T_4688_12 = 32'h0;\n  assign T_4688_13 = 32'h0;\n  assign T_4688_14 = 32'h0;\n  assign T_4688_15 = 32'h0;\n  assign T_4688_16 = {{12'd0}, T_2515};\n  assign T_4688_17 = 32'h0;\n  assign T_4688_18 = T_2351;\n  assign T_4688_19 = T_2715;\n  assign T_4688_20 = {{28'd0}, ctrl_wm_tx};\n  assign T_4688_21 = {{28'd0}, ctrl_wm_rx};\n  assign T_4688_22 = 32'h0;\n  assign T_4688_23 = 32'h0;\n  assign T_4688_24 = 32'h0;\n  assign T_4688_25 = 32'h0;\n  assign T_4688_26 = 32'h0;\n  assign T_4688_27 = 32'h0;\n  assign T_4688_28 = {{30'd0}, T_2195};\n  assign T_4688_29 = {{30'd0}, T_1995};\n  assign T_4688_30 = 32'h0;\n  assign T_4688_31 = 32'h0;\n  assign GEN_4 = GEN_181;\n  assign GEN_151 = 5'h1 == T_3549 ? T_4617_1 : T_4617_0;\n  assign GEN_152 = 5'h2 == T_3549 ? T_4617_2 : GEN_151;\n  assign GEN_153 = 5'h3 == T_3549 ? T_4617_3 : GEN_152;\n  assign GEN_154 = 5'h4 == T_3549 ? T_4617_4 : GEN_153;\n  assign GEN_155 = 5'h5 ="}
{"text": "= T_3549 ? T_4617_5 : GEN_154;\n  assign GEN_156 = 5'h6 == T_3549 ? T_4617_6 : GEN_155;\n  assign GEN_157 = 5'h7 == T_3549 ? T_4617_7 : GEN_156;\n  assign GEN_158 = 5'h8 == T_3549 ? T_4617_8 : GEN_157;\n  assign GEN_159 = 5'h9 == T_3549 ? T_4617_9 : GEN_158;\n  assign GEN_160 = 5'ha == T_3549 ? T_4617_10 : GEN_159;\n  assign GEN_161 = 5'hb == T_3549 ? T_4617_11 : GEN_160;\n  assign GEN_162 = 5'hc == T_3549 ? T_4617_12 : GEN_161;\n  assign GEN_163 = 5'hd == T_3549 ? T_4617_13 : GEN_162;\n  assign GEN_164 = 5'he == T_3549 ? T_4617_14 : GEN_163;\n  assign GEN_165 = 5'hf == T_3549 ? T_4617_15 : GEN_164;\n  assign GEN_166 = 5'h10 == T_3549 ? T_4617_16 : GEN_165;\n  assign GEN_167 = 5'h11 == T_3549 ? T_4617_17 : GEN_166;\n  assign GEN_168 = 5'h12 == T_3549 ? T_4617_18 : GEN_167;\n  assign GEN_169 = 5'h13 == T_3549 ? T_4617_19 : GEN_168;\n  assign GEN_170 = 5'h14 == T_3549 ? T_4617_20 : GEN_169;\n  assign GEN_171 = 5'h15 == T_3549 ? T_4617_21 : GEN_170;\n  assign GEN_172 = 5'h16 == T_3549 ? T_4617_22 : GEN_171;\n  assign GEN_173 = 5'h17 == T_3549 ? T_4617_23 : GEN_172;\n  assign GEN_174 = 5'h18 == T_3549 ? T_4617_24 : GEN_173;\n  assign GEN_175 = 5'h19 == T_3549 ? T_4617_25 : GEN_174;\n  assign GEN_176 = 5'h1a == T_3549 ? T_4617_26 : GEN_175;\n  assign GEN_177 = 5'h1b == T_3549 ? T_4617_27 : GEN_176;\n  assign GEN_178 = 5'h1c == T_3549 ? T_4617_28 : GEN_177;\n  assign GEN_179 = 5'h1d == T_3549 ? T_4617_29 : GEN_178;\n  assign GEN_180 = 5'h1e == T_3549 ? T_4617_30 : GEN_179;\n  assign GEN_181 = 5'h1f == T_3549 ? T_4617_31 : GEN_180;\n  assign GEN_5 = GEN_212;\n  assign GEN_182 = 5'h1 == T_3549 ? T_4688_1 : T_4688_0;\n  assign GEN_183 = 5'h2 == T_3549 ? T_4688_2 : GEN_182;\n  assign GEN_184 = 5'h3 == T_3549 ? T_4688_3 : GEN_183;\n  assign GEN_185 = 5'h4 == T_3549 ? T_4688_4 : GEN_184;\n  assign GEN_186 = 5'h5 == T_3549 ? T_4688_5 : GEN_185;\n  assign GEN_187 = 5'h6 == T_3549 ? T_4688_6 : GEN_186;\n  assign GEN_188 = 5'h7 == T_3549 ? T_4688_7 : GEN_187;\n  assign GEN_189 = 5'h8 == T_3549 ? T_4688_8 : GEN_188;\n  assign GEN_190 = 5'h9 == T_3549 ? T_4688_9 : GEN_189;\n  assign GEN_191 = 5'ha == T_3549 ? T_4688_10 : GEN_190;\n  assign GEN_192 = 5'hb == T_3549 ? T_4688_11 : GEN_191;\n  assign GEN_193 = 5'hc == T_3549 ? T_4688_12 : GEN_192;\n  assign GEN_194 = 5'hd == T_3549 ? T_4688_13 : GEN_193;\n  assign GEN_195 = 5'he == T_3549 ? T_4688_14 : GEN_194;\n  assign GEN_196 = 5'hf == T_3549 ? T_4688_15 : GEN_195;\n  assign GEN_197 = 5'h10 == T_3549 ? T_4688_16 : GEN_196;\n  assign GEN_198 = 5'h11 == T_3549 ? T_4688_17 : GEN_197;\n  assign GEN_199 = 5'h12 == T_3549 ? T_4688_18 : GEN_198;\n  assign GEN_200 = 5'h13 == T_3549 ? T_4688_19 : GEN_199;\n  assign GEN_201 = 5'h14 == T_3549 ? T_4688_20 : GEN_200;\n  assign GEN_202 = 5'h15 == T_3549 ? T_4688_21 : GEN_201;\n  assign GEN_203 = 5'h16 == T_3549 ? T_4688_22 : GEN_202;\n  assign GEN_204 = 5'h17 == T_3549 ? T_4688_23 : GEN_203;\n  assign GEN_205 = 5'h18 == T_3549 ? T_4688_24 : GEN_204;\n  assign GEN_206 = 5'h19 == T_3549 ? T_4688_25 : GEN_205;\n  assign GEN_207 = 5'h1a == T_3549 ? T_4688_26 : GEN_206;\n  assign GEN_208 = 5'h1b == T_3549 ? T_4688_27 : GEN_207;\n  assign GEN_209 = 5'h1c == T_3549 ? T_4688_28 : GEN_208;\n  assign GEN_210 = 5'h1d == T_3549 ? T_4688_29 : GEN_209;\n  assign GEN_211 = 5'h1e == T_3549 ? T_4688_30 : GEN_210;\n  assign GEN_212 = 5'h1f == T_3549 ? T_4688_31 : GEN_211;\n  assign T_4725 = GEN_4 ? GEN_5 : 32'h0;\n  assign T_4726 = T_1105_bits_extra[9:8];\n  assign T_4728 = T_1105_bits_extra[7:3];\n  assign T_4729 = T_1105_bits_extra[2:0];\n  assign T_4740_opcode = 3'h0;\n  assign T_4740_param = 2'h0;\n  assign T_4740_size = T_4729;\n  assign T_4740_source = T_4728;\n  assign T_4740_sink = 1'h0;\n  assign T_4740_addr_lo = T_4726;\n  assign T_4740_data = 32'h0;\n  assign T_4740_error = 1'h0;\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_proto <= T_955_fmt_proto;\n    end else begin\n      if (T_2375) begin\n        ctrl_fmt_proto <= T_2096;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_endian <= T_955_fmt_endian;\n    end else begin\n      if (T_2415) begin\n        ctrl_fmt_endian <= T_1736;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_iodir <= T_955_fmt_iodir;\n    end else begin\n      if (T_2455) begin\n        ctrl_fmt_iodir <= T_1776;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_fmt_len <= T_955_fmt_len;\n    end else begin\n      if (T_2495) begin\n        ctrl_fmt_len <= T_2496;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_sck_div <= T_955_sck_div;\n    end else begin\n      if (T_1615) begin\n        ctrl_sck_div <= T_1616;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_sck_pol <= T_955_sck_pol;\n    end else begin\n      if (T_2055) begin\n        ctrl_sck_pol <= T_1696;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_sck_pha <= T_955_sck_pha;\n    end else begin\n      if (T_2015) begin\n        ctrl_sck_pha <= T_1656;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_id <= T_955_cs_id;\n    end else begin\n      if (T_2735) begin\n        ctrl_cs_id <= T_2096;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_dflt_0 <= T_955_cs_dflt_0;\n    end else begin\n      if (T_1655) begin\n        ctrl_cs_dflt_0 <= T_1656;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_dflt_1 <= T_955_cs_dflt_1;\n    end else begin\n      if (T_1695) begin\n        ctrl_cs_dflt_1 <= T_1696;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_dflt_2 <= T_955_cs_dflt_2;\n    end else begin\n      if (T_1735) begin\n        ctrl_cs_dflt_2 <= T_1736;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_dflt_3 <= T_955_cs_dflt_3;\n    end else begin\n      if (T_1775) begin\n        ctrl_cs_dflt_3 <= T_1776;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_cs_mode <= T_955_cs_mode;\n    end else begin\n      if (T_2095) begin\n        ctrl_cs_mode <= T_2096;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_cssck <= T_955_dla_cssck;\n    end else begin\n      if (T_1815) begin\n        ctrl_dla_cssck <= T_1816;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_sckcs <= T_955_dla_sckcs;\n    end else begin\n      if (T_1855) begin\n        ctrl_dla_sckcs <= T_1856;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_intercs <= T_955_dla_intercs;\n    end else begin\n      if (T_2535) begin\n        ctrl_dla_intercs <= T_1816;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_dla_interxfr <= T_955_dla_interxfr;\n    end else begin\n      if (T_2575) begin\n        ctrl_dla_interxfr <= T_1856;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_wm_tx <= T_955_wm_tx;\n    end else begin\n      if (T_1895) begin\n        ctrl_wm_tx <= T_1896;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ctrl_wm_rx <= T_955_wm_rx;\n    end else begin\n      if (T_2215) begin\n        ctrl_wm_rx <= T_1896;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ie_txwm <= T_1024_txwm;\n    end else begin\n      if (T_2135) begin\n        ie_txwm <= T_1656;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ie_rxwm <= T_1024_rxwm;\n    end else begin\n      if (T_2175) begin\n        ie_rxwm <= T_1696;\n      end\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top level module of qspi_4cs\n//\n// ====================================================================\n\nmodule sirv_qspi_4cs_top(\n  input   clk,\n  input   rst_n,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [32-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  output  io_port_cs_1,\n  output  io_port_cs_2,\n  output  io_port_cs_3,\n  output  io_tl_i_0_0 \n);\n\n\n  wire  io_tl_r_0_a_ready;\n  assign  i_icb_cmd_ready  = io_tl_r_0_a_ready;\n  wire  io_tl_r_0_a_valid  = i_icb_cmd_valid;\n  wire  [2:0] io_tl_r_0_a_bits_opcode  = i_icb_cmd_read ? 3'h4 : 3'h0;\n  wire  [2:0] io_tl_r_0_a_bits_param  = 3'b0;\n  wire  [2:0] io_tl_r_0_a_bits_size = 3'd2;\n  wire  [4:0] io_tl_r_0_a_bits_source  = 5'b0;\n  wire  [28:0] io_tl_r_0_a_bits_address  = i_icb_cmd_addr[28:0];\n  wire  [3:0] io_tl_r_0_a_bits_mask  = 4'b1111;\n  wire  [31:0] io_tl_r_0_a_bits_data  = i_icb_cmd_wdata;\n\n  \n  wire  io_tl_r_0_d_ready = i_icb_rsp_ready;\n\n  wire  [2:0] io_tl_r_0_d_bits_opcode;\n  wire  [1:0] io_tl_r_0_d_bits_param;\n  wire  [2:0] io_tl_r_0_d_bits_size;\n  wire  [4:0] io_tl_r_0_d_bits_source;\n  wire  io_tl_r_0_d_bits_sink;\n  wire  [1:0] io_tl_r_0_d_bits_addr_lo;\n  wire  [31:0] io_tl_r_0_d_bits_data;\n  wire  io_tl_r_0_d_bits_error;\n  wire  io_tl_r_0_d_valid;\n\n  assign  i_icb_rsp_valid = io_tl_r_0_d_valid;\n  assign  i_icb_rsp_rdata = io_tl_r_0_d_bits_data;\n\n  // Not used\n  wire  io_tl_r_0_b_ready = 1'b0;\n  wire  io_tl_r_0_b_valid;\n  wire  [2:0] io_tl_r_0_b_bits_opcode;\n  wire  [1:0] io_tl_r_0_b_bits_param;\n  wire  [2:0] io_tl_r_0_b_bits_size;\n  wire  [4:0] io_tl_r_0_b_bits_source;\n  wire  [28:0] io_tl_r_0_b_bits_address;\n  wire  [3:0] io_tl_r_0_b_bits_mask;\n  wire  [31:0] io_tl_r_0_b_bits_data;\n\n  // Not used\n  wire  io_tl_r_0_c_ready;\n  wire  io_tl_r_0_c_valid = 1'b0;\n  wire  [2:0] io_tl_r_0_c_bits_opcode = 3'b0;\n  wire  [2:0] io_tl_r_0_c_bits_param = 3'b0;\n  wire  [2:0] io_tl_r_0_c_bits_size = 3'd2;\n  wire  [4:0] io_tl_r_0_c_bits_source = 5'b0;\n  wire  [28:0] io_tl_r_0_c_bits_address = 29'b0;\n  wire  [31:0] io_tl_r_0_c_bits_data = 32'b0;\n  wire  io_tl_r_0_c_bits_error = 1'b0;\n\n  // Not used\n  wire  io_tl_r_0_e_ready;\n  wire  io_tl_r_0_e_valid = 1'b0;\n  wire  io_tl_r_0_e_bits_sink = 1'b0;\n\nsirv_qspi_4cs u_sirv_qspi_4cs(\n  .clock                            (clk                              ),\n  .reset                            (~rst_n                           ),\n\n  .io_tl_r_0_a_ready                  (io_tl_r_0_a_ready                  ),\n  .io_tl_r_0_a_valid                  (io_tl_r_0_a_valid                  ),\n  .io_tl_r_0_a_bits_opcode            (io_tl_r_0_a_bits_opcode            ),\n  .io_tl_r_0_a_bits_param             (io_tl_r_0_a_bits_param             ),\n  .io_tl_r_0_a_bits_size              (io_tl_r_0_a_bits_size              ),\n  .io_tl_r_0_a_bits_source            (io_tl_r_0_a_bits_source            ),\n  .io_tl_r_0_a_bits_address           (io_tl_r_0_a_bits_address           ),\n  .io_tl_r_0_a_bits_mask              (io_tl_r_0_a_bits_mask              ),\n  .io_tl_r_0_a_bits_data              (io_tl_r_0_a_bits_data              ),\n  .io_tl_r_0_b_ready                  (io_tl_r_0_b_ready                  ),\n  .io_tl_r_0_b_valid                  (io_tl_r_0_b_valid                  ),\n  .io_tl_r_0_b_bits_opcode            (io_tl_r_0_b_bits_opcode            ),\n  .io_tl_r_0_b_bits_param             (io_tl_r_0_b_bits_param             ),\n  .io_tl_r_0_b_bits_size              (io_tl_r_0_b_bits_size              ),\n  .io_tl_r_0_b_bits_source            (io_tl_r_0_b_bits_source            ),\n  .io_tl_r_0_b_bits_address           (io_tl_r_0_b_bits_address           ),\n  .io_tl_r_0_b_bits_mask              (io_tl_r_0_b_bits_mask              ),\n  .io_tl_r_0_b_bits_data              (io_tl_r_0_b_bits_data              ),\n  .io_tl_r_0_c_ready                  (io_tl_r_0_c_ready                  ),\n  .io_tl_r_0_c_valid                  (io_tl_r_0_c_valid                  ),\n  .io_tl_r_0_c_bits_opcode            (io_tl_r_0_c_bits_opcode            ),\n  .io_tl_r_0_c_bits_param             (io_tl_r_0_c_bits_param             ),\n  .io_tl_r_0_c_bits_size              (io_tl_r_0_c_bits_size              ),\n  .io_tl_r_0_c_bits_source            (io_tl_r_0_c_bits_source            ),\n  .io_tl_r_0_c_bits_address           (io_tl_r_0_c_bits_address           ),\n  .io_tl_r_0_c_bits_data              (io_tl_r_0_c_bits_data              ),\n  .io_tl_r_0_c_bits_error             (io_tl_r_0_c_bits_error             ),\n  .io_tl_r_0_d_ready                  (io_tl_r_0_d_ready                  ),\n  .io_tl_r_0_d_valid                  (io_tl_r_0_d_valid                  ),\n  .io_tl_r_0_d_bits_opcode            (io_tl_r_0_d_bits_opcode            ),\n  .io_tl_r_0_d_bits_param             (io_tl_r_0_d_bits_param             ),\n  .io_tl_r_0_d_bits_size              (io_tl_r_0_d_bits_size              ),\n  .io_tl_r_0_d_bits_source            (io_tl_r_0_d_bits_source            ),\n  .io_tl_r_0_d_bits_sink              (io_tl_r_0_d_bits_sink              ),\n  .io_tl_r_0_d_bits_addr_lo           (io_tl_r_0_d_bits_addr_lo           ),\n  .io_tl_r_0_d_bits_data              (io_tl_r_0_d_bits_data              ),\n  .io_tl_r_0_d_bits_error             (io_tl_r_0_d_bits_error             ),\n  .io_tl_r_0_e_ready                  (io_tl_r_0_e_ready                  ),\n  .io_tl_r_0_e_valid                  (io_tl_r_0_e_valid                  ),\n  .io_tl_r_0_e_bits_sink              (io_tl_r_0_e_bits_sink              ),\n\n  .io_port_sck       (io_port_sck    ),\n  .io_port_dq_0_i    (io_port_dq_0_i ),\n  .io_port_dq_0_o    (io_port_dq_0_o ),\n  .io_port_dq_0_oe   (io_port_dq_0_oe),\n  .io_port_dq_1_i    (io_port_dq_1_i ),\n  .io_port_dq_1_o    (io_port_dq_1_o ),\n  .io_port_dq_1_oe   (io_port_dq_1_oe),\n  .io_port_dq_2_i    (io_port_dq_2_i ),\n  .io_port_dq_2_o    (io_port_dq_2_o ),\n  .io_port_dq_2_oe   (io_port_dq_2_oe),\n  .io_port_dq_3_i    (io_port_dq_3_i ),\n  .io_port_dq_3_o    (io_port_dq_3_o ),\n  .io_port_dq_3_oe   (io_port_dq_3_oe), \n  .io_port_cs_0      (io_port_cs_0   ),\n  .io_port_cs_1      (io_port_cs_1   ),\n  .io_port_cs_2      (io_port_cs_2   ),\n  .io_port_cs_3      (io_port_cs_3   ),\n  .io_tl_i_0_0       (io_tl_i_0_0    ) \n\n);\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_qspi_arbiter(\n  input   clock,\n  input   reset,\n  output  io_inner_0_tx_ready,\n  input   io_inner_0_tx_valid,\n  input  [7:0] io_inner_0_tx_bits,\n  output  io_inner_0_rx_valid,\n  output [7:0] io_inner_0_rx_bits,\n  input  [7:0] io_inner_0_cnt,\n  input  [1:0] io_inner_0_fmt_proto,\n  input   io_inner_0_fmt_endian,\n  input   io_inner_0_fmt_iodir,\n  input   io_inner_0_cs_set,\n  input   io_inner_0_cs_clear,\n  input   io_inner_0_cs_hold,\n  output  io_inner_0_active,\n  input   io_inner_0_lock,\n  output  io_inner_1_tx_ready,\n  input   io_inner_1_tx_valid,\n  input  [7:0] io_inner_1_tx_bits,\n  output  io_inner_1_rx_valid,\n  output [7:0] io_inner_1_rx_bits,\n  input  [7:0] io_inner_1_cnt,\n  input  [1:0] io_inner_1_fmt_proto,\n  input   io_inner_1_fmt_endian,\n  input   io_inner_1_fmt_iodir,\n  input   io_inner_1_cs_set,\n  input   io_inner_1_cs_clear,\n  input   io_inner_1_cs_hold,\n  output  io_inner_1_active,\n  input   io_inner_1_lock,\n  input   io_outer_tx_ready,\n  output  io_outer_tx_valid,\n  output [7:0] io_outer_tx_bits,\n  input   io_outer_rx_valid,\n  input  [7:0] io_outer_rx_bits,\n  output [7:0] io_outer_cnt,\n  output [1:0] io_outer_fmt_proto,\n  output  io_outer_fmt_endian,\n  output  io_outer_fmt_iodir,\n  output  io_outer_cs_set,\n  output  io_outer_cs_clear,\n  output  io_outer_cs_hold,\n  input   io_outer_active,\n  input   io_sel\n);\n  wire  T_335_0;\n  wire  T_335_1;\n  reg  sel_0;\n  reg [31:0] GEN_4;\n  reg  sel_1;\n  reg [31:0] GEN_5;\n  wire  T_346;\n  wire  T_349;\n  wire  T_351;\n  wire  T_352;\n  wire [7:0] T_354;\n  wire [7:0] T_356;\n  wire [7:0] T_358;\n  wire [7:0] T_359;\n  wire [7:0] T_361;\n  wire [7:0] T_363;\n  wire [7:0] T_365;\n  wire [7:0] T_366;\n  wire [2:0] T_367;\n  wire [3:0] T_368;\n  wire [3:0] T_370;\n  wire [2:0] T_371;\n  wire [3:0] T_372;\n  wire [3:0] T_374;\n  wire [3:0] T_379;\n  wire [1:0] T_384_proto;\n  wire  T_384_endian;\n  wire  T_384_iodir;\n  wire  T_388;\n  wire  T_389;\n  wire [1:0] T_390;\n  wire [1:0] T_391;\n  wire [2:0] T_392;\n  wire [2:0] T_394;\n  wire [1:0] T_395;\n  wire [2:0] T_396;\n  wire [2:0] T_398;\n  wire [2:0] T_406;\n  wire  T_414_set;\n  wire  T_414_clear;\n  wire  T_414_hold;\n  wire  T_421;\n  wire  T_422;\n  wire  T_423;\n  wire  T_424;\n  wire  T_425;\n  wire  T_426;\n  wire  T_427;\n  wire  T_428;\n  wire  T_429;\n  wire  T_431;\n  wire  nsel_0;\n  wire  nsel_1;\n  wire  T_445;\n  wire  T_448;\n  wire  T_450;\n  wire  lock;\n  wire  T_452;\n  wire [1:0] T_453;\n  wire [1:0] T_454;\n  wire  T_455;\n  wire  GEN_0;\n  wire  GEN_1;\n  wire  GEN_2;\n  wire  GEN_3;\n  assign io_inner_0_tx_ready = T_424;\n  assign io_inner_0_rx_valid = T_425;\n  assign io_inner_0_rx_bits = io_outer_rx_bits;\n  assign io_inner_0_active = T_426;\n  assign io_inner_1_tx_ready = T_427;\n  assign io_inner_1_rx_valid = T_428;\n  assign io_inner_1_rx_bits = io_outer_rx_bits;\n  assign io_inner_1_active = T_429;\n  assign io_outer_tx_valid = T_352;\n  assign io_outer_tx_bits = T_359;\n  assign io_outer_cnt = T_366;\n  assign io_outer_fmt_proto = T_384_proto;\n  assign io_outer_fmt_endian = T_384_endian;\n  assign io_outer_fmt_iodir = T_384_iodir;\n  assign io_outer_cs_set = T_414_set;\n  assign io_outer_cs_clear = GEN_3;\n  assign io_outer_cs_hold = T_414_hold;\n  assign T_335_0 = 1'h1;\n  assign T_335_1 = 1'h0;\n  assign T_346 = sel_0 ? io_inner_0_tx_valid : 1'h0;\n  assign T_349 = sel_1 ? io_inner_1_tx_valid : 1'h0;\n  assign T_351 = T_346 | T_349;\n  assign T_352 = T_351;\n  assign T_354 = sel_0 ? io_inner_0_tx_bits : 8'h0;\n  assign T_356 = sel_1 ? io_inner_1_tx_bits : 8'h0;\n  assign T_358 = T_354 | T_356;\n  assign T_359 = T_358;\n  assign T_361 = sel_0 ? io_inner_0_cnt : 8'h0;\n  assign T_363 = sel_1 ? io_inner_1_cnt : 8'h0;\n  assign T_365 = T_361 | T_363;\n  assign T_366 = T_365;\n  assign T_367 = {io_inner_0_fmt_proto,io_inner_0_fmt_endian};\n  assign T_368 = {T_367,io_inner_0_fmt_iodir};\n  assign T_370 = sel_0 ? T_368 : 4'h0;\n  assign T_371 = {io_inner_1_fmt_proto,io_inner_1_fmt_endian};\n  assign T_372 = {T_371,io_inner_1_fmt_iodir};\n  assign T_374 = sel_1 ? T_372 : 4'h0;\n  assign T_379 = T_370 | T_374;\n  assign T_384_proto = T_390;\n  assign T_384_endian = T_389;\n  assign T_384_iodir = T_388;\n  assign T_388 = T_379[0];\n  assign T_389 = T_379[1];\n  assign T_390 = T_379[3:2];\n  assign T_391 = {io_inner_0_cs_set,io_inner_0_cs_clear};\n  assign T_392 = {T_391,io_inner_0_cs_hold};\n  assign T_394 = sel_0 ? T_392 : 3'h0;\n  assign T_395 = {io_inner_1_cs_set,io_inner_1_cs_clear};\n  assign T_396 = {T_395,io_inner_1_cs_hold};\n  assign T_398 = sel_1 ? T_396 : 3'h0;\n  assign T_406 = T_394 | T_398;\n  assign T_414_set = T_423;\n  assign T_414_clear = T_422;\n  assign T_414_hold = T_421;\n  assign T_421 = T_406[0];\n  assign T_422 = T_406[1];\n  assign T_423 = T_406[2];\n  assign T_424 = io_outer_tx_ready & sel_0;\n  assign T_425 = io_outer_rx_valid & sel_0;\n  assign T_426 = io_outer_active & sel_0;\n  assign T_427 = io_outer_tx_ready & sel_1;\n  assign T_428 = io_outer_rx_valid & sel_1;\n  assign T_429 = io_outer_active & sel_1;\n  assign T_431 = io_sel == 1'h0;\n  assign nsel_0 = T_431;\n  assign nsel_1 = io_sel;\n  assign T_445 = sel_0 ? io_inner_0_lock : 1'h0;\n  assign T_448 = sel_1 ? io_inner_1_lock : 1'h0;\n  assign T_450 = T_445 | T_448;\n  assign lock = T_450;\n  assign T_452 = lock == 1'h0;\n  assign T_453 = {sel_1,sel_0};\n  assign T_454 = {nsel_1,nsel_0};\n  assign T_455 = T_453 != T_454;\n  assign GEN_0 = T_455 ? 1'h1 : T_414_clear;\n  assign GEN_1 = T_452 ? nsel_0 : sel_0;\n  assign GEN_2 = T_452 ? nsel_1 : sel_1;\n  assign GEN_3 = T_452 ? GEN_0 : T_414_clear;\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sel_0 <= T_335_0;\n    end else begin\n      if (T_452) begin\n        sel_0 <= nsel_0;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sel_1 <= T_335_1;\n    end else begin\n      if (T_452) begin\n        sel_1 <= nsel_1;\n      end\n    end\n  \nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_qspi_fifo(\n  input   clock,\n  input   reset,\n  input  [1:0] io_ctrl_fmt_proto,\n  input   io_ctrl_fmt_endian,\n  input   io_ctrl_fmt_iodir,\n  input  [3:0] io_ctrl_fmt_len,\n  input  [1:0] io_ctrl_cs_mode,\n  input  [3:0] io_ctrl_wm_tx,\n  input  [3:0] io_ctrl_wm_rx,\n  input   io_link_tx_ready,\n  output  io_link_tx_valid,\n  output [7:0] io_link_tx_bits,\n  input   io_link_rx_valid,\n  input  [7:0] io_link_rx_bits,\n  output [7:0] io_link_cnt,\n  output [1:0] io_link_fmt_proto,\n  output  io_link_fmt_endian,\n  output  io_link_fmt_iodir,\n  output  io_link_cs_set,\n  output  io_link_cs_clear,\n  output  io_link_cs_hold,\n  input   io_link_active,\n  output  io_link_lock,\n  output  io_tx_ready,\n  input   io_tx_valid,\n  input  [7:0] io_tx_bits,\n  input   io_rx_ready,\n  output  io_rx_valid,\n  output [7:0] io_rx_bits,\n  output  io_ip_txwm,\n  output  io_ip_rxwm\n);\n  wire  txq_clock;\n  wire  txq_reset;\n  wire  txq_io_enq_ready;\n  wire  txq_io_enq_valid;\n  wire [7:0] txq_io_enq_bits;\n  wire  txq_io_deq_ready;\n  wire  txq_io_deq_valid;\n  wire [7:0] txq_io_deq_bits;\n  wire [3:0] txq_io_count;\n  wire  rxq_clock;\n  wire  rxq_reset;\n  wire  rxq_io_enq_ready;\n  wire  rxq_io_enq_valid;\n  wire [7:0] rxq_io_enq_bits;\n  wire  rxq_io_deq_ready;\n  wire  rxq_io_deq_valid;\n  wire [7:0] rxq_io_deq_bits;\n  wire [3:0] rxq_io_count;\n  wire  fire_tx;\n  reg  rxen;\n  reg [31:0] GEN_5;\n  wire  T_94;\n  wire  GEN_0;\n  wire  T_96;\n  wire  GEN_1;\n  wire  T_97;\n  wire  T_98;\n  wire  T_99;\n  wire [2:0] T_101;\n  wire [1:0] T_102;\n  wire [3:0] T_104;\n  wire [2:0] T_106;\n  wire [1:0] T_108;\n  wire [3:0] GEN_2;\n  wire [3:0] T_110;\n  wire [3:0] GEN_3;\n  wire [3:0] T_111;\n  wire [3:0] cnt_quot;\n  wire  T_112;\n  wire [1:0] T_115;\n  wire  T_117;\n  wire [2:0] T_118;\n  wire  T_120;\n  wire  T_123;\n  wire  T_126;\n  wire  T_129;\n  wire  T_131;\n  wire  T_132;\n  wire  cnt_rmdr;\n  wire [3:0] GEN_4;\n  wire [4:0] T_133;\n  wire [3:0] T_134;\n  reg [1:0] cs_mode;\n  reg [31:0] GEN_6;\n  wire  cs_mode_hold;\n  wire  cs_mode_off;\n  wire  cs_update;\n  wire  T_135;\n  wire  cs_clear;\n  wire  T_138;\n  wire  T_139;\n  wire  T_140;\n  wire  T_142;\n  wire  T_143;\n  wire  T_144;\n  sirv_queue_1 txq (\n    .clock(txq_clock),\n    .reset(txq_reset),\n    .io_enq_ready(txq_io_enq_ready),\n    .io_enq_valid(txq_io_enq_valid),\n    .io_enq_bits(txq_io_enq_bits),\n    .io_deq_ready(txq_io_deq_ready),\n    .io_deq_valid(txq_io_deq_valid),\n    .io_deq_bits(txq_io_deq_bits),\n    .io_count(txq_io_count)\n  );\n  sirv_queue_1 rxq (\n    .clock(rxq_clock),\n    .reset(rxq_reset),\n    .io_enq_ready(rxq_io_enq_ready),\n    .io_enq_valid(rxq_io_enq_valid),\n    .io_enq_bits(rxq_io_enq_bits),\n    .io_deq_ready(rxq_io_deq_ready),\n    .io_deq_valid(rxq_io_deq_valid),\n    .io_deq_bits(rxq_io_deq_bits),\n    .io_count(rxq_io_count)\n  );\n  assign io_link_tx_valid = txq_io_deq_valid;\n  assign io_link_tx_bits = txq_io_deq_bits;\n  assign io_link_cnt = {{4'd0}, T_134};\n  assign io_link_fmt_proto = io_ctrl_fmt_proto;\n  assign io_link_fmt_endian = io_ctrl_fmt_endian;\n  assign io_link_fmt_iodir = io_ctrl_fmt_iodir;\n  assign io_link_cs_set = T_138;\n  assign io_link_cs_clear = T_140;\n  assign io_link_cs_hold = 1'h0;\n  assign io_link_lock = T_142;\n  assign io_tx_ready = txq_io_enq_ready;\n  assign io_rx_valid = rxq_io_deq_valid;\n  assign io_rx_bits = rxq_io_deq_bits;\n  assign io_ip_txwm = T_143;\n  assign io_ip_rxwm = T_144;\n  assign txq_clock = clock;\n  assign txq_reset = reset;\n  assign txq_io_enq_valid = io_tx_valid;\n  assign txq_io_enq_bits = io_tx_bits;\n  assign txq_io_deq_ready = io_link_tx_ready;\n  assign rxq_clock = clock;\n  assign rxq_reset = reset;\n  assign rxq_io_enq_valid = T_94;\n  assign rxq_io_enq_bits = io_link_rx_bits;\n  assign rxq_io_deq_ready = io_rx_ready;\n  assign fire_tx = io_link_tx_ready & io_link_tx_valid;\n  assign T_94 = io_link_rx_valid & rxen;\n  assign GEN_0 = io_link_rx_valid ? 1'h0 : rxen;\n  assign T_96 = io_link_fmt_iodir == 1'h0;\n  assign GEN_1 = fire_tx ? T_96 : GEN_0;\n  assign T_97 = 2'h0 == io_link_fmt_proto;\n  assign T_98 = 2'h1 == io_link_fmt_proto;\n  assign T_99 = 2'h2 == io_link_fmt_proto;\n  assign T_101 = io_ctrl_fmt_len[3:1];\n  assign T_102 = io_ctrl_fmt_len[3:2];\n  assign T_104 = T_97 ? io_ctrl_fmt_len : 4'h0;\n  assign T_106 = T_98 ? T_101 : 3'h0;\n  assign T_108 = T_99 ? T_102 : 2'h0;\n  assign GEN_2 = {{1'd0}, T_106};\n  assign T_110 = T_104 | GEN_2;\n  assign GEN_3 = {{2'd0}, T_108};\n  assign T_111 = T_110 | GEN_3;\n  assign cnt_quot = T_111;\n  assign T_112 = io_ctrl_fmt_len[0];\n  assign T_115 = io_ctrl_fmt_len[1:0];\n  assign T_117 = T_115 != 2'h0;\n  assign T_118 = io_ctrl_fmt_len[2:0];\n  assign T_120 = T_118 != 3'h0;\n  assign T_123 = T_97 ? T_112 : 1'h0;\n  assign T_126 = T_98 ? T_117 : 1'h0;\n  assign T_129 = T_99 ? T_120 : 1'h0;\n  assign T_131 = T_123 | T_126;\n  assign T_132 = T_131 | T_129;\n  assign cnt_rmdr = T_132;\n  assign GEN_4 = {{3'd0}, cnt_rmdr};\n  assign T_133 = cnt_quot + GEN_4;\n  assign T_134 = T_133[3:0];\n  assign cs_mode_hold = cs_mode == 2'h2;\n  assign cs_mode_off = cs_mode == 2'h3;\n  assign cs_update = cs_mode != io_ctrl_cs_mode;\n  assign T_135 = cs_mode_hold | cs_mode_off;\n  assign cs_clear = T_135 == 1'h0;\n  assign T_138 = cs_mode_off == 1'h0;\n  assign T_139 = fire_tx & cs_clear;\n  assign T_140 = cs_update | T_139;\n  assign T_142 = io_link_tx_valid | rxen;\n  assign T_143 = txq_io_count < io_ctrl_wm_tx;\n  assign T_144 = rxq_io_count > io_ctrl_wm_rx;\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      rxen <= 1'h0;\n    end else begin\n      if (fire_tx) begin\n        rxen <= T_96;\n      end else begin\n        if (io_link_rx_valid) begin\n          rxen <= 1'h0;\n        end\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      cs_mode <= 2'h0;\n    end else begin\n      cs_mode <= io_ctrl_cs_mode;\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_qspi_media(\n  input   clock,\n  input   reset,\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  input  [11:0] io_ctrl_sck_div,\n  input   io_ctrl_sck_pol,\n  input   io_ctrl_sck_pha,\n  input  [7:0] io_ctrl_dla_cssck,\n  input  [7:0] io_ctrl_dla_sckcs,\n  input  [7:0] io_ctrl_dla_intercs,\n  input  [7:0] io_ctrl_dla_interxfr,\n  input   io_ctrl_cs_id,\n  input   io_ctrl_cs_dflt_0,\n  output  io_link_tx_ready,\n  input   io_link_tx_valid,\n  input  [7:0] io_link_tx_bits,\n  output  io_link_rx_valid,\n  output [7:0] io_link_rx_bits,\n  input  [7:0] io_link_cnt,\n  input  [1:0] io_link_fmt_proto,\n  input   io_link_fmt_endian,\n  input   io_link_fmt_iodir,\n  input   io_link_cs_set,\n  input   io_link_cs_clear,\n  input   io_link_cs_hold,\n  output  io_link_active\n);\n  wire  phy_clock;\n  wire  phy_reset;\n  wire  phy_io_port_sck;\n  wire  phy_io_port_dq_0_i;\n  wire  phy_io_port_dq_0_o;\n  wire  phy_io_port_dq_0_oe;\n  wire  phy_io_port_dq_1_i;\n  wire  phy_io_port_dq_1_o;\n  wire  phy_io_port_dq_1_oe;\n  wire  phy_io_port_dq_2_i;\n  wire  phy_io_port_dq_2_o;\n  wire  phy_io_port_dq_2_oe;\n  wire  phy_io_port_dq_3_i;\n  wire  phy_io_port_dq_3_o;\n  wire  phy_io_port_dq_3_oe;\n  wire  phy_io_port_cs_0;\n  wire [11:0] phy_io_ctrl_sck_div;\n  wire  phy_io_ctrl_sck_pol;\n  wire  phy_io_ctrl_sck_pha;\n  wire [1:0] phy_io_ctrl_fmt_proto;\n  wire  phy_io_ctrl_fmt_endian;\n  wire  phy_io_ctrl_fmt_iodir;\n  wire  phy_io_op_ready;\n  wire  phy_io_op_valid;\n  wire  phy_io_op_bits_fn;\n  wire  phy_io_op_bits_stb;\n  wire [7:0] phy_io_op_bits_cnt;\n  wire [7:0] phy_io_op_bits_data;\n  wire  phy_io_rx_valid;\n  wire [7:0] phy_io_rx_bits;\n  reg  cs_id;\n  reg [31:0] GEN_5;\n  reg  cs_dflt_0;\n  reg [31:0] GEN_52;\n  reg  cs_set;\n  reg [31:0] GEN_53;\n  wire [1:0] GEN_48;\n  wire [1:0] T_162;\n  wire [1:0] GEN_49;\n  wire [1:0] T_163;\n  wire  T_164;\n  wire  cs_active_0;\n  wire  cs_update;\n  reg  clear;\n  reg [31:0] GEN_54;\n  reg  cs_assert;\n  reg [31:0] GEN_55;\n  wire  T_175;\n  wire  T_176;\n  wire  cs_deassert;\n  wire  T_177;\n  wire  T_178;\n  wire  continuous;\n  reg [1:0] state;\n  reg [31:0] GEN_56;\n  wire  T_182;\n  wire [1:0] GEN_0;\n  wire [7:0] GEN_1;\n  wire [1:0] GEN_2;\n  wire  T_184;\n  wire  T_186;\n  wire [1:0] GEN_3;\n  wire  GEN_4;\n  wire  GEN_6;\n  wire  GEN_7;\n  wire [1:0] GEN_8;\n  wire [7:0] GEN_9;\n  wire [1:0] GEN_10;\n  wire  GEN_11;\n  wire  GEN_12;\n  wire  GEN_13;\n  wire  GEN_14;\n  wire  T_188;\n  wire  T_189;\n  wire  GEN_15;\n  wire  GEN_16;\n  wire  GEN_17;\n  wire [7:0] GEN_18;\n  wire  GEN_19;\n  wire  GEN_20;\n  wire  GEN_21;\n  wire  T_194;\n  wire  T_195;\n  wire [7:0] GEN_22;\n  wire  GEN_23;\n  wire  GEN_24;\n  wire  GEN_25;\n  wire [7:0] GEN_26;\n  wire [1:0] GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_31;\n  wire  GEN_32;\n  wire  GEN_33;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  T_198;\n  wire  T_200;\n  wire  T_201;\n  wire [1:0] GEN_36;\n  wire  GEN_37;\n  wire [7:0] GEN_38;\n  wire [1:0] GEN_39;\n  wire  T_202;\n  wire [1:0] GEN_50;\n  wire [1:0] T_206;\n  wire [1:0] GEN_51;\n  wire [1:0] T_207;\n  wire  T_208;\n  wire  T_213_0;\n  wire  GEN_40;\n  wire [1:0] GEN_41;\n  wire [7:0] GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_46;\n  wire [1:0] GEN_47;\n  sirv_qspi_physical phy (\n    .clock(phy_clock),\n    .reset(phy_reset),\n    .io_port_sck(phy_io_port_sck),\n    .io_port_dq_0_i(phy_io_port_dq_0_i),\n    .io_port_dq_0_o(phy_io_port_dq_0_o),\n    .io_port_dq_0_oe(phy_io_port_dq_0_oe),\n    .io_port_dq_1_i(phy_io_port_dq_1_i),\n    .io_port_dq_1_o(phy_io_port_dq_1_o),\n    .io_port_dq_1_oe(phy_io_port_dq_1_oe),\n    .io_port_dq_2_i(phy_io_port_dq_2_i),\n    .io_port_dq_2_o(phy_io_port_dq_2_o),\n    .io_port_dq_2_oe(phy_io_port_dq_2_oe),\n    .io_port_dq_3_i(phy_io_port_dq_3_i),\n    .io_port_dq_3_o(phy_io_port_dq_3_o),\n    .io_port_dq_3_oe(phy_io_port_dq_3_oe),\n    .io_port_cs_0(phy_io_port_cs_0),\n    .io_ctrl_sck_div(phy_io_ctrl_sck_div),\n    .io_ctrl_sck_pol(phy_io_ctrl_sck_pol),\n    .io_ctrl_sck_pha(phy_io_ctrl_sck_pha),\n    .io_ctrl_fmt_proto(phy_io_ctrl_fmt_proto),\n    .io_ctrl_fmt_endian(phy_io_ctrl_fmt_endian),\n    .io_ctrl_fmt_iodir(phy_io_ctrl_fmt_iodir),\n    .io_op_ready(phy_io_op_ready),\n    .io_op_valid(phy_io_op_valid),\n    .io_op_bits_fn(phy_io_op_bits_fn),\n    .io_op_bits_stb(phy_io_op_bits_stb),\n    .io_op_bits_cnt(phy_io_op_bits_cnt),\n    .io_op_bits_data(phy_io_op_bits_data),\n    .io_rx_valid(phy_io_rx_valid),\n    .io_rx_bits(phy_io_rx_bits)\n  );\n  assign io_port_sck = phy_io_port_sck;\n  assign io_port_dq_0_o = phy_io_port_dq_0_o;\n  assign io_port_dq_0_oe = phy_io_port_dq_0_oe;\n  assign io_port_dq_1_o = phy_io_port_dq_1_o;\n  assign io_port_dq_1_oe = phy_io_port_dq_1_oe;\n  assign io_port_dq_2_o = phy_io_port_dq_2_o;\n  assign io_port_dq_2_oe = phy_io_port_dq_2_oe;\n  assign io_port_dq_3_o = phy_io_port_dq_3_o;\n  assign io_port_dq_3_oe = phy_io_port_dq_3_oe;\n  assign io_port_cs_0 = cs_dflt_0;\n  assign io_link_tx_ready = GEN_31;\n  assign io_link_rx_valid = phy_io_rx_valid;\n  assign io_link_rx_bits = phy_io_rx_bits;\n  assign io_link_active = cs_assert;\n  assign phy_clock = clock;\n  assign phy_reset = reset;\n  assign phy_io_port_dq_0_i = io_port_dq_0_i;\n  assign phy_io_port_dq_1_i = io_port_dq_1_i;\n  assign phy_io_port_dq_2_i = io_port_dq_2_i;\n  assign phy_io_port_dq_3_i = io_port_dq_3_i;\n  assign phy_io_ctrl_sck_div = io_ctrl_sck_div;\n  assign phy_io_ctrl_sck_pol = io_ctrl_sck_pol;\n  assign phy_io_ctrl_sck_pha = io_ctrl_sck_pha;\n  assign phy_io_ctrl_fmt_proto = io_link_fmt_proto;\n  assign phy_io_ctrl_fmt_endian = io_link_fmt_endian;\n  assign phy_io_ctrl_fmt_iodir = io_link_fmt_iodir;\n  assign phy_io_op_valid = GEN_37;\n  assign phy_io_op_bits_fn = GEN_28;\n  assign phy_io_op_bits_stb = GEN_43;\n  assign phy_io_op_bits_cnt = GEN_42;\n  assign phy_io_op_bits_data = io_link_tx_bits;\n  assign GEN_48 = {{1'd0}, io_link_cs_set};\n  assign T_162 = GEN_48 << io_ctrl_cs_id;\n  assign GEN_49 = {{1'd0}, io_ctrl_cs_dflt_0};\n  assign T_163 = GEN_49 ^ T_162;\n  assign T_164 = T_163[0];\n  assign cs_active_0 = T_164;\n  assign cs_update = cs_active_0 != cs_dflt_0;\n  assign T_175 = io_link_cs_hold == 1'h0;\n  assign T_176 = cs_update & T_175;\n  assign cs_deassert = clear | T_176;\n  assign T_177 = io_link_cs_clear & cs_assert;\n  assign T_178 = clear | T_177;\n  assign continuous = io_ctrl_dla_interxfr == 8'h0;\n  assign T_182 = 2'h0 == state;\n  assign GEN_0 = phy_io_op_ready ? 2'h2 : state;\n  assign GEN_1 = cs_deassert ? io_ctrl_dla_sckcs : io_link_cnt;\n  assign GEN_2 = cs_deassert ? GEN_0 : state;\n  assign T_184 = cs_deassert == 1'h0;\n  assign T_186 = phy_io_op_ready & phy_io_op_valid;\n  assign GEN_3 = T_186 ? 2'h1 : GEN_2;\n  assign GEN_4 = T_184 ? 1'h0 : 1'h1;\n  assign GEN_6 = T_184 ? io_link_tx_valid : 1'h1;\n  assign GEN_7 = T_184 ? phy_io_op_ready : 1'h0;\n  assign GEN_8 = T_184 ? GEN_3 : GEN_2;\n  assign GEN_9 = cs_assert ? GEN_1 : io_link_cnt;\n  assign GEN_10 = cs_assert ? GEN_8 : state;\n  assign GEN_11 = cs_assert ? GEN_4 : 1'h1;\n  assign GEN_12 = cs_assert ? T_184 : 1'h0;\n  assign GEN_13 = cs_assert ? GEN_6 : 1'h1;\n  assign GEN_14 = cs_assert ? GEN_7 : 1'h0;\n  assign T_188 = cs_assert == 1'h0;\n  assign T_189 = T_188 & io_link_tx_valid;\n  assign GEN_15 = phy_io_op_ready ? 1'h1 : cs_assert;\n  assign GEN_16 = phy_io_op_ready ? io_link_cs_set : cs_set;\n  assign GEN_17 = phy_io_op_ready ? cs_active_0 : cs_dflt_0;\n  assign GEN_18 = T_189 ? io_ctrl_dla_cssck : GEN_9;\n  assign GEN_19 = T_189 ? GEN_15 : cs_assert;\n  assign GEN_20 = T_189 ? GEN_16 : cs_set;\n  assign GEN_21 = T_189 ? GEN_17 : cs_dflt_0;\n  assign T_194 = io_link_tx_valid == 1'h0;\n  assign T_195 = T_188 & T_194;\n  assign GEN_22 = T_195 ? 8'h0 : GEN_18;\n  assign GEN_23 = T_195 ? 1'h1 : GEN_12;\n  assign GEN_24 = T_195 ? io_ctrl_cs_id : cs_id;\n  assign GEN_25 = T_195 ? io_ctrl_cs_dflt_0 : GEN_21;\n  assign GEN_26 = T_182 ? GEN_22 : io_link_cnt;\n  assign GEN_27 = T_182 ? GEN_10 : state;\n  assign GEN_28 = T_182 ? GEN_11 : 1'h1;\n  assign GEN_29 = T_182 ? GEN_23 : 1'h0;\n  assign GEN_30 = T_182 ? GEN_13 : 1'h1;\n  assign GEN_31 = T_182 ? GEN_14 : 1'h0;\n  assign GEN_32 = T_182 ? GEN_19 : cs_assert;\n  assign GEN_33 = T_182 ? GEN_20 : cs_set;\n  assign GEN_34 = T_182 ? GEN_25 : cs_dflt_0;\n  assign GEN_35 = T_182 ? GEN_24 : cs_id;\n  assign T_198 = 2'h1 == state;\n  assign T_200 = continuous == 1'h0;\n  assign T_201 = phy_io_op_ready | continuous;\n  assign GEN_36 = T_201 ? 2'h0 : GEN_27;\n  assign GEN_37 = T_198 ? T_200 : GEN_30;\n  assign GEN_38 = T_198 ? io_ctrl_dla_interxfr : GEN_26;\n  assign GEN_39 = T_198 ? GEN_36 : GEN_27;\n  assign T_202 = 2'h2 == state;\n  assign GEN_50 = {{1'd0}, cs_set};\n  assign T_206 = GEN_50 << cs_id;\n  assign GEN_51 = {{1'd0}, cs_dflt_0};\n  assign T_207 = GEN_51 ^ T_206;\n  assign T_208 = T_207[0];\n  assign T_213_0 = T_208;\n  assign GEN_40 = phy_io_op_ready ? T_213_0 : GEN_34;\n  assign GEN_41 = phy_io_op_ready ? 2'h0 : GEN_39;\n  assign GEN_42 = T_202 ? io_ctrl_dla_intercs : GEN_38;\n  assign GEN_43 = T_202 ? 1'h1 : GEN_29;\n  assign GEN_44 = T_202 ? 1'h0 : GEN_32;\n  assign GEN_45 = T_202 ? 1'h0 : T_178;\n  assign GEN_46 = T_202 ? GEN_40 : GEN_34;\n  assign GEN_47 = T_202 ? GEN_41 : GEN_39;\n\n  always @(posedge clock or posedge reset)\n  if(reset) begin\n    cs_id     <= 2'b0;\n    cs_dflt_0 <= 1'b1;\n    cs_set    <= 1'b0;\n  end\n  else begin//{\n\n    if (T_182) begin\n      if (T_195) begin\n        cs_id <= io_ctrl_cs_id;\n      end\n    end\n    if (T_202) begin\n      if (phy_io_op_ready) begin\n        cs_dflt_0 <= T_213_0;\n      end else begin\n        if (T_182) begin\n          if (T_195) begin\n            cs_dflt_0 <= io_ctrl_cs_dflt_0;\n          end else begin\n            if (T_189) begin\n              if (phy_io_op_ready) begin\n                cs_dflt_0 <= cs_active_0;\n              end\n            end\n          end\n        end\n      end\n    end else begin\n      if (T_182) begin\n        if (T_195) begin\n          cs_dflt_0 <= io_ctrl_cs_dflt_0;\n        end else begin\n          if (T_189) begin\n            if (phy_io_op_ready) begin\n              cs_dflt_0 <= cs_active_0;\n            end\n          end\n        end\n      end\n    end\n    if (T_182) begin\n      if (T_189) begin\n        if (phy_io_op_ready) begin\n          cs_set <= io_link_cs_set;\n        end\n      end\n    end\n\n  end//}\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      clear <= 1'h0;\n    end else begin\n      if (T_202) begin\n        clear <= 1'h0;\n      end else begin\n        clear <= T_178;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      cs_assert <= 1'h0;\n    end else begin\n      if (T_202) begin\n        cs_assert <= 1'h0;\n      end else begin\n        if (T_182) begin\n          if (T_189) begin\n            if (phy_io_op_ready) begin\n              cs_assert <= 1'h1;\n            end\n          end\n        end\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      state <= 2'h0;\n    end else begin\n      if (T_202) begin\n        if (phy_io_op_ready) begin\n          state <= 2'h0;\n        end else begin\n          if (T_198) begin\n            if (T_201) begin\n              state <= 2'h0;\n            end else begin\n              if (T_182) begin\n                if (cs_assert) begin\n                  if (T_184) begin\n                    if (T_186) begin\n                      state <= 2'h1;\n                    end else begin\n                      if (cs_deassert) begin\n                        if (phy_io_op_ready) begin\n                          state <= 2'h2;\n                        end\n                      end\n                    end\n                  end else begin\n                    if (cs_deassert) begin\n                      if (phy_io_op_ready) begin\n                        state <= 2'h2;\n                      end\n                    end\n                  end\n                end\n              end\n            end\n          end else begin\n            if (T_182) begin\n              if (cs_assert) begin\n                if (T_184) begin\n                  if (T_186) begin\n                    state <= 2'h1;\n                  end else begin\n                    if (cs_deassert) begin\n                      if (phy_io_op_ready) begin\n                        state <= 2'h2;\n                      end\n                    end\n                  end\n                end else begin\n                  if (cs_deassert) begin\n                    if (phy_io_op_ready) begin\n                      state <= 2'h2;\n                    end\n                  end\n                end\n              end\n            end\n          end\n        end\n      end else begin\n        if (T_198) begin\n          if (T_201) begin\n            state <= 2'h0;\n          end else begin\n            if (T_182) begin\n              if (cs_assert) begin\n                if (T_184) begin\n                  if (T_186) begin\n                    state <= 2'h1;\n                  end else begin\n                    state <= GEN_2;\n                  end\n                end else begin\n                  state <= GEN_2;\n                end\n              end\n            end\n          end\n        end else begin\n          if (T_182) begin\n            if (cs_assert) begin\n              if (T_184) begin\n                if (T_186) begin\n                  state <= 2'h1;\n                end else begin\n                  state <= GEN_2;\n                end\n              end else begin\n                state <= GEN_2;\n              end\n            end\n          end\n        end\n      end\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_qspi_media_1(\n  input   clock,\n  input   reset,\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  output  io_port_cs_1,\n  output  io_port_cs_2,\n  output  io_port_cs_3,\n  input  [11:0] io_ctrl_sck_div,\n  input   io_ctrl_sck_pol,\n  input   io_ctrl_sck_pha,\n  input  [7:0] io_ctrl_dla_cssck,\n  input  [7:0] io_ctrl_dla_sckcs,\n  input  [7:0] io_ctrl_dla_intercs,\n  input  [7:0] io_ctrl_dla_interxfr,\n  input  [1:0] io_ctrl_cs_id,\n  input   io_ctrl_cs_dflt_0,\n  input   io_ctrl_cs_dflt_1,\n  input   io_ctrl_cs_dflt_2,\n  input   io_ctrl_cs_dflt_3,\n  output  io_link_tx_ready,\n  input   io_link_tx_valid,\n  input  [7:0] io_link_tx_bits,\n  output  io_link_rx_valid,\n  output [7:0] io_link_rx_bits,\n  input  [7:0] io_link_cnt,\n  input  [1:0] io_link_fmt_proto,\n  input   io_link_fmt_endian,\n  input   io_link_fmt_iodir,\n  input   io_link_cs_set,\n  input   io_link_cs_clear,\n  input   io_link_cs_hold,\n  output  io_link_active\n);\n  wire  phy_clock;\n  wire  phy_reset;\n  wire  phy_io_port_sck;\n  wire  phy_io_port_dq_0_i;\n  wire  phy_io_port_dq_0_o;\n  wire  phy_io_port_dq_0_oe;\n  wire  phy_io_port_dq_1_i;\n  wire  phy_io_port_dq_1_o;\n  wire  phy_io_port_dq_1_oe;\n  wire  phy_io_port_dq_2_i;\n  wire  phy_io_port_dq_2_o;\n  wire  phy_io_port_dq_2_oe;\n  wire  phy_io_port_dq_3_i;\n  wire  phy_io_port_dq_3_o;\n  wire  phy_io_port_dq_3_oe;\n  wire  phy_io_port_cs_0;\n  wire  phy_io_port_cs_1;\n  wire  phy_io_port_cs_2;\n  wire  phy_io_port_cs_3;\n  wire [11:0] phy_io_ctrl_sck_div;\n  wire  phy_io_ctrl_sck_pol;\n  wire  phy_io_ctrl_sck_pha;\n  wire [1:0] phy_io_ctrl_fmt_proto;\n  wire  phy_io_ctrl_fmt_endian;\n  wire  phy_io_ctrl_fmt_iodir;\n  wire  phy_io_op_ready;\n  wire  phy_io_op_valid;\n  wire  phy_io_op_bits_fn;\n  wire  phy_io_op_bits_stb;\n  wire [7:0] phy_io_op_bits_cnt;\n  wire [7:0] phy_io_op_bits_data;\n  wire  phy_io_rx_valid;\n  wire [7:0] phy_io_rx_bits;\n  reg [1:0] cs_id;\n  reg [31:0] GEN_5;\n  reg  cs_dflt_0;\n  reg [31:0] GEN_68;\n  reg  cs_dflt_1;\n  reg [31:0] GEN_69;\n  reg  cs_dflt_2;\n  reg [31:0] GEN_70;\n  reg  cs_dflt_3;\n  reg [31:0] GEN_71;\n  reg  cs_set;\n  reg [31:0] GEN_72;\n  wire [3:0] GEN_66;\n  wire [3:0] T_162;\n  wire [1:0] T_163;\n  wire [1:0] T_164;\n  wire [3:0] T_165;\n  wire [3:0] T_166;\n  wire  T_167;\n  wire  T_168;\n  wire  T_169;\n  wire  T_170;\n  wire  cs_active_0;\n  wire  cs_active_1;\n  wire  cs_active_2;\n  wire  cs_active_3;\n  wire [1:0] T_184;\n  wire [1:0] T_185;\n  wire [3:0] T_186;\n  wire [1:0] T_187;\n  wire [1:0] T_188;\n  wire [3:0] T_189;\n  wire  cs_update;\n  reg  clear;\n  reg [31:0] GEN_73;\n  reg  cs_assert;\n  reg [31:0] GEN_74;\n  wire  T_193;\n  wire  T_194;\n  wire  cs_deassert;\n  wire  T_195;\n  wire  T_196;\n  wire  continuous;\n  reg [1:0] state;\n  reg [31:0] GEN_75;\n  wire  T_200;\n  wire [1:0] GEN_0;\n  wire [7:0] GEN_1;\n  wire [1:0] GEN_2;\n  wire  T_202;\n  wire  T_204;\n  wire [1:0] GEN_3;\n  wire  GEN_4;\n  wire  GEN_6;\n  wire  GEN_7;\n  wire [1:0] GEN_8;\n  wire [7:0] GEN_9;\n  wire [1:0] GEN_10;\n  wire  GEN_11;\n  wire  GEN_12;\n  wire  GEN_13;\n  wire  GEN_14;\n  wire  T_206;\n  wire  T_207;\n  wire  GEN_15;\n  wire  GEN_16;\n  wire  GEN_17;\n  wire  GEN_18;\n  wire  GEN_19;\n  wire  GEN_20;\n  wire [7:0] GEN_21;\n  wire  GEN_22;\n  wire  GEN_23;\n  wire  GEN_24;\n  wire  GEN_25;\n  wire  GEN_26;\n  wire  GEN_27;\n  wire  T_212;\n  wire  T_213;\n  wire [7:0] GEN_28;\n  wire  GEN_29;\n  wire [1:0] GEN_30;\n  wire  GEN_31;\n  wire  GEN_32;\n  wire  GEN_33;\n  wire  GEN_34;\n  wire [7:0] GEN_35;\n  wire [1:0] GEN_36;\n  wire  GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire  GEN_40;\n  wire  GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_46;\n  wire [1:0] GEN_47;\n  wire  T_216;\n  wire  T_218;\n  wire  T_219;\n  wire [1:0] GEN_48;\n  wire  GEN_49;\n  wire [7:0] GEN_50;\n  wire [1:0] GEN_51;\n  wire  T_220;\n  wire [3:0] GEN_67;\n  wire [3:0] T_224;\n  wire [3:0] T_228;\n  wire  T_229;\n  wire  T_230;\n  wire  T_231;\n  wire  T_232;\n  wire  T_240_0;\n  wire  T_240_1;\n  wire  T_240_2;\n  wire  T_240_3;\n  wire  GEN_52;\n  wire  GEN_53;\n  wire  GEN_54;\n  wire  GEN_55;\n  wire [1:0] GEN_56;\n  wire [7:0] GEN_57;\n  wire  GEN_58;\n  wire  GEN_59;\n  wire  GEN_60;\n  wire  GEN_61;\n  wire  GEN_62;\n  wire  GEN_63;\n  wire  GEN_64;\n  wire [1:0] GEN_65;\n  sirv_qspi_physical_1 phy (\n    .clock(phy_clock),\n    .reset(phy_reset),\n    .io_port_sck(phy_io_port_sck),\n    .io_port_dq_0_i(phy_io_port_dq_0_i),\n    .io_port_dq_0_o(phy_io_port_dq_0_o),\n    .io_port_dq_0_oe(phy_io_port_dq_0_oe),\n    .io_port_dq_1_i(phy_io_port_dq_1_i),\n    .io_port_dq_1_o(phy_io_port_dq_1_o),\n    .io_port_dq_1_oe(phy_io_port_dq_1_oe),\n    .io_port_dq_2_i(phy_io_port_dq_2_i),\n    .io_port_dq_2_o(phy_io_port_dq_2_o),\n    .io_port_dq_2_oe(phy_io_port_dq_2_oe),\n    .io_port_dq_3_i(phy_io_port_dq_3_i),\n    .io_port_dq_3_o(phy_io_port_dq_3_o),\n    .io_port_dq_3_oe(phy_io_port_dq_3_oe),\n    .io_port_cs_0(phy_io_port_cs_0),\n    .io_port_cs_1(phy_io_port_cs_1),\n    .io_port_cs_2(phy_io_port_cs_2),\n    .io_port_cs_3(phy_io_port_cs_3),\n    .io_ctrl_sck_div(phy_io_ctrl_sck_div),\n    .io_ctrl_sck_pol(phy_io_ctrl_sck_pol),\n    .io_ctrl_sck_pha(phy_io_ctrl_sck_pha),\n    .io_ctrl_fmt_proto(phy_io_ctrl_fmt_proto),\n    .io_ctrl_fmt_endian(phy_io_ctrl_fmt_endian),\n    .io_ctrl_fmt_iodir(phy_io_ctrl_fmt_iodir),\n    .io_op_ready(phy_io_op_ready),\n    .io_op_valid(phy_io_op_valid),\n    .io_op_bits_fn(phy_io_op_bits_fn),\n    .io_op_bits_stb(phy_io_op_bits_stb),\n    .io_op_bits_cnt(phy_io_op_bits_cnt),\n    .io_op_bits_data(phy_io_op_bits_data),\n    .io_rx_valid(phy_io_rx_valid),\n    .io_rx_bits(phy_io_rx_bits)\n  );\n  assign io_port_sck = phy_io_port_sck;\n  assign io_port_dq_0_o = phy_io_port_dq_0_o;\n  assign io_port_dq_0_oe = phy_io_port_dq_0_oe;\n  assign io_port_dq_1_o = phy_io_port_dq_1_o;\n  assign io_port_dq_1_oe = phy_io_port_dq_1_oe;\n  assign io_port_dq_2_o = phy_io_port_dq_2_o;\n  assign io_port_dq_2_oe = phy_io_port_dq_2_oe;\n  assign io_port_dq_3_o = phy_io_port_dq_3_o;\n  assign io_port_dq_3_oe = phy_io_port_dq_3_oe;\n  assign io_port_cs_0 = cs_dflt_0;\n  assign io_port_cs_1 = cs_dflt_1;\n  assign io_port_cs_2 = cs_dflt_2;\n  assign io_port_cs_3 = cs_dflt_3;\n  assign io_link_tx_ready = GEN_40;\n  assign io_link_rx_valid = phy_io_rx_valid;\n  assign io_link_rx_bits = phy_io_rx_bits;\n  assign io_link_active = cs_assert;\n  assign phy_clock = clock;\n  assign phy_reset = reset;\n  assign phy_io_port_dq_0_i = io_port_dq_0_i;\n  assign phy_io_port_dq_1_i = io_port_dq_1_i;\n  assign phy_io_port_dq_2_i = io_port_dq_2_i;\n  assign phy_io_port_dq_3_i = io_port_dq_3_i;\n  assign phy_io_ctrl_sck_div = io_ctrl_sck_div;\n  assign phy_io_ctrl_sck_pol = io_ctrl_sck_pol;\n  assign phy_io_ctrl_sck_pha = io_ctrl_sck_pha;\n  assign phy_io_ctrl_fmt_proto = io_link_fmt_proto;\n  assign phy_io_ctrl_fmt_endian = io_link_fmt_endian;\n  assign phy_io_ctrl_fmt_iodir = io_link_fmt_iodir;\n  assign phy_io_op_valid = GEN_49;\n  assign phy_io_op_bits_fn = GEN_37;\n  assign phy_io_op_bits_stb = GEN_58;\n  assign phy_io_op_bits_cnt = GEN_57;\n  assign phy_io_op_bits_data = io_link_tx_bits;\n  assign GEN_66 = {{3'd0}, io_link_cs_set};\n  assign T_162 = GEN_66 << io_ctrl_cs_id;\n  assign T_163 = {io_ctrl_cs_dflt_1,io_ctrl_cs_dflt_0};\n  assign T_164 = {io_ctrl_cs_dflt_3,io_ctrl_cs_dflt_2};\n  assign T_165 = {T_164,T_163};\n  assign T_166 = T_165 ^ T_162;\n  assign T_167 = T_166[0];\n  assign T_168 = T_166[1];\n  assign T_169 = T_166[2];\n  assign T_170 = T_166[3];\n  assign cs_active_0 = T_167;\n  assign cs_active_1 = T_168;\n  assign cs_active_2 = T_169;\n  assign cs_active_3 = T_170;\n  assign T_184 = {cs_active_1,cs_active_0};\n  assign T_185 = {cs_active_3,cs_active_2};\n  assign T_186 = {T_185,T_184};\n  assign T_187 = {cs_dflt_1,cs_dflt_0};\n  assign T_188 = {cs_dflt_3,cs_dflt_2};\n  assign T_189 = {T_188,T_187};\n  assign cs_update = T_186 != T_189;\n  assign T_193 = io_link_cs_hold == 1'h0;\n  assign T_194 = cs_update & T_193;\n  assign cs_deassert = clear | T_194;\n  assign T_195 = io_link_cs_clear & cs_assert;\n  assign T_196 = clear | T_195;\n  assign continuous = io_ctrl_dla_interxfr == 8'h0;\n  assign T_200 = 2'h0 == state;\n  assign GEN_0 = phy_io_op_ready ? 2'h2 : state;\n  assign GEN_1 = cs_deassert ? io_ctrl_dla_sckcs : io_link_cnt;\n  assign GEN_2 = cs_deassert ? GEN_0 : state;\n  assign T_202 = cs_deassert == 1'h0;\n  assign T_204 = phy_io_op_ready & phy_io_op_valid;\n  assign GEN_3 = T_204 ? 2'h1 : GEN_2;\n  assign GEN_4 = T_202 ? 1'h0 : 1'h1;\n  assign GEN_6 = T_202 ? io_link_tx_valid : 1'h1;\n  assign GEN_7 = T_202 ? phy_io_op_ready : 1'h0;\n  assign GEN_8 = T_202 ? GEN_3 : GEN_2;\n  assign GEN_9 = cs_assert ? GEN_1 : io_link_cnt;\n  assign GEN_10 = cs_assert ? GEN_8 : state;\n  assign GEN_11 = cs_assert ? GEN_4 : 1'h1;\n  assign GEN_12 = cs_assert ? T_202 : 1'h0;\n  assign GEN_13 = cs_assert ? GEN_6 : 1'h1;\n  assign GEN_14 = cs_assert ? GEN_7 : 1'h0;\n  assign T_206 = cs_assert == 1'h0;\n  assign T_207 = T_206 & io_link_tx_valid;\n  assign GEN_15 = phy_io_op_ready ? 1'h1 : cs_assert;\n  assign GEN_16 = phy_io_op_ready ? io_link_cs_set : cs_set;\n  assign GEN_17 = phy_io_op_ready ? cs_active_0 : cs_dflt_0;\n  assign GEN_18 = phy_io_op_ready ? cs_active_1 : cs_dflt_1;\n  assign GEN_19 = phy_io_op_ready ? cs_active_2 : cs_dflt_2;\n  assign GEN_20 = phy_io_op_ready ? cs_active_3 : cs_dflt_3;\n  assign GEN_21 = T_207 ? io_ctrl_dla_cssck : GEN_9;\n  assign GEN_22 = T_207 ? GEN_15 : cs_assert;\n  assign GEN_23 = T_207 ? GEN_16 : cs_set;\n  assign GEN_24 = T_207 ? GEN_17 : cs_dflt_0;\n  assign GEN_25 = T_207 ? GEN_18 : cs_dflt_1;\n  assign GEN_26 = T_207 ? GEN_19 : cs_dflt_2;\n  assign GEN_27 = T_207 ? GEN_20 : cs_dflt_3;\n  assign T_212 = io_link_tx_valid == 1'h0;\n  assign T_213 = T_206 & T_212;\n  assign GEN_28 = T_213 ? 8'h0 : GEN_21;\n  assign GEN_29 = T_213 ? 1'h1 : GEN_12;\n  assign GEN_30 = T_213 ? io_ctrl_cs_id : cs_id;\n  assign GEN_31 = T_213 ? io_ctrl_cs_dflt_0 : GEN_24;\n  assign GEN_32 = T_213 ? io_ctrl_cs_dflt_1 : GEN_25;\n  assign GEN_33 = T_213 ? io_ctrl_cs_dflt_2 : GEN_26;\n  assign GEN_34 = T_213 ? io_ctrl_cs_dflt_3 : GEN_27;\n  assign GEN_35 = T_200 ? GEN_28 : io_link_cnt;\n  assign GEN_36 = T_200 ? GEN_10 : state;\n  assign GEN_37 = T_200 ? GEN_11 : 1'h1;\n  assign GEN_38 = T_200 ? GEN_29 : 1'h0;\n  assign GEN_39 = T_200 ? GEN_13 : 1'h1;\n  assign GEN_40 = T_200 ? GEN_14 : 1'h0;\n  assign GEN_41 = T_200 ? GEN_22 : cs_assert;\n  assign GEN_42 = T_200 ? GEN_23 : cs_set;\n  assign GEN_43 = T_200 ? GEN_31 : cs_dflt_0;\n  assign GEN_44 = T_200 ? GEN_32 : cs_dflt_1;\n  assign GEN_45 = T_200 ? GEN_33 : cs_dflt_2;\n  assign GEN_46 = T_200 ? GEN_34 : cs_dflt_3;\n  assign GEN_47 = T_200 ? GEN_30 : cs_id;\n  assign T_216 = 2'h1 == state;\n  assign T_218 = continuous == 1'h0;\n  assign T_219 = phy_io_op_ready | continuous;\n  assign GEN_48 = T_219 ? 2'h0 : GEN_36;\n  assign GEN_49 = T_216 ? T_218 : GEN_39;\n  assign GEN_50 = T_216 ? io_ctrl_dla_interxfr : GEN_35;\n  assign GEN_51 = T_216 ? GEN_48 : GEN_36;\n  assign T_220 = 2'h2 == state;\n  assign GEN_67 = {{3'd0}, cs_set};\n  assign T_224 = GEN_67 << cs_id;\n  assign T_228 = T_189 ^ T_224;\n  assign T_229 = T_228[0];\n  assign T_230 = T_228[1];\n  assign T_231 = T_228[2];\n  assign T_232 = T_228[3];\n  assign T_240_0 = T_229;\n  assign T_240_1 = T_230;\n  assign T_240_2 = T_231;\n  assign T_240_3 = T_232;\n  assign GEN_52 = phy_io_op_ready ? T_240_0 : GEN_43;\n  assign GEN_53 = phy_io_op_ready ? T_240_1 : GEN_44;\n  assign GEN_54 = phy_io_op_ready ? T_240_2 : GEN_45;\n  assign GEN_55 = phy_io_op_ready ? T_240_3 : GEN_46;\n  assign GEN_56 = phy_io_op_ready ? 2'h0 : GEN_51;\n  assign GEN_57 = T_220 ? io_ctrl_dla_intercs : GEN_50;\n  assign GEN_58 = T_220 ? 1'h1 : GEN_38;\n  assign GEN_59 = T_220 ? 1'h0 : GEN_41;\n  assign GEN_60 = T_220 ? 1'h0 : T_196;\n  assign GEN_61 = T_220 ? GEN_52 : GEN_43;\n  assign GEN_62 = T_220 ? GEN_53 : GEN_44;\n  assign GEN_63 = T_220 ? GEN_54 : GEN_45;\n  assign GEN_64 = T_220 ? GEN_55 : GEN_46;\n  assign GEN_65 = T_220 ? GEN_56 : GEN_51;\n\n  always @(posedge clock or posedge reset)\n  if(reset) begin\n    cs_id     <= 2'b0;\n    cs_dflt_0 <= 1'b1;\n    cs_dflt_1 <= 1'b1;\n    cs_dflt_2 <= 1'b1;\n    cs_dflt_3 <= 1'b1;\n    cs_set    <= 1'b0;\n  end\n  else begin//{\n\n    if (T_200) begin\n      if (T_213) begin\n        cs_id <= io_ctrl_cs_id;\n      end\n    end\n    if (T_220) begin\n      if (phy_io_op_ready) begin\n        cs_dflt_0 <= T_240_0;\n      end else begin\n        if (T_200) begin\n          if (T_213) begin\n            cs_dflt_0 <= io_ctrl_cs_dflt_0;\n          end else begin\n            if (T_207) begin\n              if (phy_io_op_ready) begin\n                cs_dflt_0 <= cs_active_0;\n              end\n            end\n          end\n        end\n      end\n    end else begin\n      if (T_200) begin\n        if (T_213) begin\n          cs_dflt_0 <= io_ctrl_cs_dflt_0;\n        end else begin\n          if (T_207) begin\n            if (phy_io_op_ready) begin\n              cs_dflt_0 <= cs_active_0;\n            end\n          end\n        end\n      end\n    end\n    if (T_220) begin\n      if (phy_io_op_ready) begin\n        cs_dflt_1 <= T_240_1;\n      end else begin\n        if (T_200) begin\n          if (T_213) begin\n            cs_dflt_1 <= io_ctrl_cs_dflt_1;\n          end else begin\n            if (T_207) begin\n              if (phy_io_op_ready) begin\n                cs_dflt_1 <= cs_active_1;\n              end\n            end\n          end\n        end\n      end\n    end else begin\n      if (T_200) begin\n        if (T_213) begin\n          cs_dflt_1 <= io_ctrl_cs_dflt_1;\n        end else begin\n          if (T_207) begin\n            if (phy_io_op_ready) begin\n              cs_dflt_1 <= cs_active_1;\n            end\n          end\n        end\n      end\n    end\n    if (T_220) begin\n      if (phy_io_op_ready) begin\n        cs_dflt_2 <= T_240_2;\n      end else begin\n        if (T_200) begin\n          if (T_213) begin\n            cs_dflt_2 <= io_ctrl_cs_dflt_2;\n          end else begin\n            if (T_207) begin\n              if (phy_io_op_ready) begin\n                cs_dflt_2 <= cs_active_2;\n              end\n            end\n          end\n        end\n      end\n    end else begin\n      if (T_200) begin\n        if (T_213) begin\n          cs_dflt_2 <= io_ctrl_cs_dflt_2;\n        end else begin\n          if (T_207) begin\n            if (phy_io_op_ready) begin\n              cs_dflt_2 <= cs_active_2;\n            end\n          end\n        end\n      end\n    end\n    if (T_220) begin\n      if (phy_io_op_ready) begin\n        cs_dflt_3 <= T_240_3;\n      end else begin\n        if (T_200) begin\n          if (T_213) begin\n            cs_dflt_3 <= io_ctrl_cs_dflt_3;\n          end else begin\n            if (T_207) begin\n              if (phy_io_op_ready) begin\n                cs_dflt_3 <= cs_active_3;\n              end\n            end\n          end\n        end\n      end\n    end else begin\n      if (T_200) begin\n        if (T_213) begin\n          cs_dflt_3 <= io_ctrl_cs_dflt_3;\n        end else begin\n          if (T_207) begin\n            if (phy_io_op_ready) begin\n              cs_dflt_3 <= cs_active_3;\n            end\n          end\n        end\n      end\n    end\n    if (T_200) begin\n      if (T_207) begin\n        if (phy_io_op_ready) begin\n          cs_set <= io_link_cs_set;\n        end\n      end\n    end\n\n  end//}\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      clear <= 1'h0;\n    end else begin\n      if (T_220) begin\n        clear <= 1'h0;\n      end else begin\n        clear <= T_196;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      cs_assert <= 1'h0;\n    end else begin\n      if (T_220) begin\n        cs_assert <= 1'h0;\n      end else begin\n        if (T_200) begin\n          if (T_207) begin\n            if (phy_io_op_ready) begin\n              cs_assert <= 1'h1;\n            end\n          end\n        end\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      state <= 2'h0;\n    end else begin\n      if (T_220) begin\n        if (phy_io_op_ready) begin\n          state <= 2'h0;\n        end else begin\n          if (T_216) begin\n            if (T_219) begin\n              state <= 2'h0;\n            end else begin\n              if (T_200) begin\n                if (cs_assert) begin\n                  if (T_202) begin\n                    if (T_204) begin\n                      state <= 2'h1;\n                    end else begin\n                      if (cs_deassert) begin\n                        if (phy_io_op_ready) begin\n                          state <= 2'h2;\n                        end\n                      end\n                    end\n                  end else begin\n                    if (cs_deassert) begin\n                      if (phy_io_op_ready) begin\n                        state <= 2'h2;\n                      end\n                    end\n                  end\n                end\n              end\n            end\n          end else begin\n            if (T_200) begin\n              if (cs_assert) begin\n                if (T_202) begin\n                  if (T_204) begin\n                    state <= 2'h1;\n                  end else begin\n                    if (cs_deassert) begin\n                      if (phy_io_op_ready) begin\n                        state <= 2'h2;\n                      end\n                    end\n                  end\n                end else begin\n                  if (cs_deassert) begin\n                    if (phy_io_op_ready) begin\n                      state <= 2'h2;\n                    end\n                  end\n                end\n              end\n            end\n          end\n        end\n      end else begin\n        if (T_216) begin\n          if (T_219) begin\n            state <= 2'h0;\n          end else begin\n            if (T_200) begin\n              if (cs_assert) begin\n                if (T_202) begin\n                  if (T_204) begin\n                    state <= 2'h1;\n                  end else begin\n                    state <= GEN_2;\n                  end\n                end else begin\n                  state <= GEN_2;\n                end\n              end\n            end\n          end\n        end else begin\n          if (T_200) begin\n            if (cs_assert) begin\n              if (T_202) begin\n                if (T_204) begin\n                  state <= 2'h1;\n                end else begin\n                  state <= GEN_2;\n                end\n              end else begin\n                state <= GEN_2;\n              end\n            end\n          end\n        end\n      end\n    end\n\nendmo"}
{"text": "dule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_qspi_media_2(\n  input   clock,\n  input   reset,\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  input  [11:0] io_ctrl_sck_div,\n  input   io_ctrl_sck_pol,\n  input   io_ctrl_sck_pha,\n  input  [7:0] io_ctrl_dla_cssck,\n  input  [7:0] io_ctrl_dla_sckcs,\n  input  [7:0] io_ctrl_dla_intercs,\n  input  [7:0] io_ctrl_dla_interxfr,\n  input   io_ctrl_cs_id,\n  input   io_ctrl_cs_dflt_0,\n  output  io_link_tx_ready,\n  input   io_link_tx_valid,\n  input  [7:0] io_link_tx_bits,\n  output  io_link_rx_valid,\n  output [7:0] io_link_rx_bits,\n  input  [7:0] io_link_cnt,\n  input  [1:0] io_link_fmt_proto,\n  input   io_link_fmt_endian,\n  input   io_link_fmt_iodir,\n  input   io_link_cs_set,\n  input   io_link_cs_clear,\n  input   io_link_cs_hold,\n  output  io_link_active\n);\n  wire  phy_clock;\n  wire  phy_reset;\n  wire  phy_io_port_sck;\n  wire  phy_io_port_dq_0_i;\n  wire  phy_io_port_dq_0_o;\n  wire  phy_io_port_dq_0_oe;\n  wire  phy_io_port_dq_1_i;\n  wire  phy_io_port_dq_1_o;\n  wire  phy_io_port_dq_1_oe;\n  wire  phy_io_port_dq_2_i;\n  wire  phy_io_port_dq_2_o;\n  wire  phy_io_port_dq_2_oe;\n  wire  phy_io_port_dq_3_i;\n  wire  phy_io_port_dq_3_o;\n  wire  phy_io_port_dq_3_oe;\n  wire  phy_io_port_cs_0;\n  wire [11:0] phy_io_ctrl_sck_div;\n  wire  phy_io_ctrl_sck_pol;\n  wire  phy_io_ctrl_sck_pha;\n  wire [1:0] phy_io_ctrl_fmt_proto;\n  wire  phy_io_ctrl_fmt_endian;\n  wire  phy_io_ctrl_fmt_iodir;\n  wire  phy_io_op_ready;\n  wire  phy_io_op_valid;\n  wire  phy_io_op_bits_fn;\n  wire  phy_io_op_bits_stb;\n  wire [7:0] phy_io_op_bits_cnt;\n  wire [7:0] phy_io_op_bits_data;\n  wire  phy_io_rx_valid;\n  wire [7:0] phy_io_rx_bits;\n  reg  cs_id;\n  reg [31:0] GEN_5;\n  reg  cs_dflt_0;\n  reg [31:0] GEN_52;\n  reg  cs_set;\n  reg [31:0] GEN_53;\n  wire [1:0] GEN_48;\n  wire [1:0] T_162;\n  wire [1:0] GEN_49;\n  wire [1:0] T_163;\n  wire  T_164;\n  wire  cs_active_0;\n  wire  cs_update;\n  reg  clear;\n  reg [31:0] GEN_54;\n  reg  cs_assert;\n  reg [31:0] GEN_55;\n  wire  T_175;\n  wire  T_176;\n  wire  cs_deassert;\n  wire  T_177;\n  wire  T_178;\n  wire  continuous;\n  reg [1:0] state;\n  reg [31:0] GEN_56;\n  wire  T_182;\n  wire [1:0] GEN_0;\n  wire [7:0] GEN_1;\n  wire [1:0] GEN_2;\n  wire  T_184;\n  wire  T_186;\n  wire [1:0] GEN_3;\n  wire  GEN_4;\n  wire  GEN_6;\n  wire  GEN_7;\n  wire [1:0] GEN_8;\n  wire [7:0] GEN_9;\n  wire [1:0] GEN_10;\n  wire  GEN_11;\n  wire  GEN_12;\n  wire  GEN_13;\n  wire  GEN_14;\n  wire  T_188;\n  wire  T_189;\n  wire  GEN_15;\n  wire  GEN_16;\n  wire  GEN_17;\n  wire [7:0] GEN_18;\n  wire  GEN_19;\n  wire  GEN_20;\n  wire  GEN_21;\n  wire  T_194;\n  wire  T_195;\n  wire [7:0] GEN_22;\n  wire  GEN_23;\n  wire  GEN_24;\n  wire  GEN_25;\n  wire [7:0] GEN_26;\n  wire [1:0] GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_31;\n  wire  GEN_32;\n  wire  GEN_33;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  T_198;\n  wire  T_200;\n  wire  T_201;\n  wire [1:0] GEN_36;\n  wire  GEN_37;\n  wire [7:0] GEN_38;\n  wire [1:0] GEN_39;\n  wire  T_202;\n  wire [1:0] GEN_50;\n  wire [1:0] T_206;\n  wire [1:0] GEN_51;\n  wire [1:0] T_207;\n  wire  T_208;\n  wire  T_213_0;\n  wire  GEN_40;\n  wire [1:0] GEN_41;\n  wire [7:0] GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_46;\n  wire [1:0] GEN_47;\n  sirv_qspi_physical_2 phy (\n    .clock(phy_clock),\n    .reset(phy_reset),\n    .io_port_sck(phy_io_port_sck),\n    .io_port_dq_0_i(phy_io_port_dq_0_i),\n    .io_port_dq_0_o(phy_io_port_dq_0_o),\n    .io_port_dq_0_oe(phy_io_port_dq_0_oe),\n    .io_port_dq_1_i(phy_io_port_dq_1_i),\n    .io_port_dq_1_o(phy_io_port_dq_1_o),\n    .io_port_dq_1_oe(phy_io_port_dq_1_oe),\n    .io_port_dq_2_i(phy_io_port_dq_2_i),\n    .io_port_dq_2_o(phy_io_port_dq_2_o),\n    .io_port_dq_2_oe(phy_io_port_dq_2_oe),\n    .io_port_dq_3_i(phy_io_port_dq_3_i),\n    .io_port_dq_3_o(phy_io_port_dq_3_o),\n    .io_port_dq_3_oe(phy_io_port_dq_3_oe),\n    .io_port_cs_0(phy_io_port_cs_0),\n    .io_ctrl_sck_div(phy_io_ctrl_sck_div),\n    .io_ctrl_sck_pol(phy_io_ctrl_sck_pol),\n    .io_ctrl_sck_pha(phy_io_ctrl_sck_pha),\n    .io_ctrl_fmt_proto(phy_io_ctrl_fmt_proto),\n    .io_ctrl_fmt_endian(phy_io_ctrl_fmt_endian),\n    .io_ctrl_fmt_iodir(phy_io_ctrl_fmt_iodir),\n    .io_op_ready(phy_io_op_ready),\n    .io_op_valid(phy_io_op_valid),\n    .io_op_bits_fn(phy_io_op_bits_fn),\n    .io_op_bits_stb(phy_io_op_bits_stb),\n    .io_op_bits_cnt(phy_io_op_bits_cnt),\n    .io_op_bits_data(phy_io_op_bits_data),\n    .io_rx_valid(phy_io_rx_valid),\n    .io_rx_bits(phy_io_rx_bits)\n  );\n  assign io_port_sck = phy_io_port_sck;\n  assign io_port_dq_0_o = phy_io_port_dq_0_o;\n  assign io_port_dq_0_oe = phy_io_port_dq_0_oe;\n  assign io_port_dq_1_o = phy_io_port_dq_1_o;\n  assign io_port_dq_1_oe = phy_io_port_dq_1_oe;\n  assign io_port_dq_2_o = phy_io_port_dq_2_o;\n  assign io_port_dq_2_oe = phy_io_port_dq_2_oe;\n  assign io_port_dq_3_o = phy_io_port_dq_3_o;\n  assign io_port_dq_3_oe = phy_io_port_dq_3_oe;\n  assign io_port_cs_0 = cs_dflt_0;\n  assign io_link_tx_ready = GEN_31;\n  assign io_link_rx_valid = phy_io_rx_valid;\n  assign io_link_rx_bits = phy_io_rx_bits;\n  assign io_link_active = cs_assert;\n  assign phy_clock = clock;\n  assign phy_reset = reset;\n  assign phy_io_port_dq_0_i = io_port_dq_0_i;\n  assign phy_io_port_dq_1_i = io_port_dq_1_i;\n  assign phy_io_port_dq_2_i = io_port_dq_2_i;\n  assign phy_io_port_dq_3_i = io_port_dq_3_i;\n  assign phy_io_ctrl_sck_div = io_ctrl_sck_div;\n  assign phy_io_ctrl_sck_pol = io_ctrl_sck_pol;\n  assign phy_io_ctrl_sck_pha = io_ctrl_sck_pha;\n  assign phy_io_ctrl_fmt_proto = io_link_fmt_proto;\n  assign phy_io_ctrl_fmt_endian = io_link_fmt_endian;\n  assign phy_io_ctrl_fmt_iodir = io_link_fmt_iodir;\n  assign phy_io_op_valid = GEN_37;\n  assign phy_io_op_bits_fn = GEN_28;\n  assign phy_io_op_bits_stb = GEN_43;\n  assign phy_io_op_bits_cnt = GEN_42;\n  assign phy_io_op_bits_data = io_link_tx_bits;\n  assign GEN_48 = {{1'd0}, io_link_cs_set};\n  assign T_162 = GEN_48 << io_ctrl_cs_id;\n  assign GEN_49 = {{1'd0}, io_ctrl_cs_dflt_0};\n  assign T_163 = GEN_49 ^ T_162;\n  assign T_164 = T_163[0];\n  assign cs_active_0 = T_164;\n  assign cs_update = cs_active_0 != cs_dflt_0;\n  assign T_175 = io_link_cs_hold == 1'h0;\n  assign T_176 = cs_update & T_175;\n  assign cs_deassert = clear | T_176;\n  assign T_177 = io_link_cs_clear & cs_assert;\n  assign T_178 = clear | T_177;\n  assign continuous = io_ctrl_dla_interxfr == 8'h0;\n  assign T_182 = 2'h0 == state;\n  assign GEN_0 = phy_io_op_ready ? 2'h2 : state;\n  assign GEN_1 = cs_deassert ? io_ctrl_dla_sckcs : io_link_cnt;\n  assign GEN_2 = cs_deassert ? GEN_0 : state;\n  assign T_184 = cs_deassert == 1'h0;\n  assign T_186 = phy_io_op_ready & phy_io_op_valid;\n  assign GEN_3 = T_186 ? 2'h1 : GEN_2;\n  assign GEN_4 = T_184 ? 1'h0 : 1'h1;\n  assign GEN_6 = T_184 ? io_link_tx_valid : 1'h1;\n  assign GEN_7 = T_184 ? phy_io_op_ready : 1'h0;\n  assign GEN_8 = T_184 ? GEN_3 : GEN_2;\n  assign GEN_9 = cs_assert ? GEN_1 : io_link_cnt;\n  assign GEN_10 = cs_assert ? GEN_8 : state;\n  assign GEN_11 = cs_assert ? GEN_4 : 1'h1;\n  assign GEN_12 = cs_assert ? T_184 : 1'h0;\n  assign GEN_13 = cs_assert ? GEN_6 : 1'h1;\n  assign GEN_14 = cs_assert ? GEN_7 : 1'h0;\n  assign T_188 = cs_assert == 1'h0;\n  assign T_189 = T_188 & io_link_tx_valid;\n  assign GEN_15 = phy_io_op_ready ? 1'h1 : cs_assert;\n  assign GEN_16 = phy_io_op_ready ? io_link_cs_set : cs_set;\n  assign GEN_17 = phy_io_op_ready ? cs_active_0 : cs_dflt_0;\n  assign GEN_18 = T_189 ? io_ctrl_dla_cssck : GEN_9;\n  assign GEN_19 = T_189 ? GEN_15 : cs_assert;\n  assign GEN_20 = T_189 ? GEN_16 : cs_set;\n  assign GEN_21 = T_189 ? GEN_17 : cs_dflt_0;\n  assign T_194 = io_link_tx_valid == 1'h0;\n  assign T_195 = T_188 & T_194;\n  assign GEN_22 = T_195 ? 8'h0 : GEN_18;\n  assign GEN_23 = T_195 ? 1'h1 : GEN_12;\n  assign GEN_24 = T_195 ? io_ctrl_cs_id : cs_id;\n  assign GEN_25 = T_195 ? io_ctrl_cs_dflt_0 : GEN_21;\n  assign GEN_26 = T_182 ? GEN_22 : io_link_cnt;\n  assign GEN_27 = T_182 ? GEN_10 : state;\n  assign GEN_28 = T_182 ? GEN_11 : 1'h1;\n  assign GEN_29 = T_182 ? GEN_23 : 1'h0;\n  assign GEN_30 = T_182 ? GEN_13 : 1'h1;\n  assign GEN_31 = T_182 ? GEN_14 : 1'h0;\n  assign GEN_32 = T_182 ? GEN_19 : cs_assert;\n  assign GEN_33 = T_182 ? GEN_20 : cs_set;\n  assign GEN_34 = T_182 ? GEN_25 : cs_dflt_0;\n  assign GEN_35 = T_182 ? GEN_24 : cs_id;\n  assign T_198 = 2'h1 == state;\n  assign T_200 = continuous == 1'h0;\n  assign T_201 = phy_io_op_ready | continuous;\n  assign GEN_36 = T_201 ? 2'h0 : GEN_27;\n  assign GEN_37 = T_198 ? T_200 : GEN_30;\n  assign GEN_38 = T_198 ? io_ctrl_dla_interxfr : GEN_26;\n  assign GEN_39 = T_198 ? GEN_36 : GEN_27;\n  assign T_202 = 2'h2 == state;\n  assign GEN_50 = {{1'd0}, cs_set};\n  assign T_206 = GEN_50 << cs_id;\n  assign GEN_51 = {{1'd0}, cs_dflt_0};\n  assign T_207 = GEN_51 ^ T_206;\n  assign T_208 = T_207[0];\n  assign T_213_0 = T_208;\n  assign GEN_40 = phy_io_op_ready ? T_213_0 : GEN_34;\n  assign GEN_41 = phy_io_op_ready ? 2'h0 : GEN_39;\n  assign GEN_42 = T_202 ? io_ctrl_dla_intercs : GEN_38;\n  assign GEN_43 = T_202 ? 1'h1 : GEN_29;\n  assign GEN_44 = T_202 ? 1'h0 : GEN_32;\n  assign GEN_45 = T_202 ? 1'h0 : T_178;\n  assign GEN_46 = T_202 ? GEN_40 : GEN_34;\n  assign GEN_47 = T_202 ? GEN_41 : GEN_39;\n\n  always @(posedge clock or posedge reset)\n  if(reset) begin\n    cs_id     <= 2'b0;\n    cs_dflt_0 <= 1'b1;\n    cs_set    <= 1'b0;\n  end\n  else begin//{\n\n    if (T_182) begin\n      if (T_195) begin\n        cs_id <= io_ctrl_cs_id;\n      end\n    end\n    if (T_202) begin\n      if (phy_io_op_ready) begin\n        cs_dflt_0 <= T_213_0;\n      end else begin\n        if (T_182) begin\n          if (T_195) begin\n            cs_dflt_0 <= io_ctrl_cs_dflt_0;\n          end else begin\n            if (T_189) begin\n              if (phy_io_op_ready) begin\n                cs_dflt_0 <= cs_active_0;\n              end\n            end\n          end\n        end\n      end\n    end else begin\n      if (T_182) begin\n        if (T_195) begin\n          cs_dflt_0 <= io_ctrl_cs_dflt_0;\n        end else begin\n          if (T_189) begin\n            if (phy_io_op_ready) begin\n              cs_dflt_0 <= cs_active_0;\n            end\n          end\n        end\n      end\n    end\n    if (T_182) begin\n      if (T_189) begin\n        if (phy_io_op_ready) begin\n          cs_set <= io_link_cs_set;\n        end\n      end\n    end\n\n  end//}\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      clear <= 1'h0;\n    end else begin\n      if (T_202) begin\n        clear <= 1'h0;\n      end else begin\n        clear <= T_178;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      cs_assert <= 1'h0;\n    end else begin\n      if (T_202) begin\n        cs_assert <= 1'h0;\n      end else begin\n        if (T_182) begin\n          if (T_189) begin\n            if (phy_io_op_ready) begin\n              cs_assert <= 1'h1;\n            end\n          end\n        end\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      state <= 2'h0;\n    end else begin\n      if (T_202) begin\n        if (phy_io_op_ready) begin\n          state <= 2'h0;\n        end else begin\n          if (T_198) begin\n            if (T_201) begin\n              state <= 2'h0;\n            end else begin\n              if (T_182) begin\n                if (cs_assert) begin\n                  if (T_184) begin\n                    if (T_186) begin\n                      state <= 2'h1;\n                    end else begin\n                      if (cs_deassert) begin\n                        if (phy_io_op_ready) begin\n                          state <= 2'h2;\n                        end\n                      end\n                    end\n                  end else begin\n                    if (cs_deassert) begin\n                      if (phy_io_op_ready) begin\n                        state <= 2'h2;\n                      end\n                    end\n                  end\n                end\n              end\n            end\n          end else begin\n            if (T_182) begin\n              if (cs_assert) begin\n                if (T_184) begin\n                  if (T_186) begin\n                    state <= 2'h1;\n                  end else begin\n                    if (cs_deassert) begin\n                      if (phy_io_op_ready) begin\n                        state <= 2'h2;\n                      end\n                    end\n                  end\n                end else begin\n                  if (cs_deassert) begin\n                    if (phy_io_op_ready) begin\n                      state <= 2'h2;\n                    end\n                  end\n                end\n              end\n            end\n          end\n        end\n      end else begin\n        if (T_198) begin\n          if (T_201) begin\n            state <= 2'h0;\n          end else begin\n            if (T_182) begin\n              if (cs_assert) begin\n                if (T_184) begin\n                  if (T_186) begin\n                    state <= 2'h1;\n                  end else begin\n                    state <= GEN_2;\n                  end\n                end else begin\n                  state <= GEN_2;\n                end\n              end\n            end\n          end\n        end else begin\n          if (T_182) begin\n            if (cs_assert) begin\n              if (T_184) begin\n                if (T_186) begin\n                  state <= 2'h1;\n                end else begin\n                  state <= GEN_2;\n                end\n              end else begin\n                state <= GEN_2;\n              end\n            end\n          end\n        end\n      end\n    end\n  \nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_qspi_physical(\n  input   clock,\n  input   reset,\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  input  [11:0] io_ctrl_sck_div,\n  input   io_ctrl_sck_pol,\n  input   io_ctrl_sck_pha,\n  input  [1:0] io_ctrl_fmt_proto,\n  input   io_ctrl_fmt_endian,\n  input   io_ctrl_fmt_iodir,\n  output  io_op_ready,\n  input   io_op_valid,\n  input   io_op_bits_fn,\n  input   io_op_bits_stb,\n  input  [7:0] io_op_bits_cnt,\n  input  [7:0] io_op_bits_data,\n  output  io_rx_valid,\n  output [7:0] io_rx_bits\n);\n  reg [11:0] ctrl_sck_div;\n  reg [31:0] GEN_2;\n  reg  ctrl_sck_pol;\n  reg [31:0] GEN_31;\n  reg  ctrl_sck_pha;\n  reg [31:0] GEN_52;\n  reg [1:0] ctrl_fmt_proto;\n  reg [31:0] GEN_67;\n  reg  ctrl_fmt_endian;\n  reg [31:0] GEN_68;\n  reg  ctrl_fmt_iodir;\n  reg [31:0] GEN_69;\n  wire  proto_0;\n  wire  proto_1;\n  wire  proto_2;\n  wire  accept;\n  wire  sample;\n  wire  setup;\n  wire  last;\n  reg  setup_d;\n  reg [31:0] GEN_70;\n  reg  T_119;\n  reg [31:0] GEN_71;\n  reg  T_120;\n  reg [31:0] GEN_72;\n  reg  sample_d;\n  reg [31:0] GEN_73;\n  reg  T_122;\n  reg [31:0] GEN_74;\n  reg  T_123;\n  reg [31:0] GEN_75;\n  reg  last_d;\n  reg [31:0] GEN_76;\n  reg [7:0] scnt;\n  reg [31:0] GEN_77;\n  reg [11:0] tcnt;\n  reg [31:0] GEN_78;\n  wire  stop;\n  wire  beat;\n  wire [11:0] T_127;\n  wire [12:0] T_129;\n  wire [11:0] decr;\n  wire  sched;\n  wire [11:0] T_130;\n  reg  sck;\n  reg [31:0] GEN_79;\n  reg  cref;\n  reg [31:0] GEN_80;\n  wire  cinv;\n  wire [1:0] T_133;\n  wire [1:0] T_134;\n  wire [3:0] rxd;\n  wire  samples_0;\n  wire [1:0] samples_1;\n  reg [7:0] buffer;\n  reg [31:0] GEN_81;\n  wire  T_135;\n  wire  T_136;\n  wire  T_137;\n  wire  T_138;\n  wire  T_139;\n  wire  T_140;\n  wire  T_141;\n  wire  T_142;\n  wire  T_143;\n  wire [1:0] T_144;\n  wire [1:0] T_145;\n  wire [3:0] T_146;\n  wire [1:0] T_147;\n  wire [1:0] T_148;\n  wire [3:0] T_149;\n  wire [7:0] T_150;\n  wire [7:0] buffer_in;\n  wire  T_151;\n  wire  shift;\n  wire [6:0] T_152;\n  wire [6:0] T_153;\n  wire [6:0] T_154;\n  wire  T_155;\n  wire  T_157;\n  wire [7:0] T_158;\n  wire [5:0] T_159;\n  wire [5:0] T_160;\n  wire [5:0] T_161;\n  wire [1:0] T_162;\n  wire [1:0] T_163;\n  wire [7:0] T_164;\n  wire [3:0] T_165;\n  wire [3:0] T_166;\n  wire [3:0] T_167;\n  wire [3:0] T_169;\n  wire [7:0] T_170;\n  wire [7:0] T_172;\n  wire [7:0] T_174;\n  wire [7:0] T_176;\n  wire [7:0] T_178;\n  wire [7:0] T_179;\n  wire [7:0] T_180;\n  reg [3:0] txd;\n  reg [31:0] GEN_82;\n  wire [3:0] T_182;\n  wire [3:0] txd_in;\n  wire [1:0] T_184;\n  wire  txd_sel_0;\n  wire  txd_sel_1;\n  wire  txd_sel_2;\n  wire  txd_shf_0;\n  wire [1:0] txd_shf_1;\n  wire  T_186;\n  wire [1:0] T_188;\n  wire [3:0] T_190;\n  wire [1:0] GEN_65;\n  wire [1:0] T_192;\n  wire [3:0] GEN_66;\n  wire [3:0] T_193;\n  wire [3:0] T_194;\n  wire [3:0] GEN_0;\n  wire  T_195;\n  wire  T_196;\n  wire  txen_1;\n  wire  txen_0;\n  wire  T_202_0;\n  wire  T_206;\n  wire  T_207;\n  wire  T_208;\n  wire  T_209;\n  reg  done;\n  reg [31:0] GEN_83;\n  wire  T_212;\n  wire  T_213;\n  wire  T_215;\n  wire  T_216;\n  wire  T_217;\n  wire  T_218;\n  wire  T_219;\n  wire  T_220;\n  wire  T_221;\n  wire [1:0] T_222;\n  wire [1:0] T_223;\n  wire [3:0] T_224;\n  wire [1:0] T_225;\n  wire [1:0] T_226;\n  wire [3:0] T_227;\n  wire [7:0] T_228;\n  wire [7:0] T_229;\n  reg  xfr;\n  reg [31:0] GEN_84;\n  wire  GEN_1;\n  wire  T_234;\n  wire  T_236;\n  wire  T_237;\n  wire  GEN_3;\n  wire  GEN_4;\n  wire  GEN_5;\n  wire [11:0] GEN_6;\n  wire  GEN_7;\n  wire  GEN_8;\n  wire  GEN_9;\n  wire  GEN_10;\n  wire [11:0] GEN_11;\n  wire  GEN_12;\n  wire  GEN_13;\n  wire  GEN_14;\n  wire  GEN_15;\n  wire [11:0] GEN_16;\n  wire  T_243;\n  wire  T_244;\n  wire  T_245;\n  wire  T_248;\n  wire  GEN_17;\n  wire  GEN_18;\n  wire  GEN_19;\n  wire  GEN_20;\n  wire  GEN_21;\n  wire  GEN_22;\n  wire  GEN_23;\n  wire  T_251;\n  wire [1:0] GEN_24;\n  wire  GEN_25;\n  wire  GEN_26;\n  wire  T_256;\n  wire  T_259;\n  wire [7:0] GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_32;\n  wire [11:0] GEN_33;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  GEN_36;\n  wire [11:0] GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire [11:0] GEN_40;\n  wire [1:0] GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire [7:0] GEN_45;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire  GEN_48;\n  wire [11:0] GEN_49;\n  wire  GEN_50;\n  wire  GEN_51;\n  wire [11:0] GEN_53;\n  wire [1:0] GEN_54;\n  wire  GEN_55;\n  wire  GEN_56;\n  wire  GEN_57;\n  wire [7:0] GEN_58;\n  wire  GEN_59;\n  wire  GEN_60;\n  wire  GEN_61;\n  wire [11:0] GEN_62;\n  wire  GEN_63;\n  wire  GEN_64;\n  assign io_port_sck = sck;\n  assign io_port_dq_0_o = T_206;\n  assign io_port_dq_0_oe = txen_0;\n  assign io_port_dq_1_o = T_207;\n  assign io_port_dq_1_oe = txen_1;\n  assign io_port_dq_2_o = T_208;\n  assign io_port_dq_2_oe = T_196;\n  assign io_port_dq_3_o = T_209;\n  assign io_port_dq_3_oe = io_port_dq_2_oe; \n  assign io_port_cs_0 = T_202_0;\n  assign io_op_ready = T_251;\n  assign io_rx_valid = done;\n  assign io_rx_bits = T_229;\n  assign proto_0 = 2'h0 == ctrl_fmt_proto;\n  assign proto_1 = 2'h1 == ctrl_fmt_proto;\n  assign proto_2 = 2'h2 == ctrl_fmt_proto;\n  assign accept = GEN_21;\n  assign sample = GEN_14;\n  assign setup = GEN_60;\n  assign last = GEN_20;\n  assign stop = scnt == 8'h0;\n  assign beat = tcnt == 12'h0;\n  assign T_127 = beat ? {{4'd0}, scnt} : tcnt;\n  assign T_129 = T_127 - 12'h1;\n  assign decr = T_129[11:0];\n  assign sched = GEN_1;\n  assign T_130 = sched ? ctrl_sck_div : decr;\n  assign cinv = ctrl_sck_pha ^ ctrl_sck_pol;\n  assign T_133 = {io_port_dq_1_i,io_port_dq_0_i};\n  assign T_134 = {io_port_dq_3_i,io_port_dq_2_i};\n  assign rxd = {T_134,T_133};\n  assign samples_0 = rxd[1];\n  assign samples_1 = rxd[1:0];\n  assign T_135 = io_ctrl_fmt_endian == 1'h0;\n  assign T_136 = io_op_bits_data[0];\n  assign T_137 = io_op_bits_data[1];\n  assign T_138 = io_op_bits_data[2];\n  assign T_139 = io_op_bits_data[3];\n  assign T_140 = io_op_bits_data[4];\n  assign T_141 = io_op_bits_data[5];\n  assign T_142 = io_op_bits_data[6];\n  assign T_143 = io_op_bits_data[7];\n  assign T_144 = {T_142,T_143};\n  assign T_145 = {T_140,T_141};\n  assign T_146 = {T_145,T_144};\n  assign T_147 = {T_138,T_139};\n  assign T_148 = {T_136,T_137};\n  assign T_149 = {T_148,T_147};\n  assign T_150 = {T_149,T_146};\n  assign buffer_in = T_135 ? io_op_bits_data : T_150;\n  assign T_151 = sample_d & stop;\n  assign shift = setup_d | T_151;\n  assign T_152 = buffer[6:0];\n  assign T_153 = buffer[7:1];\n  assign T_154 = shift ? T_152 : T_153;\n  assign T_155 = buffer[0];\n  assign T_157 = sample_d ? samples_0 : T_155;\n  assign T_158 = {T_154,T_157};\n  assign T_159 = buffer[5:0];\n  assign T_160 = buffer[7:2];\n  assign T_161 = shift ? T_159 : T_160;\n  assign T_162 = buffer[1:0];\n  assign T_163 = sample_d ? samples_1 : T_162;\n  assign T_164 = {T_161,T_163};\n  assign T_165 = buffer[3:0];\n  assign T_166 = buffer[7:4];\n  assign T_167 = shift ? T_165 : T_166;\n  assign T_169 = sample_d ? rxd : T_165;\n  assign T_170 = {T_167,T_169};\n  assign T_172 = proto_0 ? T_158 : 8'h0;\n  assign T_174 = proto_1 ? T_164 : 8'h0;\n  assign T_176 = proto_2 ? T_170 : 8'h0;\n  assign T_178 = T_172 | T_174;\n  assign T_179 = T_178 | T_176;\n  assign T_180 = T_179;\n  assign T_182 = buffer_in[7:4];\n  assign txd_in = accept ? T_182 : T_166;\n  assign T_184 = accept ? io_ctrl_fmt_proto : ctrl_fmt_proto;\n  assign txd_sel_0 = 2'h0 == T_184;\n  assign txd_sel_1 = 2'h1 == T_184;\n  assign txd_sel_2 = 2'h2 == T_184;\n  assign txd_shf_0 = txd_in[3];\n  assign txd_shf_1 = txd_in[3:2];\n  assign T_186 = txd_sel_0 ? txd_shf_0 : 1'h0;\n  assign T_188 = txd_sel_1 ? txd_shf_1 : 2'h0;\n  assign T_190 = txd_sel_2 ? txd_in : 4'h0;\n  assign GEN_65 = {{1'd0}, T_186};\n  assign T_192 = GEN_65 | T_188;\n  assign GEN_66 = {{2'd0}, T_192};\n  assign T_193 = GEN_66 | T_190;\n  assign T_194 = T_193;\n  assign GEN_0 = setup ? T_194 : txd;\n  assign T_195 = proto_1 & ctrl_fmt_iodir;\n  assign T_196 = proto_2 & ctrl_fmt_iodir;\n  assign txen_1 = T_195 | T_196;\n  assign txen_0 = proto_0 | txen_1;\n  assign T_202_0 = 1'h1;\n  assign T_206 = txd[0];\n  assign T_207 = txd[1];\n  assign T_208 = txd[2];\n  assign T_209 = txd[3];\n  assign T_212 = done | last_d;\n  assign T_213 = ctrl_fmt_endian == 1'h0;\n  assign T_215 = buffer[1];\n  assign T_216 = buffer[2];\n  assign T_217 = buffer[3];\n  assign T_218 = buffer[4];\n  assign T_219 = buffer[5];\n  assign T_220 = buffer[6];\n  assign T_221 = buffer[7];\n  assign T_222 = {T_220,T_221};\n  assign T_223 = {T_218,T_219};\n  assign T_224 = {T_223,T_222};\n  assign T_225 = {T_216,T_217};\n  assign T_226 = {T_155,T_215};\n  assign T_227 = {T_226,T_225};\n  assign T_228 = {T_227,T_224};\n  assign T_229 = T_213 ? buffer : T_228;\n  assign GEN_1 = stop ? 1'h1 : beat;\n  assign T_234 = stop == 1'h0;\n  assign T_236 = cref == 1'h0;\n  assign T_237 = cref ^ cinv;\n  assign GEN_3 = xfr ? T_237 : sck;\n  assign GEN_4 = xfr ? cref : 1'h0;\n  assign GEN_5 = xfr ? T_236 : 1'h0;\n  assign GEN_6 = T_236 ? decr : {{4'd0}, scnt};\n  assign GEN_7 = beat ? T_236 : cref;\n  assign GEN_8 = beat ? GEN_3 : sck;\n  assign GEN_9 = beat ? GEN_4 : 1'h0;\n  assign GEN_10 = beat ? GEN_5 : 1'h0;\n  assign GEN_11 = beat ? GEN_6 : {{4'd0}, scnt};\n  assign GEN_12 = T_234 ? GEN_7 : cref;\n  assign GEN_13 = T_234 ? GEN_8 : sck;\n  assign GEN_14 = T_234 ? GEN_9 : 1'h0;\n  assign GEN_15 = T_234 ? GEN_10 : 1'h0;\n  assign GEN_16 = T_234 ? GEN_11 : {{4'd0}, scnt};\n  assign T_243 = scnt == 8'h1;\n  assign T_244 = beat & cref;\n  assign T_245 = T_244 & xfr;\n  assign T_248 = beat & T_236;\n  assign GEN_17 = T_248 ? 1'h1 : stop;\n  assign GEN_18 = T_248 ? 1'h0 : GEN_15;\n  assign GEN_19 = T_248 ? ctrl_sck_pol : GEN_13;\n  assign GEN_20 = T_243 ? T_245 : 1'h0;\n  assign GEN_21 = T_243 ? GEN_17 : stop;\n  assign GEN_22 = T_243 ? GEN_18 : GEN_15;\n  assign GEN_23 = T_243 ? GEN_19 : GEN_13;\n  assign T_251 = accept & done;\n  assign GEN_24 = io_op_bits_stb ? io_ctrl_fmt_proto : ctrl_fmt_proto;\n  assign GEN_25 = io_op_bits_stb ? io_ctrl_fmt_endian : ctrl_fmt_endian;\n  assign GEN_26 = io_op_bits_stb ? io_ctrl_fmt_iodir : ctrl_fmt_iodir;\n  assign T_256 = 1'h0 == io_op_bits_fn;\n  assign T_259 = io_op_bits_cnt == 8'h0;\n  assign GEN_27 = T_256 ? buffer_in : T_180;\n  assign GEN_28 = T_256 ? cinv : GEN_23;\n  assign GEN_29 = T_256 ? 1'h1 : GEN_22;\n  assign GEN_30 = T_256 ? T_259 : T_212;\n  assign GEN_32 = io_op_bits_stb ? io_ctrl_sck_pol : GEN_28;\n  assign GEN_33 = io_op_bits_stb ? io_ctrl_sck_div : ctrl_sck_div;\n  assign GEN_34 = io_op_bits_stb ? io_ctrl_sck_pol : ctrl_sck_pol;\n  assign GEN_35 = io_op_bits_stb ? io_ctrl_sck_pha : ctrl_sck_pha;\n  assign GEN_36 = io_op_bits_fn ? GEN_32 : GEN_28;\n  assign GEN_37 = io_op_bits_fn ? GEN_33 : ctrl_sck_div;\n  assign GEN_38 = io_op_bits_fn ? GEN_34 : ctrl_sck_pol;\n  assign GEN_39 = io_op_bits_fn ? GEN_35 : ctrl_sck_pha;\n  assign GEN_40 = io_op_valid ? {{4'd0}, io_op_bits_cnt} : GEN_16;\n  assign GEN_41 = io_op_valid ? GEN_24 : ctrl_fmt_proto;\n  assign GEN_42 = io_op_valid ? GEN_25 : ctrl_fmt_endian;\n  assign GEN_43 = io_op_valid ? GEN_26 : ctrl_fmt_iodir;\n  assign GEN_44 = io_op_valid ? T_256 : xfr;\n  assign GEN_45 = io_op_valid ? GEN_27 : T_180;\n  assign GEN_46 = io_op_valid ? GEN_36 : GEN_23;\n  assign GEN_47 = io_op_valid ? GEN_29 : GEN_22;\n  assign GEN_48 = io_op_valid ? GEN_30 : T_212;\n  assign GEN_49 = io_op_valid ? GEN_37 : ctrl_sck_div;\n  assign GEN_50 = io_op_valid ? GEN_38 : ctrl_sck_pol;\n  assign GEN_51 = io_op_valid ? GEN_39 : ctrl_sck_pha;\n  assign GEN_53 = T_251 ? GEN_40 : GEN_16;\n  assign GEN_54 = T_251 ? GEN_41 : ctrl_fmt_proto;\n  assign GEN_55 = T_251 ? GEN_42 : ctrl_fmt_endian;\n  assign GEN_56 = T_251 ? GEN_43 : ctrl_fmt_iodir;\n  assign GEN_57 = T_251 ? GEN_44 : xfr;\n  assign GEN_58 = T_251 ? GEN_45 : T_180;\n  assign GEN_59 = T_251 ? GEN_46 : GEN_23;\n  assign GEN_60 = T_251 ? GEN_47 : GEN_22;\n  assign GEN_61 = T_251 ? GEN_48 : T_212;\n  assign GEN_62 = T_251 ? GEN_49 : ctrl_sck_div;\n  assign GEN_63 = T_251 ? GEN_50 : ctrl_sck_pol;\n  assign GEN_64 = T_251 ? GEN_51 : ctrl_sck_pha;\n\n  always @(posedge clock or posedge reset)\n  if (reset) begin\n    ctrl_sck_div <= 12'b0;\n    ctrl_sck_pol <= 1'b0;\n    ctrl_sck_pha <= 1'b0;\n    ctrl_fmt_proto <= 2'b0;\n    ctrl_fmt_endian <= 1'b0;\n    ctrl_fmt_iodir <= 1'b0;\n    setup_d <= 1'b0;\n    tcnt <= 12'b0;\n    sck <= 1'b0;\n    buffer <= 8'b0;\n    xfr <= 1'b0;\n  end\n  else begin\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            ctrl_sck_div <= io_ctrl_sck_div;\n          end\n        end\n      end\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            ctrl_sck_pol <= io_ctrl_sck_pol;\n          end\n        end\n      end\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            ctrl_sck_pha <= io_ctrl_sck_pha;\n          end\n        end\n      end\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_stb) begin\n          ctrl_fmt_proto <= io_ctrl_fmt_proto;\n        end\n      end\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_stb) begin\n          ctrl_fmt_endian <= io_ctrl_fmt_endian;\n        end\n      end\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_stb) begin\n          ctrl_fmt_iodir <= io_ctrl_fmt_iodir;\n        end\n      end\n    end\n    setup_d <= setup;\n\n\n\n\n    if (sched) begin\n      tcnt <= ctrl_sck_div;\n    end else begin\n      tcnt <= decr;\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            sck <= io_ctrl_sck_pol;\n          end else begin\n            if (T_256) begin\n              sck <= cinv;\n            end else begin\n              if (T_243) begin\n                if (T_248) begin\n                  sck <= ctrl_sck_pol;\n                end else begin\n                  if (T_234) begin\n                    if (beat) begin\n                      if (xfr) begin\n                        sck <= T_237;\n                      end\n                    end\n                  end\n                end\n              end else begin\n                if (T_234) begin\n                  if (beat) begin\n                    if (xfr) begin\n                      sck <= T_237;\n                    end\n                  end\n                end\n              end\n            end\n          end\n        end else begin\n          if (T_256) begin\n            sck <= cinv;\n          end else begin\n            if (T_243) begin\n              if (T_248) begin\n                sck <= ctrl_sck_pol;\n              end else begin\n                if (T_234) begin\n                  if (beat) begin\n                    if (xfr) begin\n                      sck <= T_237;\n                    end\n                  end\n                end\n              end\n            end else begin\n              if (T_234) begin\n                if (beat) begin\n                  if (xfr) begin\n                    sck <= T_237;\n                  end\n                end\n              end\n            end\n          end\n        end\n      end else begin\n        if (T_243) begin\n          if (T_248) begin\n            sck <= ctrl_sck_pol;\n          end else begin\n            sck <= GEN_13;\n          end\n        end else begin\n          sck <= GEN_13;\n        end\n      end\n    end else begin\n      if (T_243) begin\n        if (T_248) begin\n          sck <= ctrl_sck_pol;\n        end else begin\n          sck <= GEN_13;\n        end\n      end else begin\n        sck <= GEN_13;\n      end\n    end\n\n\n\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (T_256) begin\n          if (T_135) begin\n            buffer <= io_op_bits_data;\n          end else begin\n            buffer <= T_150;\n          end\n        end else begin\n          buffer <= T_180;\n        end\n      end else begin\n        buffer <= T_180;\n      end\n    end else begin\n      buffer <= T_180;\n    end\n\n    if (T_251) begin\n      if (io_op_valid) begin\n        xfr <= T_256;\n      end\n    end\n\n  end\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      cref <= 1'h1;\n    end else begin\n      if (T_234) begin\n        if (beat) begin\n          cref <= T_236;\n        end\n      end\n    end\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      txd <= 4'h0;\n    end else begin\n      if (setup) begin\n        txd <= T_194;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      done <= 1'h1;\n    end else begin\n      if (T_251) begin\n        if (io_op_valid) begin\n          if (T_256) begin\n            done <= T_259;\n          end else begin\n            done <= T_212;\n          end\n        end else begin\n          done <= T_212;\n        end\n      end else begin\n        done <= T_212;\n      end\n    end\n\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_119 <= 1'h0;\n    end else begin\n      T_119 <= sample;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_120 <= 1'h0;\n    end else begin\n      T_120 <= T_119;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sample_d <= 1'h0;\n    end else begin\n      sample_d <= T_120;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_122 <= 1'h0;\n    end else begin\n      T_122 <= last;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_123 <= 1'h0;\n    end else begin\n      T_123 <= T_122;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      last_d <= 1'h0;\n    end else begin\n      last_d <= T_123;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      scnt <= 8'h0;\n    end else begin\n      scnt <= GEN_53[7:0];\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_qspi_physical_1(\n  input   clock,\n  input   reset,\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  output  io_port_cs_1,\n  output  io_port_cs_2,\n  output  io_port_cs_3,\n  input  [11:0] io_ctrl_sck_div,\n  input   io_ctrl_sck_pol,\n  input   io_ctrl_sck_pha,\n  input  [1:0] io_ctrl_fmt_proto,\n  input   io_ctrl_fmt_endian,\n  input   io_ctrl_fmt_iodir,\n  output  io_op_ready,\n  input   io_op_valid,\n  input   io_op_bits_fn,\n  input   io_op_bits_stb,\n  input  [7:0] io_op_bits_cnt,\n  input  [7:0] io_op_bits_data,\n  output  io_rx_valid,\n  output [7:0] io_rx_bits\n);\n  reg [11:0] ctrl_sck_div;\n  reg [31:0] GEN_2;\n  reg  ctrl_sck_pol;\n  reg [31:0] GEN_31;\n  reg  ctrl_sck_pha;\n  reg [31:0] GEN_52;\n  reg [1:0] ctrl_fmt_proto;\n  reg [31:0] GEN_67;\n  reg  ctrl_fmt_endian;\n  reg [31:0] GEN_68;\n  reg  ctrl_fmt_iodir;\n  reg [31:0] GEN_69;\n  wire  proto_0;\n  wire  proto_1;\n  wire  proto_2;\n  wire  accept;\n  wire  sample;\n  wire  setup;\n  wire  last;\n  reg  setup_d;\n  reg [31:0] GEN_70;\n  reg  T_119;\n  reg [31:0] GEN_71;\n  reg  T_120;\n  reg [31:0] GEN_72;\n  reg  sample_d;\n  reg [31:0] GEN_73;\n  reg  T_122;\n  reg [31:0] GEN_74;\n  reg  T_123;\n  reg [31:0] GEN_75;\n  reg  last_d;\n  reg [31:0] GEN_76;\n  reg [7:0] scnt;\n  reg [31:0] GEN_77;\n  reg [11:0] tcnt;\n  reg [31:0] GEN_78;\n  wire  stop;\n  wire  beat;\n  wire [11:0] T_127;\n  wire [12:0] T_129;\n  wire [11:0] decr;\n  wire  sched;\n  wire [11:0] T_130;\n  reg  sck;\n  reg [31:0] GEN_79;\n  reg  cref;\n  reg [31:0] GEN_80;\n  wire  cinv;\n  wire [1:0] T_133;\n  wire [1:0] T_134;\n  wire [3:0] rxd;\n  wire  samples_0;\n  wire [1:0] samples_1;\n  reg [7:0] buffer;\n  reg [31:0] GEN_81;\n  wire  T_135;\n  wire  T_136;\n  wire  T_137;\n  wire  T_138;\n  wire  T_139;\n  wire  T_140;\n  wire  T_141;\n  wire  T_142;\n  wire  T_143;\n  wire [1:0] T_144;\n  wire [1:0] T_145;\n  wire [3:0] T_146;\n  wire [1:0] T_147;\n  wire [1:0] T_148;\n  wire [3:0] T_149;\n  wire [7:0] T_150;\n  wire [7:0] buffer_in;\n  wire  T_151;\n  wire  shift;\n  wire [6:0] T_152;\n  wire [6:0] T_153;\n  wire [6:0] T_154;\n  wire  T_155;\n  wire  T_157;\n  wire [7:0] T_158;\n  wire [5:0] T_159;\n  wire [5:0] T_160;\n  wire [5:0] T_161;\n  wire [1:0] T_162;\n  wire [1:0] T_163;\n  wire [7:0] T_164;\n  wire [3:0] T_165;\n  wire [3:0] T_166;\n  wire [3:0] T_167;\n  wire [3:0] T_169;\n  wire [7:0] T_170;\n  wire [7:0] T_172;\n  wire [7:0] T_174;\n  wire [7:0] T_176;\n  wire [7:0] T_178;\n  wire [7:0] T_179;\n  wire [7:0] T_180;\n  reg [3:0] txd;\n  reg [31:0] GEN_82;\n  wire [3:0] T_182;\n  wire [3:0] txd_in;\n  wire [1:0] T_184;\n  wire  txd_sel_0;\n  wire  txd_sel_1;\n  wire  txd_sel_2;\n  wire  txd_shf_0;\n  wire [1:0] txd_shf_1;\n  wire  T_186;\n  wire [1:0] T_188;\n  wire [3:0] T_190;\n  wire [1:0] GEN_65;\n  wire [1:0] T_192;\n  wire [3:0] GEN_66;\n  wire [3:0] T_193;\n  wire [3:0] T_194;\n  wire [3:0] GEN_0;\n  wire  T_195;\n  wire  T_196;\n  wire  txen_1;\n  wire  txen_0;\n  wire  T_208_0;\n  wire  T_208_1;\n  wire  T_208_2;\n  wire  T_208_3;\n  wire  T_215;\n  wire  T_216;\n  wire  T_217;\n  wire  T_218;\n  reg  done;\n  reg [31:0] GEN_83;\n  wire  T_221;\n  wire  T_222;\n  wire  T_224;\n  wire  T_225;\n  wire  T_226;\n  wire  T_227;\n  wire  T_228;\n  wire  T_229;\n  wire  T_230;\n  wire [1:0] T_231;\n  wire [1:0] T_232;\n  wire [3:0] T_233;\n  wire [1:0] T_234;\n  wire [1:0] T_235;\n  wire [3:0] T_236;\n  wire [7:0] T_237;\n  wire [7:0] T_238;\n  reg  xfr;\n  reg [31:0] GEN_84;\n  wire  GEN_1;\n  wire  T_243;\n  wire  T_245;\n  wire  T_246;\n  wire  GEN_3;\n  wire  GEN_4;\n  wire  GEN_5;\n  wire [11:0] GEN_6;\n  wire  GEN_7;\n  wire  GEN_8;\n  wire  GEN_9;\n  wire  GEN_10;\n  wire [11:0] GEN_11;\n  wire  GEN_12;\n  wire  GEN_13;\n  wire  GEN_14;\n  wire  GEN_15;\n  wire [11:0] GEN_16;\n  wire  T_252;\n  wire  T_253;\n  wire  T_254;\n  wire  T_257;\n  wire  GEN_17;\n  wire  GEN_18;\n  wire  GEN_19;\n  wire  GEN_20;\n  wire  GEN_21;\n  wire  GEN_22;\n  wire  GEN_23;\n  wire  T_260;\n  wire [1:0] GEN_24;\n  wire  GEN_25;\n  wire  GEN_26;\n  wire  T_263;\n  wire  T_266;\n  wire [7:0] GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_32;\n  wire [11:0] GEN_33;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  GEN_36;\n  wire [11:0] GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire [11:0] GEN_40;\n  wire [1:0] GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire [7:0] GEN_45;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire  GEN_48;\n  wire [11:0] GEN_49;\n  wire  GEN_50;\n  wire  GEN_51;\n  wire [11:0] GEN_53;\n  wire [1:0] GEN_54;\n  wire  GEN_55;\n  wire  GEN_56;\n  wire  GEN_57;\n  wire [7:0] GEN_58;\n  wire  GEN_59;\n  wire  GEN_60;\n  wire  GEN_61;\n  wire [11:0] GEN_62;\n  wire  GEN_63;\n  wire  GEN_64;\n  assign io_port_sck = sck;\n  assign io_port_dq_0_o = T_215;\n  assign io_port_dq_0_oe = txen_0;\n  assign io_port_dq_1_o = T_216;\n  assign io_port_dq_1_oe = txen_1;\n  assign io_port_dq_2_o = T_217;\n  assign io_port_dq_2_oe = T_196;\n  assign io_port_dq_3_o = T_218;\n  assign io_port_dq_3_oe = io_port_dq_2_oe;\n  assign io_port_cs_0 = T_208_0;\n  assign io_port_cs_1 = T_208_1;\n  assign io_port_cs_2 = T_208_2;\n  assign io_port_cs_3 = T_208_3;\n  assign io_op_ready = T_260;\n  assign io_rx_valid = done;\n  assign io_rx_bits = T_238;\n  assign proto_0 = 2'h0 == ctrl_fmt_proto;\n  assign proto_1 = 2'h1 == ctrl_fmt_proto;\n  assign proto_2 = 2'h2 == ctrl_fmt_proto;\n  assign accept = GEN_21;\n  assign sample = GEN_14;\n  assign setup = GEN_60;\n  assign last = GEN_20;\n  assign stop = scnt == 8'h0;\n  assign beat = tcnt == 12'h0;\n  assign T_127 = beat ? {{4'd0}, scnt} : tcnt;\n  assign T_129 = T_127 - 12'h1;\n  assign decr = T_129[11:0];\n  assign sched = GEN_1;\n  assign T_130 = sched ? ctrl_sck_div : decr;\n  assign cinv = ctrl_sck_pha ^ ctrl_sck_pol;\n  assign T_133 = {io_port_dq_1_i,io_port_dq_0_i};\n  assign T_134 = {io_port_dq_3_i,io_port_dq_2_i};\n  assign rxd = {T_134,T_133};\n  assign samples_0 = rxd[1];\n  assign samples_1 = rxd[1:0];\n  assign T_135 = io_ctrl_fmt_endian == 1'h0;\n  assign T_136 = io_op_bits_data[0];\n  assign T_137 = io_op_bits_data[1];\n  assign T_138 = io_op_bits_data[2];\n  assign T_139 = io_op_bits_data[3];\n  assign T_140 = io_op_bits_data[4];\n  assign T_141 = io_op_bits_data[5];\n  assign T_142 = io_op_bits_data[6];\n  assign T_143 = io_op_bits_data[7];\n  assign T_144 = {T_142,T_143};\n  assign T_145 = {T_140,T_141};\n  assign T_146 = {T_145,T_144};\n  assign T_147 = {T_138,T_139};\n  assign T_148 = {T_136,T_137};\n  assign T_149 = {T_148,T_147};\n  assign T_150 = {T_149,T_146};\n  assign buffer_in = T_135 ? io_op_bits_data : T_150;\n  assign T_151 = sample_d & stop;\n  assign shift = setup_d | T_151;\n  assign T_152 = buffer[6:0];\n  assign T_153 = buffer[7:1];\n  assign T_154 = shift ? T_152 : T_153;\n  assign T_155 = buffer[0];\n  assign T_157 = sample_d ? samples_0 : T_155;\n  assign T_158 = {T_154,T_157};\n  assign T_159 = buffer[5:0];\n  assign T_160 = buffer[7:2];\n  assign T_161 = shift ? T_159 : T_160;\n  assign T_162 = buffer[1:0];\n  assign T_163 = sample_d ? samples_1 : T_162;\n  assign T_164 = {T_161,T_163};\n  assign T_165 = buffer[3:0];\n  assign T_166 = buffer[7:4];\n  assign T_167 = shift ? T_165 : T_166;\n  assign T_169 = sample_d ? rxd : T_165;\n  assign T_170 = {T_167,T_169};\n  assign T_172 = proto_0 ? T_158 : 8'h0;\n  assign T_174 = proto_1 ? T_164 : 8'h0;\n  assign T_176 = proto_2 ? T_170 : 8'h0;\n  assign T_178 = T_172 | T_174;\n  assign T_179 = T_178 | T_176;\n  assign T_180 = T_179;\n  assign T_182 = buffer_in[7:4];\n  assign txd_in = accept ? T_182 : T_166;\n  assign T_184 = accept ? io_ctrl_fmt_proto : ctrl_fmt_proto;\n  assign txd_sel_0 = 2'h0 == T_184;\n  assign txd_sel_1 = 2'h1 == T_184;\n  assign txd_sel_2 = 2'h2 == T_184;\n  assign txd_shf_0 = txd_in[3];\n  assign txd_shf_1 = txd_in[3:2];\n  assign T_186 = txd_sel_0 ? txd_shf_0 : 1'h0;\n  assign T_188 = txd_sel_1 ? txd_shf_1 : 2'h0;\n  assign T_190 = txd_sel_2 ? txd_in : 4'h0;\n  assign GEN_65 = {{1'd0}, T_186};\n  assign T_192 = GEN_65 | T_188;\n  assign GEN_66 = {{2'd0}, T_192};\n  assign T_193 = GEN_66 | T_190;\n  assign T_194 = T_193;\n  assign GEN_0 = setup ? T_194 : txd;\n  assign T_195 = proto_1 & ctrl_fmt_iodir;\n  assign T_196 = proto_2 & ctrl_fmt_iodir;\n  assign txen_1 = T_195 | T_196;\n  assign txen_0 = proto_0 | txen_1;\n  assign T_208_0 = 1'h1;\n  assign T_208_1 = 1'h1;\n  assign T_208_2 = 1'h1;\n  assign T_208_3 = 1'h1;\n  assign T_215 = txd[0];\n  assign T_216 = txd[1];\n  assign T_217 = txd[2];\n  assign T_218 = txd[3];\n  assign T_221 = done | last_d;\n  assign T_222 = ctrl_fmt_endian == 1'h0;\n  assign T_224 = buffer[1];\n  assign T_225 = buffer[2];\n  assign T_226 = buffer[3];\n  assign T_227 = buffer[4];\n  assign T_228 = buffer[5];\n  assign T_229 = buffer[6];\n  assign T_230 = buffer[7];\n  assign T_231 = {T_229,T_230};\n  assign T_232 = {T_227,T_228};\n  assign T_233 = {T_232,T_231};\n  assign T_234 = {T_225,T_226};\n  assign T_235 = {T_155,T_224};\n  assign T_236 = {T_235,T_234};\n  assign T_237 = {T_236,T_233};\n  assign T_238 = T_222 ? buffer : T_237;\n  assign GEN_1 = stop ? 1'h1 : beat;\n  assign T_243 = stop == 1'h0;\n  assign T_245 = cref == 1'h0;\n  assign T_246 = cref ^ cinv;\n  assign GEN_3 = xfr ? T_246 : sck;\n  assign GEN_4 = xfr ? cref : 1'h0;\n  assign GEN_5 = xfr ? T_245 : 1'h0;\n  assign GEN_6 = T_245 ? decr : {{4'd0}, scnt};\n  assign GEN_7 = beat ? T_245 : cref;\n  assign GEN_8 = beat ? GEN_3 : sck;\n  assign GEN_9 = beat ? GEN_4 : 1'h0;\n  assign GEN_10 = beat ? GEN_5 : 1'h0;\n  assign GEN_11 = beat ? GEN_6 : {{4'd0}, scnt};\n  assign GEN_12 = T_243 ? GEN_7 : cref;\n  assign GEN_13 = T_243 ? GEN_8 : sck;\n  assign GEN_14 = T_243 ? GEN_9 : 1'h0;\n  assign GEN_15 = T_243 ? GEN_10 : 1'h0;\n  assign GEN_16 = T_243 ? GEN_11 : {{4'd0}, scnt};\n  assign T_252 = scnt == 8'h1;\n  assign T_253 = beat & cref;\n  assign T_254 = T_253 & xfr;\n  assign T_257 = beat & T_245;\n  assign GEN_17 = T_257 ? 1'h1 : stop;\n  assign GEN_18 = T_257 ? 1'h0 : GEN_15;\n  assign GEN_19 = T_257 ? ctrl_sck_pol : GEN_13;\n  assign GEN_20 = T_252 ? T_254 : 1'h0;\n  assign GEN_21 = T_252 ? GEN_17 : stop;\n  assign GEN_22 = T_252 ? GEN_18 : GEN_15;\n  assign GEN_23 = T_252 ? GEN_19 : GEN_13;\n  assign T_260 = accept & done;\n  assign GEN_24 = io_op_bits_stb ? io_ctrl_fmt_proto : ctrl_fmt_proto;\n  assign GEN_25 = io_op_bits_stb ? io_ctrl_fmt_endian : ctrl_fmt_endian;\n  assign GEN_26 = io_op_bits_stb ? io_ctrl_fmt_iodir : ctrl_fmt_iodir;\n  assign T_263 = 1'h0 == io_op_bits_fn;\n  assign T_266 = io_op_bits_cnt == 8'h0;\n  assign GEN_27 = T_263 ? buffer_in : T_180;\n  assign GEN_28 = T_263 ? cinv : GEN_23;\n  assign GEN_29 = T_263 ? 1'h1 : GEN_22;\n  assign GEN_30 = T_263 ? T_266 : T_221;\n  assign GEN_32 = io_op_bits_stb ? io_ctrl_sck_pol : GEN_28;\n  assign GEN_33 = io_op_bits_stb ? io_ctrl_sck_div : ctrl_sck_div;\n  assign GEN_34 = io_op_bits_stb ? io_ctrl_sck_pol : ctrl_sck_pol;\n  assign GEN_35 = io_op_bits_stb ? io_ctrl_sck_pha : ctrl_sck_pha;\n  assign GEN_36 = io_op_bits_fn ? GEN_32 : GEN_28;\n  assign GEN_37 = io_op_bits_fn ? GEN_33 : ctrl_sck_div;\n  assign GEN_38 = io_op_bits_fn ? GEN_34 : ctrl_sck_pol;\n  assign GEN_39 = io_op_bits_fn ? GEN_35 : ctrl_sck_pha;\n  assign GEN_40 = io_op_valid ? {{4'd0}, io_op_bits_cnt} : GEN_16;\n  assign GEN_41 = io_op_valid ? GEN_24 : ctrl_fmt_proto;\n  assign GEN_42 = io_op_valid ? GEN_25 : ctrl_fmt_endian;\n  assign GEN_43 = io_op_valid ? GEN_26 : ctrl_fmt_iodir;\n  assign GEN_44 = io_op_valid ? T_263 : xfr;\n  assign GEN_45 = io_op_valid ? GEN_27 : T_180;\n  assign GEN_46 = io_op_valid ? GEN_36 : GEN_23;\n  assign GEN_47 = io_op_valid ? GEN_29 : GEN_22;\n  assign GEN_48 = io_op_valid ? GEN_30 : T_221;\n  assign GEN_49 = io_op_valid ? GEN_37 : ctrl_sck_div;\n  assign GEN_50 = io_op_valid ? GEN_38 : ctrl_sck_pol;\n  assign GEN_51 = io_op_valid ? GEN_39 : ctrl_sck_pha;\n  assign GEN_53 = T_260 ? GEN_40 : GEN_16;\n  assign GEN_54 = T_260 ? GEN_41 : ctrl_fmt_proto;\n  assign GEN_55 = T_260 ? GEN_42 : ctrl_fmt_endian;\n  assign GEN_56 = T_260 ? GEN_43 : ctrl_fmt_iodir;\n  assign GEN_57 = T_260 ? GEN_44 : xfr;\n  assign GEN_58 = T_260 ? GEN_45 : T_180;\n  assign GEN_59 = T_260 ? GEN_46 : GEN_23;\n  assign GEN_60 = T_260 ? GEN_47 : GEN_22;\n  assign GEN_61 = T_260 ? GEN_48 : T_221;\n  assign GEN_62 = T_260 ? GEN_49 : ctrl_sck_div;\n  assign GEN_63 = T_260 ? GEN_50 : ctrl_sck_pol;\n  assign GEN_64 = T_260 ? GEN_51 : ctrl_sck_pha;\n\n  always @(posedge clock or posedge reset)\n  if (reset) begin\n    ctrl_sck_div <= 12'b0;\n    ctrl_sck_pol <= 1'b0;\n    ctrl_sck_pha <= 1'b0;\n    ctrl_fmt_proto <= 2'b0;\n    ctrl_fmt_endian <= 1'b0;\n    ctrl_fmt_iodir <= 1'b0;\n    setup_d <= 1'b0;\n    tcnt <= 12'b0;\n    sck <= 1'b0;\n    buffer <= 8'b0;\n    xfr <= 1'b0;\n  end\n  else begin\n    if (T_260) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            ctrl_sck_div <= io_ctrl_sck_div;\n          end\n        end\n      end\n    end\n    if (T_260) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            ctrl_sck_pol <= io_ctrl_sck_pol;\n          end\n        end\n      end\n    end\n    if (T_260) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            ctrl_sck_pha <= io_ctrl_sck_pha;\n          end\n        end\n      end\n    end\n    if (T_260) begin\n      if (io_op_valid) begin\n        if (io_op_bits_stb) begin\n          ctrl_fmt_proto <= io_ctrl_fmt_proto;\n        end\n      end\n    end\n    if (T_260) begin\n      if (io_op_valid) begin\n        if (io_op_bits_stb) begin\n          ctrl_fmt_endian <= io_ctrl_fmt_endian;\n        end\n      end\n    end\n    if (T_260) begin\n      if (io_op_valid) begin\n        if (io_op_bits_stb) begin\n          ctrl_fmt_iodir <= io_ctrl_fmt_iodir;\n        end\n      end\n    end\n    setup_d <= setup;\n\n\n\n\n    if (sched) begin\n      tcnt <= ctrl_sck_div;\n    end else begin\n      tcnt <= decr;\n    end\n    if (T_260) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            sck <= io_ctrl_sck_pol;\n          end else begin\n            if (T_263) begin\n              sck <= cinv;\n            end else begin\n              if (T_252) begin\n                if (T_257) begin\n                  sck <= ctrl_sck_pol;\n                end else begin\n                  if (T_243) begin\n                    if (beat) begin\n                      if (xfr) begin\n                        sck <= T_246;\n                      end\n                    end\n                  end\n                end\n              end else begin\n                if (T_243) begin\n                  if (beat) begin\n                    if (xfr) begin\n                      sck <= T_246;\n                    end\n                  end\n                end\n              end\n            end\n          end\n        end else begin\n          if (T_263) begin\n            sck <= cinv;\n          end else begin\n            if (T_252) begin\n              if (T_257) begin\n                sck <= ctrl_sck_pol;\n              end else begin\n                if (T_243) begin\n                  if (beat) begin\n                    if (xfr) begin\n                      sck <= T_246;\n                    end\n                  end\n                end\n              end\n            end else begin\n              if (T_243) begin\n                if (beat) begin\n                  if (xfr) begin\n                    sck <= T_246;\n                  end\n                end\n              end\n            end\n          end\n        end\n      end else begin\n        if (T_252) begin\n          if (T_257) begin\n            sck <= ctrl_sck_pol;\n          end else begin\n            sck <= GEN_13;\n          end\n        end else begin\n          sck <= GEN_13;\n        end\n      end\n    end else begin\n      if (T_252) begin\n        if (T_257) begin\n          sck <= ctrl_sck_pol;\n        end else begin\n          sck <= GEN_13;\n        end\n      end else begin\n        sck <= GEN_13;\n      end\n    end\n\n\n\n    if (T_260) begin\n      if (io_op_valid) begin\n        if (T_263) begin\n          if (T_135) begin\n            buffer <= io_op_bits_data;\n          end else begin\n            buffer <= T_150;\n          end\n        end else begin\n          buffer <= T_180;\n        end\n      end else begin\n        buffer <= T_180;\n      end\n    end else begin\n      buffer <= T_180;\n    end\n    \n    if (T_260) begin\n      if (io_op_valid) begin\n        xfr <= T_263;\n      end\n    end\n\n  end\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      cref <= 1'h1;\n    end else begin\n      if (T_243) begin\n        if (beat) begin\n          cref <= T_245;\n        end\n      end\n    end\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      txd <= 4'h0;\n    end else begin\n      if (setup) begin\n        txd <= T_194;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      done <= 1'h1;\n    end else begin\n      if (T_260) begin\n        if (io_op_valid) begin\n          if (T_263) begin\n            done <= T_266;\n          end else begin\n            done <= T_221;\n          end\n        end else begin\n          done <= T_221;\n        end\n      end else begin\n        done <= T_221;\n      end\n    end\n\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_119 <= 1'h0;\n    end else begin\n      T_119 <= sample;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_120 <= 1'h0;\n    end else begin\n      T_120 <= T_119;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sample_d <= 1'h0;\n    end else begin\n      sample_d <= T_120;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_122 <= 1'h0;\n    end else begin\n      T_122 <= last;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_123 <= 1'h0;\n    end else begin\n      T_123 <= T_122;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      last_d <= 1'h0;\n    end else begin\n      last_d <= T_123;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      scnt <= 8'h0;\n    end else begin\n      scnt <= GEN_53[7:0];\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_qspi_physical_2(\n  input   clock,\n  input   reset,\n  output  io_port_sck,\n  input   io_port_dq_0_i,\n  output  io_port_dq_0_o,\n  output  io_port_dq_0_oe,\n  input   io_port_dq_1_i,\n  output  io_port_dq_1_o,\n  output  io_port_dq_1_oe,\n  input   io_port_dq_2_i,\n  output  io_port_dq_2_o,\n  output  io_port_dq_2_oe,\n  input   io_port_dq_3_i,\n  output  io_port_dq_3_o,\n  output  io_port_dq_3_oe,\n  output  io_port_cs_0,\n  input  [11:0] io_ctrl_sck_div,\n  input   io_ctrl_sck_pol,\n  input   io_ctrl_sck_pha,\n  input  [1:0] io_ctrl_fmt_proto,\n  input   io_ctrl_fmt_endian,\n  input   io_ctrl_fmt_iodir,\n  output  io_op_ready,\n  input   io_op_valid,\n  input   io_op_bits_fn,\n  input   io_op_bits_stb,\n  input  [7:0] io_op_bits_cnt,\n  input  [7:0] io_op_bits_data,\n  output  io_rx_valid,\n  output [7:0] io_rx_bits\n);\n  reg [11:0] ctrl_sck_div;\n  reg [31:0] GEN_2;\n  reg  ctrl_sck_pol;\n  reg [31:0] GEN_31;\n  reg  ctrl_sck_pha;\n  reg [31:0] GEN_52;\n  reg [1:0] ctrl_fmt_proto;\n  reg [31:0] GEN_67;\n  reg  ctrl_fmt_endian;\n  reg [31:0] GEN_68;\n  reg  ctrl_fmt_iodir;\n  reg [31:0] GEN_69;\n  wire  proto_0;\n  wire  proto_1;\n  wire  proto_2;\n  wire  accept;\n  wire  sample;\n  wire  setup;\n  wire  last;\n  reg  setup_d;\n  reg [31:0] GEN_70;\n  reg  T_119;\n  reg [31:0] GEN_71;\n  reg  T_120;\n  reg [31:0] GEN_72;\n  reg  sample_d;\n  reg [31:0] GEN_73;\n  reg  T_122;\n  reg [31:0] GEN_74;\n  reg  T_123;\n  reg [31:0] GEN_75;\n  reg  last_d;\n  reg [31:0] GEN_76;\n  reg [7:0] scnt;\n  reg [31:0] GEN_77;\n  reg [11:0] tcnt;\n  reg [31:0] GEN_78;\n  wire  stop;\n  wire  beat;\n  wire [11:0] T_127;\n  wire [12:0] T_129;\n  wire [11:0] decr;\n  wire  sched;\n  wire [11:0] T_130;\n  reg  sck;\n  reg [31:0] GEN_79;\n  reg  cref;\n  reg [31:0] GEN_80;\n  wire  cinv;\n  wire [1:0] T_133;\n  wire [1:0] T_134;\n  wire [3:0] rxd;\n  wire  samples_0;\n  wire [1:0] samples_1;\n  reg [7:0] buffer;\n  reg [31:0] GEN_81;\n  wire  T_135;\n  wire  T_136;\n  wire  T_137;\n  wire  T_138;\n  wire  T_139;\n  wire  T_140;\n  wire  T_141;\n  wire  T_142;\n  wire  T_143;\n  wire [1:0] T_144;\n  wire [1:0] T_145;\n  wire [3:0] T_146;\n  wire [1:0] T_147;\n  wire [1:0] T_148;\n  wire [3:0] T_149;\n  wire [7:0] T_150;\n  wire [7:0] buffer_in;\n  wire  T_151;\n  wire  shift;\n  wire [6:0] T_152;\n  wire [6:0] T_153;\n  wire [6:0] T_154;\n  wire  T_155;\n  wire  T_157;\n  wire [7:0] T_158;\n  wire [5:0] T_159;\n  wire [5:0] T_160;\n  wire [5:0] T_161;\n  wire [1:0] T_162;\n  wire [1:0] T_163;\n  wire [7:0] T_164;\n  wire [3:0] T_165;\n  wire [3:0] T_166;\n  wire [3:0] T_167;\n  wire [3:0] T_169;\n  wire [7:0] T_170;\n  wire [7:0] T_172;\n  wire [7:0] T_174;\n  wire [7:0] T_176;\n  wire [7:0] T_178;\n  wire [7:0] T_179;\n  wire [7:0] T_180;\n  reg [3:0] txd;\n  reg [31:0] GEN_82;\n  wire [3:0] T_182;\n  wire [3:0] txd_in;\n  wire [1:0] T_184;\n  wire  txd_sel_0;\n  wire  txd_sel_1;\n  wire  txd_sel_2;\n  wire  txd_shf_0;\n  wire [1:0] txd_shf_1;\n  wire  T_186;\n  wire [1:0] T_188;\n  wire [3:0] T_190;\n  wire [1:0] GEN_65;\n  wire [1:0] T_192;\n  wire [3:0] GEN_66;\n  wire [3:0] T_193;\n  wire [3:0] T_194;\n  wire [3:0] GEN_0;\n  wire  T_195;\n  wire  T_196;\n  wire  txen_1;\n  wire  txen_0;\n  wire  T_202_0;\n  wire  T_206;\n  wire  T_207;\n  wire  T_208;\n  wire  T_209;\n  reg  done;\n  reg [31:0] GEN_83;\n  wire  T_212;\n  wire  T_213;\n  wire  T_215;\n  wire  T_216;\n  wire  T_217;\n  wire  T_218;\n  wire  T_219;\n  wire  T_220;\n  wire  T_221;\n  wire [1:0] T_222;\n  wire [1:0] T_223;\n  wire [3:0] T_224;\n  wire [1:0] T_225;\n  wire [1:0] T_226;\n  wire [3:0] T_227;\n  wire [7:0] T_228;\n  wire [7:0] T_229;\n  reg  xfr;\n  reg [31:0] GEN_84;\n  wire  GEN_1;\n  wire  T_234;\n  wire  T_236;\n  wire  T_237;\n  wire  GEN_3;\n  wire  GEN_4;\n  wire  GEN_5;\n  wire [11:0] GEN_6;\n  wire  GEN_7;\n  wire  GEN_8;\n  wire  GEN_9;\n  wire  GEN_10;\n  wire [11:0] GEN_11;\n  wire  GEN_12;\n  wire  GEN_13;\n  wire  GEN_14;\n  wire  GEN_15;\n  wire [11:0] GEN_16;\n  wire  T_243;\n  wire  T_244;\n  wire  T_245;\n  wire  T_248;\n  wire  GEN_17;\n  wire  GEN_18;\n  wire  GEN_19;\n  wire  GEN_20;\n  wire  GEN_21;\n  wire  GEN_22;\n  wire  GEN_23;\n  wire  T_251;\n  wire [1:0] GEN_24;\n  wire  GEN_25;\n  wire  GEN_26;\n  wire  T_254;\n  wire  T_257;\n  wire [7:0] GEN_27;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_32;\n  wire [11:0] GEN_33;\n  wire  GEN_34;\n  wire  GEN_35;\n  wire  GEN_36;\n  wire [11:0] GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire [11:0] GEN_40;\n  wire [1:0] GEN_41;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire [7:0] GEN_45;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire  GEN_48;\n  wire [11:0] GEN_49;\n  wire  GEN_50;\n  wire  GEN_51;\n  wire [11:0] GEN_53;\n  wire [1:0] GEN_54;\n  wire  GEN_55;\n  wire  GEN_56;\n  wire  GEN_57;\n  wire [7:0] GEN_58;\n  wire  GEN_59;\n  wire  GEN_60;\n  wire  GEN_61;\n  wire [11:0] GEN_62;\n  wire  GEN_63;\n  wire  GEN_64;\n  assign io_port_sck = sck;\n  assign io_port_dq_0_o = T_206;\n  assign io_port_dq_0_oe = txen_0;\n  assign io_port_dq_1_o = T_207;\n  assign io_port_dq_1_oe = txen_1;\n  assign io_port_dq_2_o = T_208;\n  assign io_port_dq_2_oe = T_196;\n  assign io_port_dq_3_o = T_209;\n  assign io_port_dq_3_oe = io_port_dq_2_oe;\n  assign io_port_cs_0 = T_202_0;\n  assign io_op_ready = T_251;\n  assign io_rx_valid = done;\n  assign io_rx_bits = T_229;\n  assign proto_0 = 2'h0 == ctrl_fmt_proto;\n  assign proto_1 = 2'h1 == ctrl_fmt_proto;\n  assign proto_2 = 2'h2 == ctrl_fmt_proto;\n  assign accept = GEN_21;\n  assign sample = GEN_14;\n  assign setup = GEN_60;\n  assign last = GEN_20;\n  assign stop = scnt == 8'h0;\n  assign beat = tcnt == 12'h0;\n  assign T_127 = beat ? {{4'd0}, scnt} : tcnt;\n  assign T_129 = T_127 - 12'h1;\n  assign decr = T_129[11:0];\n  assign sched = GEN_1;\n  assign T_130 = sched ? ctrl_sck_div : decr;\n  assign cinv = ctrl_sck_pha ^ ctrl_sck_pol;\n  assign T_133 = {io_port_dq_1_i,io_port_dq_0_i};\n  assign T_134 = {io_port_dq_3_i,io_port_dq_2_i};\n  assign rxd = {T_134,T_133};\n  assign samples_0 = rxd[1];\n  assign samples_1 = rxd[1:0];\n  assign T_135 = io_ctrl_fmt_endian == 1'h0;\n  assign T_136 = io_op_bits_data[0];\n  assign T_137 = io_op_bits_data[1];\n  assign T_138 = io_op_bits_data[2];\n  assign T_139 = io_op_bits_data[3];\n  assign T_140 = io_op_bits_data[4];\n  assign T_141 = io_op_bits_data[5];\n  assign T_142 = io_op_bits_data[6];\n  assign T_143 = io_op_bits_data[7];\n  assign T_144 = {T_142,T_143};\n  assign T_145 = {T_140,T_141};\n  assign T_146 = {T_145,T_144};\n  assign T_147 = {T_138,T_139};\n  assign T_148 = {T_136,T_137};\n  assign T_149 = {T_148,T_147};\n  assign T_150 = {T_149,T_146};\n  assign buffer_in = T_135 ? io_op_bits_data : T_150;\n  assign T_151 = sample_d & stop;\n  assign shift = setup_d | T_151;\n  assign T_152 = buffer[6:0];\n  assign T_153 = buffer[7:1];\n  assign T_154 = shift ? T_152 : T_153;\n  assign T_155 = buffer[0];\n  assign T_157 = sample_d ? samples_0 : T_155;\n  assign T_158 = {T_154,T_157};\n  assign T_159 = buffer[5:0];\n  assign T_160 = buffer[7:2];\n  assign T_161 = shift ? T_159 : T_160;\n  assign T_162 = buffer[1:0];\n  assign T_163 = sample_d ? samples_1 : T_162;\n  assign T_164 = {T_161,T_163};\n  assign T_165 = buffer[3:0];\n  assign T_166 = buffer[7:4];\n  assign T_167 = shift ? T_165 : T_166;\n  assign T_169 = sample_d ? rxd : T_165;\n  assign T_170 = {T_167,T_169};\n  assign T_172 = proto_0 ? T_158 : 8'h0;\n  assign T_174 = proto_1 ? T_164 : 8'h0;\n  assign T_176 = proto_2 ? T_170 : 8'h0;\n  assign T_178 = T_172 | T_174;\n  assign T_179 = T_178 | T_176;\n  assign T_180 = T_179;\n  assign T_182 = buffer_in[7:4];\n  assign txd_in = accept ? T_182 : T_166;\n  assign T_184 = accept ? io_ctrl_fmt_proto : ctrl_fmt_proto;\n  assign txd_sel_0 = 2'h0 == T_184;\n  assign txd_sel_1 = 2'h1 == T_184;\n  assign txd_sel_2 = 2'h2 == T_184;\n  assign txd_shf_0 = txd_in[3];\n  assign txd_shf_1 = txd_in[3:2];\n  assign T_186 = txd_sel_0 ? txd_shf_0 : 1'h0;\n  assign T_188 = txd_sel_1 ? txd_shf_1 : 2'h0;\n  assign T_190 = txd_sel_2 ? txd_in : 4'h0;\n  assign GEN_65 = {{1'd0}, T_186};\n  assign T_192 = GEN_65 | T_188;\n  assign GEN_66 = {{2'd0}, T_192};\n  assign T_193 = GEN_66 | T_190;\n  assign T_194 = T_193;\n  assign GEN_0 = setup ? T_194 : txd;\n  assign T_195 = proto_1 & ctrl_fmt_iodir;\n  assign T_196 = proto_2 & ctrl_fmt_iodir;\n  assign txen_1 = T_195 | T_196;\n  assign txen_0 = proto_0 | txen_1;\n  assign T_202_0 = 1'h1;\n  assign T_206 = txd[0];\n  assign T_207 = txd[1];\n  assign T_208 = txd[2];\n  assign T_209 = txd[3];\n  assign T_212 = done | last_d;\n  assign T_213 = ctrl_fmt_endian == 1'h0;\n  assign T_215 = buffer[1];\n  assign T_216 = buffer[2];\n  assign T_217 = buffer[3];\n  assign T_218 = buffer[4];\n  assign T_219 = buffer[5];\n  assign T_220 = buffer[6];\n  assign T_221 = buffer[7];\n  assign T_222 = {T_220,T_221};\n  assign T_223 = {T_218,T_219};\n  assign T_224 = {T_223,T_222};\n  assign T_225 = {T_216,T_217};\n  assign T_226 = {T_155,T_215};\n  assign T_227 = {T_226,T_225};\n  assign T_228 = {T_227,T_224};\n  assign T_229 = T_213 ? buffer : T_228;\n  assign GEN_1 = stop ? 1'h1 : beat;\n  assign T_234 = stop == 1'h0;\n  assign T_236 = cref == 1'h0;\n  assign T_237 = cref ^ cinv;\n  assign GEN_3 = xfr ? T_237 : sck;\n  assign GEN_4 = xfr ? cref : 1'h0;\n  assign GEN_5 = xfr ? T_236 : 1'h0;\n  assign GEN_6 = T_236 ? decr : {{4'd0}, scnt};\n  assign GEN_7 = beat ? T_236 : cref;\n  assign GEN_8 = beat ? GEN_3 : sck;\n  assign GEN_9 = beat ? GEN_4 : 1'h0;\n  assign GEN_10 = beat ? GEN_5 : 1'h0;\n  assign GEN_11 = beat ? GEN_6 : {{4'd0}, scnt};\n  assign GEN_12 = T_234 ? GEN_7 : cref;\n  assign GEN_13 = T_234 ? GEN_8 : sck;\n  assign GEN_14 = T_234 ? GEN_9 : 1'h0;\n  assign GEN_15 = T_234 ? GEN_10 : 1'h0;\n  assign GEN_16 = T_234 ? GEN_11 : {{4'd0}, scnt};\n  assign T_243 = scnt == 8'h1;\n  assign T_244 = beat & cref;\n  assign T_245 = T_244 & xfr;\n  assign T_248 = beat & T_236;\n  assign GEN_17 = T_248 ? 1'h1 : stop;\n  assign GEN_18 = T_248 ? 1'h0 : GEN_15;\n  assign GEN_19 = T_248 ? ctrl_sck_pol : GEN_13;\n  assign GEN_20 = T_243 ? T_245 : 1'h0;\n  assign GEN_21 = T_243 ? GEN_17 : stop;\n  assign GEN_22 = T_243 ? GEN_18 : GEN_15;\n  assign GEN_23 = T_243 ? GEN_19 : GEN_13;\n  assign T_251 = accept & done;\n  assign GEN_24 = io_op_bits_stb ? io_ctrl_fmt_proto : ctrl_fmt_proto;\n  assign GEN_25 = io_op_bits_stb ? io_ctrl_fmt_endian : ctrl_fmt_endian;\n  assign GEN_26 = io_op_bits_stb ? io_ctrl_fmt_iodir : ctrl_fmt_iodir;\n  assign T_254 = 1'h0 == io_op_bits_fn;\n  assign T_257 = io_op_bits_cnt == 8'h0;\n  assign GEN_27 = T_254 ? buffer_in : T_180;\n  assign GEN_28 = T_254 ? cinv : GEN_23;\n  assign GEN_29 = T_254 ? 1'h1 : GEN_22;\n  assign GEN_30 = T_254 ? T_257 : T_212;\n  assign GEN_32 = io_op_bits_stb ? io_ctrl_sck_pol : GEN_28;\n  assign GEN_33 = io_op_bits_stb ? io_ctrl_sck_div : ctrl_sck_div;\n  assign GEN_34 = io_op_bits_stb ? io_ctrl_sck_pol : ctrl_sck_pol;\n  assign GEN_35 = io_op_bits_stb ? io_ctrl_sck_pha : ctrl_sck_pha;\n  assign GEN_36 = io_op_bits_fn ? GEN_32 : GEN_28;\n  assign GEN_37 = io_op_bits_fn ? GEN_33 : ctrl_sck_div;\n  assign GEN_38 = io_op_bits_fn ? GEN_34 : ctrl_sck_pol;\n  assign GEN_39 = io_op_bits_fn ? GEN_35 : ctrl_sck_pha;\n  assign GEN_40 = io_op_valid ? {{4'd0}, io_op_bits_cnt} : GEN_16;\n  assign GEN_41 = io_op_valid ? GEN_24 : ctrl_fmt_proto;\n  assign GEN_42 = io_op_valid ? GEN_25 : ctrl_fmt_endian;\n  assign GEN_43 = io_op_valid ? GEN_26 : ctrl_fmt_iodir;\n  assign GEN_44 = io_op_valid ? T_254 : xfr;\n  assign GEN_45 = io_op_valid ? GEN_27 : T_180;\n  assign GEN_46 = io_op_valid ? GEN_36 : GEN_23;\n  assign GEN_47 = io_op_valid ? GEN_29 : GEN_22;\n  assign GEN_48 = io_op_valid ? GEN_30 : T_212;\n  assign GEN_49 = io_op_valid ? GEN_37 : ctrl_sck_div;\n  assign GEN_50 = io_op_valid ? GEN_38 : ctrl_sck_pol;\n  assign GEN_51 = io_op_valid ? GEN_39 : ctrl_sck_pha;\n  assign GEN_53 = T_251 ? GEN_40 : GEN_16;\n  assign GEN_54 = T_251 ? GEN_41 : ctrl_fmt_proto;\n  assign GEN_55 = T_251 ? GEN_42 : ctrl_fmt_endian;\n  assign GEN_56 = T_251 ? GEN_43 : ctrl_fmt_iodir;\n  assign GEN_57 = T_251 ? GEN_44 : xfr;\n  assign GEN_58 = T_251 ? GEN_45 : T_180;\n  assign GEN_59 = T_251 ? GEN_46 : GEN_23;\n  assign GEN_60 = T_251 ? GEN_47 : GEN_22;\n  assign GEN_61 = T_251 ? GEN_48 : T_212;\n  assign GEN_62 = T_251 ? GEN_49 : ctrl_sck_div;\n  assign GEN_63 = T_251 ? GEN_50 : ctrl_sck_pol;\n  assign GEN_64 = T_251 ? GEN_51 : ctrl_sck_pha;\n\n  always @(posedge clock or posedge reset)\n  if (reset) begin\n    ctrl_sck_div <= 12'b0;\n    ctrl_sck_pol <= 1'b0;\n    ctrl_sck_pha <= 1'b0;\n    ctrl_fmt_proto <= 2'b0;\n    ctrl_fmt_endian <= 1'b0;\n    ctrl_fmt_iodir <= 1'b0;\n    setup_d <= 1'b0;\n    tcnt <= 12'b0;\n    sck <= 1'b0;\n    buffer <= 8'b0;\n    xfr <= 1'b0;\n  end\n  else begin\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            ctrl_sck_div <= io_ctrl_sck_div;\n          end\n        end\n      end\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            ctrl_sck_pol <= io_ctrl_sck_pol;\n          end\n        end\n      end\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            ctrl_sck_pha <= io_ctrl_sck_pha;\n          end\n        end\n      end\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_stb) begin\n          ctrl_fmt_proto <= io_ctrl_fmt_proto;\n        end\n      end\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_stb) begin\n          ctrl_fmt_endian <= io_ctrl_fmt_endian;\n        end\n      end\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_stb) begin\n          ctrl_fmt_iodir <= io_ctrl_fmt_iodir;\n        end\n      end\n    end\n    setup_d <= setup;\n\n\n\n\n    if (sched) begin\n      tcnt <= ctrl_sck_div;\n    end else begin\n      tcnt <= decr;\n    end\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (io_op_bits_fn) begin\n          if (io_op_bits_stb) begin\n            sck <= io_ctrl_sck_pol;\n          end else begin\n            if (T_254) begin\n              sck <= cinv;\n            end else begin\n              if (T_243) begin\n                if (T_248) begin\n                  sck <= ctrl_sck_pol;\n                end else begin\n                  if (T_234) begin\n                    if (beat) begin\n                      if (xfr) begin\n                        sck <= T_237;\n                      end\n                    end\n                  end\n                end\n              end else begin\n                if (T_234) begin\n                  if (beat) begin\n                    if (xfr) begin\n                      sck <= T_237;\n                    end\n                  end\n                end\n              end\n            end\n          end\n        end else begin\n          if (T_254) begin\n            sck <= cinv;\n          end else begin\n            if (T_243) begin\n              if (T_248) begin\n                sck <= ctrl_sck_pol;\n              end else begin\n                if (T_234) begin\n                  if (beat) begin\n                    if (xfr) begin\n                      sck <= T_237;\n                    end\n                  end\n                end\n              end\n            end else begin\n              if (T_234) begin\n                if (beat) begin\n                  if (xfr) begin\n                    sck <= T_237;\n                  end\n                end\n              end\n            end\n          end\n        end\n      end else begin\n        if (T_243) begin\n          if (T_248) begin\n            sck <= ctrl_sck_pol;\n          end else begin\n            sck <= GEN_13;\n          end\n        end else begin\n          sck <= GEN_13;\n        end\n      end\n    end else begin\n      if (T_243) begin\n        if (T_248) begin\n          sck <= ctrl_sck_pol;\n        end else begin\n          sck <= GEN_13;\n        end\n      end else begin\n        sck <= GEN_13;\n      end\n    end\n\n\n\n    if (T_251) begin\n      if (io_op_valid) begin\n        if (T_254) begin\n          if (T_135) begin\n            buffer <= io_op_bits_data;\n          end else begin\n            buffer <= T_150;\n          end\n        end else begin\n          buffer <= T_180;\n        end\n      end else begin\n        buffer <= T_180;\n      end\n    end else begin\n      buffer <= T_180;\n    end\n\n    if (T_251) begin\n      if (io_op_valid) begin\n        xfr <= T_254;\n      end\n    end\n\n  end\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      cref <= 1'h1;\n    end else begin\n      if (T_234) begin\n        if (beat) begin\n          cref <= T_236;\n        end\n      end\n    end\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      txd <= 4'h0;\n    end else begin\n      if (setup) begin\n        txd <= T_194;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      done <= 1'h1;\n    end else begin\n      if (T_251) begin\n        if (io_op_valid) begin\n          if (T_254) begin\n            done <= T_257;\n          end else begin\n            done <= T_212;\n          end\n        end else begin\n          done <= T_212;\n        end\n      end else begin\n        done <= T_212;\n      end\n    end\n\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_119 <= 1'h0;\n    end else begin\n      T_119 <= sample;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_120 <= 1'h0;\n    end else begin\n      T_120 <= T_119;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      sample_d <= 1'h0;\n    end else begin\n      sample_d <= T_120;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_122 <= 1'h0;\n    end else begin\n      T_122 <= last;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_123 <= 1'h0;\n    end else begin\n      T_123 <= T_122;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      last_d <= 1'h0;\n    end else begin\n      last_d <= T_123;\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      scnt <= 8'h0;\n    end else begin\n      scnt <= GEN_53[7:0];\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_queue(\n  input   clock,\n  input   reset,\n  output  io_enq_ready,\n  input   io_enq_valid,\n  input   io_enq_bits_read,\n  input  [9:0] io_enq_bits_index,\n  input  [31:0] io_enq_bits_data,\n  input  [3:0] io_enq_bits_mask,\n  input  [9:0] io_enq_bits_extra,\n  input   io_deq_ready,\n  output  io_deq_valid,\n  output  io_deq_bits_read,\n  output [9:0] io_deq_bits_index,\n  output [31:0] io_deq_bits_data,\n  output [3:0] io_deq_bits_mask,\n  output [9:0] io_deq_bits_extra,\n  output  io_count\n);\n  reg  ram_read [0:0];\n  reg [31:0] GEN_0;\n  wire  ram_read_T_83_data;\n  wire  ram_read_T_83_addr;\n  wire  ram_read_T_69_data;\n  wire  ram_read_T_69_addr;\n  wire  ram_read_T_69_mask;\n  wire  ram_read_T_69_en;\n  reg [9:0] ram_index [0:0];\n  reg [31:0] GEN_1;\n  wire [9:0] ram_index_T_83_data;\n  wire  ram_index_T_83_addr;\n  wire [9:0] ram_index_T_69_data;\n  wire  ram_index_T_69_addr;\n  wire  ram_index_T_69_mask;\n  wire  ram_index_T_69_en;\n  reg [31:0] ram_data [0:0];\n  reg [31:0] GEN_2;\n  wire [31:0] ram_data_T_83_data;\n  wire  ram_data_T_83_addr;\n  wire [31:0] ram_data_T_69_data;\n  wire  ram_data_T_69_addr;\n  wire  ram_data_T_69_mask;\n  wire  ram_data_T_69_en;\n  reg [3:0] ram_mask [0:0];\n  reg [31:0] GEN_3;\n  wire [3:0] ram_mask_T_83_data;\n  wire  ram_mask_T_83_addr;\n  wire [3:0] ram_mask_T_69_data;\n  wire  ram_mask_T_69_addr;\n  wire  ram_mask_T_69_mask;\n  wire  ram_mask_T_69_en;\n  reg [9:0] ram_extra [0:0];\n  reg [31:0] GEN_4;\n  wire [9:0] ram_extra_T_83_data;\n  wire  ram_extra_T_83_addr;\n  wire [9:0] ram_extra_T_69_data;\n  wire  ram_extra_T_69_addr;\n  wire  ram_extra_T_69_mask;\n  wire  ram_extra_T_69_en;\n  reg  maybe_full;\n  reg [31:0] GEN_5;\n  wire  T_65;\n  wire  T_66;\n  wire  do_enq;\n  wire  T_67;\n  wire  do_deq;\n  wire  T_77;\n  wire  GEN_8;\n  wire  T_79;\n  wire  GEN_9;\n  wire [1:0] T_90;\n  wire  ptr_diff;\n  wire [1:0] T_92;\n  assign io_enq_ready = GEN_9;\n  assign io_deq_valid = T_79;\n  assign io_deq_bits_read = ram_read_T_83_data;\n  assign io_deq_bits_index = ram_index_T_83_data;\n  assign io_deq_bits_data = ram_data_T_83_data;\n  assign io_deq_bits_mask = ram_mask_T_83_data;\n  assign io_deq_bits_extra = ram_extra_T_83_data;\n  assign io_count = T_92[0];\n  assign ram_read_T_83_addr = 1'h0;\n  assign ram_read_T_83_data = ram_read[ram_read_T_83_addr];\n  assign ram_read_T_69_data = io_enq_bits_read;\n  assign ram_read_T_69_addr = 1'h0;\n  assign ram_read_T_69_mask = do_enq;\n  assign ram_read_T_69_en = do_enq;\n  assign ram_index_T_83_addr = 1'h0;\n  assign ram_index_T_83_data = ram_index[ram_index_T_83_addr];\n  assign ram_index_T_69_data = io_enq_bits_index;\n  assign ram_index_T_69_addr = 1'h0;\n  assign ram_index_T_69_mask = do_enq;\n  assign ram_index_T_69_en = do_enq;\n  assign ram_data_T_83_addr = 1'h0;\n  assign ram_data_T_83_data = ram_data[ram_data_T_83_addr];\n  assign ram_data_T_69_data = io_enq_bits_data;\n  assign ram_data_T_69_addr = 1'h0;\n  assign ram_data_T_69_mask = do_enq;\n  assign ram_data_T_69_en = do_enq;\n  assign ram_mask_T_83_addr = 1'h0;\n  assign ram_mask_T_83_data = ram_mask[ram_mask_T_83_addr];\n  assign ram_mask_T_69_data = io_enq_bits_mask;\n  assign ram_mask_T_69_addr = 1'h0;\n  assign ram_mask_T_69_mask = do_enq;\n  assign ram_mask_T_69_en = do_enq;\n  assign ram_extra_T_83_addr = 1'h0;\n  assign ram_extra_T_83_data = ram_extra[ram_extra_T_83_addr];\n  assign ram_extra_T_69_data = io_enq_bits_extra;\n  assign ram_extra_T_69_addr = 1'h0;\n  assign ram_extra_T_69_mask = do_enq;\n  assign ram_extra_T_69_en = do_enq;\n  assign T_65 = maybe_full == 1'h0;\n  assign T_66 = io_enq_ready & io_enq_valid;\n  assign do_enq = T_66;\n  assign T_67 = io_deq_ready & io_deq_valid;\n  assign do_deq = T_67;\n  assign T_77 = do_enq != do_deq;\n  assign GEN_8 = T_77 ? do_enq : maybe_full;\n  assign T_79 = T_65 == 1'h0;\n  assign GEN_9 = io_deq_ready ? 1'h1 : T_65;\n  assign T_90 = 1'h0 - 1'h0;\n  assign ptr_diff = T_90[0:0];\n  assign T_92 = {maybe_full,ptr_diff};\n\n  always @(posedge clock) begin// The ram block does not need reset\n    if(ram_read_T_69_en & ram_read_T_69_mask) begin\n      ram_read[ram_read_T_69_addr] <= ram_read_T_69_data;\n    end\n    if(ram_index_T_69_en & ram_index_T_69_mask) begin\n      ram_index[ram_index_T_69_addr] <= ram_index_T_69_data;\n    end\n    if(ram_data_T_69_en & ram_data_T_69_mask) begin\n      ram_data[ram_data_T_69_addr] <= ram_data_T_69_data;\n    end\n    if(ram_mask_T_69_en & ram_mask_T_69_mask) begin\n      ram_mask[ram_mask_T_69_addr] <= ram_mask_T_69_data;\n    end\n    if(ram_extra_T_69_en & ram_extra_T_69_mask) begin\n      ram_extra[ram_extra_T_69_addr] <= ram_extra_T_69_data;\n    end\n  end\n\n  always @(posedge clock or posedge reset) begin\n    if (reset) begin\n      maybe_full <= 1'h0;\n    end else begin\n      if (T_77) begin\n        maybe_full <= do_enq;\n      end\n    end\n  end\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_queue_1(\n  input   clock,\n  input   reset,\n  output  io_enq_ready,\n  input   io_enq_valid,\n  input  [7:0] io_enq_bits,\n  input   io_deq_ready,\n  output  io_deq_valid,\n  output [7:0] io_deq_bits,\n  output [3:0] io_count\n);\n  reg [7:0] ram [0:7];\n  reg [31:0] GEN_0;\n  wire [7:0] ram_T_51_data;\n  wire [2:0] ram_T_51_addr;\n  wire [7:0] ram_T_35_data;\n  wire [2:0] ram_T_35_addr;\n  wire  ram_T_35_mask;\n  wire  ram_T_35_en;\n  reg [2:0] T_27;\n  reg [31:0] GEN_1;\n  reg [2:0] T_29;\n  reg [31:0] GEN_2;\n  reg  maybe_full;\n  reg [31:0] GEN_3;\n  wire  ptr_match;\n  wire  T_32;\n  wire  empty;\n  wire  full;\n  wire  T_33;\n  wire  do_enq;\n  wire  T_34;\n  wire  do_deq;\n  wire [3:0] T_39;\n  wire [2:0] T_40;\n  wire [2:0] GEN_4;\n  wire [3:0] T_44;\n  wire [2:0] T_45;\n  wire [2:0] GEN_5;\n  wire  T_46;\n  wire  GEN_6;\n  wire  T_48;\n  wire  T_50;\n  wire [3:0] T_52;\n  wire [2:0] ptr_diff;\n  wire  T_53;\n  wire [3:0] T_54;\n  assign io_enq_ready = T_50;\n  assign io_deq_valid = T_48;\n  assign io_deq_bits = ram_T_51_data;\n  assign io_count = T_54;\n  assign ram_T_51_addr = T_29;\n  assign ram_T_51_data = ram[ram_T_51_addr];\n  assign ram_T_35_data = io_enq_bits;\n  assign ram_T_35_addr = T_27;\n  assign ram_T_35_mask = do_enq;\n  assign ram_T_35_en = do_enq;\n  assign ptr_match = T_27 == T_29;\n  assign T_32 = maybe_full == 1'h0;\n  assign empty = ptr_match & T_32;\n  assign full = ptr_match & maybe_full;\n  assign T_33 = io_enq_ready & io_enq_valid;\n  assign do_enq = T_33;\n  assign T_34 = io_deq_ready & io_deq_valid;\n  assign do_deq = T_34;\n  assign T_39 = T_27 + 3'h1;\n  assign T_40 = T_39[2:0];\n  assign GEN_4 = do_enq ? T_40 : T_27;\n  assign T_44 = T_29 + 3'h1;\n  assign T_45 = T_44[2:0];\n  assign GEN_5 = do_deq ? T_45 : T_29;\n  assign T_46 = do_enq != do_deq;\n  assign GEN_6 = T_46 ? do_enq : maybe_full;\n  assign T_48 = empty == 1'h0;\n  assign T_50 = full == 1'h0;\n  assign T_52 = T_27 - T_29;\n  assign ptr_diff = T_52[2:0];\n  assign T_53 = maybe_full & ptr_match;\n  assign T_54 = {T_53,ptr_diff};\n\n  always @(posedge clock) begin // The RAM block does not need reset\n    if(ram_T_35_en & ram_T_35_mask) begin\n      ram[ram_T_35_addr] <= ram_T_35_data;\n    end\n  end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_27 <= 3'h0;\n    end else begin\n      if (do_enq) begin\n        T_27 <= T_40;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      T_29 <= 3'h0;\n    end else begin\n      if (do_deq) begin\n        T_29 <= T_45;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      maybe_full <= 1'h0;\n    end else begin\n      if (T_46) begin\n        maybe_full <= do_enq;\n      end\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_repeater_6(\n  input   clock,\n  input   reset,\n  input   io_repeat,\n  output  io_full,\n  output  io_enq_ready,\n  input   io_enq_valid,\n  input  [2:0] io_enq_bits_opcode,\n  input  [2:0] io_enq_bits_param,\n  input  [2:0] io_enq_bits_size,\n  input  [1:0] io_enq_bits_source,\n  input  [29:0] io_enq_bits_address,\n  input   io_enq_bits_mask,\n  input  [7:0] io_enq_bits_data,\n  input   io_deq_ready,\n  output  io_deq_valid,\n  output [2:0] io_deq_bits_opcode,\n  output [2:0] io_deq_bits_param,\n  output [2:0] io_deq_bits_size,\n  output [1:0] io_deq_bits_source,\n  output [29:0] io_deq_bits_address,\n  output  io_deq_bits_mask,\n  output [7:0] io_deq_bits_data\n);\n  reg  full;\n  reg [31:0] GEN_9;\n  reg [2:0] saved_opcode;\n  reg [31:0] GEN_10;\n  reg [2:0] saved_param;\n  reg [31:0] GEN_11;\n  reg [2:0] saved_size;\n  reg [31:0] GEN_12;\n  reg [1:0] saved_source;\n  reg [31:0] GEN_13;\n  reg [29:0] saved_address;\n  reg [31:0] GEN_14;\n  reg  saved_mask;\n  reg [31:0] GEN_15;\n  reg [7:0] saved_data;\n  reg [31:0] GEN_16;\n  wire  T_77;\n  wire  T_79;\n  wire  T_80;\n  wire [2:0] T_81_opcode;\n  wire [2:0] T_81_param;\n  wire [2:0] T_81_size;\n  wire [1:0] T_81_source;\n  wire [29:0] T_81_address;\n  wire  T_81_mask;\n  wire [7:0] T_81_data;\n  wire  T_89;\n  wire  T_90;\n  wire  GEN_0;\n  wire [2:0] GEN_1;\n  wire [2:0] GEN_2;\n  wire [2:0] GEN_3;\n  wire [1:0] GEN_4;\n  wire [29:0] GEN_5;\n  wire  GEN_6;\n  wire [7:0] GEN_7;\n  wire  T_92;\n  wire  T_94;\n  wire  T_95;\n  wire  GEN_8;\n  assign io_full = full;\n  assign io_enq_ready = T_80;\n  assign io_deq_valid = T_77;\n  assign io_deq_bits_opcode = T_81_opcode;\n  assign io_deq_bits_param = T_81_param;\n  assign io_deq_bits_size = T_81_size;\n  assign io_deq_bits_source = T_81_source;\n  assign io_deq_bits_address = T_81_address;\n  assign io_deq_bits_mask = T_81_mask;\n  assign io_deq_bits_data = T_81_data;\n  assign T_77 = io_enq_valid | full;\n  assign T_79 = full == 1'h0;\n  assign T_80 = io_deq_ready & T_79;\n  assign T_81_opcode = full ? saved_opcode : io_enq_bits_opcode;\n  assign T_81_param = full ? saved_param : io_enq_bits_param;\n  assign T_81_size = full ? saved_size : io_enq_bits_size;\n  assign T_81_source = full ? saved_source : io_enq_bits_source;\n  assign T_81_address = full ? saved_address : io_enq_bits_address;\n  assign T_81_mask = full ? saved_mask : io_enq_bits_mask;\n  assign T_81_data = full ? saved_data : io_enq_bits_data;\n  assign T_89 = io_enq_ready & io_enq_valid;\n  assign T_90 = T_89 & io_repeat;\n  assign GEN_0 = T_90 ? 1'h1 : full;\n  assign GEN_1 = T_90 ? io_enq_bits_opcode : saved_opcode;\n  assign GEN_2 = T_90 ? io_enq_bits_param : saved_param;\n  assign GEN_3 = T_90 ? io_enq_bits_size : saved_size;\n  assign GEN_4 = T_90 ? io_enq_bits_source : saved_source;\n  assign GEN_5 = T_90 ? io_enq_bits_address : saved_address;\n  assign GEN_6 = T_90 ? io_enq_bits_mask : saved_mask;\n  assign GEN_7 = T_90 ? io_enq_bits_data : saved_data;\n  assign T_92 = io_deq_ready & io_deq_valid;\n  assign T_94 = io_repeat == 1'h0;\n  assign T_95 = T_92 & T_94;\n  assign GEN_8 = T_95 ? 1'h0 : GEN_0;\n\n  always @(posedge clock or posedge reset) \n    if (reset) begin\n      full <= 1'h0;\n    end else begin\n      if (T_95) begin\n        full <= 1'h0;\n      end else begin\n        if (T_90) begin\n          full <= 1'h1;\n        end\n      end\n    end\n\n\n  always @(posedge clock or posedge reset) \n  if (reset) begin\n    saved_opcode <= 3'b0;\n    saved_param <= 3'b0;\n    saved_size <= 3'b0;\n    saved_source <= 2'b0;\n    saved_address <= 30'b0;\n    saved_mask <= 1'b0;\n    saved_data <= 8'b0;\n  end\n  else begin\n\n    if (T_90) begin\n      saved_opcode <= io_enq_bits_opcode;\n    end\n    if (T_90) begin\n      saved_param <= io_enq_bits_param;\n    end\n    if (T_90) begin\n      saved_size <= io_enq_bits_size;\n    end\n    if (T_90) begin\n      saved_source <= io_enq_bits_source;\n    end\n    if (T_90) begin\n      saved_address <= io_enq_bits_address;\n    end\n    if (T_90) begin\n      saved_mask <= io_enq_bits_mask;\n    end\n    if (T_90) begin\n      saved_data <= io_enq_bits_data;\n    end\n  end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_ResetCatchAndSync(\n  input   clock,\n  input   reset,\n  input   test_mode,\n  output  io_sync_reset\n);\n  wire  reset_n_catch_reg_clock;\n  wire  reset_n_catch_reg_reset;\n  wire [2:0] reset_n_catch_reg_io_d;\n  wire [2:0] reset_n_catch_reg_io_q;\n  wire  reset_n_catch_reg_io_en;\n  wire [1:0] T_6;\n  wire [2:0] T_7;\n  wire  T_8;\n  wire  T_9;\n  sirv_AsyncResetRegVec_36 reset_n_catch_reg (\n    .clock(reset_n_catch_reg_clock),\n    .reset(reset_n_catch_reg_reset),\n    .io_d(reset_n_catch_reg_io_d),\n    .io_q(reset_n_catch_reg_io_q),\n    .io_en(reset_n_catch_reg_io_en)\n  );\n  assign io_sync_reset = test_mode ? reset : T_9;\n  assign reset_n_catch_reg_clock = clock;\n  assign reset_n_catch_reg_reset = reset;\n  assign reset_n_catch_reg_io_d = T_7;\n  assign reset_n_catch_reg_io_en = 1'h1;\n  assign T_6 = reset_n_catch_reg_io_q[2:1];\n  assign T_7 = {1'h1,T_6};\n  assign T_8 = reset_n_catch_reg_io_q[0];\n  assign T_9 = ~ T_8;\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_ResetCatchAndSync_2(\n  input   clock,\n  input   reset,\n  input   test_mode,\n  output  io_sync_reset\n);\n  wire  reset_n_catch_reg_clock;\n  wire  reset_n_catch_reg_reset;\n  wire [19:0] reset_n_catch_reg_io_d;\n  wire [19:0] reset_n_catch_reg_io_q;\n  wire  reset_n_catch_reg_io_en;\n  wire [18:0] T_6;\n  wire [19:0] T_7;\n  wire  T_8;\n  wire  T_9;\n  sirv_AsyncResetRegVec_129 reset_n_catch_reg (\n    .clock(reset_n_catch_reg_clock),\n    .reset(reset_n_catch_reg_reset),\n    .io_d(reset_n_catch_reg_io_d),\n    .io_q(reset_n_catch_reg_io_q),\n    .io_en(reset_n_catch_reg_io_en)\n  );\n  assign io_sync_reset = test_mode ? reset : T_9;\n  assign reset_n_catch_reg_clock = clock;\n  assign reset_n_catch_reg_reset = reset;\n  assign reset_n_catch_reg_io_d = T_7;\n  assign reset_n_catch_reg_io_en = 1'h1;\n  assign T_6 = reset_n_catch_reg_io_q[19:1];\n  assign T_7 = {1'h1,T_6};\n  assign T_8 = reset_n_catch_reg_io_q[0];\n  assign T_9 = ~ T_8;\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_rtc(\n  input   clock,\n  input   reset,\n  input   io_regs_cfg_write_valid,\n  input  [31:0] io_regs_cfg_write_bits,\n  output [31:0] io_regs_cfg_read,\n  input   io_regs_countLo_write_valid,\n  input  [31:0] io_regs_countLo_write_bits,\n  output [31:0] io_regs_countLo_read,\n  input   io_regs_countHi_write_valid,\n  input  [31:0] io_regs_countHi_write_bits,\n  output [31:0] io_regs_countHi_read,\n  input   io_regs_s_write_valid,\n  input  [31:0] io_regs_s_write_bits,\n  output [31:0] io_regs_s_read,\n  input   io_regs_cmp_0_write_valid,\n  input  [31:0] io_regs_cmp_0_write_bits,\n  output [31:0] io_regs_cmp_0_read,\n  input   io_regs_feed_write_valid,\n  input  [31:0] io_regs_feed_write_bits,\n  output [31:0] io_regs_feed_read,\n  input   io_regs_key_write_valid,\n  input  [31:0] io_regs_key_write_bits,\n  output [31:0] io_regs_key_read,\n  output  io_ip_0\n);\n  wire [3:0] T_134;\n  reg [3:0] scale;\n  reg [31:0] GEN_7;\n  wire [3:0] GEN_0;\n  reg [31:0] cmp_0;\n  reg [31:0] GEN_8;\n  wire [31:0] GEN_1;\n  wire  T_141;\n  wire  AsyncResetRegVec_1_clock;\n  wire  AsyncResetRegVec_1_reset;\n  wire  AsyncResetRegVec_1_io_d;\n  wire  AsyncResetRegVec_1_io_q;\n  wire  AsyncResetRegVec_1_io_en;\n  wire  countAlways;\n  reg [5:0] T_145;\n  reg [31:0] GEN_10;\n  wire [5:0] GEN_9;\n  wire [6:0] T_146;\n  reg [41:0] T_148;\n  reg [63:0] GEN_11;\n  wire  T_149;\n  wire [42:0] T_151;\n  wire [42:0] GEN_2;\n  wire [47:0] T_152;\n  wire [15:0] T_155;\n  wire [47:0] T_156;\n  wire [41:0] T_157;\n  wire [47:0] GEN_3;\n  wire [42:0] GEN_4;\n  wire [31:0] T_160;\n  wire [63:0] T_161;\n  wire [57:0] T_162;\n  wire [63:0] GEN_5;\n  wire [57:0] GEN_6;\n  wire [47:0] T_163;\n  wire [31:0] s;\n  wire  elapsed_0;\n  reg  ip;\n  reg [31:0] GEN_12;\n  wire [8:0] T_191;\n  wire [11:0] T_194;\n  wire [3:0] T_196;\n  wire [4:0] T_198;\n  wire [12:0] T_199;\n  wire [16:0] T_200;\n  wire [28:0] T_201;\n  wire  T_207_0;\n  sirv_AsyncResetRegVec AsyncResetRegVec_1 (\n    .clock(AsyncResetRegVec_1_clock),\n    .reset(AsyncResetRegVec_1_reset),\n    .io_d(AsyncResetRegVec_1_io_d),\n    .io_q(AsyncResetRegVec_1_io_q),\n    .io_en(AsyncResetRegVec_1_io_en)\n  );\n  assign io_regs_cfg_read = {{3'd0}, T_201};\n  assign io_regs_countLo_read = T_152[31:0];\n  assign io_regs_countHi_read = {{16'd0}, T_155};\n  assign io_regs_s_read = s;\n  assign io_regs_cmp_0_read = cmp_0;\n  assign io_regs_feed_read = 32'h0;\n  assign io_regs_key_read = 32'h1;\n  assign io_ip_0 = T_207_0;\n  assign T_134 = io_regs_cfg_write_bits[3:0];\n  assign GEN_0 = io_regs_cfg_write_valid ? T_134 : scale;\n  assign GEN_1 = io_regs_cmp_0_write_valid ? io_regs_cmp_0_write_bits : cmp_0;\n  assign T_141 = io_regs_cfg_write_bits[12];\n  assign AsyncResetRegVec_1_clock = clock;\n  assign AsyncResetRegVec_1_reset = reset;\n  assign AsyncResetRegVec_1_io_d = T_141;\n  assign AsyncResetRegVec_1_io_en = io_regs_cfg_write_valid;\n  assign countAlways = AsyncResetRegVec_1_io_q;\n  assign GEN_9 = {{5'd0}, countAlways};\n  assign T_146 = T_145 + GEN_9;\n  assign T_149 = T_146[6];\n  assign T_151 = T_148 + 42'h1;\n  assign GEN_2 = T_149 ? T_151 : {{1'd0}, T_148};\n  assign T_152 = {T_148,T_145};\n  assign T_155 = T_152[47:32];\n  assign T_156 = {T_155,io_regs_countLo_write_bits};\n  assign T_157 = T_156[47:6];\n  assign GEN_3 = io_regs_countLo_write_valid ? T_156 : {{41'd0}, T_146};\n  assign GEN_4 = io_regs_countLo_write_valid ? {{1'd0}, T_157} : GEN_2;\n  assign T_160 = T_152[31:0];\n  assign T_161 = {io_regs_countHi_write_bits,T_160};\n  assign T_162 = T_161[63:6];\n  assign GEN_5 = io_regs_countHi_write_valid ? T_161 : {{16'd0}, GEN_3};\n  assign GEN_6 = io_regs_countHi_write_valid ? T_162 : {{15'd0}, GEN_4};\n  assign T_163 = T_152 >> scale;\n  assign s = T_163[31:0];\n  assign elapsed_0 = s >= cmp_0;\n  assign T_191 = {5'h0,scale};\n  assign T_194 = {3'h0,T_191};\n  assign T_196 = {3'h0,countAlways};\n  assign T_198 = {ip,4'h0};\n  assign T_199 = {T_198,8'h0};\n  assign T_200 = {T_199,T_196};\n  assign T_201 = {T_200,T_194};\n  assign T_207_0 = ip;\n\n  always @(posedge clock or posedge reset) begin\n  if(reset) begin\n      scale <= 4'b0;\n      cmp_0 <= 32'hFFFF_FFFF;\n      T_145 <= 6'b0;\n      T_148 <= 42'b0;\n      ip <= 1'b0;\n  end\n  else begin\n    if (io_regs_cfg_write_valid) begin\n      scale <= T_134;\n    end\n    if (io_regs_cmp_0_write_valid) begin\n      cmp_0 <= io_regs_cmp_0_write_bits;\n    end\n    T_145 <= GEN_5[5:0];\n    T_148 <= GEN_6[41:0];\n    ip <= elapsed_0;\n  end\n  end\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_spigpioport(\n  input   clock,\n  input   reset,\n  input   io_spi_sck,\n  output  io_spi_dq_0_i,\n  input   io_spi_dq_0_o,\n  input   io_spi_dq_0_oe,\n  output  io_spi_dq_1_i,\n  input   io_spi_dq_1_o,\n  input   io_spi_dq_1_oe,\n  output  io_spi_dq_2_i,\n  input   io_spi_dq_2_o,\n  input   io_spi_dq_2_oe,\n  output  io_spi_dq_3_i,\n  input   io_spi_dq_3_o,\n  input   io_spi_dq_3_oe,\n  input   io_spi_cs_0,\n  input   io_spi_cs_1,\n  input   io_spi_cs_2,\n  input   io_spi_cs_3,\n  input   io_pins_sck_i_ival,\n  output  io_pins_sck_o_oval,\n  output  io_pins_sck_o_oe,\n  output  io_pins_sck_o_ie,\n  output  io_pins_sck_o_pue,\n  output  io_pins_sck_o_ds,\n  input   io_pins_dq_0_i_ival,\n  output  io_pins_dq_0_o_oval,\n  output  io_pins_dq_0_o_oe,\n  output  io_pins_dq_0_o_ie,\n  output  io_pins_dq_0_o_pue,\n  output  io_pins_dq_0_o_ds,\n  input   io_pins_dq_1_i_ival,\n  output  io_pins_dq_1_o_oval,\n  output  io_pins_dq_1_o_oe,\n  output  io_pins_dq_1_o_ie,\n  output  io_pins_dq_1_o_pue,\n  output  io_pins_dq_1_o_ds,\n  input   io_pins_dq_2_i_ival,\n  output  io_pins_dq_2_o_oval,\n  output  io_pins_dq_2_o_oe,\n  output  io_pins_dq_2_o_ie,\n  output  io_pins_dq_2_o_pue,\n  output  io_pins_dq_2_o_ds,\n  input   io_pins_dq_3_i_ival,\n  output  io_pins_dq_3_o_oval,\n  output  io_pins_dq_3_o_oe,\n  output  io_pins_dq_3_o_ie,\n  output  io_pins_dq_3_o_pue,\n  output  io_pins_dq_3_o_ds,\n  input   io_pins_cs_0_i_ival,\n  output  io_pins_cs_0_o_oval,\n  output  io_pins_cs_0_o_oe,\n  output  io_pins_cs_0_o_ie,\n  output  io_pins_cs_0_o_pue,\n  output  io_pins_cs_0_o_ds,\n  input   io_pins_cs_1_i_ival,\n  output  io_pins_cs_1_o_oval,\n  output  io_pins_cs_1_o_oe,\n  output  io_pins_cs_1_o_ie,\n  output  io_pins_cs_1_o_pue,\n  output  io_pins_cs_1_o_ds,\n  input   io_pins_cs_2_i_ival,\n  output  io_pins_cs_2_o_oval,\n  output  io_pins_cs_2_o_oe,\n  output  io_pins_cs_2_o_ie,\n  output  io_pins_cs_2_o_pue,\n  output  io_pins_cs_2_o_ds,\n  input   io_pins_cs_3_i_ival,\n  output  io_pins_cs_3_o_oval,\n  output  io_pins_cs_3_o_oe,\n  output  io_pins_cs_3_o_ie,\n  output  io_pins_cs_3_o_pue,\n  output  io_pins_cs_3_o_ds\n);\n  wire  T_312;\n  wire  T_315;\n  wire  T_318;\n  wire  T_321;\n  wire [1:0] T_324;\n  wire [1:0] T_325;\n  wire [3:0] T_326;\n  wire  T_330;\n  wire  T_331;\n  wire  T_332;\n  wire  T_333;\n  assign io_spi_dq_0_i = io_pins_dq_0_i_ival;\n  assign io_spi_dq_1_i = io_pins_dq_1_i_ival;\n  assign io_spi_dq_2_i = io_pins_dq_2_i_ival;\n  assign io_spi_dq_3_i = io_pins_dq_3_i_ival;\n  assign io_pins_sck_o_oval = io_spi_sck;\n  assign io_pins_sck_o_oe = 1'h1;\n  assign io_pins_sck_o_ie = 1'h0;\n  assign io_pins_sck_o_pue = 1'h0;\n  assign io_pins_sck_o_ds = 1'h0;\n  assign io_pins_dq_0_o_oval = io_spi_dq_0_o;\n  assign io_pins_dq_0_o_oe = io_spi_dq_0_oe;\n  assign io_pins_dq_0_o_ie = T_312;\n  assign io_pins_dq_0_o_pue = 1'h1;\n  assign io_pins_dq_0_o_ds = 1'h0;\n  assign io_pins_dq_1_o_oval = io_spi_dq_1_o;\n  assign io_pins_dq_1_o_oe = io_spi_dq_1_oe;\n  assign io_pins_dq_1_o_ie = T_315;\n  assign io_pins_dq_1_o_pue = 1'h1;\n  assign io_pins_dq_1_o_ds = 1'h0;\n  assign io_pins_dq_2_o_oval = io_spi_dq_2_o;\n  assign io_pins_dq_2_o_oe = io_spi_dq_2_oe;\n  assign io_pins_dq_2_o_ie = T_318;\n  assign io_pins_dq_2_o_pue = 1'h1;\n  assign io_pins_dq_2_o_ds = 1'h0;\n  assign io_pins_dq_3_o_oval = io_spi_dq_3_o;\n  assign io_pins_dq_3_o_oe = io_spi_dq_3_oe;\n  assign io_pins_dq_3_o_ie = T_321;\n  assign io_pins_dq_3_o_pue = 1'h1;\n  assign io_pins_dq_3_o_ds = 1'h0;\n  assign io_pins_cs_0_o_oval = T_330;\n  assign io_pins_cs_0_o_oe = 1'h1;\n  assign io_pins_cs_0_o_ie = 1'h0;\n  assign io_pins_cs_0_o_pue = 1'h0;\n  assign io_pins_cs_0_o_ds = 1'h0;\n  assign io_pins_cs_1_o_oval = T_331;\n  assign io_pins_cs_1_o_oe = 1'h1;\n  assign io_pins_cs_1_o_ie = 1'h0;\n  assign io_pins_cs_1_o_pue = 1'h0;\n  assign io_pins_cs_1_o_ds = 1'h0;\n  assign io_pins_cs_2_o_oval = T_332;\n  assign io_pins_cs_2_o_oe = 1'h1;\n  assign io_pins_cs_2_o_ie = 1'h0;\n  assign io_pins_cs_2_o_pue = 1'h0;\n  assign io_pins_cs_2_o_ds = 1'h0;\n  assign io_pins_cs_3_o_oval = T_333;\n  assign io_pins_cs_3_o_oe = 1'h1;\n  assign io_pins_cs_3_o_ie = 1'h0;\n  assign io_pins_cs_3_o_pue = 1'h0;\n  assign io_pins_cs_3_o_ds = 1'h0;\n  assign T_312 = ~ io_spi_dq_0_oe;\n  assign T_315 = ~ io_spi_dq_1_oe;\n  assign T_318 = ~ io_spi_dq_2_oe;\n  assign T_321 = ~ io_spi_dq_3_oe;\n  assign T_324 = {io_spi_cs_1,io_spi_cs_0};\n  assign T_325 = {io_spi_cs_3,io_spi_cs_2};\n  assign T_326 = {T_325,T_324};\n  assign T_330 = T_326[0];\n  assign T_331 = T_326[1];\n  assign T_332 = T_326[2];\n  assign T_333 = T_326[3];\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_spigpioport_1(\n  input   clock,\n  input   reset,\n  input   io_spi_sck,\n  output  io_spi_dq_0_i,\n  input   io_spi_dq_0_o,\n  input   io_spi_dq_0_oe,\n  output  io_spi_dq_1_i,\n  input   io_spi_dq_1_o,\n  input   io_spi_dq_1_oe,\n  output  io_spi_dq_2_i,\n  input   io_spi_dq_2_o,\n  input   io_spi_dq_2_oe,\n  output  io_spi_dq_3_i,\n  input   io_spi_dq_3_o,\n  input   io_spi_dq_3_oe,\n  input   io_spi_cs_0,\n  input   io_pins_sck_i_ival,\n  output  io_pins_sck_o_oval,\n  output  io_pins_sck_o_oe,\n  output  io_pins_sck_o_ie,\n  output  io_pins_sck_o_pue,\n  output  io_pins_sck_o_ds,\n  input   io_pins_dq_0_i_ival,\n  output  io_pins_dq_0_o_oval,\n  output  io_pins_dq_0_o_oe,\n  output  io_pins_dq_0_o_ie,\n  output  io_pins_dq_0_o_pue,\n  output  io_pins_dq_0_o_ds,\n  input   io_pins_dq_1_i_ival,\n  output  io_pins_dq_1_o_oval,\n  output  io_pins_dq_1_o_oe,\n  output  io_pins_dq_1_o_ie,\n  output  io_pins_dq_1_o_pue,\n  output  io_pins_dq_1_o_ds,\n  input   io_pins_dq_2_i_ival,\n  output  io_pins_dq_2_o_oval,\n  output  io_pins_dq_2_o_oe,\n  output  io_pins_dq_2_o_ie,\n  output  io_pins_dq_2_o_pue,\n  output  io_pins_dq_2_o_ds,\n  input   io_pins_dq_3_i_ival,\n  output  io_pins_dq_3_o_oval,\n  output  io_pins_dq_3_o_oe,\n  output  io_pins_dq_3_o_ie,\n  output  io_pins_dq_3_o_pue,\n  output  io_pins_dq_3_o_ds,\n  input   io_pins_cs_0_i_ival,\n  output  io_pins_cs_0_o_oval,\n  output  io_pins_cs_0_o_oe,\n  output  io_pins_cs_0_o_ie,\n  output  io_pins_cs_0_o_pue,\n  output  io_pins_cs_0_o_ds\n);\n  wire  T_267;\n  wire  T_270;\n  wire  T_273;\n  wire  T_276;\n  assign io_spi_dq_0_i = io_pins_dq_0_i_ival;\n  assign io_spi_dq_1_i = io_pins_dq_1_i_ival;\n  assign io_spi_dq_2_i = io_pins_dq_2_i_ival;\n  assign io_spi_dq_3_i = io_pins_dq_3_i_ival;\n  assign io_pins_sck_o_oval = io_spi_sck;\n  assign io_pins_sck_o_oe = 1'h1;\n  assign io_pins_sck_o_ie = 1'h0;\n  assign io_pins_sck_o_pue = 1'h0;\n  assign io_pins_sck_o_ds = 1'h0;\n  assign io_pins_dq_0_o_oval = io_spi_dq_0_o;\n  assign io_pins_dq_0_o_oe = io_spi_dq_0_oe;\n  assign io_pins_dq_0_o_ie = T_267;\n  assign io_pins_dq_0_o_pue = 1'h1;\n  assign io_pins_dq_0_o_ds = 1'h0;\n  assign io_pins_dq_1_o_oval = io_spi_dq_1_o;\n  assign io_pins_dq_1_o_oe = io_spi_dq_1_oe;\n  assign io_pins_dq_1_o_ie = T_270;\n  assign io_pins_dq_1_o_pue = 1'h1;\n  assign io_pins_dq_1_o_ds = 1'h0;\n  assign io_pins_dq_2_o_oval = io_spi_dq_2_o;\n  assign io_pins_dq_2_o_oe = io_spi_dq_2_oe;\n  assign io_pins_dq_2_o_ie = T_273;\n  assign io_pins_dq_2_o_pue = 1'h1;\n  assign io_pins_dq_2_o_ds = 1'h0;\n  assign io_pins_dq_3_o_oval = io_spi_dq_3_o;\n  assign io_pins_dq_3_o_oe = io_spi_dq_3_oe;\n  assign io_pins_dq_3_o_ie = T_276;\n  assign io_pins_dq_3_o_pue = 1'h1;\n  assign io_pins_dq_3_o_ds = 1'h0;\n  assign io_pins_cs_0_o_oval = io_spi_cs_0;\n  assign io_pins_cs_0_o_oe = 1'h1;\n  assign io_pins_cs_0_o_ie = 1'h0;\n  assign io_pins_cs_0_o_pue = 1'h0;\n  assign io_pins_cs_0_o_ds = 1'h0;\n  assign T_267 = ~ io_spi_dq_0_oe;\n  assign T_270 = ~ io_spi_dq_1_oe;\n  assign T_273 = ~ io_spi_dq_2_oe;\n  assign T_276 = ~ io_spi_dq_3_oe;\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_spigpioport_2(\n  input   clock,\n  input   reset,\n  input   io_spi_sck,\n  output  io_spi_dq_0_i,\n  input   io_spi_dq_0_o,\n  input   io_spi_dq_0_oe,\n  output  io_spi_dq_1_i,\n  input   io_spi_dq_1_o,\n  input   io_spi_dq_1_oe,\n  output  io_spi_dq_2_i,\n  input   io_spi_dq_2_o,\n  input   io_spi_dq_2_oe,\n  output  io_spi_dq_3_i,\n  input   io_spi_dq_3_o,\n  input   io_spi_dq_3_oe,\n  input   io_spi_cs_0,\n  input   io_pins_sck_i_ival,\n  output  io_pins_sck_o_oval,\n  output  io_pins_sck_o_oe,\n  output  io_pins_sck_o_ie,\n  output  io_pins_sck_o_pue,\n  output  io_pins_sck_o_ds,\n  input   io_pins_dq_0_i_ival,\n  output  io_pins_dq_0_o_oval,\n  output  io_pins_dq_0_o_oe,\n  output  io_pins_dq_0_o_ie,\n  output  io_pins_dq_0_o_pue,\n  output  io_pins_dq_0_o_ds,\n  input   io_pins_dq_1_i_ival,\n  output  io_pins_dq_1_o_oval,\n  output  io_pins_dq_1_o_oe,\n  output  io_pins_dq_1_o_ie,\n  output  io_pins_dq_1_o_pue,\n  output  io_pins_dq_1_o_ds,\n  input   io_pins_dq_2_i_ival,\n  output  io_pins_dq_2_o_oval,\n  output  io_pins_dq_2_o_oe,\n  output  io_pins_dq_2_o_ie,\n  output  io_pins_dq_2_o_pue,\n  output  io_pins_dq_2_o_ds,\n  input   io_pins_dq_3_i_ival,\n  output  io_pins_dq_3_o_oval,\n  output  io_pins_dq_3_o_oe,\n  output  io_pins_dq_3_o_ie,\n  output  io_pins_dq_3_o_pue,\n  output  io_pins_dq_3_o_ds,\n  input   io_pins_cs_0_i_ival,\n  output  io_pins_cs_0_o_oval,\n  output  io_pins_cs_0_o_oe,\n  output  io_pins_cs_0_o_ie,\n  output  io_pins_cs_0_o_pue,\n  output  io_pins_cs_0_o_ds\n);\n  wire  T_267;\n  reg  T_271;\n  reg [31:0] GEN_0;\n  reg  T_272;\n  reg [31:0] GEN_1;\n  reg  T_273;\n  reg [31:0] GEN_2;\n  wire  T_274;\n  reg  T_278;\n  reg [31:0] GEN_3;\n  reg  T_279;\n  reg [31:0] GEN_4;\n  reg  T_280;\n  reg [31:0] GEN_5;\n  wire  T_281;\n  reg  T_285;\n  reg [31:0] GEN_6;\n  reg  T_286;\n  reg [31:0] GEN_7;\n  reg  T_287;\n  reg [31:0] GEN_8;\n  wire  T_288;\n  reg  T_292;\n  reg [31:0] GEN_9;\n  reg  T_293;\n  reg [31:0] GEN_10;\n  reg  T_294;\n  reg [31:0] GEN_11;\n  assign io_spi_dq_0_i = T_273;\n  assign io_spi_dq_1_i = T_280;\n  assign io_spi_dq_2_i = T_287;\n  assign io_spi_dq_3_i = T_294;\n  assign io_pins_sck_o_oval = io_spi_sck;\n  assign io_pins_sck_o_oe = 1'h1;\n  assign io_pins_sck_o_ie = 1'h0;\n  assign io_pins_sck_o_pue = 1'h0;\n  assign io_pins_sck_o_ds = 1'h1;\n  assign io_pins_dq_0_o_oval = io_spi_dq_0_o;\n  assign io_pins_dq_0_o_oe = io_spi_dq_0_oe;\n  assign io_pins_dq_0_o_ie = T_267;\n  assign io_pins_dq_0_o_pue = 1'h1;\n  assign io_pins_dq_0_o_ds = 1'h1;\n  assign io_pins_dq_1_o_oval = io_spi_dq_1_o;\n  assign io_pins_dq_1_o_oe = io_spi_dq_1_oe;\n  assign io_pins_dq_1_o_ie = T_274;\n  assign io_pins_dq_1_o_pue = 1'h1;\n  assign io_pins_dq_1_o_ds = 1'h1;\n  assign io_pins_dq_2_o_oval = io_spi_dq_2_o;\n  assign io_pins_dq_2_o_oe = io_spi_dq_2_oe;\n  assign io_pins_dq_2_o_ie = T_281;\n  assign io_pins_dq_2_o_pue = 1'h1;\n  assign io_pins_dq_2_o_ds = 1'h1;\n  assign io_pins_dq_3_o_oval = io_spi_dq_3_o;\n  assign io_pins_dq_3_o_oe = io_spi_dq_3_oe;\n  assign io_pins_dq_3_o_ie = T_288;\n  assign io_pins_dq_3_o_pue = 1'h1;\n  assign io_pins_dq_3_o_ds = 1'h1;\n  assign io_pins_cs_0_o_oval = io_spi_cs_0;\n  assign io_pins_cs_0_o_oe = 1'h1;\n  assign io_pins_cs_0_o_ie = 1'h0;\n  assign io_pins_cs_0_o_pue = 1'h0;\n  assign io_pins_cs_0_o_ds = 1'h1;\n  assign T_267 = ~ io_spi_dq_0_oe;\n  assign T_274 = ~ io_spi_dq_1_oe;\n  assign T_281 = ~ io_spi_dq_2_oe;\n  assign T_288 = ~ io_spi_dq_3_oe;\n\n  always @(posedge clock or posedge reset) begin\n  if(reset) begin\n    T_271 <= 1'b0;\n    T_272 <= 1'b0;\n    T_273 <= 1'b0;\n    T_278 <= 1'b0;\n    T_279 <= 1'b0;\n    T_280 <= 1'b0;\n    T_285 <= 1'b0;\n    T_286 <= 1'b0;\n    T_287 <= 1'b0;\n    T_292 <= 1'b0;\n    T_293 <= 1'b0;\n    T_294 <= 1'b0;\n  end\n  else begin\n    T_271 <= io_pins_dq_0_i_ival;\n    T_272 <= T_271;\n    T_273 <= T_272;\n    T_278 <= io_pins_dq_1_i_ival;\n    T_279 <= T_278;\n    T_280 <= T_279;\n    T_285 <= io_pins_dq_2_i_ival;\n    T_286 <= T_285;\n    T_287 <= T_286;\n    T_292 <= io_pins_dq_3_i_ival;\n    T_293 <= T_292;\n    T_294 <= T_293;\n  end\n  end\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_qspi_flashmap(\n  input   clock,\n  input   reset,\n  input   io_en,\n  input  [1:0] io_ctrl_insn_cmd_proto,\n  input  [7:0] io_ctrl_insn_cmd_code,\n  input   io_ctrl_insn_cmd_en,\n  input  [1:0] io_ctrl_insn_addr_proto,\n  input  [2:0] io_ctrl_insn_addr_len,\n  input  [7:0] io_ctrl_insn_pad_code,\n  input  [3:0] io_ctrl_insn_pad_cnt,\n  input  [1:0] io_ctrl_insn_data_proto,\n  input   io_ctrl_fmt_endian,\n  output  io_addr_ready,\n  input   io_addr_valid,\n  input  [31:0] io_addr_bits_next,\n  input  [31:0] io_addr_bits_hold,\n  input   io_data_ready,\n  output  io_data_valid,\n  output [7:0] io_data_bits,\n  input   io_link_tx_ready,\n  output  io_link_tx_valid,\n  output [7:0] io_link_tx_bits,\n  input   io_link_rx_valid,\n  input  [7:0] io_link_rx_bits,\n  output [7:0] io_link_cnt,\n  output [1:0] io_link_fmt_proto,\n  output  io_link_fmt_endian,\n  output  io_link_fmt_iodir,\n  output  io_link_cs_set,\n  output  io_link_cs_clear,\n  output  io_link_cs_hold,\n  input   io_link_active,\n  output  io_link_lock\n);\n  wire [32:0] T_110;\n  wire [31:0] addr;\n  wire  T_111;\n  wire  merge;\n  wire  T_113;\n  wire  T_114;\n  wire  T_115;\n  wire [3:0] T_120;\n  wire [2:0] T_122;\n  wire [1:0] T_124;\n  wire [3:0] GEN_46;\n  wire [3:0] T_126;\n  wire [3:0] GEN_47;\n  wire [3:0] T_127;\n  wire [3:0] T_128;\n  reg [3:0] cnt;\n  reg [31:0] GEN_5;\n  wire  cnt_en;\n  wire  cnt_cmp_0;\n  wire  cnt_cmp_1;\n  wire  cnt_cmp_2;\n  wire  cnt_cmp_3;\n  wire  cnt_cmp_4;\n  wire  cnt_last;\n  wire  cnt_done;\n  wire  T_143;\n  wire  T_144;\n  wire [4:0] T_146;\n  wire [3:0] T_147;\n  wire [3:0] GEN_0;\n  wire  GEN_1;\n  wire [3:0] GEN_2;\n  reg [2:0] state;\n  reg [31:0] GEN_9;\n  wire  T_149;\n  wire [2:0] GEN_3;\n  wire  T_153;\n  wire [2:0] T_154;\n  wire [2:0] GEN_4;\n  wire [2:0] GEN_6;\n  wire  GEN_7;\n  wire  T_157;\n  wire  GEN_8;\n  wire [2:0] GEN_10;\n  wire  GEN_11;\n  wire  GEN_12;\n  wire  T_160;\n  wire  GEN_13;\n  wire  GEN_14;\n  wire [7:0] GEN_15;\n  wire  GEN_16;\n  wire  GEN_17;\n  wire  GEN_18;\n  wire [2:0] GEN_19;\n  wire  GEN_20;\n  wire  GEN_21;\n  wire  GEN_22;\n  wire [7:0] GEN_23;\n  wire  T_163;\n  wire [2:0] GEN_24;\n  wire [3:0] GEN_25;\n  wire [1:0] GEN_26;\n  wire [2:0] GEN_28;\n  wire [3:0] GEN_29;\n  wire  T_164;\n  wire [7:0] T_165;\n  wire [7:0] T_166;\n  wire [7:0] T_167;\n  wire [7:0] T_168;\n  wire [7:0] T_170;\n  wire [7:0] T_172;\n  wire [7:0] T_174;\n  wire [7:0] T_176;\n  wire [7:0] T_178;\n  wire [7:0] T_179;\n  wire [7:0] T_180;\n  wire [7:0] T_181;\n  wire [2:0] GEN_30;\n  wire [7:0] GEN_31;\n  wire [2:0] GEN_33;\n  wire  T_183;\n  wire [2:0] GEN_34;\n  wire [3:0] GEN_35;\n  wire [7:0] GEN_36;\n  wire [2:0] GEN_37;\n  wire  T_184;\n  wire [2:0] GEN_38;\n  wire [1:0] GEN_39;\n  wire  GEN_40;\n  wire [2:0] GEN_41;\n  wire  T_185;\n  wire  T_187;\n  wire [2:0] GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire [2:0] GEN_45;\n  assign io_addr_ready = GEN_18;\n  assign io_data_valid = GEN_44;\n  assign io_data_bits = GEN_23;\n  assign io_link_tx_valid = GEN_43;\n  assign io_link_tx_bits = GEN_36;\n  assign io_link_cnt = {{4'd0}, GEN_35};\n  assign io_link_fmt_proto = GEN_39;\n  assign io_link_fmt_endian = io_ctrl_fmt_endian;\n  assign io_link_fmt_iodir = GEN_40;\n  assign io_link_cs_set = 1'h1;\n  assign io_link_cs_clear = GEN_20;\n  assign io_link_cs_hold = 1'h1;\n  assign io_link_lock = GEN_21;\n  assign T_110 = io_addr_bits_hold + 32'h1;\n  assign addr = T_110[31:0];\n  assign T_111 = io_addr_bits_next == addr;\n  assign merge = io_link_active & T_111;\n  assign T_113 = 2'h0 == io_link_fmt_proto;\n  assign T_114 = 2'h1 == io_link_fmt_proto;\n  assign T_115 = 2'h2 == io_link_fmt_proto;\n  assign T_120 = T_113 ? 4'h8 : 4'h0;\n  assign T_122 = T_114 ? 3'h4 : 3'h0;\n  assign T_124 = T_115 ? 2'h2 : 2'h0;\n  assign GEN_46 = {{1'd0}, T_122};\n  assign T_126 = T_120 | GEN_46;\n  assign GEN_47 = {{2'd0}, T_124};\n  assign T_127 = T_126 | GEN_47;\n  assign T_128 = T_127;\n  assign cnt_en = T_164;\n  assign cnt_cmp_0 = cnt == 4'h0;\n  assign cnt_cmp_1 = cnt == 4'h1;\n  assign cnt_cmp_2 = cnt == 4'h2;\n  assign cnt_cmp_3 = cnt == 4'h3;\n  assign cnt_cmp_4 = cnt == 4'h4;\n  assign cnt_last = cnt_cmp_1 & io_link_tx_ready;\n  assign cnt_done = cnt_last | cnt_cmp_0;\n  assign T_143 = cnt_cmp_0 == 1'h0;\n  assign T_144 = io_link_tx_ready & io_link_tx_valid;\n  assign T_146 = cnt - 4'h1;\n  assign T_147 = T_146[3:0];\n  assign GEN_0 = T_144 ? T_147 : cnt;\n  assign GEN_1 = cnt_en ? T_143 : 1'h1;\n  assign GEN_2 = cnt_en ? GEN_0 : cnt;\n  assign T_149 = 3'h0 == state;\n  assign GEN_3 = merge ? 3'h4 : state;\n  assign T_153 = merge == 1'h0;\n  assign T_154 = io_ctrl_insn_cmd_en ? 3'h1 : 3'h2;\n  assign GEN_4 = T_153 ? T_154 : GEN_3;\n  assign GEN_6 = io_addr_valid ? GEN_4 : state;\n  assign GEN_7 = io_addr_valid ? T_153 : 1'h0;\n  assign T_157 = io_addr_valid == 1'h0;\n  assign GEN_8 = T_157 ? 1'h0 : 1'h1;\n  assign GEN_10 = io_en ? GEN_6 : state;\n  assign GEN_11 = io_en ? GEN_7 : 1'h0;\n  assign GEN_12 = io_en ? GEN_8 : 1'h1;\n  assign T_160 = io_en == 1'h0;\n  assign GEN_13 = T_160 ? io_addr_valid : 1'h0;\n  assign GEN_14 = T_160 ? io_data_ready : io_en;\n  assign GEN_15 = T_160 ? 8'h0 : io_link_rx_bits;\n  assign GEN_16 = T_160 ? 1'h0 : GEN_12;\n  assign GEN_17 = T_149 ? 1'h0 : GEN_1;\n  assign GEN_18 = T_149 ? GEN_14 : 1'h0;\n  assign GEN_19 = T_149 ? GEN_10 : state;\n  assign GEN_20 = T_149 ? GEN_11 : 1'h0;\n  assign GEN_21 = T_149 ? GEN_16 : 1'h1;\n  assign GEN_22 = T_149 ? GEN_13 : 1'h0;\n  assign GEN_23 = T_149 ? GEN_15 : io_link_rx_bits;\n  assign T_163 = 3'h1 == state;\n  assign GEN_24 = io_link_tx_ready ? 3'h2 : GEN_19;\n  assign GEN_25 = io_link_tx_ready ? {{1'd0}, io_ctrl_insn_addr_len} : GEN_2;\n  assign GEN_26 = T_163 ? io_ctrl_insn_cmd_proto : io_ctrl_insn_addr_proto;\n  assign GEN_28 = T_163 ? GEN_24 : GEN_19;\n  assign GEN_29 = T_163 ? GEN_25 : GEN_2;\n  assign T_164 = 3'h2 == state;\n  assign T_165 = io_addr_bits_hold[7:0];\n  assign T_166 = io_addr_bits_hold[15:8];\n  assign T_167 = io_addr_bits_hold[23:16];\n  assign T_168 = io_addr_bits_hold[31:24];\n  assign T_170 = cnt_cmp_1 ? T_165 : 8'h0;\n  assign T_172 = cnt_cmp_2 ? T_166 : 8'h0;\n  assign T_174 = cnt_cmp_3 ? T_167 : 8'h0;\n  assign T_176 = cnt_cmp_4 ? T_168 : 8'h0;\n  assign T_178 = T_170 | T_172;\n  assign T_179 = T_178 | T_174;\n  assign T_180 = T_179 | T_176;\n  assign T_181 = T_180;\n  assign GEN_30 = cnt_done ? 3'h3 : GEN_28;\n  assign GEN_31 = T_164 ? T_181 : io_ctrl_insn_cmd_code;\n  assign GEN_33 = T_164 ? GEN_30 : GEN_28;\n  assign T_183 = 3'h3 == state;\n  assign GEN_34 = io_link_tx_ready ? 3'h4 : GEN_33;\n  assign GEN_35 = T_183 ? io_ctrl_insn_pad_cnt : T_128;\n  assign GEN_36 = T_183 ? io_ctrl_insn_pad_code : GEN_31;\n  assign GEN_37 = T_183 ? GEN_34 : GEN_33;\n  assign T_184 = 3'h4 == state;\n  assign GEN_38 = io_link_tx_ready ? 3'h5 : GEN_37;\n  assign GEN_39 = T_184 ? io_ctrl_insn_data_proto : GEN_26;\n  assign GEN_40 = T_184 ? 1'h0 : 1'h1;\n  assign GEN_41 = T_184 ? GEN_38 : GEN_37;\n  assign T_185 = 3'h5 == state;\n  assign T_187 = io_data_ready & io_data_valid;\n  assign GEN_42 = T_187 ? 3'h0 : GEN_41;\n  assign GEN_43 = T_185 ? 1'h0 : GEN_17;\n  assign GEN_44 = T_185 ? io_link_rx_valid : GEN_22;\n  assign GEN_45 = T_185 ? GEN_42 : GEN_41;\n\n  always @(posedge clock or posedge reset)\n  if (reset) begin\n     cnt <= 4'b0;\n  end\n  else begin\n    if (T_163) begin\n      if (io_link_tx_ready) begin\n        cnt <= {{1'd0}, io_ctrl_insn_addr_len};\n      end else begin\n        if (cnt_en) begin\n          if (T_144) begin\n            cnt <= T_147;\n          end\n        end\n      end\n    end else begin\n      if (cnt_en) begin\n        if (T_144) begin\n          cnt <= T_147;\n        end\n      end\n    end\n  end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      state <= 3'h0;\n    end else begin\n      if (T_185) begin\n        if (T_187) begin\n          state <= 3'h0;\n        end else begin\n          if (T_184) begin\n            if (io_link_tx_ready) begin\n              state <= 3'h5;\n            end else begin\n              if (T_183) begin\n                if (io_link_tx_ready) begin\n                  state <= 3'h4;\n                end else begin\n                  if (T_164) begin\n                    if (cnt_done) begin\n                      state <= 3'h3;\n                    end else begin\n                      if (T_163) begin\n                        if (io_link_tx_ready) begin\n                          state <= 3'h2;\n                        end else begin\n                          if (T_149) begin\n                            if (io_en) begin\n                              if (io_addr_valid) begin\n                                if (T_153) begin\n                                  if (io_ctrl_insn_cmd_en) begin\n                                    state <= 3'h1;\n                                  end else begin\n                                    state <= 3'h2;\n                                  end\n                                end else begin\n                                  if (merge) begin\n                                    state <= 3'h4;\n                                  end\n                                end\n                              end\n                            end\n                          end\n                        end\n                      end else begin\n                        if (T_149) begin\n                          if (io_en) begin\n                            if (io_addr_valid) begin\n                              if (T_153) begin\n                                if (io_ctrl_insn_cmd_en) begin\n                                  state <= 3'h1;\n                                end else begin\n                                  state <= 3'h2;\n                                end\n                              end else begin\n                                if (merge) begin\n                                  state <= 3'h4;\n                                end\n                              end\n                            end\n                          end\n                        end\n                      end\n                    end\n                  end else begin\n                    if (T_163) begin\n                      if (io_link_tx_ready) begin\n                        state <= 3'h2;\n                      end else begin\n                        if (T_149) begin\n                          if (io_en) begin\n                            if (io_addr_valid) begin\n                              if (T_153) begin\n                                if (io_ctrl_insn_cmd_en) begin\n                                  state <= 3'h1;\n                                end else begin\n                                  state <= 3'h2;\n                                end\n                              end else begin\n                                if (merge) begin\n                                  state <= 3'h4;\n                                end\n                              end\n                            end\n                          end\n                        end\n                      end\n                    end else begin\n                      if (T_149) begin\n                        if (io_en) begin\n                          if (io_addr_valid) begin\n                            if (T_153) begin\n                              if (io_ctrl_insn_cmd_en) begin\n                                state <= 3'h1;\n                              end else begin\n                                state <= 3'h2;\n                              end\n                            end else begin\n                              if (merge) begin\n                                state <= 3'h4;\n                              end\n                            end\n                          end\n                        end\n                      end\n                    end\n                  end\n                end\n              end else begin\n                if (T_164) begin\n                  if (cnt_done) begin\n                    state <= 3'h3;\n                  end else begin\n                    if (T_163) begin\n                      if (io_link_tx_ready) begin\n                        state <= 3'h2;\n                      end else begin\n                        state <= GEN_19;\n                      end\n                    end else begin\n                      state <= GEN_19;\n                    end\n                  end\n                end else begin\n                  if (T_163) begin\n                    if (io_link_tx_ready) begin\n                      state <= 3'h2;\n                    end else begin\n                      state <= GEN_19;\n                    end\n                  end else begin\n                    state <= GEN_19;\n                  end\n                end\n              end\n            end\n          end else begin\n            if (T_183) begin\n              if (io_link_tx_ready) begin\n                state <= 3'h4;\n              end else begin\n                if (T_164) begin\n                  if (cnt_done) begin\n                    state <= 3'h3;\n                  end else begin\n                    state <= GEN_28;\n                  end\n                end else begin\n                  state <= GEN_28;\n                end\n              end\n            end else begin\n              if (T_164) begin\n                if (cnt_done) begin\n                  state <= 3'h3;\n                end else begin\n                  state <= GEN_28;\n                end\n              end else begin\n                state <= GEN_28;\n              end\n            end\n          end\n        end\n      end else begin\n        if (T_184) begin\n          if (io_link_tx_ready) begin\n            state <= 3'h5;\n          end else begin\n            if (T_183) begin\n              if (io_link_tx_ready) begin\n                state <= 3'h4;\n              end else begin\n                state <= GEN_33;\n              end\n            end else begin\n              state <= GEN_33;\n            end\n          end\n        end else begin\n          if (T_183) begin\n            if (io_link_tx_ready) begin\n              state <= 3'h4;\n            end else begin\n              state <= GEN_33;\n            end\n          end else begin\n            state <= GEN_33;\n          end\n        end\n      end\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_tlfragmenter_qspi_1(\n  input   clock,\n  input   reset,\n  output  io_in_0_a_ready,\n  input   io_in_0_a_valid,\n  input  [2:0] io_in_0_a_bits_opcode,\n  input  [2:0] io_in_0_a_bits_param,\n  input  [2:0] io_in_0_a_bits_size,\n  input  [1:0] io_in_0_a_bits_source,\n  input  [29:0] io_in_0_a_bits_address,\n  input   io_in_0_a_bits_mask,\n  input  [7:0] io_in_0_a_bits_data,\n  input   io_in_0_b_ready,\n  output  io_in_0_b_valid,\n  output [2:0] io_in_0_b_bits_opcode,\n  output [1:0] io_in_0_b_bits_param,\n  output [2:0] io_in_0_b_bits_size,\n  output [1:0] io_in_0_b_bits_source,\n  output [29:0] io_in_0_b_bits_address,\n  output  io_in_0_b_bits_mask,\n  output [7:0] io_in_0_b_bits_data,\n  output  io_in_0_c_ready,\n  input   io_in_0_c_valid,\n  input  [2:0] io_in_0_c_bits_opcode,\n  input  [2:0] io_in_0_c_bits_param,\n  input  [2:0] io_in_0_c_bits_size,\n  input  [1:0] io_in_0_c_bits_source,\n  input  [29:0] io_in_0_c_bits_address,\n  input  [7:0] io_in_0_c_bits_data,\n  input   io_in_0_c_bits_error,\n  input   io_in_0_d_ready,\n  output  io_in_0_d_valid,\n  output [2:0] io_in_0_d_bits_opcode,\n  output [1:0] io_in_0_d_bits_param,\n  output [2:0] io_in_0_d_bits_size,\n  output [1:0] io_in_0_d_bits_source,\n  output  io_in_0_d_bits_sink,\n  output  io_in_0_d_bits_addr_lo,\n  output [7:0] io_in_0_d_bits_data,\n  output  io_in_0_d_bits_error,\n  output  io_in_0_e_ready,\n  input   io_in_0_e_valid,\n  input   io_in_0_e_bits_sink,\n  input   io_out_0_a_ready,\n  output  io_out_0_a_valid,\n  output [2:0] io_out_0_a_bits_opcode,\n  output [2:0] io_out_0_a_bits_param,\n  output [2:0] io_out_0_a_bits_size,\n  output [6:0] io_out_0_a_bits_source,\n  output [29:0] io_out_0_a_bits_address,\n  output  io_out_0_a_bits_mask,\n  output [7:0] io_out_0_a_bits_data,\n  output  io_out_0_b_ready,\n  input   io_out_0_b_valid,\n  input  [2:0] io_out_0_b_bits_opcode,\n  input  [1:0] io_out_0_b_bits_param,\n  input  [2:0] io_out_0_b_bits_size,\n  input  [6:0] io_out_0_b_bits_source,\n  input  [29:0] io_out_0_b_bits_address,\n  input   io_out_0_b_bits_mask,\n  input  [7:0] io_out_0_b_bits_data,\n  input   io_out_0_c_ready,\n  output  io_out_0_c_valid,\n  output [2:0] io_out_0_c_bits_opcode,\n  output [2:0] io_out_0_c_bits_param,\n  output [2:0] io_out_0_c_bits_size,\n  output [6:0] io_out_0_c_bits_source,\n  output [29:0] io_out_0_c_bits_address,\n  output [7:0] io_out_0_c_bits_data,\n  output  io_out_0_c_bits_error,\n  output  io_out_0_d_ready,\n  input   io_out_0_d_valid,\n  input  [2:0] io_out_0_d_bits_opcode,\n  input  [1:0] io_out_0_d_bits_param,\n  input  [2:0] io_out_0_d_bits_size,\n  input  [6:0] io_out_0_d_bits_source,\n  input   io_out_0_d_bits_sink,\n  input   io_out_0_d_bits_addr_lo,\n  input  [7:0] io_out_0_d_bits_data,\n  input   io_out_0_d_bits_error,\n  input   io_out_0_e_ready,\n  output  io_out_0_e_valid,\n  output  io_out_0_e_bits_sink\n);\n  reg [4:0] acknum;\n  reg [31:0] GEN_25;\n  reg [2:0] dOrig;\n  reg [31:0] GEN_26;\n  wire [4:0] dFragnum;\n  wire  dFirst;\n  wire [7:0] T_1410;\n  wire  T_1411;\n  wire  dsizeOH1;\n  wire  T_1414;\n  wire [4:0] GEN_5;\n  wire [4:0] T_1415;\n  wire  T_1417;\n  wire  T_1418;\n  wire  T_1419;\n  wire  T_1421;\n  wire [4:0] dFirst_acknum;\n  wire [5:0] GEN_8;\n  wire [5:0] T_1428;\n  wire [5:0] T_1430;\n  wire [5:0] T_1432;\n  wire [5:0] T_1433;\n  wire [5:0] T_1434;\n  wire [1:0] T_1435;\n  wire [3:0] T_1436;\n  wire  T_1438;\n  wire [3:0] GEN_9;\n  wire [3:0] T_1439;\n  wire [1:0] T_1440;\n  wire [1:0] T_1441;\n  wire  T_1443;\n  wire [1:0] T_1444;\n  wire  T_1445;\n  wire [1:0] T_1446;\n  wire [2:0] dFirst_size;\n  wire  T_1447;\n  wire [5:0] T_1448;\n  wire [4:0] T_1449;\n  wire [4:0] T_1450;\n  wire [2:0] GEN_0;\n  wire [4:0] GEN_1;\n  wire [2:0] GEN_2;\n  wire  T_1459;\n  wire  T_1460;\n  wire [1:0] T_1461;\n  reg  r_error;\n  reg [31:0] GEN_27;\n  wire  d_error;\n  wire  GEN_3;\n  wire  repeater_clock;\n  wire  repeater_reset;\n  wire  repeater_io_repeat;\n  wire  repeater_io_full;\n  wire  repeater_io_enq_ready;\n  wire  repeater_io_enq_valid;\n  wire [2:0] repeater_io_enq_bits_opcode;\n  wire [2:0] repeater_io_enq_bits_param;\n  wire [2:0] repeater_io_enq_bits_size;\n  wire [1:0] repeater_io_enq_bits_source;\n  wire [29:0] repeater_io_enq_bits_address;\n  wire  repeater_io_enq_bits_mask;\n  wire [7:0] repeater_io_enq_bits_data;\n  wire  repeater_io_deq_ready;\n  wire  repeater_io_deq_valid;\n  wire [2:0] repeater_io_deq_bits_opcode;\n  wire [2:0] repeater_io_deq_bits_param;\n  wire [2:0] repeater_io_deq_bits_size;\n  wire [1:0] repeater_io_deq_bits_source;\n  wire [29:0] repeater_io_deq_bits_address;\n  wire  repeater_io_deq_bits_mask;\n  wire [7:0] repeater_io_deq_bits_data;\n  wire  find_0;\n  wire  T_1494;\n  wire [2:0] aFrag;\n  wire [11:0] T_1497;\n  wire [4:0] T_1498;\n  wire [4:0] aOrigOH1;\n  wire [7:0] T_1501;\n  wire  T_1502;\n  wire  aFragOH1;\n  reg [4:0] gennum;\n  reg [31:0] GEN_28;\n  wire  aFirst;\n  wire [5:0] T_1511;\n  wire [4:0] T_1512;\n  wire [4:0] old_gennum1;\n  wire [4:0] T_1513;\n  wire [4:0] GEN_10;\n  wire [4:0] T_1515;\n  wire [4:0] new_gennum;\n  wire  T_1520;\n  wire [4:0] GEN_4;\n  wire  T_1524;\n  wire [4:0] T_1526;\n  wire [4:0] T_1528;\n  wire [29:0] GEN_12;\n  wire [29:0] T_1529;\n  wire [6:0] T_1530;\n  wire  T_1532;\n  wire  T_1541;\n  wire  T_1542;\n  wire  T_1543;\n  wire  T_1545;\n  wire  T_1546;\n  wire [2:0] GEN_6 = 3'b0;\n  reg [31:0] GEN_29;\n  wire [1:0] GEN_7 = 2'b0;\n  reg [31:0] GEN_30;\n  wire [2:0] GEN_11 = 3'b0;\n  reg [31:0] GEN_31;\n  wire [1:0] GEN_13 = 2'b0;\n  reg [31:0] GEN_32;\n  wire [29:0] GEN_14 = 30'b0;\n  reg [31:0] GEN_33;\n  wire  GEN_15 = 1'b0;\n  reg [31:0] GEN_34;\n  wire [7:0] GEN_16 = 8'b0;\n  reg [31:0] GEN_35;\n  wire [2:0] GEN_17 = 3'b0;\n  reg [31:0] GEN_36;\n  wire [2:0] GEN_18 = 3'b0;\n  reg [31:0] GEN_37;\n  wire [2:0] GEN_19 = 3'b0;\n  reg [31:0] GEN_38;\n  wire [6:0] GEN_20 = 7'b0;\n  reg [31:0] GEN_39;\n  wire [29:0] GEN_21 = 30'b0;\n  reg [31:0] GEN_40;\n  wire [7:0] GEN_22 = 8'b0;\n  reg [31:0] GEN_41;\n  wire  GEN_23 = 1'b0;\n  reg [31:0] GEN_42;\n  wire  GEN_24 = 1'b0;\n  reg [31:0] GEN_43;\n  sirv_repeater_6 u_repeater (\n    .clock(repeater_clock),\n    .reset(repeater_reset),\n    .io_repeat(repeater_io_repeat),\n    .io_full(repeater_io_full),\n    .io_enq_ready(repeater_io_enq_ready),\n    .io_enq_valid(repeater_io_enq_valid),\n    .io_enq_bits_opcode(repeater_io_enq_bits_opcode),\n    .io_enq_bits_param(repeater_io_enq_bits_param),\n    .io_enq_bits_size(repeater_io_enq_bits_size),\n    .io_enq_bits_source(repeater_io_enq_bits_source),\n    .io_enq_bits_address(repeater_io_enq_bits_address),\n    .io_enq_bits_mask(repeater_io_enq_bits_mask),\n    .io_enq_bits_data(repeater_io_enq_bits_data),\n    .io_deq_ready(repeater_io_deq_ready),\n    .io_deq_valid(repeater_io_deq_valid),\n    .io_deq_bits_opcode(repeater_io_deq_bits_opcode),\n    .io_deq_bits_param(repeater_io_deq_bits_param),\n    .io_deq_bits_size(repeater_io_deq_bits_size),\n    .io_deq_bits_source(repeater_io_deq_bits_source),\n    .io_deq_bits_address(repeater_io_deq_bits_address),\n    .io_deq_bits_mask(repeater_io_deq_bits_mask),\n    .io_deq_bits_data(repeater_io_deq_bits_data)\n  );\n  assign io_in_0_a_ready = repeater_io_enq_ready;\n  assign io_in_0_b_valid = 1'h0;\n  assign io_in_0_b_bits_opcode = GEN_6;\n  assign io_in_0_b_bits_param = GEN_7;\n  assign io_in_0_b_bits_size = GEN_11;\n  assign io_in_0_b_bits_source = GEN_13;\n  assign io_in_0_b_bits_address = GEN_14;\n  assign io_in_0_b_bits_mask = GEN_15;\n  assign io_in_0_b_bits_data = GEN_16;\n  assign io_in_0_c_ready = 1'h1;\n  assign io_in_0_d_valid = io_out_0_d_valid;\n  assign io_in_0_d_bits_opcode = io_out_0_d_bits_opcode;\n  assign io_in_0_d_bits_param = io_out_0_d_bits_param;\n  assign io_in_0_d_bits_size = GEN_0;\n  assign io_in_0_d_bits_source = T_1461;\n  assign io_in_0_d_bits_sink = io_out_0_d_bits_sink;\n  assign io_in_0_d_bits_addr_lo = T_1460;\n  assign io_in_0_d_bits_data = io_out_0_d_bits_data;\n  assign io_in_0_d_bits_error = d_error;\n  assign io_in_0_e_ready = 1'h1;\n  assign io_out_0_a_valid = repeater_io_deq_valid;\n  assign io_out_0_a_bits_opcode = repeater_io_deq_bits_opcode;\n  assign io_out_0_a_bits_param = repeater_io_deq_bits_param;\n  assign io_out_0_a_bits_size = aFrag;\n  assign io_out_0_a_bits_source = T_1530;\n  assign io_out_0_a_bits_address = T_1529;\n  assign io_out_0_a_bits_mask = T_1546;\n  assign io_out_0_a_bits_data = io_in_0_a_bits_data;\n  assign io_out_0_b_ready = 1'h1;\n  assign io_out_0_c_valid = 1'h0;\n  assign io_out_0_c_bits_opcode = GEN_17;\n  assign io_out_0_c_bits_param = GEN_18;\n  assign io_out_0_c_bits_size = GEN_19;\n  assign io_out_0_c_bits_source = GEN_20;\n  assign io_out_0_c_bits_address = GEN_21;\n  assign io_out_0_c_bits_data = GEN_22;\n  assign io_out_0_c_bits_error = GEN_23;\n  assign io_out_0_d_ready = io_in_0_d_ready;\n  assign io_out_0_e_valid = 1'h0;\n  assign io_out_0_e_bits_sink = GEN_24;\n  assign dFragnum = io_out_0_d_bits_source[4:0];\n  assign dFirst = acknum == 5'h0;\n  assign T_1410 = 8'h1 << io_out_0_d_bits_size;\n  assign T_1411 = T_1410[0];\n  assign dsizeOH1 = ~ T_1411;\n  assign T_1414 = io_out_0_d_valid == 1'h0;\n  assign GEN_5 = {{4'd0}, dsizeOH1};\n  assign T_1415 = dFragnum & GEN_5;\n  assign T_1417 = T_1415 == 5'h0;\n  assign T_1418 = T_1414 | T_1417;\n  assign T_1419 = T_1418 | reset;\n  assign T_1421 = T_1419 == 1'h0;\n  assign dFirst_acknum = dFragnum | GEN_5;\n  assign GEN_8 = {{1'd0}, dFirst_acknum};\n  assign T_1428 = GEN_8 << 1;\n  assign T_1430 = T_1428 | 6'h1;\n  assign T_1432 = {1'h0,dFirst_acknum};\n  assign T_1433 = ~ T_1432;\n  assign T_1434 = T_1430 & T_1433;\n  assign T_1435 = T_1434[5:4];\n  assign T_1436 = T_1434[3:0];\n  assign T_1438 = T_1435 != 2'h0;\n  assign GEN_9 = {{2'd0}, T_1435};\n  assign T_1439 = GEN_9 | T_1436;\n  assign T_1440 = T_1439[3:2];\n  assign T_1441 = T_1439[1:0];\n  assign T_1443 = T_1440 != 2'h0;\n  assign T_1444 = T_1440 | T_1441;\n  assign T_1445 = T_1444[1];\n  assign T_1446 = {T_1443,T_1445};\n  assign dFirst_size = {T_1438,T_1446};\n  assign T_1447 = io_out_0_d_ready & io_out_0_d_valid;\n  assign T_1448 = acknum - 5'h1;\n  assign T_1449 = T_1448[4:0];\n  assign T_1450 = dFirst ? dFirst_acknum : T_1449;\n  assign GEN_0 = dFirst ? dFirst_size : dOrig;\n  assign GEN_1 = T_1447 ? T_1450 : acknum;\n  assign GEN_2 = T_1447 ? GEN_0 : dOrig;\n  assign T_1459 = ~ dsizeOH1;\n  assign T_1460 = io_out_0_d_bits_addr_lo & T_1459;\n  assign T_1461 = io_out_0_d_bits_source[6:5];\n  assign d_error = r_error | io_out_0_d_bits_error;\n  assign GEN_3 = T_1447 ? 1'h0 : r_error;\n  assign repeater_clock = clock;\n  assign repeater_reset = reset;\n  assign repeater_io_repeat = T_1524;\n  assign repeater_io_enq_valid = io_in_0_a_valid;\n  assign repeater_io_enq_bits_opcode = io_in_0_a_bits_opcode;\n  assign repeater_io_enq_bits_param = io_in_0_a_bits_param;\n  assign repeater_io_enq_bits_size = io_in_0_a_bits_size;\n  assign repeater_io_enq_bits_source = io_in_0_a_bits_source;\n  assign repeater_io_enq_bits_address = io_in_0_a_bits_address;\n  assign repeater_io_enq_bits_mask = io_in_0_a_bits_mask;\n  assign repeater_io_enq_bits_data = io_in_0_a_bits_data;\n  assign repeater_io_deq_ready = io_out_0_a_ready;\n  assign find_0 = 1'h1;\n  assign T_1494 = repeater_io_deq_bits_size > 3'h0;\n  assign aFrag = T_1494 ? 3'h0 : repeater_io_deq_bits_size;\n  assign T_1497 = 12'h1f << repeater_io_deq_bits_size;\n  assign T_1498 = T_1497[4:0];\n  assign aOrigOH1 = ~ T_1498;\n  assign T_1501 = 8'h1 << aFrag;\n  assign T_1502 = T_1501[0];\n  assign aFragOH1 = ~ T_1502;\n  assign aFirst = gennum == 5'h0;\n  assign T_1511 = gennum - 5'h1;\n  assign T_1512 = T_1511[4:0];\n  assign old_gennum1 = aFirst ? aOrigOH1 : T_1512;\n  assign T_1513 = ~ old_gennum1;\n  assign GEN_10 = {{4'd0}, aFragOH1};\n  assign T_1515 = T_1513 | GEN_10;\n  assign new_gennum = ~ T_1515;\n  assign T_1520 = io_out_0_a_ready & io_out_0_a_valid;\n  assign GEN_4 = T_1520 ? new_gennum : gennum;\n  assign T_1524 = new_gennum != 5'h0;\n  assign T_1526 = ~ new_gennum;\n  assign T_1528 = T_1526 & aOrigOH1;\n  assign GEN_12 = {{25'd0}, T_1528};\n  assign T_1529 = repeater_io_deq_bits_address | GEN_12;\n  assign T_1530 = {repeater_io_deq_bits_source,new_gennum};\n  assign T_1532 = repeater_io_full == 1'h0;\n  assign T_1541 = repeater_io_deq_bits_mask;\n  assign T_1542 = T_1532 | T_1541;\n  assign T_1543 = T_1542 | reset;\n  assign T_1545 = T_1543 == 1'h0;\n  assign T_1546 = repeater_io_full ? 1'h1 : io_in_0_a_bits_mask;\n\n  always @(posedge clock or posedge reset) \n    if (reset) begin\n      acknum <= 5'h0;\n    end else begin\n      if (T_1447) begin\n        if (dFirst) begin\n          acknum <= dFirst_acknum;\n        end else begin\n          acknum <= T_1449;\n        end\n      end\n    end\n\n\n  always @(posedge clock or posedge reset) \n  if (reset) begin\n        dOrig <= 3'b0;\n  end\n  else begin\n    if (T_1447) begin\n      if (dFirst) begin\n        dOrig <= dFirst_size;\n      end\n    end\n  end\n\n\n  always @(posedge clock or posedge reset) \n    if (reset) begin\n      r_error <= 1'h0;\n    end else begin\n      if (T_1447) begin\n        r_error <= 1'h0;\n      end\n    end\n\n  always @(posedge clock or posedge reset) \n    if (reset) begin\n      gennum <= 5'h0;\n    end else begin\n      if (T_1520) begin\n        gennum <= new_gennum;\n      end\n    end\n\n   // `ifndef SYNTHESIS\n   // `ifdef PRINTF_COND\n   //   if (`PRINTF_COND) begin\n   // `endif\n   //     if (T_1421) begin\n   //       $fwrite(32'h80000002,\"Assertion failed\\n    at Fragmenter.scala:149 assert (!out.d.valid || (acknum_fragment & acknum_size) === UInt(0))\\n\");\n   //     end\n   // `ifdef PRINTF_COND\n   //   end\n   // `endif\n   // `endif\n   // `ifndef SYNTHESIS\n   // `ifdef STOP_COND\n   //   if (`STOP_COND) begin\n   // `endif\n   //     if (T_1421) begin\n   //       $fatal;\n   //     end\n   // `ifdef STOP_COND\n   //   end\n   // `endif\n   // `endif\n   // `ifndef SYNTHESIS\n   // `ifdef PRINTF_COND\n   //   if (`PRINTF_COND) begin\n   // `endif\n   //     if (1'h0) begin\n   //       $fwrite(32'h80000002,\"Assertion failed\\n    at Fragmenter.scala:237 assert (!repeater.io.full || !aHasData)\\n\");\n   //     end\n   // `ifdef PRINTF_COND\n   //   end\n   // `endif\n   // `endif\n   // `ifndef SYNTHESIS\n   // `ifdef STOP_COND\n   //   if (`STOP_COND) begin\n   // `endif\n   //     if (1'h0) begin\n   //       $fatal;\n   //     end\n   // `ifdef STOP_COND\n   //   end\n   // `endif\n   // `endif\n   // `ifndef SYNTHESIS\n   // `ifdef PRINTF_COND\n   //   if (`PRINTF_COND) begin\n   // `endif\n   //     if (T_1545) begin\n   //       $fwrite(32'h80000002,\"Assertion failed\\n    at Fragmenter.scala:240 assert (!repeater.io.full || in_a.bits.mask === fullMask)\\n\");\n   //     end\n   // `ifdef PRINTF_COND\n   //   end\n   // `endif\n   // `endif\n   // `ifndef SYNTHESIS\n   // `ifdef STOP_COND\n   //   if (`STOP_COND) begin\n   // `endif\n   //     if (T_1545) begin\n   //       $fatal;\n   //     end\n   // `ifdef STOP_COND\n   //   end\n   // `endif\n   // `endif\n    //synopsys translate_off\n  always @(posedge clock or posedge reset) begin\n        if (T_1421) begin\n          $fwrite(32'h80000002,\"Assertion failed\\n    at Fragmenter.scala:149 assert (!out.d.valid || (acknum_fragment & acknum_size) === UInt(0))\\n\");\n        end\n        if (T_1545) begin\n          $fwrite(32'h80000002,\"Assertion failed\\n    at Fragmenter.scala:240 assert (!repeater.io.full || in_a.bits.mask === fullMask)\\n\");\n        end\n        if (1'h0) begin\n          $fwrite(32'h80000002,\"Assertion failed\\n    at Fragmenter.scala:237 assert (!repeater.io.full || !aHasData)\\n\");\n        end\n  end\n    //synopsys translate_on\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_tlwidthwidget_qspi(\n  input   clock,\n  input   reset,\n  output  io_in_0_a_ready,\n  input   io_in_0_a_valid,\n  input  [2:0] io_in_0_a_bits_opcode,\n  input  [2:0] io_in_0_a_bits_param,\n  input  [2:0] io_in_0_a_bits_size,\n  input  [1:0] io_in_0_a_bits_source,\n  input  [29:0] io_in_0_a_bits_address,\n  input  [3:0] io_in_0_a_bits_mask,\n  input  [31:0] io_in_0_a_bits_data,\n  input   io_in_0_b_ready,\n  output  io_in_0_b_valid,\n  output [2:0] io_in_0_b_bits_opcode,\n  output [1:0] io_in_0_b_bits_param,\n  output [2:0] io_in_0_b_bits_size,\n  output [1:0] io_in_0_b_bits_source,\n  output [29:0] io_in_0_b_bits_address,\n  output [3:0] io_in_0_b_bits_mask,\n  output [31:0] io_in_0_b_bits_data,\n  output  io_in_0_c_ready,\n  input   io_in_0_c_valid,\n  input  [2:0] io_in_0_c_bits_opcode,\n  input  [2:0] io_in_0_c_bits_param,\n  input  [2:0] io_in_0_c_bits_size,\n  input  [1:0] io_in_0_c_bits_source,\n  input  [29:0] io_in_0_c_bits_address,\n  input  [31:0] io_in_0_c_bits_data,\n  input   io_in_0_c_bits_error,\n  input   io_in_0_d_ready,\n  output  io_in_0_d_valid,\n  output [2:0] io_in_0_d_bits_opcode,\n  output [1:0] io_in_0_d_bits_param,\n  output [2:0] io_in_0_d_bits_size,\n  output [1:0] io_in_0_d_bits_source,\n  output  io_in_0_d_bits_sink,\n  output [1:0] io_in_0_d_bits_addr_lo,\n  output [31:0] io_in_0_d_bits_data,\n  output  io_in_0_d_bits_error,\n  output  io_in_0_e_ready,\n  input   io_in_0_e_valid,\n  input   io_in_0_e_bits_sink,\n  input   io_out_0_a_ready,\n  output  io_out_0_a_valid,\n  output [2:0] io_out_0_a_bits_opcode,\n  output [2:0] io_out_0_a_bits_param,\n  output [2:0] io_out_0_a_bits_size,\n  output [1:0] io_out_0_a_bits_source,\n  output [29:0] io_out_0_a_bits_address,\n  output  io_out_0_a_bits_mask,\n  output [7:0] io_out_0_a_bits_data,\n  output  io_out_0_b_ready,\n  input   io_out_0_b_valid,\n  input  [2:0] io_out_0_b_bits_opcode,\n  input  [1:0] io_out_0_b_bits_param,\n  input  [2:0] io_out_0_b_bits_size,\n  input  [1:0] io_out_0_b_bits_source,\n  input  [29:0] io_out_0_b_bits_address,\n  input   io_out_0_b_bits_mask,\n  input  [7:0] io_out_0_b_bits_data,\n  input   io_out_0_c_ready,\n  output  io_out_0_c_valid,\n  output [2:0] io_out_0_c_bits_opcode,\n  output [2:0] io_out_0_c_bits_param,\n  output [2:0] io_out_0_c_bits_size,\n  output [1:0] io_out_0_c_bits_source,\n  output [29:0] io_out_0_c_bits_address,\n  output [7:0] io_out_0_c_bits_data,\n  output  io_out_0_c_bits_error,\n  output  io_out_0_d_ready,\n  input   io_out_0_d_valid,\n  input  [2:0] io_out_0_d_bits_opcode,\n  input  [1:0] io_out_0_d_bits_param,\n  input  [2:0] io_out_0_d_bits_size,\n  input  [1:0] io_out_0_d_bits_source,\n  input   io_out_0_d_bits_sink,\n  input   io_out_0_d_bits_addr_lo,\n  input  [7:0] io_out_0_d_bits_data,\n  input   io_out_0_d_bits_error,\n  input   io_out_0_e_ready,\n  output  io_out_0_e_valid,\n  output  io_out_0_e_bits_sink\n);\n  wire  T_1403;\n  wire  Repeater_5_1_clock;\n  wire  Repeater_5_1_reset;\n  wire  Repeater_5_1_io_repeat;\n  wire  Repeater_5_1_io_full;\n  wire  Repeater_5_1_io_enq_ready;\n  wire  Repeater_5_1_io_enq_valid;\n  wire [2:0] Repeater_5_1_io_enq_bits_opcode;\n  wire [2:0] Repeater_5_1_io_enq_bits_param;\n  wire [2:0] Repeater_5_1_io_enq_bits_size;\n  wire [1:0] Repeater_5_1_io_enq_bits_source;\n  wire [29:0] Repeater_5_1_io_enq_bits_address;\n  wire [3:0] Repeater_5_1_io_enq_bits_mask;\n  wire [31:0] Repeater_5_1_io_enq_bits_data;\n  wire  Repeater_5_1_io_deq_ready;\n  wire  Repeater_5_1_io_deq_valid;\n  wire [2:0] Repeater_5_1_io_deq_bits_opcode;\n  wire [2:0] Repeater_5_1_io_deq_bits_param;\n  wire [2:0] Repeater_5_1_io_deq_bits_size;\n  wire [1:0] Repeater_5_1_io_deq_bits_source;\n  wire [29:0] Repeater_5_1_io_deq_bits_address;\n  wire [3:0] Repeater_5_1_io_deq_bits_mask;\n  wire [31:0] Repeater_5_1_io_deq_bits_data;\n  wire [7:0] T_1408;\n  wire [7:0] T_1409;\n  wire [7:0] T_1410;\n  wire [7:0] T_1411;\n  wire [7:0] T_1419_0;\n  wire [7:0] T_1419_1;\n  wire [7:0] T_1419_2;\n  wire [7:0] T_1419_3;\n  wire  T_1426;\n  wire  T_1427;\n  wire  T_1428;\n  wire  T_1429;\n  wire  T_1437_0;\n  wire  T_1437_1;\n  wire  T_1437_2;\n  wire  T_1437_3;\n  reg [3:0] T_1447;\n  reg [31:0] GEN_28;\n  wire [8:0] T_1458;\n  wire [1:0] T_1459;\n  wire [1:0] T_1460;\n  wire  T_1463;\n  wire  T_1465;\n  wire  T_1466;\n  wire  T_1468;\n  wire  T_1472;\n  wire [1:0] T_1473;\n  wire [1:0] T_1474;\n  wire [3:0] T_1475;\n  wire [4:0] GEN_12;\n  wire [4:0] T_1476;\n  wire [4:0] T_1477;\n  wire  T_1482;\n  wire [4:0] GEN_2;\n  wire [1:0] T_1487;\n  wire [1:0] T_1488;\n  wire [3:0] T_1489;\n  wire [4:0] GEN_13;\n  wire [4:0] T_1490;\n  wire  T_1492;\n  wire  T_1493;\n  wire  T_1494;\n  wire  T_1495;\n  wire  T_1497;\n  wire  T_1499;\n  wire  T_1501;\n  wire  T_1503;\n  wire  T_1505;\n  wire  T_1506;\n  wire  T_1507;\n  wire  T_1508;\n  reg [23:0] T_1512;\n  reg [31:0] GEN_29;\n  reg [2:0] T_1514;\n  reg [31:0] GEN_30;\n  wire [31:0] T_1515;\n  wire [3:0] T_1523;\n  reg [1:0] T_1527;\n  reg [31:0] GEN_31;\n  wire [8:0] T_1532;\n  wire [1:0] T_1533;\n  wire [1:0] T_1534;\n  wire  T_1536;\n  wire  T_1540;\n  wire [23:0] T_1541;\n  wire [2:0] T_1542;\n  wire [2:0] T_1544;\n  wire [1:0] T_1545;\n  wire [1:0] GEN_3;\n  wire [23:0] GEN_4;\n  wire [2:0] GEN_5;\n  wire [1:0] GEN_6;\n  wire [7:0] T_1547;\n  wire [15:0] T_1548;\n  wire [31:0] T_1549;\n  wire  T_1550;\n  wire [3:0] T_1554;\n  wire [15:0] T_1555;\n  wire [31:0] T_1556;\n  wire [1:0] T_1557;\n  wire [3:0] T_1558;\n  wire [31:0] T_1570_0;\n  wire [31:0] T_1570_1;\n  wire [31:0] T_1570_2;\n  wire [31:0] T_1570_3;\n  wire [31:0] T_1570_4;\n  wire [31:0] T_1570_5;\n  wire [3:0] T_1588_0;\n  wire [3:0] T_1588_1;\n  wire [3:0] T_1588_2;\n  wire [3:0] T_1588_3;\n  wire [3:0] T_1588_4;\n  wire [3:0] T_1588_5;\n  wire  T_1599;\n  wire  T_1600;\n  wire  T_1601;\n  wire [31:0] GEN_0;\n  wire [31:0] GEN_7;\n  wire [31:0] GEN_8;\n  wire [31:0] GEN_9;\n  wire [31:0] GEN_10;\n  wire [31:0] GEN_11;\n  wire [2:0] GEN_1 = 3'b0;\n  reg [31:0] GEN_32;\n  wire [1:0] GEN_14 = 2'b0;\n  reg [31:0] GEN_33;\n  wire [2:0] GEN_15 = 3'b0;\n  reg [31:0] GEN_34;\n  wire [1:0] GEN_16 = 2'b0;\n  reg [31:0] GEN_35;\n  wire [29:0] GEN_17 = 30'b0;\n  reg [31:0] GEN_36;\n  wire [3:0] GEN_18 = 4'b0;\n  reg [31:0] GEN_37;\n  wire [31:0] GEN_19 = 32'b0;\n  reg [31:0] GEN_38;\n  wire [2:0] GEN_20 = 3'b0;\n  reg [31:0] GEN_39;\n  wire [2:0] GEN_21 = 3'b0;\n  reg [31:0] GEN_40;\n  wire [2:0] GEN_22 = 3'b0;\n  reg [31:0] GEN_41;\n  wire [1:0] GEN_23 = 2'b0;\n  reg [31:0] GEN_42;\n  wire [29:0] GEN_24 = 30'b0;\n  reg [31:0] GEN_43;\n  wire [7:0] GEN_25 = 8'b0;\n  reg [31:0] GEN_44;\n  wire  GEN_26 = 1'b0;\n  reg [31:0] GEN_45;\n  wire  GEN_27 = 1'b0;\n  reg [31:0] GEN_46;\n  sirv_tl_repeater_5 Repeater_5_1 (\n    .clock(Repeater_5_1_clock),\n    .reset(Repeater_5_1_reset),\n    .io_repeat(Repeater_5_1_io_repeat),\n    .io_full(Repeater_5_1_io_full),\n    .io_enq_ready(Repeater_5_1_io_enq_ready),\n    .io_enq_valid(Repeater_5_1_io_enq_valid),\n    .io_enq_bits_opcode(Repeater_5_1_io_enq_bits_opcode),\n    .io_enq_bits_param(Repeater_5_1_io_enq_bits_param),\n    .io_enq_bits_size(Repeater_5_1_io_enq_bits_size),\n    .io_enq_bits_source(Repeater_5_1_io_enq_bits_source),\n    .io_enq_bits_address(Repeater_5_1_io_enq_bits_address),\n    .io_enq_bits_mask(Repeater_5_1_io_enq_bits_mask),\n    .io_enq_bits_data(Repeater_5_1_io_enq_bits_data),\n    .io_deq_ready(Repeater_5_1_io_deq_ready),\n    .io_deq_valid(Repeater_5_1_io_deq_valid),\n    .io_deq_bits_opcode(Repeater_5_1_io_deq_bits_opcode),\n    .io_deq_bits_param(Repeater_5_1_io_deq_bits_param),\n    .io_deq_bits_size(Repeater_5_1_io_deq_bits_size),\n    .io_deq_bits_source(Repeater_5_1_io_deq_bits_source),\n    .io_deq_bits_address(Repeater_5_1_io_deq_bits_address),\n    .io_deq_bits_mask(Repeater_5_1_io_deq_bits_mask),\n    .io_deq_bits_data(Repeater_5_1_io_deq_bits_data)\n  );\n  assign io_in_0_a_ready = Repeater_5_1_io_enq_ready;\n  assign io_in_0_b_valid = 1'h0;\n  assign io_in_0_b_bits_opcode = GEN_1;\n  assign io_in_0_b_bits_param = GEN_14;\n  assign io_in_0_b_bits_size = GEN_15;\n  assign io_in_0_b_bits_source = GEN_16;\n  assign io_in_0_b_bits_address = GEN_17;\n  assign io_in_0_b_bits_mask = GEN_18;\n  assign io_in_0_b_bits_data = GEN_19;\n  assign io_in_0_c_ready = 1'h1;\n  assign io_in_0_d_valid = T_1601;\n  assign io_in_0_d_bits_opcode = io_out_0_d_bits_opcode;\n  assign io_in_0_d_bits_param = io_out_0_d_bits_param;\n  assign io_in_0_d_bits_size = io_out_0_d_bits_size;\n  assign io_in_0_d_bits_source = io_out_0_d_bits_source;\n  assign io_in_0_d_bits_sink = io_out_0_d_bits_sink;\n  assign io_in_0_d_bits_addr_lo = {{1'd0}, io_out_0_d_bits_addr_lo};\n  assign io_in_0_d_bits_data = GEN_0;\n  assign io_in_0_d_bits_error = io_out_0_d_bits_error;\n  assign io_in_0_e_ready = 1'h1;\n  assign io_out_0_a_valid = Repeater_5_1_io_deq_valid;\n  assign io_out_0_a_bits_opcode = Repeater_5_1_io_deq_bits_opcode;\n  assign io_out_0_a_bits_param = Repeater_5_1_io_deq_bits_param;\n  assign io_out_0_a_bits_size = Repeater_5_1_io_deq_bits_size;\n  assign io_out_0_a_bits_source = Repeater_5_1_io_deq_bits_source;\n  assign io_out_0_a_bits_address = Repeater_5_1_io_deq_bits_address;\n  assign io_out_0_a_bits_mask = T_1508;\n  assign io_out_0_a_bits_data = 8'h0;\n  assign io_out_0_b_ready = 1'h1;\n  assign io_out_0_c_valid = 1'h0;\n  assign io_out_0_c_bits_opcode = GEN_20;\n  assign io_out_0_c_bits_param = GEN_21;\n  assign io_out_0_c_bits_size = GEN_22;\n  assign io_out_0_c_bits_source = GEN_23;\n  assign io_out_0_c_bits_address = GEN_24;\n  assign io_out_0_c_bits_data = GEN_25;\n  assign io_out_0_c_bits_error = GEN_26;\n  assign io_out_0_d_ready = T_1600;\n  assign io_out_0_e_valid = 1'h0;\n  assign io_out_0_e_bits_sink = GEN_27;\n  assign T_1403 = 1'h0;\n  assign Repeater_5_1_clock = clock;\n  assign Repeater_5_1_reset = reset;\n  assign Repeater_5_1_io_repeat = T_1403;\n  assign Repeater_5_1_io_enq_valid = io_in_0_a_valid;\n  assign Repeater_5_1_io_enq_bits_opcode = io_in_0_a_bits_opcode;\n  assign Repeater_5_1_io_enq_bits_param = io_in_0_a_bits_param;\n  assign Repeater_5_1_io_enq_bits_size = io_in_0_a_bits_size;\n  assign Repeater_5_1_io_enq_bits_source = io_in_0_a_bits_source;\n  assign Repeater_5_1_io_enq_bits_address = io_in_0_a_bits_address;\n  assign Repeater_5_1_io_enq_bits_mask = io_in_0_a_bits_mask;\n  assign Repeater_5_1_io_enq_bits_data = io_in_0_a_bits_data;\n  assign Repeater_5_1_io_deq_ready = io_out_0_a_ready;\n  assign T_1408 = Repeater_5_1_io_deq_bits_data[7:0];\n  assign T_1409 = Repeater_5_1_io_deq_bits_data[15:8];\n  assign T_1410 = Repeater_5_1_io_deq_bits_data[23:16];\n  assign T_1411 = Repeater_5_1_io_deq_bits_data[31:24];\n  assign T_1419_0 = T_1408;\n  assign T_1419_1 = T_1409;\n  assign T_1419_2 = T_1410;\n  assign T_1419_3 = T_1411;\n  assign T_1426 = Repeater_5_1_io_deq_bits_mask[0];\n  assign T_1427 = Repeater_5_1_io_deq_bits_mask[1];\n  assign T_1428 = Repeater_5_1_io_deq_bits_mask[2];\n  assign T_1429 = Repeater_5_1_io_deq_bits_mask[3];\n  assign T_1437_0 = T_1426;\n  assign T_1437_1 = T_1427;\n  assign T_1437_2 = T_1428;\n  assign T_1437_3 = T_1429;\n  assign T_1458 = 9'h3 << Repeater_5_1_io_deq_bits_size;\n  assign T_1459 = T_1458[1:0];\n  assign T_1460 = ~ T_1459;\n  assign T_1463 = T_1460[0];\n  assign T_1465 = T_1463 == 1'h0;\n  assign T_1466 = T_1460[1];\n  assign T_1468 = T_1466 == 1'h0;\n  assign T_1472 = T_1447[3];\n  assign T_1473 = {T_1465,1'h1};\n  assign T_1474 = {T_1465,T_1468};\n  assign T_1475 = {T_1474,T_1473};\n  assign GEN_12 = {{1'd0}, T_1447};\n  assign T_1476 = GEN_12 << 1;\n  assign T_1477 = T_1472 ? {{1'd0}, T_1475} : T_1476;\n  assign T_1482 = io_out_0_a_ready & io_out_0_a_valid;\n  assign GEN_2 = T_1482 ? 5'hf : {{1'd0}, T_1447};\n  assign T_1487 = {T_1437_1,T_1437_0};\n  assign T_1488 = {T_1437_3,T_1437_2};\n  assign T_1489 = {T_1488,T_1487};\n  assign GEN_13 = {{1'd0}, T_1489};\n  assign T_1490 = GEN_13 & T_1477;\n  assign T_1492 = T_1490[0];\n  assign T_1493 = T_1490[1];\n  assign T_1494 = T_1490[2];\n  assign T_1495 = T_1490[3];\n  assign T_1497 = T_1492 ? T_1437_0 : 1'h0;\n  assign T_1499 = T_1493 ? T_1437_1 : 1'h0;\n  assign T_1501 = T_1494 ? T_1437_2 : 1'h0;\n  assign T_1503 = T_1495 ? T_1437_3 : 1'h0;\n  assign T_1505 = T_1497 | T_1499;\n  assign T_1506 = T_1505 | T_1501;\n  assign T_1507 = T_1506 | T_1503;\n  assign T_1508 = T_1507;\n  assign T_1515 = {io_out_0_d_bits_data,T_1512};\n  assign T_1523 = {1'h1,T_1514};\n  assign T_1532 = 9'h3 << io_out_0_d_bits_size;\n  assign T_1533 = T_1532[1:0];\n  assign T_1534 = ~ T_1533;\n  assign T_1536 = T_1527 == T_1534;\n  assign T_1540 = io_out_0_d_ready & io_out_0_d_valid;\n  assign T_1541 = T_1515[31:8];\n  assign T_1542 = T_1523[3:1];\n  assign T_1544 = T_1527 + 2'h1;\n  assign T_1545 = T_1544[1:0];\n  assign GEN_3 = T_1536 ? 2'h0 : T_1545;\n  assign GEN_4 = T_1540 ? T_1541 : T_1512;\n  assign GEN_5 = T_1540 ? T_1542 : T_1514;\n  assign GEN_6 = T_1540 ? GEN_3 : T_1527;\n  assign T_1547 = T_1515[31:24];\n  assign T_1548 = {T_1547,T_1547};\n  assign T_1549 = {T_1548,T_1548};\n  assign T_1550 = T_1523[3];\n  assign T_1554 = T_1550 ? 4'hf : 4'h0;\n  assign T_1555 = T_1515[31:16];\n  assign T_1556 = {T_1555,T_1555};\n  assign T_1557 = T_1523[3:2];\n  assign T_1558 = {T_1557,T_1557};\n  assign T_1570_0 = T_1549;\n  assign T_1570_1 = T_1556;\n  assign T_1570_2 = T_1515;\n  assign T_1570_3 = T_1515;\n  assign T_1570_4 = T_1515;\n  assign T_1570_5 = T_1515;\n  assign T_1588_0 = T_1554;\n  assign T_1588_1 = T_1558;\n  assign T_1588_2 = T_1523;\n  assign T_1588_3 = T_1523;\n  assign T_1588_4 = T_1523;\n  assign T_1588_5 = T_1523;\n  assign T_1599 = T_1536 == 1'h0;\n  assign T_1600 = io_in_0_d_ready | T_1599;\n  assign T_1601 = io_out_0_d_valid & T_1536;\n  assign GEN_0 = GEN_11;\n  assign GEN_7 = 3'h1 == io_out_0_d_bits_size ? T_1570_1 : T_1570_0;\n  assign GEN_8 = 3'h2 == io_out_0_d_bits_size ? T_1570_2 : GEN_7;\n  assign GEN_9 = 3'h3 == io_out_0_d_bits_size ? T_1570_3 : GEN_8;\n  assign GEN_10 = 3'h4 == io_out_0_d_bits_size ? T_1570_4 : GEN_9;\n  assign GEN_11 = 3'h5 == io_out_0_d_bits_size ? T_1570_5 : GEN_10;\n\n  always @(posedge clock or posedge reset) \n    if (reset) begin\n      T_1447 <= 4'hf;\n    end else begin\n      T_1447 <= GEN_2[3:0];\n    end\n\n\n  always @(posedge clock or posedge reset) \n  if (reset) begin\n      T_1512 <= 24'b0;\n      T_1514 <= 3'b0;\n  end\n  else begin\n    if (T_1540) begin\n      T_1512 <= T_1541;\n    end\n    if (T_1540) begin\n      T_1514 <= T_1542;\n    end\n  end\n\n\n  always @(posedge clock or posedge reset) \n    if (reset) begin\n      T_1527 <= 2'h0;\n    end else begin\n      if (T_1540) begin\n        if (T_1536) begin\n          T_1527 <= 2'h0;\n        end else begin\n          T_1527 <= T_1545;\n        end\n      end\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_tl_repeater_5(\n  input   clock,\n  input   reset,\n  input   io_repeat,\n  output  io_full,\n  output  io_enq_ready,\n  input   io_enq_valid,\n  input  [2:0] io_enq_bits_opcode,\n  input  [2:0] io_enq_bits_param,\n  input  [2:0] io_enq_bits_size,\n  input  [1:0] io_enq_bits_source,\n  input  [29:0] io_enq_bits_address,\n  input  [3:0] io_enq_bits_mask,\n  input  [31:0] io_enq_bits_data,\n  input   io_deq_ready,\n  output  io_deq_valid,\n  output [2:0] io_deq_bits_opcode,\n  output [2:0] io_deq_bits_param,\n  output [2:0] io_deq_bits_size,\n  output [1:0] io_deq_bits_source,\n  output [29:0] io_deq_bits_address,\n  output [3:0] io_deq_bits_mask,\n  output [31:0] io_deq_bits_data\n);\n  reg  full;\n  reg [31:0] GEN_9;\n  reg [2:0] saved_opcode;\n  reg [31:0] GEN_10;\n  reg [2:0] saved_param;\n  reg [31:0] GEN_11;\n  reg [2:0] saved_size;\n  reg [31:0] GEN_12;\n  reg [1:0] saved_source;\n  reg [31:0] GEN_13;\n  reg [29:0] saved_address;\n  reg [31:0] GEN_14;\n  reg [3:0] saved_mask;\n  reg [31:0] GEN_15;\n  reg [31:0] saved_data;\n  reg [31:0] GEN_16;\n  wire  T_77;\n  wire  T_79;\n  wire  T_80;\n  wire [2:0] T_81_opcode;\n  wire [2:0] T_81_param;\n  wire [2:0] T_81_size;\n  wire [1:0] T_81_source;\n  wire [29:0] T_81_address;\n  wire [3:0] T_81_mask;\n  wire [31:0] T_81_data;\n  wire  T_89;\n  wire  T_90;\n  wire  GEN_0;\n  wire [2:0] GEN_1;\n  wire [2:0] GEN_2;\n  wire [2:0] GEN_3;\n  wire [1:0] GEN_4;\n  wire [29:0] GEN_5;\n  wire [3:0] GEN_6;\n  wire [31:0] GEN_7;\n  wire  T_92;\n  wire  T_94;\n  wire  T_95;\n  wire  GEN_8;\n  assign io_full = full;\n  assign io_enq_ready = T_80;\n  assign io_deq_valid = T_77;\n  assign io_deq_bits_opcode = T_81_opcode;\n  assign io_deq_bits_param = T_81_param;\n  assign io_deq_bits_size = T_81_size;\n  assign io_deq_bits_source = T_81_source;\n  assign io_deq_bits_address = T_81_address;\n  assign io_deq_bits_mask = T_81_mask;\n  assign io_deq_bits_data = T_81_data;\n  assign T_77 = io_enq_valid | full;\n  assign T_79 = full == 1'h0;\n  assign T_80 = io_deq_ready & T_79;\n  assign T_81_opcode = full ? saved_opcode : io_enq_bits_opcode;\n  assign T_81_param = full ? saved_param : io_enq_bits_param;\n  assign T_81_size = full ? saved_size : io_enq_bits_size;\n  assign T_81_source = full ? saved_source : io_enq_bits_source;\n  assign T_81_address = full ? saved_address : io_enq_bits_address;\n  assign T_81_mask = full ? saved_mask : io_enq_bits_mask;\n  assign T_81_data = full ? saved_data : io_enq_bits_data;\n  assign T_89 = io_enq_ready & io_enq_valid;\n  assign T_90 = T_89 & io_repeat;\n  assign GEN_0 = T_90 ? 1'h1 : full;\n  assign GEN_1 = T_90 ? io_enq_bits_opcode : saved_opcode;\n  assign GEN_2 = T_90 ? io_enq_bits_param : saved_param;\n  assign GEN_3 = T_90 ? io_enq_bits_size : saved_size;\n  assign GEN_4 = T_90 ? io_enq_bits_source : saved_source;\n  assign GEN_5 = T_90 ? io_enq_bits_address : saved_address;\n  assign GEN_6 = T_90 ? io_enq_bits_mask : saved_mask;\n  assign GEN_7 = T_90 ? io_enq_bits_data : saved_data;\n  assign T_92 = io_deq_ready & io_deq_valid;\n  assign T_94 = io_repeat == 1'h0;\n  assign T_95 = T_92 & T_94;\n  assign GEN_8 = T_95 ? 1'h0 : GEN_0;\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      full <= 1'h0;\n    end else begin\n      if (T_95) begin\n        full <= 1'h0;\n      end else begin\n        if (T_90) begin\n          full <= 1'h1;\n        end\n      end\n    end\n\n\n  always @(posedge clock or posedge reset)\n  if (reset) begin\n    saved_opcode  <= 3'b0;\n    saved_param   <= 3'b0;\n    saved_size    <= 3'b0;\n    saved_source  <= 2'b0;\n    saved_address <= 30'b0;\n    saved_mask    <= 4'b0;\n    saved_data    <= 32'b0;\n  end\n  else begin\n    if (T_90) begin\n      saved_opcode <= io_enq_bits_opcode;\n    end\n    if (T_90) begin\n      saved_param <= io_enq_bits_param;\n    end\n    if (T_90) begin\n      saved_size <= io_enq_bits_size;\n    end\n    if (T_90) begin\n      saved_source <= io_enq_bits_source;\n    end\n    if (T_90) begin\n      saved_address <= io_enq_bits_address;\n    end\n    if (T_90) begin\n      saved_mask <= io_enq_bits_mask;\n    end\n    if (T_90) begin\n      saved_data <= io_enq_bits_data;\n    end\n  end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_uart(\n  input   clock,\n  input   reset,\n  output  io_interrupts_0_0,\n  output  io_in_0_a_ready,\n  input   io_in_0_a_valid,\n  input  [2:0] io_in_0_a_bits_opcode,\n  input  [2:0] io_in_0_a_bits_param,\n  input  [2:0] io_in_0_a_bits_size,\n  input  [4:0] io_in_0_a_bits_source,\n  input  [28:0] io_in_0_a_bits_address,\n  input  [3:0] io_in_0_a_bits_mask,\n  input  [31:0] io_in_0_a_bits_data,\n  input   io_in_0_b_ready,\n  output  io_in_0_b_valid,\n  output [2:0] io_in_0_b_bits_opcode,\n  output [1:0] io_in_0_b_bits_param,\n  output [2:0] io_in_0_b_bits_size,\n  output [4:0] io_in_0_b_bits_source,\n  output [28:0] io_in_0_b_bits_address,\n  output [3:0] io_in_0_b_bits_mask,\n  output [31:0] io_in_0_b_bits_data,\n  output  io_in_0_c_ready,\n  input   io_in_0_c_valid,\n  input  [2:0] io_in_0_c_bits_opcode,\n  input  [2:0] io_in_0_c_bits_param,\n  input  [2:0] io_in_0_c_bits_size,\n  input  [4:0] io_in_0_c_bits_source,\n  input  [28:0] io_in_0_c_bits_address,\n  input  [31:0] io_in_0_c_bits_data,\n  input   io_in_0_c_bits_error,\n  input   io_in_0_d_ready,\n  output  io_in_0_d_valid,\n  output [2:0] io_in_0_d_bits_opcode,\n  output [1:0] io_in_0_d_bits_param,\n  output [2:0] io_in_0_d_bits_size,\n  output [4:0] io_in_0_d_bits_source,\n  output  io_in_0_d_bits_sink,\n  output [1:0] io_in_0_d_bits_addr_lo,\n  output [31:0] io_in_0_d_bits_data,\n  output  io_in_0_d_bits_error,\n  output  io_in_0_e_ready,\n  input   io_in_0_e_valid,\n  input   io_in_0_e_bits_sink,\n  output  io_port_txd,\n  input   io_port_rxd\n);\n  wire  txm_clock;\n  wire  txm_reset;\n  wire  txm_io_en;\n  wire  txm_io_in_ready;\n  wire  txm_io_in_valid;\n  wire [7:0] txm_io_in_bits;\n  wire  txm_io_out;\n  wire [15:0] txm_io_div;\n  wire  txm_io_nstop;\n  wire  txq_clock;\n  wire  txq_reset;\n  wire  txq_io_enq_ready;\n  wire  txq_io_enq_valid;\n  wire [7:0] txq_io_enq_bits;\n  wire  txq_io_deq_ready;\n  wire  txq_io_deq_valid;\n  wire [7:0] txq_io_deq_bits;\n  wire [3:0] txq_io_count;\n  wire  rxm_clock;\n  wire  rxm_reset;\n  wire  rxm_io_en;\n  wire  rxm_io_in;\n  wire  rxm_io_out_valid;\n  wire [7:0] rxm_io_out_bits;\n  wire [15:0] rxm_io_div;\n  wire  rxq_clock;\n  wire  rxq_reset;\n  wire  rxq_io_enq_ready;\n  wire  rxq_io_enq_valid;\n  wire [7:0] rxq_io_enq_bits;\n  wire  rxq_io_deq_ready;\n  wire  rxq_io_deq_valid;\n  wire [7:0] rxq_io_deq_bits;\n  wire [3:0] rxq_io_count;\n  reg [15:0] div;\n  reg [31:0] GEN_76;\n  reg  txen;\n  reg [31:0] GEN_77;\n  reg  rxen;\n  reg [31:0] GEN_78;\n  reg [3:0] txwm;\n  reg [31:0] GEN_79;\n  reg [3:0] rxwm;\n  reg [31:0] GEN_80;\n  reg  nstop;\n  reg [31:0] GEN_81;\n  wire  T_902_rxwm;\n  wire  T_902_txwm;\n  wire [1:0] T_906;\n  wire  T_907;\n  wire  T_908;\n  reg  ie_rxwm;\n  reg [31:0] GEN_82;\n  reg  ie_txwm;\n  reg [31:0] GEN_83;\n  wire  ip_rxwm;\n  wire  ip_txwm;\n  wire  T_916;\n  wire  T_917;\n  wire  T_918;\n  wire  T_919;\n  wire  T_920;\n  wire  T_924;\n  wire  T_927;\n  wire  T_951_ready;\n  wire  T_951_valid;\n  wire  T_951_bits_read;\n  wire [9:0] T_951_bits_index;\n  wire [31:0] T_951_bits_data;\n  wire [3:0] T_951_bits_mask;\n  wire [9:0] T_951_bits_extra;\n  wire  T_968;\n  wire [26:0] T_969;\n  wire [1:0] T_970;\n  wire [6:0] T_971;\n  wire [9:0] T_972;\n  wire  T_990_ready;\n  wire  T_990_valid;\n  wire  T_990_bits_read;\n  wire [31:0] T_990_bits_data;\n  wire [9:0] T_990_bits_extra;\n  wire  T_1026_ready;\n  wire  T_1026_valid;\n  wire  T_1026_bits_read;\n  wire [9:0] T_1026_bits_index;\n  wire [31:0] T_1026_bits_data;\n  wire [3:0] T_1026_bits_mask;\n  wire [9:0] T_1026_bits_extra;\n  wire [9:0] T_1063;\n  wire  T_1065;\n  wire [9:0] T_1071;\n  wire [9:0] T_1072;\n  wire  T_1074;\n  wire [9:0] T_1080;\n  wire [9:0] T_1081;\n  wire  T_1083;\n  wire [9:0] T_1089;\n  wire [9:0] T_1090;\n  wire  T_1092;\n  wire [9:0] T_1098;\n  wire [9:0] T_1099;\n  wire  T_1101;\n  wire [9:0] T_1107;\n  wire [9:0] T_1108;\n  wire  T_1110;\n  wire [9:0] T_1116;\n  wire [9:0] T_1117;\n  wire  T_1119;\n  wire  T_1127_0;\n  wire  T_1127_1;\n  wire  T_1127_2;\n  wire  T_1127_3;\n  wire  T_1127_4;\n  wire  T_1127_5;\n  wire  T_1127_6;\n  wire  T_1127_7;\n  wire  T_1127_8;\n  wire  T_1127_9;\n  wire  T_1127_10;\n  wire  T_1127_11;\n  wire  T_1127_12;\n  wire  T_1127_13;\n  wire  T_1127_14;\n  wire  T_1127_15;\n  wire  T_1132_0;\n  wire  T_1132_1;\n  wire  T_1132_2;\n  wire  T_1132_3;\n  wire  T_1132_4;\n  wire  T_1132_5;\n  wire  T_1132_6;\n  wire  T_1132_7;\n  wire  T_1132_8;\n  wire  T_1132_9;\n  wire  T_1132_10;\n  wire  T_1132_11;\n  wire  T_1132_12;\n  wire  T_1132_13;\n  wire  T_1132_14;\n  wire  T_1132_15;\n  wire  T_1137_0;\n  wire  T_1137_1;\n  wire  T_1137_2;\n  wire  T_1137_3;\n  wire  T_1137_4;\n  wire  T_1137_5;\n  wire  T_1137_6;\n  wire  T_1137_7;\n  wire  T_1137_8;\n  wire  T_1137_9;\n  wire  T_1137_10;\n  wire  T_1137_11;\n  wire  T_1137_12;\n  wire  T_1137_13;\n  wire  T_1137_14;\n  wire  T_1137_15;\n  wire  T_1142_0;\n  wire  T_1142_1;\n  wire  T_1142_2;\n  wire  T_1142_3;\n  wire  T_1142_4;\n  wire  T_1142_5;\n  wire  T_1142_6;\n  wire  T_1142_7;\n  wire  T_1142_8;\n  wire  T_1142_9;\n  wire  T_1142_10;\n  wire  T_1142_11;\n  wire  T_1142_12;\n  wire  T_1142_13;\n  wire  T_1142_14;\n  wire  T_1142_15;\n  wire  T_1147_0;\n  wire  T_1147_1;\n  wire  T_1147_2;\n  wire  T_1147_3;\n  wire  T_1147_4;\n  wire  T_1147_5;\n  wire  T_1147_6;\n  wire  T_1147_7;\n  wire  T_1147_8;\n  wire  T_1147_9;\n  wire  T_1147_10;\n  wire  T_1147_11;\n  wire  T_1147_12;\n  wire  T_1147_13;\n  wire  T_1147_14;\n  wire  T_1147_15;\n  wire  T_1152_0;\n  wire  T_1152_1;\n  wire  T_1152_2;\n  wire  T_1152_3;\n  wire  T_1152_4;\n  wire  T_1152_5;\n  wire  T_1152_6;\n  wire  T_1152_7;\n  wire  T_1152_8;\n  wire  T_1152_9;\n  wire  T_1152_10;\n  wire  T_1152_11;\n  wire  T_1152_12;\n  wire  T_1152_13;\n  wire  T_1152_14;\n  wire  T_1152_15;\n  wire  T_1157_0;\n  wire  T_1157_1;\n  wire  T_1157_2;\n  wire  T_1157_3;\n  wire  T_1157_4;\n  wire  T_1157_5;\n  wire  T_1157_6;\n  wire  T_1157_7;\n  wire  T_1157_8;\n  wire  T_1157_9;\n  wire  T_1157_10;\n  wire  T_1157_11;\n  wire  T_1157_12;\n  wire  T_1157_13;\n  wire  T_1157_14;\n  wire  T_1157_15;\n  wire  T_1162_0;\n  wire  T_1162_1;\n  wire  T_1162_2;\n  wire  T_1162_3;\n  wire  T_1162_4;\n  wire  T_1162_5;\n  wire  T_1162_6;\n  wire  T_1162_7;\n  wire  T_1162_8;\n  wire  T_1162_9;\n  wire  T_1162_10;\n  wire  T_1162_11;\n  wire  T_1162_12;\n  wire  T_1162_13;\n  wire  T_1162_14;\n  wire  T_1162_15;\n  wire  T_1204;\n  wire  T_1205;\n  wire  T_1206;\n  wire  T_1207;\n  wire [7:0] T_1211;\n  wire [7:0] T_1215;\n  wire [7:0] T_1219;\n  wire [7:0] T_1223;\n  wire [15:0] T_1224;\n  wire [15:0] T_1225;\n  wire [31:0] T_1226;\n  wire [7:0] T_1250;\n  wire  T_1252;\n  wire [7:0] T_1254;\n  wire  T_1256;\n  wire  T_1269;\n  wire [7:0] T_1270;\n  wire [31:0] GEN_56;\n  wire [31:0] T_1365;\n  wire  T_1370;\n  wire  T_1374;\n  wire  T_1376;\n  wire  T_1390;\n  wire  T_1410;\n  wire  T_1414;\n  wire  T_1416;\n  wire  T_1430;\n  wire [1:0] GEN_57;\n  wire [1:0] T_1445;\n  wire [1:0] GEN_58;\n  wire [1:0] T_1449;\n  wire  T_1465;\n  wire [7:0] T_1485;\n  wire [30:0] T_1529;\n  wire [31:0] GEN_59;\n  wire [31:0] T_1565;\n  wire [31:0] GEN_60;\n  wire [31:0] T_1569;\n  wire [15:0] T_1570;\n  wire [15:0] T_1574;\n  wire  T_1576;\n  wire  T_1589;\n  wire [15:0] T_1590;\n  wire [15:0] GEN_6;\n  wire  T_1629;\n  wire  GEN_7;\n  wire  T_1669;\n  wire  GEN_8;\n  wire [1:0] GEN_61;\n  wire [1:0] T_1685;\n  wire [1:0] GEN_62;\n  wire [1:0] T_1689;\n  wire [3:0] T_1690;\n  wire [3:0] T_1694;\n  wire  T_1696;\n  wire  T_1709;\n  wire [3:0] T_1710;\n  wire [3:0] GEN_9;\n  wire [19:0] GEN_63;\n  wire [19:0] T_1725;\n  wire [19:0] GEN_64;\n  wire [19:0] T_1729;\n  wire  T_1749;\n  wire  GEN_10;\n  wire  T_1789;\n  wire [3:0] GEN_11;\n  wire [19:0] GEN_65;\n  wire [19:0] T_1805;\n  wire [19:0] GEN_66;\n  wire [19:0] T_1809;\n  wire  T_1829;\n  wire  GEN_12;\n  wire  T_1869;\n  wire  GEN_13;\n  wire [1:0] GEN_67;\n  wire [1:0] T_1885;\n  wire [1:0] GEN_68;\n  wire [1:0] T_1889;\n  wire  T_1891;\n  wire  T_1892;\n  wire  T_1893;\n  wire  T_1895;\n  wire  T_1897;\n  wire  T_1898;\n  wire  T_1899;\n  wire  T_1901;\n  wire  T_1903;\n  wire  T_1904;\n  wire  T_1905;\n  wire  T_1907;\n  wire  T_1909;\n  wire  T_1910;\n  wire  T_1912;\n  wire  T_1914;\n  wire  T_1915;\n  wire  T_1917;\n  wire  T_1919;\n  wire  T_1920;\n  wire  T_1922;\n  wire  T_1924;\n  wire  T_1926;\n  wire  T_1941_0;\n  wire  T_1941_1;\n  wire  T_1941_2;\n  wire  T_1941_3;\n  wire  T_1941_4;\n  wire  T_1941_5;\n  wire  T_1941_6;\n  wire  T_1941_7;\n  wire  T_1954;\n  wire  T_1955;\n  wire  T_1957;\n  wire  T_1960;\n  wire  T_1961;\n  wire  T_1963;\n  wire  T_1966;\n  wire  T_1967;\n  wire  T_1969;\n  wire  T_1972;\n  wire  T_1974;\n  wire  T_1977;\n  wire  T_1979;\n  wire  T_1982;\n  wire  T_1984;\n  wire  T_1988;\n  wire  T_2003_0;\n  wire  T_2003_1;\n  wire  T_2003_2;\n  wire  T_2003_3;\n  wire  T_2003_4;\n  wire  T_2003_5;\n  wire  T_2003_6;\n  wire  T_2003_7;\n  wire  T_2016;\n  wire  T_2017;\n  wire  T_2019;\n  wire  T_2022;\n  wire  T_2023;\n  wire  T_2025;\n  wire  T_2028;\n  wire  T_2029;\n  wire  T_2031;\n  wire  T_2034;\n  wire  T_2036;\n  wire  T_2039;\n  wire  T_2041;\n  wire  T_2044;\n  wire  T_2046;\n  wire  T_2050;\n  wire  T_2065_0;\n  wire  T_2065_1;\n  wire  T_2065_2;\n  wire  T_2065_3;\n  wire  T_2065_4;\n  wire  T_2065_5;\n  wire  T_2065_6;\n  wire  T_2065_7;\n  wire  T_2078;\n  wire  T_2079;\n  wire  T_2081;\n  wire  T_2084;\n  wire  T_2085;\n  wire  T_2087;\n  wire  T_2090;\n  wire  T_2091;\n  wire  T_2093;\n  wire  T_2096;\n  wire  T_2098;\n  wire  T_2101;\n  wire  T_2103;\n  wire  T_2106;\n  wire  T_2108;\n  wire  T_2112;\n  wire  T_2127_0;\n  wire  T_2127_1;\n  wire  T_2127_2;\n  wire  T_2127_3;\n  wire  T_2127_4;\n  wire  T_2127_5;\n  wire  T_2127_6;\n  wire  T_2127_7;\n  wire  T_2138;\n  wire  T_2139;\n  wire  T_2140;\n  wire [1:0] T_2148;\n  wire [2:0] T_2149;\n  wire  GEN_0;\n  wire  GEN_14;\n  wire  GEN_15;\n  wire  GEN_16;\n  wire  GEN_17;\n  wire  GEN_18;\n  wire  GEN_19;\n  wire  GEN_20;\n  wire  GEN_1;\n  wire  GEN_21;\n  wire  GEN_22;\n  wire  GEN_23;\n  wire  GEN_24;\n  wire  GEN_25;\n  wire  GEN_26;\n  wire  GEN_27;\n  wire  T_2164;\n  wire  GEN_2;\n  wire  GEN_28;\n  wire  GEN_29;\n  wire  GEN_30;\n  wire  GEN_31;\n  wire  GEN_32;\n  wire  GEN_33;\n  wire  GEN_34;\n  wire  GEN_3;\n  wire  GEN_35;\n  wire  GEN_36;\n  wire  GEN_37;\n  wire  GEN_38;\n  wire  GEN_39;\n  wire  GEN_40;\n  wire  GEN_41;\n  wire  T_2167;\n  wire  T_2168;\n  wire  T_2169;\n  wire  T_2170;\n  wire  T_2171;\n  wire [7:0] T_2173;\n  wire [1:0] T_2174;\n  wire [1:0] T_2175;\n  wire [3:0] T_2176;\n  wire [1:0] T_2177;\n  wire [1:0] T_2178;\n  wire [3:0] T_2179;\n  wire [7:0] T_2180;\n  wire [7:0] T_2181;\n  wire  T_2192;\n  wire  T_2193;\n  wire  T_2194;\n  wire  T_2195;\n  wire  T_2198;\n  wire  T_2199;\n  wire  T_2201;\n  wire  T_2202;\n  wire  T_2203;\n  wire  T_2205;\n  wire  T_2209;\n  wire  T_2211;\n  wire  T_2214;\n  wire  T_2215;\n  wire  T_2221;\n  wire  T_2225;\n  wire  T_2231;\n  wire  T_2234;\n  wire  T_2235;\n  wire  T_2241;\n  wire  T_2245;\n  wire  T_2251;\n  wire  T_2254;\n  wire  T_2255;\n  wire  T_2261;\n  wire  T_2265;\n  wire  T_2271;\n  wire  T_2274;\n  wire  T_2275;\n  wire  T_2281;\n  wire  T_2285;\n  wire  T_2291;\n  wire  T_2294;\n  wire  T_2295;\n  wire  T_2301;\n  wire  T_2305;\n  wire  T_2311;\n  wire  T_2314;\n  wire  T_2315;\n  wire  T_2321;\n  wire  T_2325;\n  wire  T_2331;\n  wire  T_2352;\n  wire  T_2353;\n  wire  T_2355;\n  wire  T_2356;\n  wire  T_2358;\n  wire  T_2359;\n  wire  T_2361;\n  wire  T_2362;\n  wire  T_2365;\n  wire  T_2368;\n  wire  T_2371;\n  wire  T_2374;\n  wire  T_2376;\n  wire  T_2377;\n  wire  T_2379;\n  wire  T_2380;\n  wire  T_2382;\n  wire  T_2383;\n  wire  T_2385;\n  wire  T_2386;\n  wire  T_2388;\n  wire  T_2390;\n  wire  T_2392;\n  wire  T_2394;\n  wire  T_2396;\n  wire  T_2398;\n  wire  T_2400;\n  wire  T_2402;\n  wire  T_2404;\n  wire  T_2405;\n  wire  T_2407;\n  wire  T_2408;\n  wire  T_2410;\n  wire  T_2411;\n  wire  T_2413;\n  wire  T_2414;\n  wire  T_2417;\n  wire  T_2420;\n  wire  T_2423;\n  wire  T_2426;\n  wire  T_2428;\n  wire  T_2429;\n  wire  T_2431;\n  wire  T_2432;\n  wire  T_2434;\n  wire  T_2435;\n  wire  T_2437;\n  wire  T_2438;\n  wire  T_2444;\n  wire  T_2445;\n  wire  T_2447;\n  wire  T_2448;\n  wire  T_2450;\n  wire  T_2451;\n  wire  T_2453;\n  wire  T_2454;\n  wire  T_2457;\n  wire  T_2460;\n  wire  T_2463;\n  wire  T_2466;\n  wire  T_2468;\n  wire  T_2469;\n  wire  T_2471;\n  wire  T_2472;\n  wire  T_2474;\n  wire  T_2475;\n  wire  T_2477;\n  wire  T_2478;\n  wire  T_2480;\n  wire  T_2482;\n  wire  T_2484;\n  wire  T_2486;\n  wire  T_2488;\n  wire  T_2490;\n  wire  T_2492;\n  wire  T_2494;\n  wire  T_2496;\n  wire  T_2498;\n  wire  T_2500;\n  wire  T_2502;\n  wire  T_2504;\n  wire  T_2506;\n  wire  T_2508;\n  wire  T_2510;\n  wire  T_2523_0;\n  wire  T_2523_1;\n  wire  T_2523_2;\n  wire  T_2523_3;\n  wire  T_2523_4;\n  wire  T_2523_5;\n  wire  T_2523_6;\n  wire  T_2523_7;\n  wire [31:0] T_2546_0;\n  wire [31:0] T_2546_1;\n  wire [31:0] T_2546_2;\n  wire [31:0] T_2546_3;\n  wire [31:0] T_2546_4;\n  wire [31:0] T_2546_5;\n  wire [31:0] T_2546_6;\n  wire [31:0] T_2546_7;\n  wire  GEN_4;\n  wire  GEN_42;\n  wire  GEN_43;\n  wire  GEN_44;\n  wire  GEN_45;\n  wire  GEN_46;\n  wire  GEN_47;\n  wire  GEN_48;\n  wire [31:0] GEN_5;\n  wire [31:0] GEN_49;\n  wire [31:0] GEN_50;\n  wire [31:0] GEN_51;\n  wire [31:0] GEN_52;\n  wire [31:0] GEN_53;\n  wire [31:0] GEN_54;\n  wire [31:0] GEN_55;\n  wire [31:0] T_2559;\n  wire [1:0] T_2560;\n  wire [4:0] T_2562;\n  wire [2:0] T_2563;\n  wire [2:0] T_2574_opcode;\n  wire [1:0] T_2574_param;\n  wire [2:0] T_2574_size;\n  wire [4:0] T_2574_source;\n  wire  T_2574_sink;\n  wire [1:0] T_2574_addr_lo;\n  wire [31:0] T_2574_data;\n  wire  T_2574_error;\n  wire [2:0] GEN_69 = 3'b0;\n  wire [1:0] GEN_70 = 2'b0;\n  wire [2:0] GEN_71 = 3'b0;\n  wire [4:0] GEN_72 = 5'b0;\n  wire [28:0] GEN_73 = 29'b0;\n  wire [3:0] GEN_74 = 4'b0;\n  wire [31:0] GEN_75 = 32'b0;\n  sirv_uarttx u_txm (\n    .clock(txm_clock),\n    .reset(txm_reset),\n    .io_en(txm_io_en),\n    .io_in_ready(txm_io_in_ready),\n    .io_in_valid(txm_io_in_valid),\n    .io_in_bits(txm_io_in_bits),\n    .io_out(txm_io_out),\n    .io_div(txm_io_div),\n    .io_nstop(txm_io_nstop)\n  );\n  sirv_queue_1 u_txq (\n    .clock(txq_clock),\n    .reset(txq_reset),\n    .io_enq_ready(txq_io_enq_ready),\n    .io_enq_valid(txq_io_enq_valid),\n    .io_enq_bits(txq_io_enq_bits),\n    .io_deq_ready(txq_io_deq_ready),\n    .io_deq_valid(txq_io_deq_valid),\n    .io_deq_bits(txq_io_deq_bits),\n    .io_count(txq_io_count)\n  );\n  sirv_uartrx u_rxm (\n    .clock(rxm_clock),\n    .reset(rxm_reset),\n    .io_en(rxm_io_en),\n    .io_in(rxm_io_in),\n    .io_out_valid(rxm_io_out_valid),\n    .io_out_bits(rxm_io_out_bits),\n    .io_div(rxm_io_div)\n  );\n  sirv_queue_1 u_rxq (\n    .clock(rxq_clock),\n    .reset(rxq_reset),\n    .io_enq_ready(rxq_io_enq_ready),\n    .io_enq_valid(rxq_io_enq_valid),\n    .io_enq_bits(rxq_io_enq_bits),\n    .io_deq_ready(rxq_io_deq_ready),\n    .io_deq_valid(rxq_io_deq_valid),\n    .io_deq_bits(rxq_io_deq_bits),\n    .io_count(rxq_io_count)\n  );\n  assign io_interrupts_0_0 = T_920;\n  assign io_in_0_a_ready = T_951_ready;\n  assign io_in_0_b_valid = 1'h0;\n  assign io_in_0_b_bits_opcode = GEN_69;\n  assign io_in_0_b_bits_param = GEN_70;\n  assign io_in_0_b_bits_size = GEN_71;\n  assign io_in_0_b_bits_source = GEN_72;\n  assign io_in_0_b_bits_address = GEN_73;\n  assign io_in_0_b_bits_mask = GEN_74;\n  assign io_in_0_b_bits_data = GEN_75;\n  assign io_in_0_c_ready = 1'h1;\n  assign io_in_0_d_valid = T_990_valid;\n  assign io_in_0_d_bits_opcode = {{2'd0}, T_990_bits_read};\n  assign io_in_0_d_bits_param = T_2574_param;\n  assign io_in_0_d_bits_size = T_2574_size;\n  assign io_in_0_d_bits_source = T_2574_source;\n  assign io_in_0_d_bits_sink = T_2574_sink;\n  assign io_in_0_d_bits_addr_lo = T_2574_addr_lo;\n  assign io_in_0_d_bits_data = T_990_bits_data;\n  assign io_in_0_d_bits_error = T_2574_error;\n  assign io_in_0_e_ready = 1'h1;\n  assign io_port_txd = txm_io_out;\n  assign txm_clock = clock;\n  assign txm_reset = reset;\n  assign txm_io_en = txen;\n  assign txm_io_in_valid = txq_io_deq_valid;\n  assign txm_io_in_bits = txq_io_deq_bits;\n  assign txm_io_div = div;\n  assign txm_io_nstop = nstop;\n  assign txq_clock = clock;\n  assign txq_reset = reset;\n  assign txq_io_enq_valid = T_1269;\n  assign txq_io_enq_bits = T_1270;\n  assign txq_io_deq_ready = txm_io_in_ready;\n  assign rxm_clock = clock;\n  assign rxm_reset = reset;\n  assign rxm_io_en = rxen;\n  assign rxm_io_in = io_port_rxd;\n  assign rxm_io_div = div;\n  assign rxq_clock = clock;\n  assign rxq_reset = reset;\n  assign rxq_io_enq_valid = rxm_io_out_valid;\n  assign rxq_io_enq_bits = rxm_io_out_bits;\n  assign rxq_io_deq_ready = T_1465;\n  assign T_902_rxwm = T_908;\n  assign T_902_txwm = T_907;\n  assign T_906 = 2'h0;\n  assign T_907 = T_906[0];\n  assign T_908 = T_906[1];\n  assign ip_rxwm = T_917;\n  assign ip_txwm = T_916;\n  assign T_916 = txq_io_count < txwm;\n  assign T_917 = rxq_io_count > rxwm;\n  assign T_918 = ip_txwm & ie_txwm;\n  assign T_919 = ip_rxwm & ie_rxwm;\n  assign T_920 = T_918 | T_919;\n  assign T_924 = txq_io_enq_ready == 1'h0;\n  assign T_927 = rxq_io_deq_valid == 1'h0;\n  assign T_951_ready = T_2168;\n  assign T_951_valid = io_in_0_a_valid;\n  assign T_951_bits_read = T_968;\n  assign T_951_bits_index = T_969[9:0];\n  assign T_951_bits_data = io_in_0_a_bits_data;\n  assign T_951_bits_mask = io_in_0_a_bits_mask;\n  assign T_951_bits_extra = T_972;\n  assign T_968 = io_in_0_a_bits_opcode == 3'h4;\n  assign T_969 = io_in_0_a_bits_address[28:2];\n  assign T_970 = io_in_0_a_bits_address[1:0];\n  assign T_971 = {T_970,io_in_0_a_bits_source};\n  assign T_972 = {T_971,io_in_0_a_bits_size};\n  assign T_990_ready = io_in_0_d_ready;\n  assign T_990_valid = T_2171;\n  assign T_990_bits_read = T_1026_bits_read;\n  assign T_990_bits_data = T_2559;\n  assign T_990_bits_extra = T_1026_bits_extra;\n  assign T_1026_ready = T_2170;\n  assign T_1026_valid = T_2169;\n  assign T_1026_bits_read = T_951_bits_read;\n  assign T_1026_bits_index = T_951_bits_index;\n  assign T_1026_bits_data = T_951_bits_data;\n  assign T_1026_bits_mask = T_951_bits_mask;\n  assign T_1026_bits_extra = T_951_bits_extra;\n  assign T_1063 = T_1026_bits_index & 10'h3f8;\n  assign T_1065 = T_1063 == 10'h0;\n  assign T_1071 = T_1026_bits_index ^ 10'h5;\n  assign T_1072 = T_1071 & 10'h3f8;\n  assign T_1074 = T_1072 == 10'h0;\n  assign T_1080 = T_1026_bits_index ^ 10'h1;\n  assign T_1081 = T_1080 & 10'h3f8;\n  assign T_1083 = T_1081 == 10'h0;\n  assign T_1089 = T_1026_bits_index ^ 10'h6;\n  assign T_1090 = T_1089 & 10'h3f8;\n  assign T_1092 = T_1090 == 10'h0;\n  assign T_1098 = T_1026_bits_index ^ 10'h2;\n  assign T_1099 = T_1098 & 10'h3f8;\n  assign T_1101 = T_1099 == 10'h0;\n  assign T_1107 = T_1026_bits_index ^ 10'h3;\n  assign T_1108 = T_1107 & 10'h3f8;\n  assign T_1110 = T_1108 == 10'h0;\n  assign T_1116 = T_1026_bits_index ^ 10'h4;\n  assign T_1117 = T_1116 & 10'h3f8;\n  assign T_1119 = T_1117 == 10'h0;\n  assign T_1127_0 = T_2353;\n  assign T_1127_1 = T_2365;\n  assign T_1127_2 = T_2377;\n  assign T_1127_3 = T_2388;\n  assign T_1127_4 = T_2396;\n  assign T_1127_5 = T_2405;\n  assign T_1127_6 = T_2417;\n  assign T_1127_7 = T_2429;\n  assign T"}
{"text": "_1127_8 = T_2315;\n  assign T_1127_9 = T_2445;\n  assign T_1127_10 = T_2457;\n  assign T_1127_11 = T_2469;\n  assign T_1127_12 = T_2480;\n  assign T_1127_13 = T_2488;\n  assign T_1127_14 = T_2496;\n  assign T_1127_15 = T_2504;\n  assign T_1132_0 = T_2356;\n  assign T_1132_1 = T_2368;\n  assign T_1132_2 = T_2380;\n  assign T_1132_3 = T_2390;\n  assign T_1132_4 = T_2398;\n  assign T_1132_5 = T_2408;\n  assign T_1132_6 = T_2420;\n  assign T_1132_7 = T_2432;\n  assign T_1132_8 = T_2321;\n  assign T_1132_9 = T_2448;\n  assign T_1132_10 = T_2460;\n  assign T_1132_11 = T_2472;\n  assign T_1132_12 = T_2482;\n  assign T_1132_13 = T_2490;\n  assign T_1132_14 = T_2498;\n  assign T_1132_15 = T_2506;\n  assign T_1137_0 = 1'h1;\n  assign T_1137_1 = 1'h1;\n  assign T_1137_2 = 1'h1;\n  assign T_1137_3 = 1'h1;\n  assign T_1137_4 = 1'h1;\n  assign T_1137_5 = 1'h1;\n  assign T_1137_6 = 1'h1;\n  assign T_1137_7 = 1'h1;\n  assign T_1137_8 = 1'h1;\n  assign T_1137_9 = 1'h1;\n  assign T_1137_10 = 1'h1;\n  assign T_1137_11 = 1'h1;\n  assign T_1137_12 = 1'h1;\n  assign T_1137_13 = 1'h1;\n  assign T_1137_14 = 1'h1;\n  assign T_1137_15 = 1'h1;\n  assign T_1142_0 = 1'h1;\n  assign T_1142_1 = 1'h1;\n  assign T_1142_2 = 1'h1;\n  assign T_1142_3 = 1'h1;\n  assign T_1142_4 = 1'h1;\n  assign T_1142_5 = 1'h1;\n  assign T_1142_6 = 1'h1;\n  assign T_1142_7 = 1'h1;\n  assign T_1142_8 = 1'h1;\n  assign T_1142_9 = 1'h1;\n  assign T_1142_10 = 1'h1;\n  assign T_1142_11 = 1'h1;\n  assign T_1142_12 = 1'h1;\n  assign T_1142_13 = 1'h1;\n  assign T_1142_14 = 1'h1;\n  assign T_1142_15 = 1'h1;\n  assign T_1147_0 = 1'h1;\n  assign T_1147_1 = 1'h1;\n  assign T_1147_2 = 1'h1;\n  assign T_1147_3 = 1'h1;\n  assign T_1147_4 = 1'h1;\n  assign T_1147_5 = 1'h1;\n  assign T_1147_6 = 1'h1;\n  assign T_1147_7 = 1'h1;\n  assign T_1147_8 = 1'h1;\n  assign T_1147_9 = 1'h1;\n  assign T_1147_10 = 1'h1;\n  assign T_1147_11 = 1'h1;\n  assign T_1147_12 = 1'h1;\n  assign T_1147_13 = 1'h1;\n  assign T_1147_14 = 1'h1;\n  assign T_1147_15 = 1'h1;\n  assign T_1152_0 = 1'h1;\n  assign T_1152_1 = 1'h1;\n  assign T_1152_2 = 1'h1;\n  assign T_1152_3 = 1'h1;\n  assign T_1152_4 = 1'h1;\n  assign T_1152_5 = 1'h1;\n  assign T_1152_6 = 1'h1;\n  assign T_1152_7 = 1'h1;\n  assign T_1152_8 = 1'h1;\n  assign T_1152_9 = 1'h1;\n  assign T_1152_10 = 1'h1;\n  assign T_1152_11 = 1'h1;\n  assign T_1152_12 = 1'h1;\n  assign T_1152_13 = 1'h1;\n  assign T_1152_14 = 1'h1;\n  assign T_1152_15 = 1'h1;\n  assign T_1157_0 = T_2359;\n  assign T_1157_1 = T_2371;\n  assign T_1157_2 = T_2383;\n  assign T_1157_3 = T_2392;\n  assign T_1157_4 = T_2400;\n  assign T_1157_5 = T_2411;\n  assign T_1157_6 = T_2423;\n  assign T_1157_7 = T_2435;\n  assign T_1157_8 = T_2325;\n  assign T_1157_9 = T_2451;\n  assign T_1157_10 = T_2463;\n  assign T_1157_11 = T_2475;\n  assign T_1157_12 = T_2484;\n  assign T_1157_13 = T_2492;\n  assign T_1157_14 = T_2500;\n  assign T_1157_15 = T_2508;\n  assign T_1162_0 = T_2362;\n  assign T_1162_1 = T_2374;\n  assign T_1162_2 = T_2386;\n  assign T_1162_3 = T_2394;\n  assign T_1162_4 = T_2402;\n  assign T_1162_5 = T_2414;\n  assign T_1162_6 = T_2426;\n  assign T_1162_7 = T_2438;\n  assign T_1162_8 = T_2331;\n  assign T_1162_9 = T_2454;\n  assign T_1162_10 = T_2466;\n  assign T_1162_11 = T_2478;\n  assign T_1162_12 = T_2486;\n  assign T_1162_13 = T_2494;\n  assign T_1162_14 = T_2502;\n  assign T_1162_15 = T_2510;\n  assign T_1204 = T_1026_bits_mask[0];\n  assign T_1205 = T_1026_bits_mask[1];\n  assign T_1206 = T_1026_bits_mask[2];\n  assign T_1207 = T_1026_bits_mask[3];\n  assign T_1211 = T_1204 ? 8'hff : 8'h0;\n  assign T_1215 = T_1205 ? 8'hff : 8'h0;\n  assign T_1219 = T_1206 ? 8'hff : 8'h0;\n  assign T_1223 = T_1207 ? 8'hff : 8'h0;\n  assign T_1224 = {T_1215,T_1211};\n  assign T_1225 = {T_1223,T_1219};\n  assign T_1226 = {T_1225,T_1224};\n  assign T_1250 = T_1226[7:0];\n  assign T_1252 = T_1250 != 8'h0;\n  assign T_1254 = ~ T_1250;\n  assign T_1256 = T_1254 == 8'h0;\n  assign T_1269 = T_1162_0 & T_1256;\n  assign T_1270 = T_1026_bits_data[7:0];\n  assign GEN_56 = {{31'd0}, T_924};\n  assign T_1365 = GEN_56 << 31;\n  assign T_1370 = T_1226[0];\n  assign T_1374 = ~ T_1370;\n  assign T_1376 = T_1374 == 1'h0;\n  assign T_1390 = T_1026_bits_data[0];\n  assign T_1410 = T_1226[1];\n  assign T_1414 = ~ T_1410;\n  assign T_1416 = T_1414 == 1'h0;\n  assign T_1430 = T_1026_bits_data[1];\n  assign GEN_57 = {{1'd0}, ip_rxwm};\n  assign T_1445 = GEN_57 << 1;\n  assign GEN_58 = {{1'd0}, ip_txwm};\n  assign T_1449 = GEN_58 | T_1445;\n  assign T_1465 = T_1157_5 & T_1252;\n  assign T_1485 = rxq_io_deq_bits;\n  assign T_1529 = {{23'd0}, T_1485};\n  assign GEN_59 = {{31'd0}, T_927};\n  assign T_1565 = GEN_59 << 31;\n  assign GEN_60 = {{1'd0}, T_1529};\n  assign T_1569 = GEN_60 | T_1565;\n  assign T_1570 = T_1226[15:0];\n  assign T_1574 = ~ T_1570;\n  assign T_1576 = T_1574 == 16'h0;\n  assign T_1589 = T_1162_8 & T_1576;\n  assign T_1590 = T_1026_bits_data[15:0];\n  assign GEN_6 = T_1589 ? T_1590 : div;\n  assign T_1629 = T_1162_9 & T_1376;\n  assign GEN_7 = T_1629 ? T_1390 : txen;\n  assign T_1669 = T_1162_10 & T_1416;\n  assign GEN_8 = T_1669 ? T_1430 : nstop;\n  assign GEN_61 = {{1'd0}, nstop};\n  assign T_1685 = GEN_61 << 1;\n  assign GEN_62 = {{1'd0}, txen};\n  assign T_1689 = GEN_62 | T_1685;\n  assign T_1690 = T_1226[19:16];\n  assign T_1694 = ~ T_1690;\n  assign T_1696 = T_1694 == 4'h0;\n  assign T_1709 = T_1162_11 & T_1696;\n  assign T_1710 = T_1026_bits_data[19:16];\n  assign GEN_9 = T_1709 ? T_1710 : txwm;\n  assign GEN_63 = {{16'd0}, txwm};\n  assign T_1725 = GEN_63 << 16;\n  assign GEN_64 = {{18'd0}, T_1689};\n  assign T_1729 = GEN_64 | T_1725;\n  assign T_1749 = T_1162_12 & T_1376;\n  assign GEN_10 = T_1749 ? T_1390 : rxen;\n  assign T_1789 = T_1162_13 & T_1696;\n  assign GEN_11 = T_1789 ? T_1710 : rxwm;\n  assign GEN_65 = {{16'd0}, rxwm};\n  assign T_1805 = GEN_65 << 16;\n  assign GEN_66 = {{19'd0}, rxen};\n  assign T_1809 = GEN_66 | T_1805;\n  assign T_1829 = T_1162_14 & T_1376;\n  assign GEN_12 = T_1829 ? T_1390 : ie_txwm;\n  assign T_1869 = T_1162_15 & T_1416;\n  assign GEN_13 = T_1869 ? T_1430 : ie_rxwm;\n  assign GEN_67 = {{1'd0}, ie_rxwm};\n  assign T_1885 = GEN_67 << 1;\n  assign GEN_68 = {{1'd0}, ie_txwm};\n  assign T_1889 = GEN_68 | T_1885;\n  assign T_1891 = T_1065 == 1'h0;\n  assign T_1892 = T_1137_2 & T_1137_1;\n  assign T_1893 = T_1892 & T_1137_0;\n  assign T_1895 = T_1891 | T_1893;\n  assign T_1897 = T_1083 == 1'h0;\n  assign T_1898 = T_1137_7 & T_1137_6;\n  assign T_1899 = T_1898 & T_1137_5;\n  assign T_1901 = T_1897 | T_1899;\n  assign T_1903 = T_1101 == 1'h0;\n  assign T_1904 = T_1137_11 & T_1137_10;\n  assign T_1905 = T_1904 & T_1137_9;\n  assign T_1907 = T_1903 | T_1905;\n  assign T_1909 = T_1110 == 1'h0;\n  assign T_1910 = T_1137_13 & T_1137_12;\n  assign T_1912 = T_1909 | T_1910;\n  assign T_1914 = T_1119 == 1'h0;\n  assign T_1915 = T_1137_15 & T_1137_14;\n  assign T_1917 = T_1914 | T_1915;\n  assign T_1919 = T_1074 == 1'h0;\n  assign T_1920 = T_1137_4 & T_1137_3;\n  assign T_1922 = T_1919 | T_1920;\n  assign T_1924 = T_1092 == 1'h0;\n  assign T_1926 = T_1924 | T_1137_8;\n  assign T_1941_0 = T_1895;\n  assign T_1941_1 = T_1901;\n  assign T_1941_2 = T_1907;\n  assign T_1941_3 = T_1912;\n  assign T_1941_4 = T_1917;\n  assign T_1941_5 = T_1922;\n  assign T_1941_6 = T_1926;\n  assign T_1941_7 = 1'h1;\n  assign T_1954 = T_1142_2 & T_1142_1;\n  assign T_1955 = T_1954 & T_1142_0;\n  assign T_1957 = T_1891 | T_1955;\n  assign T_1960 = T_1142_7 & T_1142_6;\n  assign T_1961 = T_1960 & T_1142_5;\n  assign T_1963 = T_1897 | T_1961;\n  assign T_1966 = T_1142_11 & T_1142_10;\n  assign T_1967 = T_1966 & T_1142_9;\n  assign T_1969 = T_1903 | T_1967;\n  assign T_1972 = T_1142_13 & T_1142_12;\n  assign T_1974 = T_1909 | T_1972;\n  assign T_1977 = T_1142_15 & T_1142_14;\n  assign T_1979 = T_1914 | T_1977;\n  assign T_1982 = T_1142_4 & T_1142_3;\n  assign T_1984 = T_1919 | T_1982;\n  assign T_1988 = T_1924 | T_1142_8;\n  assign T_2003_0 = T_1957;\n  assign T_2003_1 = T_1963;\n  assign T_2003_2 = T_1969;\n  assign T_2003_3 = T_1974;\n  assign T_2003_4 = T_1979;\n  assign T_2003_5 = T_1984;\n  assign T_2003_6 = T_1988;\n  assign T_2003_7 = 1'h1;\n  assign T_2016 = T_1147_2 & T_1147_1;\n  assign T_2017 = T_2016 & T_1147_0;\n  assign T_2019 = T_1891 | T_2017;\n  assign T_2022 = T_1147_7 & T_1147_6;\n  assign T_2023 = T_2022 & T_1147_5;\n  assign T_2025 = T_1897 | T_2023;\n  assign T_2028 = T_1147_11 & T_1147_10;\n  assign T_2029 = T_2028 & T_1147_9;\n  assign T_2031 = T_1903 | T_2029;\n  assign T_2034 = T_1147_13 & T_1147_12;\n  assign T_2036 = T_1909 | T_2034;\n  assign T_2039 = T_1147_15 & T_1147_14;\n  assign T_2041 = T_1914 | T_2039;\n  assign T_2044 = T_1147_4 & T_1147_3;\n  assign T_2046 = T_1919 | T_2044;\n  assign T_2050 = T_1924 | T_1147_8;\n  assign T_2065_0 = T_2019;\n  assign T_2065_1 = T_2025;\n  assign T_2065_2 = T_2031;\n  assign T_2065_3 = T_2036;\n  assign T_2065_4 = T_2041;\n  assign T_2065_5 = T_2046;\n  assign T_2065_6 = T_2050;\n  assign T_2065_7 = 1'h1;\n  assign T_2078 = T_1152_2 & T_1152_1;\n  assign T_2079 = T_2078 & T_1152_0;\n  assign T_2081 = T_1891 | T_2079;\n  assign T_2084 = T_1152_7 & T_1152_6;\n  assign T_2085 = T_2084 & T_1152_5;\n  assign T_2087 = T_1897 | T_2085;\n  assign T_2090 = T_1152_11 & T_1152_10;\n  assign T_2091 = T_2090 & T_1152_9;\n  assign T_2093 = T_1903 | T_2091;\n  assign T_2096 = T_1152_13 & T_1152_12;\n  assign T_2098 = T_1909 | T_2096;\n  assign T_2101 = T_1152_15 & T_1152_14;\n  assign T_2103 = T_1914 | T_2101;\n  assign T_2106 = T_1152_4 & T_1152_3;\n  assign T_2108 = T_1919 | T_2106;\n  assign T_2112 = T_1924 | T_1152_8;\n  assign T_2127_0 = T_2081;\n  assign T_2127_1 = T_2087;\n  assign T_2127_2 = T_2093;\n  assign T_2127_3 = T_2098;\n  assign T_2127_4 = T_2103;\n  assign T_2127_5 = T_2108;\n  assign T_2127_6 = T_2112;\n  assign T_2127_7 = 1'h1;\n  assign T_2138 = T_1026_bits_index[0];\n  assign T_2139 = T_1026_bits_index[1];\n  assign T_2140 = T_1026_bits_index[2];\n  assign T_2148 = {T_2140,T_2139};\n  assign T_2149 = {T_2148,T_2138};\n  assign GEN_0 = GEN_20;\n  assign GEN_14 = 3'h1 == T_2149 ? T_1941_1 : T_1941_0;\n  assign GEN_15 = 3'h2 == T_2149 ? T_1941_2 : GEN_14;\n  assign GEN_16 = 3'h3 == T_2149 ? T_1941_3 : GEN_15;\n  assign GEN_17 = 3'h4 == T_2149 ? T_1941_4 : GEN_16;\n  assign GEN_18 = 3'h5 == T_2149 ? T_1941_5 : GEN_17;\n  assign GEN_19 = 3'h6 == T_2149 ? T_1941_6 : GEN_18;\n  assign GEN_20 = 3'h7 == T_2149 ? T_1941_7 : GEN_19;\n  assign GEN_1 = GEN_27;\n  assign GEN_21 = 3'h1 == T_2149 ? T_2003_1 : T_2003_0;\n  assign GEN_22 = 3'h2 == T_2149 ? T_2003_2 : GEN_21;\n  assign GEN_23 = 3'h3 == T_2149 ? T_2003_3 : GEN_22;\n  assign GEN_24 = 3'h4 == T_2149 ? T_2003_4 : GEN_23;\n  assign GEN_25 = 3'h5 == T_2149 ? T_2003_5 : GEN_24;\n  assign GEN_26 = 3'h6 == T_2149 ? T_2003_6 : GEN_25;\n  assign GEN_27 = 3'h7 == T_2149 ? T_2003_7 : GEN_26;\n  assign T_2164 = T_1026_bits_read ? GEN_0 : GEN_1;\n  assign GEN_2 = GEN_34;\n  assign GEN_28 = 3'h1 == T_2149 ? T_2065_1 : T_2065_0;\n  assign GEN_29 = 3'h2 == T_2149 ? T_2065_2 : GEN_28;\n  assign GEN_30 = 3'h3 == T_2149 ? T_2065_3 : GEN_29;\n  assign GEN_31 = 3'h4 == T_2149 ? T_2065_4 : GEN_30;\n  assign GEN_32 = 3'h5 == T_2149 ? T_2065_5 : GEN_31;\n  assign GEN_33 = 3'h6 == T_2149 ? T_2065_6 : GEN_32;\n  assign GEN_34 = 3'h7 == T_2149 ? T_2065_7 : GEN_33;\n  assign GEN_3 = GEN_41;\n  assign GEN_35 = 3'h1 == T_2149 ? T_2127_1 : T_2127_0;\n  assign GEN_36 = 3'h2 == T_2149 ? T_2127_2 : GEN_35;\n  assign GEN_37 = 3'h3 == T_2149 ? T_2127_3 : GEN_36;\n  assign GEN_38 = 3'h4 == T_2149 ? T_2127_4 : GEN_37;\n  assign GEN_39 = 3'h5 == T_2149 ? T_2127_5 : GEN_38;\n  assign GEN_40 = 3'h6 == T_2149 ? T_2127_6 : GEN_39;\n  assign GEN_41 = 3'h7 == T_2149 ? T_2127_7 : GEN_40;\n  assign T_2167 = T_1026_bits_read ? GEN_2 : GEN_3;\n  assign T_2168 = T_1026_ready & T_2164;\n  assign T_2169 = T_951_valid & T_2164;\n  assign T_2170 = T_990_ready & T_2167;\n  assign T_2171 = T_1026_valid & T_2167;\n  assign T_2173 = 8'h1 << T_2149;\n  assign T_2174 = {T_1083,T_1065};\n  assign T_2175 = {T_1110,T_1101};\n  assign T_2176 = {T_2175,T_2174};\n  assign T_2177 = {T_1074,T_1119};\n  assign T_2178 = {1'h1,T_1092};\n  assign T_2179 = {T_2178,T_2177};\n  assign T_2180 = {T_2179,T_2176};\n  assign T_2181 = T_2173 & T_2180;\n  assign T_2192 = T_951_valid & T_1026_ready;\n  assign T_2193 = T_2192 & T_1026_bits_read;\n  assign T_2194 = T_2181[0];\n  assign T_2195 = T_2193 & T_2194;\n  assign T_2198 = T_1026_bits_read == 1'h0;\n  assign T_2199 = T_2192 & T_2198;\n  assign T_2201 = T_2199 & T_2194;\n  assign T_2202 = T_1026_valid & T_990_ready;\n  assign T_2203 = T_2202 & T_1026_bits_read;\n  assign T_2205 = T_2203 & T_2194;\n  assign T_2209 = T_2202 & T_2198;\n  assign T_2211 = T_2209 & T_2194;\n  assign T_2214 = T_2181[1];\n  assign T_2215 = T_2193 & T_2214;\n  assign T_2221 = T_2199 & T_2214;\n  assign T_2225 = T_2203 & T_2214;\n  assign T_2231 = T_2209 & T_2214;\n  assign T_2234 = T_2181[2];\n  assign T_2235 = T_2193 & T_2234;\n  assign T_2241 = T_2199 & T_2234;\n  assign T_2245 = T_2203 & T_2234;\n  assign T_2251 = T_2209 & T_2234;\n  assign T_2254 = T_2181[3];\n  assign T_2255 = T_2193 & T_2254;\n  assign T_2261 = T_2199 & T_2254;\n  assign T_2265 = T_2203 & T_2254;\n  assign T_2271 = T_2209 & T_2254;\n  assign T_2274 = T_2181[4];\n  assign T_2275 = T_2193 & T_2274;\n  assign T_2281 = T_2199 & T_2274;\n  assign T_2285 = T_2203 & T_2274;\n  assign T_2291 = T_2209 & T_2274;\n  assign T_2294 = T_2181[5];\n  assign T_2295 = T_2193 & T_2294;\n  assign T_2301 = T_2199 & T_2294;\n  assign T_2305 = T_2203 & T_2294;\n  assign T_2311 = T_2209 & T_2294;\n  assign T_2314 = T_2181[6];\n  assign T_2315 = T_2193 & T_2314;\n  assign T_2321 = T_2199 & T_2314;\n  assign T_2325 = T_2203 & T_2314;\n  assign T_2331 = T_2209 & T_2314;\n  assign T_2352 = T_2195 & T_1137_2;\n  assign T_2353 = T_2352 & T_1137_1;\n  assign T_2355 = T_2201 & T_1142_2;\n  assign T_2356 = T_2355 & T_1142_1;\n  assign T_2358 = T_2205 & T_1147_2;\n  assign T_2359 = T_2358 & T_1147_1;\n  assign T_2361 = T_2211 & T_1152_2;\n  assign T_2362 = T_2361 & T_1152_1;\n  assign T_2365 = T_2352 & T_1137_0;\n  assign T_2368 = T_2355 & T_1142_0;\n  assign T_2371 = T_2358 & T_1147_0;\n  assign T_2374 = T_2361 & T_1152_0;\n  assign T_2376 = T_2195 & T_1137_1;\n  assign T_2377 = T_2376 & T_1137_0;\n  assign T_2379 = T_2201 & T_1142_1;\n  assign T_2380 = T_2379 & T_1142_0;\n  assign T_2382 = T_2205 & T_1147_1;\n  assign T_2383 = T_2382 & T_1147_0;\n  assign T_2385 = T_2211 & T_1152_1;\n  assign T_2386 = T_2385 & T_1152_0;\n  assign T_2388 = T_2295 & T_1137_4;\n  assign T_2390 = T_2301 & T_1142_4;\n  assign T_2392 = T_2305 & T_1147_4;\n  assign T_2394 = T_2311 & T_1152_4;\n  assign T_2396 = T_2295 & T_1137_3;\n  assign T_2398 = T_2301 & T_1142_3;\n  assign T_2400 = T_2305 & T_1147_3;\n  assign T_2402 = T_2311 & T_1152_3;\n  assign T_2404 = T_2215 & T_1137_7;\n  assign T_2405 = T_2404 & T_1137_6;\n  assign T_2407 = T_2221 & T_1142_7;\n  assign T_2408 = T_2407 & T_1142_6;\n  assign T_2410 = T_2225 & T_1147_7;\n  assign T_2411 = T_2410 & T_1147_6;\n  assign T_2413 = T_2231 & T_1152_7;\n  assign T_2414 = T_2413 & T_1152_6;\n  assign T_2417 = T_2404 & T_1137_5;\n  assign T_2420 = T_2407 & T_1142_5;\n  assign T_2423 = T_2410 & T_1147_5;\n  assign T_2426 = T_2413 & T_1152_5;\n  assign T_2428 = T_2215 & T_1137_6;\n  assign T_2429 = T_2428 & T_1137_5;\n  assign T_2431 = T_2221 & T_1142_6;\n  assign T_2432 = T_2431 & T_1142_5;\n  assign T_2434 = T_2225 & T_1147_6;\n  assign T_2435 = T_2434 & T_1147_5;\n  assign T_2437 = T_2231 & T_1152_6;\n  assign T_2438 = T_2437 & T_1152_5;\n  assign T_2444 = T_2235 & T_1137_11;\n  assign T_2445 = T_2444 & T_1137_10;\n  assign T_2447 = T_2241 & T_1142_11;\n  assign T_2448 = T_2447 & T_1142_10;\n  assign T_2450 = T_2245 & T_1147_11;\n  assign T_2451 = T_2450 & T_1147_10;\n  assign T_2453 = T_2251 & T_1152_11;\n  assign T_2454 = T_2453 & T_1152_10;\n  assign T_2457 = T_2444 & T_1137_9;\n  assign T_2460 = T_2447 & T_1142_9;\n  assign T_2463 = T_2450 & T_1147_9;\n  assign T_2466 = T_2453 & T_1152_9;\n  assign T_2468 = T_2235 & T_1137_10;\n  assign T_2469 = T_2468 & T_1137_9;\n  assign T_2471 = T_2241 & T_1142_10;\n  assign T_2472 = T_2471 & T_1142_9;\n  assign T_2474 = T_2245 & T_1147_10;\n  assign T_2475 = T_2474 & T_1147_9;\n  assign T_2477 = T_2251 & T_1152_10;\n  assign T_2478 = T_2477 & T_1152_9;\n  assign T_2480 = T_2255 & T_1137_13;\n  assign T_2482 = T_2261 & T_1142_13;\n  assign T_2484 = T_2265 & T_1147_13;\n  assign T_2486 = T_2271 & T_1152_13;\n  assign T_2488 = T_2255 & T_1137_12;\n  assign T_2490 = T_2261 & T_1142_12;\n  assign T_2492 = T_2265 & T_1147_12;\n  assign T_2494 = T_2271 & T_1152_12;\n  assign T_2496 = T_2275 & T_1137_15;\n  assign T_2498 = T_2281 & T_1142_15;\n  assign T_2500 = T_2285 & T_1147_15;\n  assign T_2502 = T_2291 & T_1152_15;\n  assign T_2504 = T_2275 & T_1137_14;\n  assign T_2506 = T_2281 & T_1142_14;\n  assign T_2508 = T_2285 & T_1147_14;\n  assign T_2510 = T_2291 & T_1152_14;\n  assign T_2523_0 = T_1065;\n  assign T_2523_1 = T_1083;\n  assign T_2523_2 = T_1101;\n  assign T_2523_3 = T_1110;\n  assign T_2523_4 = T_1119;\n  assign T_2523_5 = T_1074;\n  assign T_2523_6 = T_1092;\n  assign T_2523_7 = 1'h1;\n  assign T_2546_0 = T_1365;\n  assign T_2546_1 = T_1569;\n  assign T_2546_2 = {{12'd0}, T_1729};\n  assign T_2546_3 = {{12'd0}, T_1809};\n  assign T_2546_4 = {{30'd0}, T_1889};\n  assign T_2546_5 = {{30'd0}, T_1449};\n  assign T_2546_6 = {{16'd0}, div};\n  assign T_2546_7 = 32'h0;\n  assign GEN_4 = GEN_48;\n  assign GEN_42 = 3'h1 == T_2149 ? T_2523_1 : T_2523_0;\n  assign GEN_43 = 3'h2 == T_2149 ? T_2523_2 : GEN_42;\n  assign GEN_44 = 3'h3 == T_2149 ? T_2523_3 : GEN_43;\n  assign GEN_45 = 3'h4 == T_2149 ? T_2523_4 : GEN_44;\n  assign GEN_46 = 3'h5 == T_2149 ? T_2523_5 : GEN_45;\n  assign GEN_47 = 3'h6 == T_2149 ? T_2523_6 : GEN_46;\n  assign GEN_48 = 3'h7 == T_2149 ? T_2523_7 : GEN_47;\n  assign GEN_5 = GEN_55;\n  assign GEN_49 = 3'h1 == T_2149 ? T_2546_1 : T_2546_0;\n  assign GEN_50 = 3'h2 == T_2149 ? T_2546_2 : GEN_49;\n  assign GEN_51 = 3'h3 == T_2149 ? T_2546_3 : GEN_50;\n  assign GEN_52 = 3'h4 == T_2149 ? T_2546_4 : GEN_51;\n  assign GEN_53 = 3'h5 == T_2149 ? T_2546_5 : GEN_52;\n  assign GEN_54 = 3'h6 == T_2149 ? T_2546_6 : GEN_53;\n  assign GEN_55 = 3'h7 == T_2149 ? T_2546_7 : GEN_54;\n  assign T_2559 = GEN_4 ? GEN_5 : 32'h0;\n  assign T_2560 = T_990_bits_extra[9:8];\n  assign T_2562 = T_990_bits_extra[7:3];\n  assign T_2563 = T_990_bits_extra[2:0];\n  assign T_2574_opcode = 3'h0;\n  assign T_2574_param = 2'h0;\n  assign T_2574_size = T_2563;\n  assign T_2574_source = T_2562;\n  assign T_2574_sink = 1'h0;\n  assign T_2574_addr_lo = T_2560;\n  assign T_2574_data = 32'h0;\n  assign T_2574_error = 1'h0;\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      div <= 16'h21e;\n    end else begin\n      if (T_1589) begin\n        div <= T_1590;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      txen <= 1'h0;\n    end else begin\n      if (T_1629) begin\n        txen <= T_1390;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      rxen <= 1'h0;\n    end else begin\n      if (T_1749) begin\n        rxen <= T_1390;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      txwm <= 4'h0;\n    end else begin\n      if (T_1709) begin\n        txwm <= T_1710;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      rxwm <= 4'h0;\n    end else begin\n      if (T_1789) begin\n        rxwm <= T_1710;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      nstop <= 1'h0;\n    end else begin\n      if (T_1669) begin\n        nstop <= T_1430;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ie_rxwm <= T_902_rxwm;\n    end else begin\n      if (T_1869) begin\n        ie_rxwm <= T_1430;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      ie_txwm <= T_902_txwm;\n    end else begin\n      if (T_1829) begin\n        ie_txwm <= T_1390;\n      end\n    end\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_uartgpioport(\n  input   clock,\n  input   reset,\n  input   io_uart_txd,\n  output  io_uart_rxd,\n  input   io_pins_rxd_i_ival,\n  output  io_pins_rxd_o_oval,\n  output  io_pins_rxd_o_oe,\n  output  io_pins_rxd_o_ie,\n  output  io_pins_rxd_o_pue,\n  output  io_pins_rxd_o_ds,\n  input   io_pins_txd_i_ival,\n  output  io_pins_txd_o_oval,\n  output  io_pins_txd_o_oe,\n  output  io_pins_txd_o_ie,\n  output  io_pins_txd_o_pue,\n  output  io_pins_txd_o_ds\n);\n  assign io_uart_rxd = io_pins_rxd_i_ival;\n  assign io_pins_rxd_o_oval = 1'h0;\n  assign io_pins_rxd_o_oe = 1'h0;\n  assign io_pins_rxd_o_ie = 1'h1;\n  assign io_pins_rxd_o_pue = 1'h0;\n  assign io_pins_rxd_o_ds = 1'h0;\n  assign io_pins_txd_o_oval = io_uart_txd;\n  assign io_pins_txd_o_oe = 1'h1;\n  assign io_pins_txd_o_ie = 1'h0;\n  assign io_pins_txd_o_pue = 1'h0;\n  assign io_pins_txd_o_ds = 1'h0;\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_uartrx(\n  input   clock,\n  input   reset,\n  input   io_en,\n  input   io_in,\n  output  io_out_valid,\n  output [7:0] io_out_bits,\n  input  [15:0] io_div\n);\n  reg [1:0] debounce;\n  reg [31:0] GEN_7;\n  wire  debounce_max;\n  wire  debounce_min;\n  reg [11:0] prescaler;\n  reg [31:0] GEN_20;\n  wire  start;\n  wire  busy;\n  wire  T_21;\n  wire  pulse;\n  wire [12:0] T_23;\n  wire [11:0] T_24;\n  wire [11:0] GEN_0;\n  wire  T_25;\n  wire [11:0] T_26;\n  wire [11:0] GEN_1;\n  reg [2:0] sample;\n  reg [31:0] GEN_23;\n  wire  T_28;\n  wire  T_29;\n  wire  T_30;\n  wire  T_31;\n  wire  T_32;\n  wire  T_33;\n  wire  T_34;\n  wire  T_35;\n  wire [3:0] T_36;\n  wire [3:0] GEN_2;\n  reg [4:0] timer;\n  reg [31:0] GEN_28;\n  reg [3:0] counter;\n  reg [31:0] GEN_43;\n  reg [7:0] shifter;\n  reg [31:0] GEN_44;\n  wire  T_41;\n  wire  expire;\n  wire  sched;\n  wire [5:0] T_44;\n  wire [4:0] T_45;\n  wire [4:0] GEN_3;\n  wire [4:0] GEN_4;\n  reg  valid;\n  reg [31:0] GEN_45;\n  reg [1:0] state;\n  reg [31:0] GEN_46;\n  wire  T_50;\n  wire  T_52;\n  wire  T_54;\n  wire  T_56;\n  wire  T_57;\n  wire [2:0] T_59;\n  wire [1:0] T_60;\n  wire [1:0] GEN_5;\n  wire [2:0] T_64;\n  wire [1:0] T_65;\n  wire [1:0] GEN_6;\n  wire [4:0] GEN_8;\n  wire [1:0] GEN_9;\n  wire [1:0] GEN_10;\n  wire  GEN_11;\n  wire [4:0] GEN_12;\n  wire [1:0] GEN_13;\n  wire [1:0] GEN_14;\n  wire  GEN_15;\n  wire [4:0] GEN_16;\n  wire  T_68;\n  wire [1:0] GEN_17;\n  wire  T_72;\n  wire [1:0] GEN_18;\n  wire [3:0] GEN_19;\n  wire [1:0] GEN_21;\n  wire [3:0] GEN_22;\n  wire  GEN_24;\n  wire [1:0] GEN_25;\n  wire [3:0] GEN_26;\n  wire  T_74;\n  wire [4:0] T_77;\n  wire [3:0] T_78;\n  wire  T_80;\n  wire [1:0] GEN_27;\n  wire  T_83;\n  wire [6:0] T_84;\n  wire [7:0] T_85;\n  wire [7:0] GEN_29;\n  wire  GEN_30;\n  wire [3:0] GEN_31;\n  wire [1:0] GEN_32;\n  wire  GEN_33;\n  wire [7:0] GEN_34;\n  wire  GEN_35;\n  wire  GEN_36;\n  wire [3:0] GEN_37;\n  wire [1:0] GEN_38;\n  wire  GEN_39;\n  wire [7:0] GEN_40;\n  wire  GEN_41;\n  wire  T_88;\n  wire [1:0] GEN_42;\n  assign io_out_valid = valid;\n  assign io_out_bits = shifter;\n  assign debounce_max = debounce == 2'h3;\n  assign debounce_min = debounce == 2'h0;\n  assign start = GEN_15;\n  assign busy = GEN_36;\n  assign T_21 = prescaler == 12'h0;\n  assign pulse = T_21 & busy;\n  assign T_23 = prescaler - 12'h1;\n  assign T_24 = T_23[11:0];\n  assign GEN_0 = busy ? T_24 : prescaler;\n  assign T_25 = start | pulse;\n  assign T_26 = io_div[15:4];\n  assign GEN_1 = T_25 ? T_26 : GEN_0;\n  assign T_28 = sample[0];\n  assign T_29 = sample[1];\n  assign T_30 = sample[2];\n  assign T_31 = T_28 & T_29;\n  assign T_32 = T_28 & T_30;\n  assign T_33 = T_31 | T_32;\n  assign T_34 = T_29 & T_30;\n  assign T_35 = T_33 | T_34;\n  assign T_36 = {sample,io_in};\n  assign GEN_2 = pulse ? T_36 : {{1'd0}, sample};\n  assign T_41 = timer == 5'h0;\n  assign expire = T_41 & pulse;\n  assign sched = GEN_41;\n  assign T_44 = timer - 5'h1;\n  assign T_45 = T_44[4:0];\n  assign GEN_3 = pulse ? T_45 : timer;\n  assign GEN_4 = sched ? 5'hf : GEN_3;\n  assign T_50 = 2'h0 == state;\n  assign T_52 = io_in == 1'h0;\n  assign T_54 = T_52 == 1'h0;\n  assign T_56 = debounce_min == 1'h0;\n  assign T_57 = T_54 & T_56;\n  assign T_59 = debounce - 2'h1;\n  assign T_60 = T_59[1:0];\n  assign GEN_5 = T_57 ? T_60 : debounce;\n  assign T_64 = debounce + 2'h1;\n  assign T_65 = T_64[1:0];\n  assign GEN_6 = debounce_max ? 2'h1 : state;\n  assign GEN_8 = debounce_max ? 5'h8 : GEN_4;\n  assign GEN_9 = T_52 ? T_65 : GEN_5;\n  assign GEN_10 = T_52 ? GEN_6 : state;\n  assign GEN_11 = T_52 ? debounce_max : 1'h0;\n  assign GEN_12 = T_52 ? GEN_8 : GEN_4;\n  assign GEN_13 = T_50 ? GEN_9 : debounce;\n  assign GEN_14 = T_50 ? GEN_10 : state;\n  assign GEN_15 = T_50 ? GEN_11 : 1'h0;\n  assign GEN_16 = T_50 ? GEN_12 : GEN_4;\n  assign T_68 = 2'h1 == state;\n  assign GEN_17 = T_35 ? 2'h0 : GEN_14;\n  assign T_72 = T_35 == 1'h0;\n  assign GEN_18 = T_72 ? 2'h2 : GEN_17;\n  assign GEN_19 = T_72 ? 4'h8 : counter;\n  assign GEN_21 = expire ? GEN_18 : GEN_14;\n  assign GEN_22 = expire ? GEN_19 : counter;\n  assign GEN_24 = T_68 ? expire : 1'h0;\n  assign GEN_25 = T_68 ? GEN_21 : GEN_14;\n  assign GEN_26 = T_68 ? GEN_22 : counter;\n  assign T_74 = 2'h2 == state;\n  assign T_77 = counter - 4'h1;\n  assign T_78 = T_77[3:0];\n  assign T_80 = counter == 4'h0;\n  assign GEN_27 = T_80 ? 2'h0 : GEN_25;\n  assign T_83 = T_80 == 1'h0;\n  assign T_84 = shifter[7:1];\n  assign T_85 = {T_35,T_84};\n  assign GEN_29 = T_83 ? T_85 : shifter;\n  assign GEN_30 = T_83 ? 1'h1 : GEN_24;\n  assign GEN_31 = expire ? T_78 : GEN_26;\n  assign GEN_32 = expire ? GEN_27 : GEN_25;\n  assign GEN_33 = expire ? T_80 : 1'h0;\n  assign GEN_34 = expire ? GEN_29 : shifter;\n  assign GEN_35 = expire ? GEN_30 : GEN_24;\n  assign GEN_36 = T_74 ? 1'h1 : T_68;\n  assign GEN_37 = T_74 ? GEN_31 : GEN_26;\n  assign GEN_38 = T_74 ? GEN_32 : GEN_25;\n  assign GEN_39 = T_74 ? GEN_33 : 1'h0;\n  assign GEN_40 = T_74 ? GEN_34 : shifter;\n  assign GEN_41 = T_74 ? GEN_35 : GEN_24;\n  assign T_88 = io_en == 1'h0;\n  assign GEN_42 = T_88 ? 2'h0 : GEN_13;\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      debounce <= 2'h0;\n    end else begin\n      if (T_88) begin\n        debounce <= 2'h0;\n      end else begin\n        if (T_50) begin\n          if (T_52) begin\n            debounce <= T_65;\n          end else begin\n            if (T_57) begin\n              debounce <= T_60;\n            end\n          end\n        end\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      prescaler <= 12'h0;\n    end else begin\n      if (T_25) begin\n        prescaler <= T_26;\n      end else begin\n        if (busy) begin\n          prescaler <= T_24;\n        end\n      end\n    end\n\n\n  always @(posedge clock or posedge reset)\n  if (reset) begin\n\n    sample <= 3'b0;\n    timer <= 5'h0;\n    counter <= 4'b0;\n    shifter <= 8'b0;\n\n  end\n  else begin\n    sample <= GEN_2[2:0];\n    if (T_50) begin\n      if (T_52) begin\n        if (debounce_max) begin\n          timer <= 5'h8;\n        end else begin\n          if (sched) begin\n            timer <= 5'hf;\n          end else begin\n            if (pulse) begin\n              timer <= T_45;\n            end\n          end\n        end\n      end else begin\n        if (sched) begin\n          timer <= 5'hf;\n        end else begin\n          if (pulse) begin\n            timer <= T_45;\n          end\n        end\n      end\n    end else begin\n      if (sched) begin\n        timer <= 5'hf;\n      end else begin\n        if (pulse) begin\n          timer <= T_45;\n        end\n      end\n    end\n    if (T_74) begin\n      if (expire) begin\n        counter <= T_78;\n      end else begin\n        if (T_68) begin\n          if (expire) begin\n            if (T_72) begin\n              counter <= 4'h8;\n            end\n          end\n        end\n      end\n    end else begin\n      if (T_68) begin\n        if (expire) begin\n          if (T_72) begin\n            counter <= 4'h8;\n          end\n        end\n      end\n    end\n    if (T_74) begin\n      if (expire) begin\n        if (T_83) begin\n          shifter <= T_85;\n        end\n      end\n    end\n  end\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      valid <= 1'h0;\n    end else begin\n      if (T_74) begin\n        if (expire) begin\n          valid <= T_80;\n        end else begin\n          valid <= 1'h0;\n        end\n      end else begin\n        valid <= 1'h0;\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      state <= 2'h0;\n    end else begin\n      if (T_74) begin\n        if (expire) begin\n          if (T_80) begin\n            state <= 2'h0;\n          end else begin\n            if (T_68) begin\n              if (expire) begin\n                if (T_72) begin\n                  state <= 2'h2;\n                end else begin\n                  if (T_35) begin\n                    state <= 2'h0;\n                  end else begin\n                    if (T_50) begin\n                      if (T_52) begin\n                        if (debounce_max) begin\n                          state <= 2'h1;\n                        end\n                      end\n                    end\n                  end\n                end\n              end else begin\n                if (T_50) begin\n                  if (T_52) begin\n                    if (debounce_max) begin\n                      state <= 2'h1;\n                    end\n                  end\n                end\n              end\n            end else begin\n              if (T_50) begin\n                if (T_52) begin\n                  if (debounce_max) begin\n                    state <= 2'h1;\n                  end\n                end\n              end\n            end\n          end\n        end else begin\n          if (T_68) begin\n            if (expire) begin\n              if (T_72) begin\n                state <= 2'h2;\n              end else begin\n                if (T_35) begin\n                  state <= 2'h0;\n                end else begin\n                  if (T_50) begin\n                    if (T_52) begin\n                      if (debounce_max) begin\n                        state <= 2'h1;\n                      end\n                    end\n                  end\n                end\n              end\n            end else begin\n              state <= GEN_14;\n            end\n          end else begin\n            state <= GEN_14;\n          end\n        end\n      end else begin\n        if (T_68) begin\n          if (expire) begin\n            if (T_72) begin\n              state <= 2'h2;\n            end else begin\n              if (T_35) begin\n                state <= 2'h0;\n              end else begin\n                state <= GEN_14;\n              end\n            end\n          end else begin\n            state <= GEN_14;\n          end\n        end else begin\n          state <= GEN_14;\n        end\n      end\n    end\n\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \nmodule sirv_uarttx(\n  input   clock,\n  input   reset,\n  input   io_en,\n  output  io_in_ready,\n  input   io_in_valid,\n  input  [7:0] io_in_bits,\n  output  io_out,\n  input  [15:0] io_div,\n  input   io_nstop\n);\n  reg [15:0] prescaler;\n  reg [31:0] GEN_6;\n  wire  pulse;\n  reg [3:0] counter;\n  reg [31:0] GEN_7;\n  reg [8:0] shifter;\n  reg [31:0] GEN_8;\n  reg  out;\n  reg [31:0] GEN_9;\n  wire  busy;\n  wire  T_32;\n  wire  T_33;\n  wire  T_34;\n  wire  T_36;\n  wire [8:0] T_38;\n  wire  T_40;\n  wire [3:0] T_46;\n  wire [3:0] T_48;\n  wire [3:0] T_50;\n  wire [3:0] T_51;\n  wire [8:0] GEN_0;\n  wire [3:0] GEN_1;\n  wire [16:0] T_53;\n  wire [15:0] T_54;\n  wire [15:0] T_55;\n  wire [15:0] GEN_2;\n  wire  T_56;\n  wire [4:0] T_58;\n  wire [3:0] T_59;\n  wire [7:0] T_61;\n  wire [8:0] T_62;\n  wire  T_63;\n  wire [3:0] GEN_3;\n  wire [8:0] GEN_4;\n  wire  GEN_5;\n  assign io_in_ready = T_33;\n  assign io_out = out;\n  assign pulse = prescaler == 16'h0;\n  assign busy = counter != 4'h0;\n  assign T_32 = busy == 1'h0;\n  assign T_33 = io_en & T_32;\n  assign T_34 = io_in_ready & io_in_valid;\n  assign T_36 = reset == 1'h0;\n  assign T_38 = {io_in_bits,1'h0};\n  assign T_40 = io_nstop == 1'h0;\n  assign T_46 = T_40 ? 4'ha : 4'h0;\n  assign T_48 = io_nstop ? 4'hb : 4'h0;\n  assign T_50 = T_46 | T_48;\n  assign T_51 = T_50;\n  assign GEN_0 = T_34 ? T_38 : shifter;\n  assign GEN_1 = T_34 ? T_51 : counter;\n  assign T_53 = prescaler - 16'h1;\n  assign T_54 = T_53[15:0];\n  assign T_55 = pulse ? io_div : T_54;\n  assign GEN_2 = busy ? T_55 : prescaler;\n  assign T_56 = pulse & busy;\n  assign T_58 = counter - 4'h1;\n  assign T_59 = T_58[3:0];\n  assign T_61 = shifter[8:1];\n  assign T_62 = {1'h1,T_61};\n  assign T_63 = shifter[0];\n  assign GEN_3 = T_56 ? T_59 : GEN_1;\n  assign GEN_4 = T_56 ? T_62 : GEN_0;\n  assign GEN_5 = T_56 ? T_63 : out;\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      prescaler <= 16'h0;\n    end else begin\n      if (busy) begin\n        if (pulse) begin\n          prescaler <= io_div;\n        end else begin\n          prescaler <= T_54;\n        end\n      end\n    end\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      counter <= 4'h0;\n    end else begin\n      if (T_56) begin\n        counter <= T_59;\n      end else begin\n        if (T_34) begin\n          counter <= T_51;\n        end\n      end\n    end\n\n\n\n  always @(posedge clock or posedge reset)\n  if (reset) begin\n      shifter <= 9'b0;\n  end\n  else begin\n    if (T_56) begin\n      shifter <= T_62;\n    end else begin\n      if (T_34) begin\n        shifter <= T_38;\n      end\n    end\n  end\n\n\n  always @(posedge clock or posedge reset)\n    if (reset) begin\n      out <= 1'h1;\n    end else begin\n      if (T_56) begin\n        out <= T_63;\n      end\n    end\n\n    //`ifndef SYNTHESIS\n    //`ifdef PRINTF_COND\n    //  if (`PRINTF_COND) begin\n    //`endif\n    //    if (T_34 & T_36) begin\n    //      $fwrite(32'h80000002,\"%c\",io_in_bits);\n    //    end\n    //`ifdef PRINTF_COND\n    //  end\n    //`endif\n    //`endif\n\n    //synopsys translate_off\n  always @(posedge clock or posedge reset) begin\n        if (T_34 & T_36) begin\n          $fwrite(32'h80000002,\"%c\",io_in_bits);\n        end\n  end\n    //synopsys translate_on\nendmodule\n\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n//=====================================================================\n//\n// Designer   : Bob Hu\n//\n// Description:\n//  The top level module of uart\n//\n// ====================================================================\n\nmodule sirv_uart_top(\n  input   clk,\n  input   rst_n,\n\n  input                      i_icb_cmd_valid,\n  output                     i_icb_cmd_ready,\n  input  [32-1:0]            i_icb_cmd_addr, \n  input                      i_icb_cmd_read, \n  input  [32-1:0]            i_icb_cmd_wdata,\n  \n  output                     i_icb_rsp_valid,\n  input                      i_icb_rsp_ready,\n  output [32-1:0]            i_icb_rsp_rdata,\n\n  output  io_interrupts_0_0,                \n  output  io_port_txd,\n  input   io_port_rxd\n);\n\n  wire  io_in_0_a_ready;\n  assign  i_icb_cmd_ready  = io_in_0_a_ready;\n  wire  io_in_0_a_valid  = i_icb_cmd_valid;\n  wire  [2:0] io_in_0_a_bits_opcode  = i_icb_cmd_read ? 3'h4 : 3'h0;\n  wire  [2:0] io_in_0_a_bits_param  = 3'b0;\n  wire  [2:0] io_in_0_a_bits_size = 3'd2;\n  wire  [4:0] io_in_0_a_bits_source  = 5'b0;\n  wire  [28:0] io_in_0_a_bits_address  = i_icb_cmd_addr[28:0];\n  wire  [3:0] io_in_0_a_bits_mask  = 4'b1111;\n  wire  [31:0] io_in_0_a_bits_data  = i_icb_cmd_wdata;\n\n  \n  wire  io_in_0_d_ready = i_icb_rsp_ready;\n\n  wire  [2:0] io_in_0_d_bits_opcode;\n  wire  [1:0] io_in_0_d_bits_param;\n  wire  [2:0] io_in_0_d_bits_size;\n  wire  [4:0] io_in_0_d_bits_source;\n  wire  io_in_0_d_bits_sink;\n  wire  [1:0] io_in_0_d_bits_addr_lo;\n  wire  [31:0] io_in_0_d_bits_data;\n  wire  io_in_0_d_bits_error;\n  wire  io_in_0_d_valid;\n\n  assign  i_icb_rsp_valid = io_in_0_d_valid;\n  assign  i_icb_rsp_rdata = io_in_0_d_bits_data;\n\n  // Not used\n  wire  io_in_0_b_ready = 1'b0;\n  wire  io_in_0_b_valid;\n  wire  [2:0] io_in_0_b_bits_opcode;\n  wire  [1:0] io_in_0_b_bits_param;\n  wire  [2:0] io_in_0_b_bits_size;\n  wire  [4:0] io_in_0_b_bits_source;\n  wire  [28:0] io_in_0_b_bits_address;\n  wire  [3:0] io_in_0_b_bits_mask;\n  wire  [31:0] io_in_0_b_bits_data;\n\n  // Not used\n  wire  io_in_0_c_ready;\n  wire  io_in_0_c_valid = 1'b0;\n  wire  [2:0] io_in_0_c_bits_opcode = 3'b0;\n  wire  [2:0] io_in_0_c_bits_param = 3'b0;\n  wire  [2:0] io_in_0_c_bits_size = 3'd2;\n  wire  [4:0] io_in_0_c_bits_source = 5'b0;\n  wire  [28:0] io_in_0_c_bits_address = 29'b0;\n  wire  [31:0] io_in_0_c_bits_data = 32'b0;\n  wire  io_in_0_c_bits_error = 1'b0;\n\n  // Not used\n  wire  io_in_0_e_ready;\n  wire  io_in_0_e_valid = 1'b0;\n  wire  io_in_0_e_bits_sink = 1'b0;\n\nsirv_uart u_sirv_uart(\n  .clock                            (clk                              ),\n  .reset                            (~rst_n                            ),\n  .io_interrupts_0_0                (io_interrupts_0_0                ),\n\n  .io_in_0_a_ready                  (io_in_0_a_ready                  ),\n  .io_in_0_a_valid                  (io_in_0_a_valid                  ),\n  .io_in_0_a_bits_opcode            (io_in_0_a_bits_opcode            ),\n  .io_in_0_a_bits_param             (io_in_0_a_bits_param             ),\n  .io_in_0_a_bits_size              (io_in_0_a_bits_size              ),\n  .io_in_0_a_bits_source            (io_in_0_a_bits_source            ),\n  .io_in_0_a_bits_address           (io_in_0_a_bits_address           ),\n  .io_in_0_a_bits_mask              (io_in_0_a_bits_mask              ),\n  .io_in_0_a_bits_data              (io_in_0_a_bits_data              ),\n  .io_in_0_b_ready                  (io_in_0_b_ready                  ),\n  .io_in_0_b_valid                  (io_in_0_b_valid                  ),\n  .io_in_0_b_bits_opcode            (io_in_0_b_bits_opcode            ),\n  .io_in_0_b_bits_param             (io_in_0_b_bits_param             ),\n  .io_in_0_b_bits_size              (io_in_0_b_bits_size              ),\n  .io_in_0_b_bits_source            (io_in_0_b_bits_source            ),\n  .io_in_0_b_bits_address           (io_in_0_b_bits_address           ),\n  .io_in_0_b_bits_mask              (io_in_0_b_bits_mask              ),\n  .io_in_0_b_bits_data              (io_in_0_b_bits_data              ),\n  .io_in_0_c_ready                  (io_in_0_c_ready                  ),\n  .io_in_0_c_valid                  (io_in_0_c_valid                  ),\n  .io_in_0_c_bits_opcode            (io_in_0_c_bits_opcode            ),\n  .io_in_0_c_bits_param             (io_in_0_c_bits_param             ),\n  .io_in_0_c_bits_size              (io_in_0_c_bits_size              ),\n  .io_in_0_c_bits_source            (io_in_0_c_bits_source            ),\n  .io_in_0_c_bits_address           (io_in_0_c_bits_address           ),\n  .io_in_0_c_bits_data              (io_in_0_c_bits_data              ),\n  .io_in_0_c_bits_error             (io_in_0_c_bits_error             ),\n  .io_in_0_d_ready                  (io_in_0_d_ready                  ),\n  .io_in_0_d_valid                  (io_in_0_d_valid                  ),\n  .io_in_0_d_bits_opcode            (io_in_0_d_bits_opcode            ),\n  .io_in_0_d_bits_param             (io_in_0_d_bits_param             ),\n  .io_in_0_d_bits_size              (io_in_0_d_bits_size              ),\n  .io_in_0_d_bits_source            (io_in_0_d_bits_source            ),\n  .io_in_0_d_bits_sink              (io_in_0_d_bits_sink              ),\n  .io_in_0_d_bits_addr_lo           (io_in_0_d_bits_addr_lo           ),\n  .io_in_0_d_bits_data              (io_in_0_d_bits_data              ),\n  .io_in_0_d_bits_error             (io_in_0_d_bits_error             ),\n  .io_in_0_e_ready                  (io_in_0_e_ready                  ),\n  .io_in_0_e_valid                  (io_in_0_e_valid                  ),\n  .io_in_0_e_bits_sink              (io_in_0_e_bits_sink              ),\n\n  .io_port_txd                      (io_port_txd                      ),\n  .io_port_rxd                      (io_port_rxd                      ) \n);\n\nendmodule\n"}
{"text": " /*                                                                      \n Copyright 2018 Nuclei System Technology, Inc.                \n                                                                         \n Licensed under the Apache License, Version 2.0 (the \"License\");         \n you may not use this file except in compliance with the License.        \n You may obtain a copy of the License at                                 \n                                                                         \n     http://www.apache.org/licenses/LICENSE-2.0                          \n                                                                         \n  Unless required by applicable law or agreed to in writing, software    \n distributed under the License is distributed on an \"AS IS\" BASIS,       \n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and     \n limitations under the License.                                          \n */                                                                      \n                                                                         \n                                                                         \n                                                                         \n\nmodule sirv_wdog(\n  input   clock,\n  input   reset,\n  input   io_regs_cfg_write_valid,\n  input  [31:0] io_regs_cfg_write_bits,\n  output [31:0] io_regs_cfg_read,\n  input   io_regs_countLo_write_valid,\n  input  [31:0] io_regs_countLo_write_bits,\n  output [31:0] io_regs_countLo_read,\n  input   io_regs_countHi_write_valid,\n  input  [31:0] io_regs_countHi_write_bits,\n  output [31:0] io_regs_countHi_read,\n  input   io_regs_s_write_valid,\n  input  [15:0] io_regs_s_write_bits,\n  output [15:0] io_regs_s_read,\n  input   io_regs_cmp_0_write_valid,\n  input  [15:0] io_regs_cmp_0_write_bits,\n  output [15:0] io_regs_cmp_0_read,\n  input   io_regs_feed_write_valid,\n  input  [31:0] io_regs_feed_write_bits,\n  output [31:0] io_regs_feed_read,\n  input   io_regs_key_write_valid,\n  input  [31:0] io_regs_key_write_bits,\n  output [31:0] io_regs_key_read,\n  output  io_ip_0,\n  input   io_corerst,\n  output  io_rst\n);\n  wire [3:0] T_138;\n  wire  T_139;\n  wire  T_140;\n  wire  T_141;\n  wire  T_142;\n  wire  T_143;\n  wire  T_145;\n  wire  T_147;\n  wire  T_148;\n  wire  T_149;\n  wire  AsyncResetRegVec_2_1_clock;\n  wire  AsyncResetRegVec_2_1_reset;\n  wire  AsyncResetRegVec_2_1_io_d;\n  wire  AsyncResetRegVec_2_1_io_q;\n  wire  AsyncResetRegVec_2_1_io_en;\n  wire  unlocked;\n  wire  T_150;\n  reg [3:0] scale;\n  reg [31:0] GEN_10;\n  wire [3:0] GEN_0;\n  wire  T_152;\n  reg [15:0] cmp_0;\n  reg [31:0] GEN_11;\n  wire [15:0] GEN_1;\n  reg  T_154;\n  reg [31:0] GEN_12;\n  reg  T_155;\n  reg [31:0] GEN_13;\n  wire  T_156;\n  wire  AsyncResetRegVec_3_1_clock;\n  wire  AsyncResetRegVec_3_1_reset;\n  wire  AsyncResetRegVec_3_1_io_d;\n  wire  AsyncResetRegVec_3_1_io_q;\n  wire  AsyncResetRegVec_3_1_io_en;\n  wire  countAlways;\n  wire  T_158;\n  wire  AsyncResetRegVec_4_1_clock;\n  wire  AsyncResetRegVec_4_1_reset;\n  wire  AsyncResetRegVec_4_1_io_d;\n  wire  AsyncResetRegVec_4_1_io_q;\n  wire  AsyncResetRegVec_4_1_io_en;\n  wire  countAwake;\n  wire  T_161;\n  wire  T_162;\n  wire  countEn;\n  reg [4:0] T_164;\n  reg [31:0] GEN_14;\n  wire [4:0] GEN_9;\n  wire [5:0] T_165;\n  reg [25:0] T_167;\n  reg [31:0] GEN_15;\n  wire  T_168;\n  wire [26:0] T_170;\n  wire [26:0] GEN_2;\n  wire [30:0] T_171;\n  wire  T_172;\n  wire [32:0] T_174;\n  wire [27:0] T_175;\n  wire [32:0] GEN_3;\n  wire [27:0] GEN_4;\n  wire [30:0] T_176;\n  wire [15:0] s;\n  wire  elapsed_0;\n  wire  T_183;\n  wire  T_185;\n  wire  feed;\n  wire  T_186;\n  reg  zerocmp;\n  reg [31:0] GEN_16;\n  wire  GEN_5;\n  wire  T_189;\n  wire  countReset;\n  wire [32:0] GEN_6;\n  wire [27:0] GEN_7;\n  wire  T_192;\n  wire  T_193;\n  wire  T_195;\n  reg  ip;\n  reg [31:0] GEN_17;\n  wire  GEN_8;\n  wire  T_209;\n  wire  AsyncResetRegVec_5_1_clock;\n  wire  AsyncResetRegVec_5_1_reset;\n  wire  AsyncResetRegVec_5_1_io_d;\n  wire  AsyncResetRegVec_5_1_io_q;\n  wire  AsyncResetRegVec_5_1_io_en;\n  wire  rsten;\n  wire [4:0] T_214;\n  wire [8:0] T_215;\n  wire [2:0] T_217;\n  wire [11:0] T_218;\n  wire [2:0] T_219;\n  wire [3:0] T_220;\n  wire [4:0] T_222;\n  wire [12:0] T_223;\n  wire [16:0] T_224;\n  wire [28:0] T_225;\n  wire  T_230_0;\n  wire  T_234;\n  wire  AsyncResetRegVec_6_1_clock;\n  wire  AsyncResetRegVec_6_1_reset;\n  wire  AsyncResetRegVec_6_1_io_d;\n  wire  AsyncResetRegVec_6_1_io_q;\n  wire  AsyncResetRegVec_6_1_io_en;\n  sirv_AsyncResetRegVec AsyncResetRegVec_2_1 (\n    .clock(AsyncResetRegVec_2_1_clock),\n    .reset(AsyncResetRegVec_2_1_reset),\n    .io_d(AsyncResetRegVec_2_1_io_d),\n    .io_q(AsyncResetRegVec_2_1_io_q),\n    .io_en(AsyncResetRegVec_2_1_io_en)\n  );\n  sirv_AsyncResetRegVec AsyncResetRegVec_3_1 (\n    .clock(AsyncResetRegVec_3_1_clock),\n    .reset(AsyncResetRegVec_3_1_reset),\n    .io_d(AsyncResetRegVec_3_1_io_d),\n    .io_q(AsyncResetRegVec_3_1_io_q),\n    .io_en(AsyncResetRegVec_3_1_io_en)\n  );\n  sirv_AsyncResetRegVec AsyncResetRegVec_4_1 (\n    .clock(AsyncResetRegVec_4_1_clock),\n    .reset(AsyncResetRegVec_4_1_reset),\n    .io_d(AsyncResetRegVec_4_1_io_d),\n    .io_q(AsyncResetRegVec_4_1_io_q),\n    .io_en(AsyncResetRegVec_4_1_io_en)\n  );\n  sirv_AsyncResetRegVec AsyncResetRegVec_5_1 (\n    .clock(AsyncResetRegVec_5_1_clock),\n    .reset(AsyncResetRegVec_5_1_reset),\n    .io_d(AsyncResetRegVec_5_1_io_d),\n    .io_q(AsyncResetRegVec_5_1_io_q),\n    .io_en(AsyncResetRegVec_5_1_io_en)\n  );\n  sirv_AsyncResetRegVec AsyncResetRegVec_6_1 (\n    .clock(AsyncResetRegVec_6_1_clock),\n    .reset(AsyncResetRegVec_6_1_reset),\n    .io_d(AsyncResetRegVec_6_1_io_d),\n    .io_q(AsyncResetRegVec_6_1_io_q),\n    .io_en(AsyncResetRegVec_6_1_io_en)\n  );\n  assign io_regs_cfg_read = {{3'd0}, T_225};\n  assign io_regs_countLo_read = {{1'd0}, T_171};\n  assign io_regs_countHi_read = 32'h0;\n  assign io_regs_s_read = s;\n  assign io_regs_cmp_0_read = cmp_0;\n  assign io_regs_feed_read = 32'h0;\n  assign io_regs_key_read = {{31'd0}, unlocked};\n  assign io_ip_0 = T_230_0;\n  assign io_rst = AsyncResetRegVec_6_1_io_q;\n  assign T_138 = io_regs_cfg_write_bits[3:0];\n  assign T_139 = io_regs_feed_write_valid | io_regs_cmp_0_write_valid;\n  assign T_140 = T_139 | io_regs_s_write_valid;\n  assign T_141 = T_140 | io_regs_countHi_write_valid;\n  assign T_142 = T_141 | io_regs_countLo_write_valid;\n  assign T_143 = T_142 | io_regs_cfg_write_valid;\n  assign T_145 = io_regs_key_write_bits == 32'h51f15e;\n  assign T_147 = T_143 == 1'h0;\n  assign T_148 = T_145 & T_147;\n  assign T_149 = io_regs_key_write_valid | T_143;\n  assign AsyncResetRegVec_2_1_clock = clock;\n  assign AsyncResetRegVec_2_1_reset = reset;\n  assign AsyncResetRegVec_2_1_io_d = T_148;\n  assign AsyncResetRegVec_2_1_io_en = T_149;\n  assign unlocked = AsyncResetRegVec_2_1_io_q;\n  assign T_150 = io_regs_cfg_write_valid & unlocked;\n  assign GEN_0 = T_150 ? T_138 : scale;\n  assign T_152 = io_regs_cmp_0_write_valid & unlocked;\n  assign GEN_1 = T_152 ? io_regs_cmp_0_write_bits : cmp_0;\n  assign T_156 = io_regs_cfg_write_bits[12];\n  assign AsyncResetRegVec_3_1_clock = clock;\n  assign AsyncResetRegVec_3_1_reset = reset;\n  assign AsyncResetRegVec_3_1_io_d = T_156;\n  assign AsyncResetRegVec_3_1_io_en = T_150;\n  assign countAlways = AsyncResetRegVec_3_1_io_q;\n  assign T_158 = io_regs_cfg_write_bits[13];\n  assign AsyncResetRegVec_4_1_clock = clock;\n  assign AsyncResetRegVec_4_1_reset = reset;\n  assign AsyncResetRegVec_4_1_io_d = T_158;\n  assign AsyncResetRegVec_4_1_io_en = T_150;\n  assign countAwake = AsyncResetRegVec_4_1_io_q;\n  assign T_161 = T_155 == 1'h0;\n  assign T_162 = countAwake & T_161;\n  assign countEn = countAlways | T_162;\n  assign GEN_9 = {{4'd0}, countEn};\n  assign T_165 = T_164 + GEN_9;\n  assign T_168 = T_165[5];\n  assign T_170 = T_167 + 26'h1;\n  assign GEN_2 = T_168 ? T_170 : {{1'd0}, T_167};\n  assign T_171 = {T_167,T_164};\n  assign T_172 = io_regs_countLo_write_valid & unlocked;\n  assign T_174 = {1'h0,io_regs_countLo_write_bits};\n  assign T_175 = T_174[32:5];\n  assign GEN_3 = T_172 ? T_174 : {{27'd0}, T_165};\n  assign GEN_4 = T_172 ? T_175 : {{1'd0}, GEN_2};\n  assign T_176 = T_171 >> scale;\n  assign s = T_176[15:0];\n  assign elapsed_0 = s >= cmp_0;\n  assign T_183 = unlocked & io_regs_feed_write_valid;\n  assign T_185 = io_regs_feed_write_bits == 32'hd09f00d;\n  assign feed = T_183 & T_185;\n  assign T_186 = io_regs_cfg_write_bits[9];\n  assign GEN_5 = T_150 ? T_186 : zerocmp;\n  assign T_189 = zerocmp & elapsed_0;\n  assign countReset = feed | T_189;\n  assign GEN_6 = countReset ? 33'h0 : GEN_3;\n  assign GEN_7 = countReset ? 28'h0 : GEN_4;\n  assign T_192 = io_regs_cfg_write_bits[28];\n  assign T_193 = T_192 | elapsed_0;\n  assign T_195 = T_150 | elapsed_0;\n  assign GEN_8 = T_195 ? T_193 : ip;\n  assign T_209 = io_regs_cfg_write_bits[8];\n  assign AsyncResetRegVec_5_1_clock = clock;\n  assign AsyncResetRegVec_5_1_reset = reset;\n  assign AsyncResetRegVec_5_1_io_d = T_209;\n  assign AsyncResetRegVec_5_1_io_en = T_150;\n  assign rsten = AsyncResetRegVec_5_1_io_q;\n  assign T_214 = {rsten,4'h0};\n  assign T_215 = {T_214,scale};\n  assign T_217 = {2'h0,zerocmp};\n  assign T_218 = {T_217,T_215};\n  assign T_219 = {2'h0,countAwake};\n  assign T_220 = {T_219,countAlways};\n  assign T_222 = {ip,4'h0};\n  assign T_223 = {T_222,8'h0};\n  assign T_224 = {T_223,T_220};\n  assign T_225 = {T_224,T_218};\n  assign T_230_0 = ip;\n  assign T_234 = rsten & elapsed_0;\n  assign AsyncResetRegVec_6_1_clock = clock;\n  assign AsyncResetRegVec_6_1_reset = reset;\n  assign AsyncResetRegVec_6_1_io_d = 1'h1;\n  assign AsyncResetRegVec_6_1_io_en = T_234;\n`ifdef RANDOMIZE\n  integer initvar;\n  initial begin\n    `ifndef verilator\n      #0.002 begin end\n    `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_10 = {1{$random}};\n  scale = GEN_10[3:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_11 = {1{$random}};\n  cmp_0 = GEN_11[15:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_12 = {1{$random}};\n  T_154 = GEN_12[0:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_13 = {1{$random}};\n  T_155 = GEN_13[0:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_14 = {1{$random}};\n  T_164 = GEN_14[4:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_15 = {1{$random}};\n  T_167 = GEN_15[25:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_16 = {1{$random}};\n  zerocmp = GEN_16[0:0];\n  `endif\n  `ifdef RANDOMIZE_REG_INIT\n  GEN_17 = {1{$random}};\n  ip = GEN_17[0:0];\n  `endif\n  end\n`endif\n  always @(posedge clock or posedge reset) begin\n  if(reset) begin\n      scale <= 4'b0;\n      cmp_0 <= 16'hFFFF;\n      T_154 <= 1'b0;\n      T_155 <= 1'b0;\n      T_164 <= 5'b0;\n      T_167 <= 26'b0;\n      zerocmp <= 1'b0;\n      ip <= 1'b0;\n  end\n  else begin\n    if (T_150) begin\n      scale <= T_138;\n    end\n    if (T_152) begin\n      cmp_0 <= io_regs_cmp_0_write_bits;\n    end\n    T_154 <= io_corerst;\n    T_155 <= T_154;\n    T_164 <= GEN_6[4:0];\n    T_167 <= GEN_7[25:0];\n    if (T_150) begin\n      zerocmp <= T_186;\n    end\n    if (T_195) begin\n      ip <= T_193;\n    end\n  end\n  end\nendmodule\n"}
